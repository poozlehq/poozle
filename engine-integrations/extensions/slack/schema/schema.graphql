directive @oneOf on OBJECT | INTERFACE

directive @resolveRoot on FIELD_DEFINITION

directive @statusCodeTypeName(typeName: String, statusCode: ID) repeatable on UNION

directive @enum(value: String) on ENUM_VALUE

directive @regexp(pattern: String) on SCALAR

directive @typescript(type: String) on SCALAR | ENUM

directive @example(value: ObjMap) repeatable on FIELD_DEFINITION | OBJECT | INPUT_OBJECT | ENUM | SCALAR

directive @globalOptions(sourceName: String, endpoint: String, operationHeaders: ObjMap, queryStringOptions: ObjMap, queryParams: ObjMap) on OBJECT

directive @httpOperation(path: String, operationSpecificHeaders: ObjMap, httpMethod: HTTPMethod, isBinary: Boolean, requestBaseBody: ObjMap, queryParamArgMap: ObjMap, queryStringOptionsByParam: ObjMap) on FIELD_DEFINITION

type Query {
  """List approved apps for an org or workspace."""
  admin_apps_approved_list(
    """Authentication token. Requires scope: `admin.apps:read`"""
    token: String!

    """
    The maximum number of items to return. Must be between 1 - 1000 both inclusive.
    """
    limit: Int

    """
    Set `cursor` to `next_cursor` returned by the previous call to list items in the next page
    """
    cursor: String
    team_id: String
    enterprise_id: String
  ): admin_apps_approved_list_response

  """List app requests for a team/workspace."""
  admin_apps_requests_list(
    """Authentication token. Requires scope: `admin.apps:read`"""
    token: String!

    """
    The maximum number of items to return. Must be between 1 - 1000 both inclusive.
    """
    limit: Int

    """
    Set `cursor` to `next_cursor` returned by the previous call to list items in the next page
    """
    cursor: String
    team_id: String
  ): admin_apps_requests_list_response

  """List restricted apps for an org or workspace."""
  admin_apps_restricted_list(
    """Authentication token. Requires scope: `admin.apps:read`"""
    token: String!

    """
    The maximum number of items to return. Must be between 1 - 1000 both inclusive.
    """
    limit: Int

    """
    Set `cursor` to `next_cursor` returned by the previous call to list items in the next page
    """
    cursor: String
    team_id: String
    enterprise_id: String
  ): admin_apps_restricted_list_response

  """
  List all disconnected channels—i.e., channels that were once connected to other workspaces and then disconnected—and the corresponding original channel IDs for key revocation with EKM.
  """
  admin_conversations_ekm_listOriginalConnectedChannelInfo(
    """Authentication token. Requires scope: `admin.conversations:read`"""
    token: String!

    """A comma-separated list of channels to filter to."""
    channel_ids: String

    """
    A comma-separated list of the workspaces to which the channels you would like returned belong.
    """
    team_ids: String

    """
    The maximum number of items to return. Must be between 1 - 1000 both inclusive.
    """
    limit: Int

    """
    Set `cursor` to `next_cursor` returned by the previous call to list items in the next page.
    """
    cursor: String
  ): admin_conversations_ekm_listOriginalConnectedChannelInfo_response

  """Get conversation preferences for a public or private channel."""
  admin_conversations_getConversationPrefs(
    """Authentication token. Requires scope: `admin.conversations:read`"""
    token: String!

    """The channel to get preferences for."""
    channel_id: String!
  ): admin_conversations_getConversationPrefs_response

  """
  Get all the workspaces a given public or private channel is connected to within this Enterprise org.
  """
  admin_conversations_getTeams(
    """Authentication token. Requires scope: `admin.conversations:read`"""
    token: String!

    """
    The channel to determine connected workspaces within the organization for.
    """
    channel_id: String!

    """
    Set `cursor` to `next_cursor` returned by the previous call to list items in the next page
    """
    cursor: String

    """
    The maximum number of items to return. Must be between 1 - 1000 both inclusive.
    """
    limit: Int
  ): admin_conversations_getTeams_response

  """List all IDP Groups linked to a channel"""
  admin_conversations_restrictAccess_listGroups(
    """Authentication token. Requires scope: `admin.conversations:read`"""
    token: String!
    channel_id: String!

    """
    The workspace where the channel exists. This argument is required for channels only tied to one workspace, and optional for channels that are shared across an organization.
    """
    team_id: String
  ): admin_conversations_restrictAccess_listGroups_response

  """Search for public or private channels in an Enterprise organization."""
  admin_conversations_search(
    """Authentication token. Requires scope: `admin.conversations:read`"""
    token: String!

    """
    Comma separated string of team IDs, signifying the workspaces to search through.
    """
    team_ids: String

    """Name of the the channel to query by."""
    query: String

    """
    Maximum number of items to be returned. Must be between 1 - 20 both inclusive. Default is 10.
    """
    limit: Int

    """
    Set `cursor` to `next_cursor` returned by the previous call to list items in the next page.
    """
    cursor: String

    """
    The type of channel to include or exclude in the search. For example `private` will search private channels, while `private_exclude` will exclude them. For a full list of types, check the [Types section](#types).
    """
    search_channel_types: String

    """
    Possible values are `relevant` (search ranking based on what we think is closest), `name` (alphabetical), `member_count` (number of users in the channel), and `created` (date channel was created). You can optionally pair this with the `sort_dir` arg to change how it is sorted
    """
    sort: String

    """
    Sort direction. Possible values are `asc` for ascending order like (1, 2, 3) or (a, b, c), and `desc` for descending order like (3, 2, 1) or (c, b, a)
    """
    sort_dir: String
  ): admin_conversations_search_response

  """List emoji for an Enterprise Grid organization."""
  admin_emoji_list(
    """Authentication token. Requires scope: `admin.teams:read`"""
    token: String!

    """
    Set `cursor` to `next_cursor` returned by the previous call to list items in the next page
    """
    cursor: String

    """
    The maximum number of items to return. Must be between 1 - 1000 both inclusive.
    """
    limit: Int
  ): admin_emoji_list_response

  """List all approved workspace invite requests."""
  admin_inviteRequests_approved_list(
    """Authentication token. Requires scope: `admin.invites:read`"""
    token: String!

    """ID for the workspace where the invite requests were made."""
    team_id: String

    """
    Value of the `next_cursor` field sent as part of the previous API response
    """
    cursor: String

    """
    The number of results that will be returned by the API on each invocation. Must be between 1 - 1000, both inclusive
    """
    limit: Int
  ): admin_inviteRequests_approved_list_response

  """List all denied workspace invite requests."""
  admin_inviteRequests_denied_list(
    """Authentication token. Requires scope: `admin.invites:read`"""
    token: String!

    """ID for the workspace where the invite requests were made."""
    team_id: String

    """
    Value of the `next_cursor` field sent as part of the previous api response
    """
    cursor: String

    """
    The number of results that will be returned by the API on each invocation. Must be between 1 - 1000 both inclusive
    """
    limit: Int
  ): admin_inviteRequests_denied_list_response

  """List all pending workspace invite requests."""
  admin_inviteRequests_list(
    """Authentication token. Requires scope: `admin.invites:read`"""
    token: String!

    """ID for the workspace where the invite requests were made."""
    team_id: String

    """
    Value of the `next_cursor` field sent as part of the previous API response
    """
    cursor: String

    """
    The number of results that will be returned by the API on each invocation. Must be between 1 - 1000, both inclusive
    """
    limit: Int
  ): admin_inviteRequests_list_response

  """List all of the admins on a given workspace."""
  admin_teams_admins_list(
    """Authentication token. Requires scope: `admin.teams:read`"""
    token: String!

    """The maximum number of items to return."""
    limit: Int

    """
    Set `cursor` to `next_cursor` returned by the previous call to list items in the next page.
    """
    cursor: String
    team_id: String!
  ): admin_teams_admins_list_response

  """List all teams on an Enterprise organization"""
  admin_teams_list(
    """Authentication token. Requires scope: `admin.teams:read`"""
    token: String!

    """
    The maximum number of items to return. Must be between 1 - 100 both inclusive.
    """
    limit: Int

    """
    Set `cursor` to `next_cursor` returned by the previous call to list items in the next page.
    """
    cursor: String
  ): admin_teams_list_response

  """List all of the owners on a given workspace."""
  admin_teams_owners_list(
    """Authentication token. Requires scope: `admin.teams:read`"""
    token: String!
    team_id: String!

    """
    The maximum number of items to return. Must be between 1 - 1000 both inclusive.
    """
    limit: Int

    """
    Set `cursor` to `next_cursor` returned by the previous call to list items in the next page.
    """
    cursor: String
  ): admin_teams_owners_list_response

  """Fetch information about settings in a workspace"""
  admin_teams_settings_info(
    """Authentication token. Requires scope: `admin.teams:read`"""
    token: String!
    team_id: String!
  ): admin_teams_settings_info_response

  """List the channels linked to an org-level IDP group (user group)."""
  admin_usergroups_listChannels(
    """Authentication token. Requires scope: `admin.usergroups:read`"""
    token: String!

    """ID of the IDP group to list default channels for."""
    usergroup_id: String!

    """ID of the the workspace."""
    team_id: String

    """Flag to include or exclude the count of members per channel."""
    include_num_members: Boolean
  ): admin_usergroups_listChannels_response

  """List users on a workspace"""
  admin_users_list(
    """Authentication token. Requires scope: `admin.users:read`"""
    token: String!

    """The ID (`T1234`) of the workspace."""
    team_id: String!

    """
    Set `cursor` to `next_cursor` returned by the previous call to list items in the next page.
    """
    cursor: String

    """Limit for how many users to be retrieved per page"""
    limit: Int
  ): admin_users_list_response

  """Checks API calling code."""
  api_test(
    """Error response to return"""
    error: String

    """example property to return"""
    foo: String
  ): api_test_response

  """
  Get a list of authorizations for the given event context. Each authorization represents an app installation that the event is visible to.
  """
  apps_event_authorizations_list(
    """Authentication token. Requires scope: `authorizations:read`"""
    token: String!
    event_context: String!
    cursor: String
    limit: Int
  ): apps_event_authorizations_list_response

  """Returns list of permissions this app has on a team."""
  apps_permissions_info(
    """Authentication token. Requires scope: `none`"""
    token: String
  ): apps_permissions_info_response

  """Allows an app to request additional scopes"""
  apps_permissions_request(
    """Authentication token. Requires scope: `none`"""
    token: String!

    """A comma separated list of scopes to request for"""
    scopes: String!

    """Token used to trigger the permissions API"""
    trigger_id: String!
  ): apps_permissions_request_response

  """Returns list of resource grants this app has on a team."""
  apps_permissions_resources_list(
    """Authentication token. Requires scope: `none`"""
    token: String!

    """
    Paginate through collections of data by setting the `cursor` parameter to a `next_cursor` attribute returned by a previous request's `response_metadata`. Default value fetches the first "page" of the collection. See [pagination](/docs/pagination) for more detail.
    """
    cursor: String

    """The maximum number of items to return."""
    limit: Int
  ): apps_permissions_resources_list_response

  """Returns list of scopes this app has on a team."""
  apps_permissions_scopes_list(
    """Authentication token. Requires scope: `none`"""
    token: String!
  ): apps_permissions_scopes_list_response

  """
  Returns list of user grants and corresponding scopes this app has on a team.
  """
  apps_permissions_users_list(
    """Authentication token. Requires scope: `none`"""
    token: String!

    """
    Paginate through collections of data by setting the `cursor` parameter to a `next_cursor` attribute returned by a previous request's `response_metadata`. Default value fetches the first "page" of the collection. See [pagination](/docs/pagination) for more detail.
    """
    cursor: String

    """The maximum number of items to return."""
    limit: Int
  ): apps_permissions_users_list_response

  """
  Enables an app to trigger a permissions modal to grant an app access to a user access scope.
  """
  apps_permissions_users_request(
    """Authentication token. Requires scope: `none`"""
    token: String!

    """A comma separated list of user scopes to request for"""
    scopes: String!

    """Token used to trigger the request"""
    trigger_id: String!

    """The user this scope is being requested for"""
    user: String!
  ): apps_permissions_users_request_response

  """Uninstalls your app from a workspace."""
  apps_uninstall(
    """Authentication token. Requires scope: `none`"""
    token: String

    """Issued when you created your application."""
    client_id: String

    """Issued when you created your application."""
    client_secret: String
  ): apps_uninstall_response

  """Revokes a token."""
  auth_revoke(
    """Authentication token. Requires scope: `none`"""
    token: String!

    """
    Setting this parameter to `1` triggers a _testing mode_ where the specified token will not actually be revoked.
    """
    test: Boolean
  ): auth_revoke_response

  """Checks authentication & identity."""
  auth_test(
    """Authentication token. Requires scope: `none`"""
    token: String!
  ): auth_test_response

  """Gets information about a bot user."""
  bots_info(
    """Authentication token. Requires scope: `users:read`"""
    token: String!

    """Bot user to get info on"""
    bot: String
  ): bots_info_response

  """Returns information about a Call."""
  calls_info(
    """Authentication token. Requires scope: `calls:read`"""
    token: String!

    """
    `id` of the Call returned by the [`calls.add`](/methods/calls.add) method.
    """
    id: String!
  ): calls_info_response

  """Retrieve a permalink URL for a specific extant message"""
  chat_getPermalink(
    """Authentication token. Requires scope: `none`"""
    token: String!

    """The ID of the conversation or channel containing the message"""
    channel: String!

    """A message's `ts` value, uniquely identifying it within a channel"""
    message_ts: String!
  ): chat_getPermalink_response

  """Returns a list of scheduled messages."""
  chat_scheduledMessages_list(
    """Authentication token. Requires scope: `none`"""
    token: String

    """The channel of the scheduled messages"""
    channel: String

    """A UNIX timestamp of the latest value in the time range"""
    latest: Float

    """A UNIX timestamp of the oldest value in the time range"""
    oldest: Float

    """Maximum number of original entries to return."""
    limit: Int

    """
    For pagination purposes, this is the `cursor` value returned from a previous call to `chat.scheduledmessages.list` indicating where you want to start this call from.
    """
    cursor: String
  ): chat_scheduledMessages_list_response

  """Fetches a conversation's history of messages and events."""
  conversations_history(
    """Authentication token. Requires scope: `conversations:history`"""
    token: String

    """Conversation ID to fetch history for."""
    channel: String

    """End of time range of messages to include in results."""
    latest: Float

    """Start of time range of messages to include in results."""
    oldest: Float

    """
    Include messages with latest or oldest timestamp in results only when either timestamp is specified.
    """
    inclusive: Boolean

    """
    The maximum number of items to return. Fewer than the requested number of items may be returned, even if the end of the users list hasn't been reached.
    """
    limit: Int

    """
    Paginate through collections of data by setting the `cursor` parameter to a `next_cursor` attribute returned by a previous request's `response_metadata`. Default value fetches the first "page" of the collection. See [pagination](/docs/pagination) for more detail.
    """
    cursor: String
  ): conversations_history_response

  """Retrieve information about a conversation."""
  conversations_info(
    """Authentication token. Requires scope: `conversations:read`"""
    token: String

    """Conversation ID to learn more about"""
    channel: String

    """
    Set this to `true` to receive the locale for this conversation. Defaults to `false`
    """
    include_locale: Boolean

    """
    Set to `true` to include the member count for the specified conversation. Defaults to `false`
    """
    include_num_members: Boolean
  ): conversations_info_response

  """Lists all channels in a Slack team."""
  conversations_list(
    """Authentication token. Requires scope: `conversations:read`"""
    token: String

    """Set to `true` to exclude archived channels from the list"""
    exclude_archived: Boolean

    """
    Mix and match channel types by providing a comma-separated list of any combination of `public_channel`, `private_channel`, `mpim`, `im`
    """
    types: String

    """
    The maximum number of items to return. Fewer than the requested number of items may be returned, even if the end of the list hasn't been reached. Must be an integer no larger than 1000.
    """
    limit: Int

    """
    Paginate through collections of data by setting the `cursor` parameter to a `next_cursor` attribute returned by a previous request's `response_metadata`. Default value fetches the first "page" of the collection. See [pagination](/docs/pagination) for more detail.
    """
    cursor: String
  ): conversations_list_response

  """Retrieve members of a conversation."""
  conversations_members(
    """Authentication token. Requires scope: `conversations:read`"""
    token: String

    """ID of the conversation to retrieve members for"""
    channel: String

    """
    The maximum number of items to return. Fewer than the requested number of items may be returned, even if the end of the users list hasn't been reached.
    """
    limit: Int

    """
    Paginate through collections of data by setting the `cursor` parameter to a `next_cursor` attribute returned by a previous request's `response_metadata`. Default value fetches the first "page" of the collection. See [pagination](/docs/pagination) for more detail.
    """
    cursor: String
  ): conversations_members_response

  """Retrieve a thread of messages posted to a conversation"""
  conversations_replies(
    """Authentication token. Requires scope: `conversations:history`"""
    token: String

    """Conversation ID to fetch thread from."""
    channel: String

    """
    Unique identifier of a thread's parent message. `ts` must be the timestamp of an existing message with 0 or more replies. If there are no replies then just the single message referenced by `ts` will return - it is just an ordinary, unthreaded message.
    """
    ts: Float

    """End of time range of messages to include in results."""
    latest: Float

    """Start of time range of messages to include in results."""
    oldest: Float

    """
    Include messages with latest or oldest timestamp in results only when either timestamp is specified.
    """
    inclusive: Boolean

    """
    The maximum number of items to return. Fewer than the requested number of items may be returned, even if the end of the users list hasn't been reached.
    """
    limit: Int

    """
    Paginate through collections of data by setting the `cursor` parameter to a `next_cursor` attribute returned by a previous request's `response_metadata`. Default value fetches the first "page" of the collection. See [pagination](/docs/pagination) for more detail.
    """
    cursor: String
  ): conversations_replies_response

  """Open a dialog with a user"""
  dialog_open(
    """Authentication token. Requires scope: `none`"""
    token: String!

    """The dialog definition. This must be a JSON-encoded string."""
    dialog: String!

    """Exchange a trigger to post to the user."""
    trigger_id: String!
  ): dialog_open_response

  """Retrieves a user's current Do Not Disturb status."""
  dnd_info(
    """Authentication token. Requires scope: `dnd:read`"""
    token: String

    """User to fetch status for (defaults to current user)"""
    user: String
  ): dnd_info_response

  """Retrieves the Do Not Disturb status for up to 50 users on a team."""
  dnd_teamInfo(
    """Authentication token. Requires scope: `dnd:read`"""
    token: String

    """Comma-separated list of users to fetch Do Not Disturb status for"""
    users: String
  ): dnd_teamInfo_response

  """Lists custom emoji for a team."""
  emoji_list(
    """Authentication token. Requires scope: `emoji:read`"""
    token: String!
  ): emoji_list_response

  """Gets information about a file."""
  files_info(
    """Authentication token. Requires scope: `files:read`"""
    token: String

    """Specify a file by providing its ID."""
    file: String
    count: String
    page: String

    """
    The maximum number of items to return. Fewer than the requested number of items may be returned, even if the end of the list hasn't been reached.
    """
    limit: Int

    """
    Parameter for pagination. File comments are paginated for a single file. Set `cursor` equal to the `next_cursor` attribute returned by the previous request's `response_metadata`. This parameter is optional, but pagination is mandatory: the default value simply fetches the first "page" of the collection of comments. See [pagination](/docs/pagination) for more details.
    """
    cursor: String
  ): files_info_response

  """List for a team, in a channel, or from a user with applied filters."""
  files_list(
    """Authentication token. Requires scope: `files:read`"""
    token: String

    """Filter files created by a single user."""
    user: String

    """Filter files appearing in a specific channel, indicated by its ID."""
    channel: String

    """Filter files created after this timestamp (inclusive)."""
    ts_from: Float

    """Filter files created before this timestamp (inclusive)."""
    ts_to: Float

    """
    Filter files by type ([see below](#file_types)). You can pass multiple values in the types argument, like `types=spaces,snippets`.The default value is `all`, which does not filter the list.
    """
    types: String
    count: String
    page: String

    """
    Show truncated file info for files hidden due to being too old, and the team who owns the file being over the file limit.
    """
    show_files_hidden_by_limit: Boolean
  ): files_list_response

  """Retrieve information about a remote file added to Slack"""
  files_remote_info(
    """Authentication token. Requires scope: `remote_files:read`"""
    token: String

    """Specify a file by providing its ID."""
    file: String

    """Creator defined GUID for the file."""
    external_id: String
  ): files_remote_info_response

  """Retrieve information about a remote file added to Slack"""
  files_remote_list(
    """Authentication token. Requires scope: `remote_files:read`"""
    token: String

    """Filter files appearing in a specific channel, indicated by its ID."""
    channel: String

    """Filter files created after this timestamp (inclusive)."""
    ts_from: Float

    """Filter files created before this timestamp (inclusive)."""
    ts_to: Float

    """The maximum number of items to return."""
    limit: Int

    """
    Paginate through collections of data by setting the `cursor` parameter to a `next_cursor` attribute returned by a previous request's `response_metadata`. Default value fetches the first "page" of the collection. See [pagination](/docs/pagination) for more detail.
    """
    cursor: String
  ): files_remote_list_response

  """Share a remote file into a channel."""
  files_remote_share(
    """Authentication token. Requires scope: `remote_files:share`"""
    token: String

    """
    Specify a file registered with Slack by providing its ID. Either this field or `external_id` or both are required.
    """
    file: String

    """
    The globally unique identifier (GUID) for the file, as set by the app registering the file with Slack.  Either this field or `file` or both are required.
    """
    external_id: String

    """Comma-separated list of channel IDs where the file will be shared."""
    channels: String
  ): files_remote_share_response

  """For Enterprise Grid workspaces, map local user IDs to global user IDs"""
  migration_exchange(
    """Authentication token. Requires scope: `tokens.basic`"""
    token: String!

    """A comma-separated list of user ids, up to 400 per request"""
    users: String!

    """Specify team_id starts with `T` in case of Org Token"""
    team_id: String

    """
    Specify `true` to convert `W` global user IDs to workspace-specific `U` IDs. Defaults to `false`.
    """
    to_old: Boolean
  ): migration_exchange_response

  """Exchanges a temporary OAuth verifier code for an access token."""
  oauth_access(
    """Issued when you created your application."""
    client_id: String

    """Issued when you created your application."""
    client_secret: String

    """The `code` param returned via the OAuth callback."""
    code: String

    """This must match the originally submitted URI (if one was sent)."""
    redirect_uri: String

    """
    Request the user to add your app only to a single channel. Only valid with a [legacy workspace app](https://api.slack.com/legacy-workspace-apps).
    """
    single_channel: Boolean
  ): oauth_access_response

  """Exchanges a temporary OAuth verifier code for a workspace token."""
  oauth_token(
    """Issued when you created your application."""
    client_id: String

    """Issued when you created your application."""
    client_secret: String

    """The `code` param returned via the OAuth callback."""
    code: String

    """This must match the originally submitted URI (if one was sent)."""
    redirect_uri: String

    """Request the user to add your app only to a single channel."""
    single_channel: Boolean
  ): oauth_token_response

  """Exchanges a temporary OAuth verifier code for an access token."""
  oauth_v2_access(
    """Issued when you created your application."""
    client_id: String

    """Issued when you created your application."""
    client_secret: String

    """The `code` param returned via the OAuth callback."""
    code: String!

    """This must match the originally submitted URI (if one was sent)."""
    redirect_uri: String
  ): oauth_v2_access_response

  """Lists items pinned to a channel."""
  pins_list(
    """Authentication token. Requires scope: `pins:read`"""
    token: String!

    """Channel to get pinned items for."""
    channel: String!
  ): [pins_list_response]

  """Gets reactions for an item."""
  reactions_get(
    """Authentication token. Requires scope: `reactions:read`"""
    token: String!

    """Channel where the message to get reactions for was posted."""
    channel: String

    """File to get reactions for."""
    file: String

    """File comment to get reactions for."""
    file_comment: String

    """If true always return the complete reaction list."""
    full: Boolean

    """Timestamp of the message to get reactions for."""
    timestamp: String
  ): reactions_get_response

  """Lists reactions made by a user."""
  reactions_list(
    """Authentication token. Requires scope: `reactions:read`"""
    token: String!

    """Show reactions made by this user. Defaults to the authed user."""
    user: String

    """If true always return the complete reaction list."""
    full: Boolean
    count: Int
    page: Int

    """
    Parameter for pagination. Set `cursor` equal to the `next_cursor` attribute returned by the previous request's `response_metadata`. This parameter is optional, but pagination is mandatory: the default value simply fetches the first "page" of the collection. See [pagination](/docs/pagination) for more details.
    """
    cursor: String

    """
    The maximum number of items to return. Fewer than the requested number of items may be returned, even if the end of the list hasn't been reached.
    """
    limit: Int
  ): reactions_list_response

  """Gets information about a reminder."""
  reminders_info(
    """Authentication token. Requires scope: `reminders:read`"""
    token: String

    """The ID of the reminder"""
    reminder: String
  ): reminders_info_response

  """Lists all reminders created by or for a given user."""
  reminders_list(
    """Authentication token. Requires scope: `reminders:read`"""
    token: String
  ): reminders_list_response

  """Starts a Real Time Messaging session."""
  rtm_connect(
    """Authentication token. Requires scope: `rtm:stream`"""
    token: String!

    """
    Batch presence deliveries via subscription. Enabling changes the shape of `presence_change` events. See [batch presence](/docs/presence-and-status#batching).
    """
    batch_presence_aware: Boolean

    """
    Only deliver presence events when requested by subscription. See [presence subscriptions](/docs/presence-and-status#subscriptions).
    """
    presence_sub: Boolean
  ): rtm_connect_response

  """Searches for messages matching a query."""
  search_messages(
    """Authentication token. Requires scope: `search:read`"""
    token: String!

    """Pass the number of results you want per "page". Maximum of `100`."""
    count: Int

    """Pass a value of `true` to enable query highlight markers (see below)."""
    highlight: Boolean
    page: Int

    """Search query."""
    query: String!

    """Return matches sorted by either `score` or `timestamp`."""
    sort: String

    """Change sort direction to ascending (`asc`) or descending (`desc`)."""
    sort_dir: String
  ): search_messages_response

  """Lists stars for a user."""
  stars_list(
    """Authentication token. Requires scope: `stars:read`"""
    token: String
    count: String
    page: String

    """
    Parameter for pagination. Set `cursor` equal to the `next_cursor` attribute returned by the previous request's `response_metadata`. This parameter is optional, but pagination is mandatory: the default value simply fetches the first "page" of the collection. See [pagination](/docs/pagination) for more details.
    """
    cursor: String

    """
    The maximum number of items to return. Fewer than the requested number of items may be returned, even if the end of the list hasn't been reached.
    """
    limit: Int
  ): stars_list_response

  """Gets the access logs for the current team."""
  team_accessLogs(
    """Authentication token. Requires scope: `admin`"""
    token: String!

    """End of time range of logs to include in results (inclusive)."""
    before: String
    count: String
    page: String
  ): team_accessLogs_response

  """Gets billable users information for the current team."""
  team_billableInfo(
    """Authentication token. Requires scope: `admin`"""
    token: String!

    """
    A user to retrieve the billable information for. Defaults to all users.
    """
    user: String
  ): team_billableInfo_response

  """Gets information about the current team."""
  team_info(
    """Authentication token. Requires scope: `team:read`"""
    token: String!

    """
    Team to get info on, if omitted, will return information about the current team. Will only return team that the authenticated token is allowed to see through external shared channels
    """
    team: String
  ): team_info_response

  """Gets the integration logs for the current team."""
  team_integrationLogs(
    """Authentication token. Requires scope: `admin`"""
    token: String!

    """Filter logs to this Slack app. Defaults to all logs."""
    app_id: String

    """Filter logs with this change type. Defaults to all logs."""
    change_type: String
    count: String
    page: String

    """Filter logs to this service. Defaults to all logs."""
    service_id: String

    """Filter logs generated by this user’s actions. Defaults to all logs."""
    user: String
  ): team_integrationLogs_response

  """Retrieve a team's profile."""
  team_profile_get(
    """Authentication token. Requires scope: `users.profile:read`"""
    token: String!

    """Filter by visibility."""
    visibility: String
  ): team_profile_get_response

  """List all User Groups for a team"""
  usergroups_list(
    """Include the list of users for each User Group."""
    include_users: Boolean

    """Authentication token. Requires scope: `usergroups:read`"""
    token: String!

    """Include the number of users in each User Group."""
    include_count: Boolean

    """Include disabled User Groups."""
    include_disabled: Boolean
  ): usergroups_list_response

  """List all users in a User Group"""
  usergroups_users_list(
    """Authentication token. Requires scope: `usergroups:read`"""
    token: String!

    """Allow results that involve disabled User Groups."""
    include_disabled: Boolean

    """The encoded ID of the User Group to update."""
    usergroup: String!
  ): usergroups_users_list_response

  """List conversations the calling user may access."""
  users_conversations(
    """Authentication token. Requires scope: `conversations:read`"""
    token: String

    """
    Browse conversations by a specific user ID's membership. Non-public channels are restricted to those where the calling user shares membership.
    """
    user: String

    """
    Mix and match channel types by providing a comma-separated list of any combination of `public_channel`, `private_channel`, `mpim`, `im`
    """
    types: String

    """Set to `true` to exclude archived channels from the list"""
    exclude_archived: Boolean

    """
    The maximum number of items to return. Fewer than the requested number of items may be returned, even if the end of the list hasn't been reached. Must be an integer no larger than 1000.
    """
    limit: Int

    """
    Paginate through collections of data by setting the `cursor` parameter to a `next_cursor` attribute returned by a previous request's `response_metadata`. Default value fetches the first "page" of the collection. See [pagination](/docs/pagination) for more detail.
    """
    cursor: String
  ): users_conversations_response

  """Gets user presence information."""
  users_getPresence(
    """Authentication token. Requires scope: `users:read`"""
    token: String!

    """User to get presence info on. Defaults to the authed user."""
    user: String
  ): users_getPresence_response

  """Get a user's identity."""
  users_identity(
    """Authentication token. Requires scope: `identity.basic`"""
    token: String
  ): [users_identity_response]

  """Gets information about a user."""
  users_info(
    """Authentication token. Requires scope: `users:read`"""
    token: String!

    """
    Set this to `true` to receive the locale for this user. Defaults to `false`
    """
    include_locale: Boolean

    """User to get info on"""
    user: String
  ): users_info_response

  """Lists all users in a Slack team."""
  users_list(
    """Authentication token. Requires scope: `users:read`"""
    token: String

    """
    The maximum number of items to return. Fewer than the requested number of items may be returned, even if the end of the users list hasn't been reached. Providing no `limit` value will result in Slack attempting to deliver you the entire result set. If the collection is too large you may experience `limit_required` or HTTP 500 errors.
    """
    limit: Int

    """
    Paginate through collections of data by setting the `cursor` parameter to a `next_cursor` attribute returned by a previous request's `response_metadata`. Default value fetches the first "page" of the collection. See [pagination](/docs/pagination) for more detail.
    """
    cursor: String

    """
    Set this to `true` to receive the locale for users. Defaults to `false`
    """
    include_locale: Boolean
  ): users_list_response

  """Find a user with an email address."""
  users_lookupByEmail(
    """Authentication token. Requires scope: `users:read.email`"""
    token: String!

    """An email address belonging to a user in the workspace"""
    email: String!
  ): users_lookupByEmail_response

  """Retrieves a user's profile information."""
  users_profile_get(
    """Authentication token. Requires scope: `users.profile:read`"""
    token: String!

    """Include labels for each ID in custom profile fields"""
    include_labels: Boolean

    """User to retrieve profile info for"""
    user: String
  ): users_profile_get_response

  """Open a view for a user."""
  views_open(
    """Authentication token. Requires scope: `none`"""
    token: String!

    """Exchange a trigger to post to the user."""
    trigger_id: String!

    """
    A [view payload](/reference/surfaces/views). This must be a JSON-encoded string.
    """
    view: String!
  ): views_open_response

  """Publish a static view for a User."""
  views_publish(
    """Authentication token. Requires scope: `none`"""
    token: String!

    """`id` of the user you want publish a view to."""
    user_id: String!

    """
    A [view payload](/reference/surfaces/views). This must be a JSON-encoded string.
    """
    view: String!

    """
    A string that represents view state to protect against possible race conditions.
    """
    hash: String
  ): views_publish_response

  """Push a view onto the stack of a root view."""
  views_push(
    """Authentication token. Requires scope: `none`"""
    token: String!

    """Exchange a trigger to post to the user."""
    trigger_id: String!

    """
    A [view payload](/reference/surfaces/views). This must be a JSON-encoded string.
    """
    view: String!
  ): views_push_response

  """Update an existing view."""
  views_update(
    """Authentication token. Requires scope: `none`"""
    token: String!

    """
    A unique identifier of the view to be updated. Either `view_id` or `external_id` is required.
    """
    view_id: String

    """
    A unique identifier of the view set by the developer. Must be unique for all views on a team. Max length of 255 characters. Either `view_id` or `external_id` is required.
    """
    external_id: String

    """
    A [view object](/reference/surfaces/views). This must be a JSON-encoded string.
    """
    view: String

    """
    A string that represents view state to protect against possible race conditions.
    """
    hash: String
  ): views_update_response

  """Indicate that an app's step in a workflow completed execution."""
  workflows_stepCompleted(
    """Authentication token. Requires scope: `workflow.steps:execute`"""
    token: String!

    """Context identifier that maps to the correct workflow step execution."""
    workflow_step_execute_id: String!

    """
    Key-value object of outputs from your step. Keys of this object reflect the configured `key` properties of your [`outputs`](/reference/workflows/workflow_step#output) array from your `workflow_step` object.
    """
    outputs: String
  ): workflows_stepCompleted_response

  """Indicate that an app's step in a workflow failed to execute."""
  workflows_stepFailed(
    """Authentication token. Requires scope: `workflow.steps:execute`"""
    token: String!

    """Context identifier that maps to the correct workflow step execution."""
    workflow_step_execute_id: String!

    """
    A JSON-based object with a `message` property that should contain a human readable error message.
    """
    error: String!
  ): workflows_stepFailed_response

  """Update the configuration for a workflow extension step."""
  workflows_updateStep(
    """Authentication token. Requires scope: `workflow.steps:execute`"""
    token: String!

    """
    A context identifier provided with `view_submission` payloads used to call back to `workflows.updateStep`.
    """
    workflow_step_edit_id: String!

    """
    A JSON key-value map of inputs required from a user during configuration. This is the data your app expects to receive when the workflow step starts. **Please note**: the embedded variable format is set and replaced by the workflow system. You cannot create custom variables that will be replaced at runtime. [Read more about variables in workflow steps here](/workflows/steps#variables).
    """
    inputs: String

    """
    An JSON array of output objects used during step execution. This is the data your app agrees to provide when your workflow step was executed.
    """
    outputs: String

    """
    An optional field that can be used to override the step name that is shown in the Workflow Builder.
    """
    step_name: String

    """
    An optional field that can be used to override app image that is shown in the Workflow Builder.
    """
    step_image_url: String
  ): workflows_updateStep_response
}

union admin_apps_approved_list_response = Default_success_template | Default_error_template

"""
This method either only returns a brief _OK_ response or a verbose schema is not available for this method.
"""
type Default_success_template {
  ok: Boolean!
  additionalProperties: JSON
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON @specifiedBy(url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf")

"""
This method either only returns a brief _not OK_ response or a verbose schema is not available for this method.
"""
type Default_error_template {
  ok: Boolean!
  additionalProperties: JSON
}

union admin_apps_requests_list_response = Default_success_template | Default_error_template

union admin_apps_restricted_list_response = Default_success_template | Default_error_template

union admin_conversations_ekm_listOriginalConnectedChannelInfo_response = Default_success_template | Default_error_template

union admin_conversations_getConversationPrefs_response = admin_conversations_getConversationPrefs_schema | query_admin_conversations_getConversationPrefs_oneOf_1

"""
Schema for successful response of admin.conversations.getConversationPrefs
"""
type admin_conversations_getConversationPrefs_schema {
  ok: Boolean!
  prefs: query_admin_conversations_getConversationPrefs_oneOf_0_prefs
}

type query_admin_conversations_getConversationPrefs_oneOf_0_prefs {
  can_thread: query_admin_conversations_getConversationPrefs_oneOf_0_prefs_can_thread
  who_can_post: query_admin_conversations_getConversationPrefs_oneOf_0_prefs_who_can_post
}

type query_admin_conversations_getConversationPrefs_oneOf_0_prefs_can_thread {
  type: [String]
  user: [String]
}

type query_admin_conversations_getConversationPrefs_oneOf_0_prefs_who_can_post {
  type: [String]
  user: [String]
}

"""
Schema for error response from admin.conversations.getConversationPrefs
"""
type query_admin_conversations_getConversationPrefs_oneOf_1 {
  error: query_admin_conversations_getConversationPrefs_oneOf_1_error!
  ok: Boolean!
}

enum query_admin_conversations_getConversationPrefs_oneOf_1_error {
  feature_not_enabled
  not_an_admin
  not_an_enterprise
  restricted_action
  missing_scope
  channel_not_found
  channel_type_not_supported
  could_not_get_conversation_prefs
}

union admin_conversations_getTeams_response = admin_conversations_getTeams_schema | admin_conversations_getTeams_error_schema

"""Schema for successful response of admin.conversations.getTeams"""
type admin_conversations_getTeams_schema {
  ok: Boolean!
  response_metadata: query_admin_conversations_getTeams_oneOf_0_response_metadata
  team_ids: [Team_ID]!
}

type query_admin_conversations_getTeams_oneOf_0_response_metadata {
  next_cursor: String!
}

scalar Team_ID

"""Schema for error response from admin.conversations.getTeams"""
type admin_conversations_getTeams_error_schema {
  error: query_admin_conversations_getTeams_oneOf_1_error!
  ok: Boolean!
}

enum query_admin_conversations_getTeams_oneOf_1_error {
  feature_not_enabled
  channel_not_found
  channel_type_not_supported
  unsupported_team_type
  restricted_action
  could_not_get_teams
  invalid_cursor
  invalid_limit
}

union admin_conversations_restrictAccess_listGroups_response = Default_success_template | Default_error_template

union admin_conversations_search_response = admin_conversations_search_schema | admin_conversations_search_error_schema

"""Schema for successful response of admin.conversations.search"""
type admin_conversations_search_schema {
  channels: [Channel_Object]!
  next_cursor: String!
}

type Channel_Object {
  accepted_user: User_ID
  created: Int!
  creator: User_ID!
  id: Channel_ID!
  is_archived: Boolean
  is_channel: Boolean!
  is_frozen: Boolean
  is_general: Boolean
  is_member: Boolean
  is_moved: Int
  is_mpim: Boolean!
  is_non_threadable: Boolean
  is_org_shared: Boolean!
  is_pending_ext_shared: Boolean
  is_private: Boolean!
  is_read_only: Boolean
  is_shared: Boolean!
  is_thread_only: Boolean
  last_read: Timestamp_in_format_0123456789_012345
  latest: [query_admin_conversations_search_oneOf_0_channels_items_latest_items]
  members: [User_ID]!
  name: String!
  name_normalized: String!
  num_members: Int
  pending_shared: [Team_ID]
  previous_names: [String]
  priority: Float
  purpose: query_admin_conversations_search_oneOf_0_channels_items_purpose!
  topic: query_admin_conversations_search_oneOf_0_channels_items_topic!
  unlinked: Int
  unread_count: Int
  unread_count_display: Int
}

scalar User_ID

scalar Channel_ID

scalar Timestamp_in_format_0123456789_012345

union query_admin_conversations_search_oneOf_0_channels_items_latest_items = Message_object | Void_container

type Message_object {
  attachments: [mutation_chat_postMessage_oneOf_0_message_attachments_items]

  """
  This is a very loose definition, in the future, we'll populate this with deeper schema in this definition namespace.
  """
  blocks: [mutation_chat_postMessage_oneOf_0_message_blocks_items]
  bot_id: [mutation_chat_postMessage_oneOf_0_message_bot_id_items]
  bot_profile: Bot_Profile_Object
  client_msg_id: String
  comment: File_Comment_Object
  display_as_bot: Boolean
  file: file_object
  files: [file_object]
  icons: mutation_chat_postMessage_oneOf_0_message_icons
  inviter: User_ID
  is_delayed_message: Boolean
  is_intro: Boolean
  is_starred: Boolean
  last_read: Timestamp_in_format_0123456789_012345
  latest_reply: Timestamp_in_format_0123456789_012345
  name: String
  old_name: String
  parent_user_id: User_ID
  permalink: URL
  pinned_to: [Channel_like_conversation_ID]
  purpose: String
  reactions: [Reaction_object]
  reply_count: Int
  reply_users: [User_ID]
  reply_users_count: Int
  source_team: Team_or_Enterprise_ID
  subscribed: Boolean
  subtype: String
  team: Team_or_Enterprise_ID
  text: String!
  thread_ts: Timestamp_in_format_0123456789_012345
  topic: String
  ts: Timestamp_in_format_0123456789_012345!
  type: String!
  unread_count: Int
  upload: Boolean
  user: User_ID
  user_profile: objs_user_profile_short
  user_team: Team_or_Enterprise_ID
  username: String
}

type mutation_chat_postMessage_oneOf_0_message_attachments_items {
  fallback: String
  id: Int!
  image_bytes: Int
  image_height: Int
  image_url: String
  image_width: Int
}

type mutation_chat_postMessage_oneOf_0_message_blocks_items {
  type: String!
  additionalProperties: JSON
}

union mutation_chat_postMessage_oneOf_0_message_bot_id_items = Bot_User_ID_container | Void_container

type Bot_User_ID_container {
  Bot_User_ID: Bot_User_ID
}

scalar Bot_User_ID

type Void_container {
  Void: Void
}

"""Represents empty values"""
scalar Void

type Bot_Profile_Object {
  app_id: App_ID!
  deleted: Boolean!
  icons: mutation_chat_postMessage_oneOf_0_message_bot_profile_icons!
  id: Bot_User_ID!
  name: String!
  team_id: Team_ID!
  updated: Int!
}

scalar App_ID

type mutation_chat_postMessage_oneOf_0_message_bot_profile_icons {
  image_36: URL!
  image_48: URL!
  image_72: URL!
}

"""
A field whose value conforms to the standard URL format as specified in RFC3986: https://www.ietf.org/rfc/rfc3986.txt.
"""
scalar URL

type File_Comment_Object {
  comment: String!
  created: Int!
  id: File_Comment_ID!
  is_intro: Boolean!
  is_starred: Boolean
  num_stars: Int
  pinned_info: JSON
  pinned_to: [Channel_like_conversation_ID]
  reactions: [Reaction_object]
  timestamp: Int!
  user: User_ID!
}

scalar File_Comment_ID

scalar Channel_like_conversation_ID

type Reaction_object {
  count: Int!
  name: String!
  users: [User_ID]!
  additionalProperties: JSON
}

type file_object {
  channels: [Channel_ID]
  comments_count: Int
  created: Int
  date_delete: Int
  display_as_bot: Boolean
  editable: Boolean
  editor: User_ID
  external_id: String
  external_type: String
  external_url: URL
  filetype: String
  groups: [Private_Channel_ID]
  has_rich_preview: Boolean
  id: File_ID
  image_exif_rotation: Int
  ims: [Direct_Message_Channel_ID]
  is_external: Boolean
  is_public: Boolean
  is_starred: Boolean
  is_tombstoned: Boolean
  last_editor: User_ID
  mimetype: String
  mode: String
  name: String
  non_owner_editable: Boolean
  num_stars: Int
  original_h: Int
  original_w: Int
  permalink: URL
  permalink_public: URL
  pinned_info: JSON
  pinned_to: [Channel_like_conversation_ID]
  pretty_type: String
  preview: String
  public_url_shared: Boolean
  reactions: [Reaction_object]
  shares: mutation_chat_postMessage_oneOf_0_message_file_shares
  size: Int
  source_team: Team_ID
  state: String
  thumb_1024: URL
  thumb_1024_h: Int
  thumb_1024_w: Int
  thumb_160: URL
  thumb_360: URL
  thumb_360_h: Int
  thumb_360_w: Int
  thumb_480: URL
  thumb_480_h: Int
  thumb_480_w: Int
  thumb_64: URL
  thumb_720: URL
  thumb_720_h: Int
  thumb_720_w: Int
  thumb_80: URL
  thumb_800: URL
  thumb_800_h: Int
  thumb_800_w: Int
  thumb_960: URL
  thumb_960_h: Int
  thumb_960_w: Int
  thumb_tiny: String
  timestamp: Int
  title: String
  updated: Int
  url_private: URL
  url_private_download: URL
  user: String
  user_team: Team_ID
  username: String
}

scalar Private_Channel_ID

scalar File_ID

scalar Direct_Message_Channel_ID

type mutation_chat_postMessage_oneOf_0_message_file_shares {
  private: JSON
  public: JSON
}

type mutation_chat_postMessage_oneOf_0_message_icons {
  emoji: String
  image_64: URL
}

scalar Team_or_Enterprise_ID

type objs_user_profile_short {
  avatar_hash: String!
  display_name: String!
  display_name_normalized: String
  first_name: String!
  image_72: URL!
  is_restricted: Boolean!
  is_ultra_restricted: Boolean!
  name: String!
  real_name: String!
  real_name_normalized: String
  team: Team_or_Enterprise_ID!
}

type query_admin_conversations_search_oneOf_0_channels_items_purpose {
  creator: User_ID_or_empty_string_COMMA__used_for_topic_and_purpose_creation!
  last_set: Int!
  value: String!
}

scalar User_ID_or_empty_string_COMMA__used_for_topic_and_purpose_creation

type query_admin_conversations_search_oneOf_0_channels_items_topic {
  creator: User_ID_or_empty_string_COMMA__used_for_topic_and_purpose_creation!
  last_set: Int!
  value: String!
}

"""Schema for error response from admin.conversations.search"""
type admin_conversations_search_error_schema {
  error: query_admin_conversations_search_oneOf_1_error!
  ok: Boolean!
}

enum query_admin_conversations_search_oneOf_1_error {
  feature_not_enabled
  not_an_admin
  not_an_enterprise
  team_not_found
  not_allowed
  invalid_auth
  invalid_cursor
  invalid_search_channel_type
  invalid_sort
  invalid_sort_dir
}

union admin_emoji_list_response = Default_success_template | Default_error_template

union admin_inviteRequests_approved_list_response = Default_success_template | Default_error_template

union admin_inviteRequests_denied_list_response = Default_success_template | Default_error_template

union admin_inviteRequests_list_response = Default_success_template | Default_error_template

union admin_teams_admins_list_response = Default_success_template | Default_error_template

union admin_teams_list_response = Default_success_template | Default_error_template

union admin_teams_owners_list_response = Default_success_template | Default_error_template

union admin_teams_settings_info_response = Default_success_template | Default_error_template

union admin_usergroups_listChannels_response = Default_success_template | Default_error_template

union admin_users_list_response = Default_success_template | Default_error_template

union api_test_response = api_test_success_schema | api_test_error_schema

"""Schema for successful response api.test method"""
type api_test_success_schema {
  ok: Boolean!
  additionalProperties: JSON
}

"""Schema for error response api.test method"""
type api_test_error_schema {
  error: String!
  ok: Boolean!
  additionalProperties: JSON
}

union apps_event_authorizations_list_response = Default_success_template | Default_error_template

union apps_permissions_info_response = apps_permissions_info_schema | apps_permissions_info_error_schema

"""Schema for successful response from apps.permissions.info method"""
type apps_permissions_info_schema {
  info: query_apps_permissions_info_oneOf_0_info!
  ok: Boolean!
}

type query_apps_permissions_info_oneOf_0_info {
  app_home: query_apps_permissions_info_oneOf_0_info_app_home!
  channel: query_apps_permissions_info_oneOf_0_info_channel!
  group: query_apps_permissions_info_oneOf_0_info_group!
  im: query_apps_permissions_info_oneOf_0_info_im!
  mpim: query_apps_permissions_info_oneOf_0_info_mpim!
  team: query_apps_permissions_info_oneOf_0_info_team!
}

type query_apps_permissions_info_oneOf_0_info_app_home {
  resources: resources_in_info_from_apps_permissions_info
  scopes: [String]
}

type resources_in_info_from_apps_permissions_info {
  excluded_ids: [[query_apps_permissions_info_oneOf_0_info_app_home_resources_excluded_ids_items_items]]
  ids: [[query_apps_permissions_info_oneOf_0_info_app_home_resources_ids_items_items]]!
  wildcard: Boolean
}

union query_apps_permissions_info_oneOf_0_info_app_home_resources_excluded_ids_items_items = Channel_like_conversation_ID_container | Team_ID_container

type Channel_like_conversation_ID_container {
  Channel_like_conversation_ID: Channel_like_conversation_ID
}

type Team_ID_container {
  Team_ID: Team_ID
}

union query_apps_permissions_info_oneOf_0_info_app_home_resources_ids_items_items = Channel_like_conversation_ID_container | Team_ID_container

type query_apps_permissions_info_oneOf_0_info_channel {
  resources: resources_in_info_from_apps_permissions_info
  scopes: [String]
}

type query_apps_permissions_info_oneOf_0_info_group {
  resources: resources_in_info_from_apps_permissions_info
  scopes: [String]
}

type query_apps_permissions_info_oneOf_0_info_im {
  resources: resources_in_info_from_apps_permissions_info
  scopes: [String]
}

type query_apps_permissions_info_oneOf_0_info_mpim {
  resources: resources_in_info_from_apps_permissions_info
  scopes: [String]
}

type query_apps_permissions_info_oneOf_0_info_team {
  resources: resources_in_info_from_apps_permissions_info!
  scopes: [String]!
}

"""Schema for error response from apps.permissions.info method"""
type apps_permissions_info_error_schema {
  """Note: PHP callstack is only visible in dev/qa"""
  callstack: String
  error: query_apps_permissions_info_oneOf_1_error!
  ok: Boolean!
}

enum query_apps_permissions_info_oneOf_1_error {
  not_authed
  invalid_auth
  account_inactive
  token_revoked
  no_permission
  org_login_required
  user_is_bot
  invalid_arg_name
  invalid_array_arg
  invalid_charset
  invalid_form_data
  invalid_post_type
  missing_post_type
  team_added_to_org
  invalid_json
  json_not_object
  request_timeout
  upgrade_required
  fatal_error
}

union apps_permissions_request_response = apps_permissions_request_schema | apps_permissions_request_error_schema

"""Schema for successful response from apps.permissions.request method"""
type apps_permissions_request_schema {
  ok: Boolean!
}

"""Schema for error response from apps.permissions.request method"""
type apps_permissions_request_error_schema {
  """Note: PHP callstack is only visible in dev/qa"""
  callstack: String
  error: query_apps_permissions_request_oneOf_1_error!
  ok: Boolean!
}

enum query_apps_permissions_request_oneOf_1_error {
  invalid_trigger
  trigger_exchanged
  invalid_scope
  invalid_user
  not_authed
  invalid_auth
  account_inactive
  token_revoked
  no_permission
  org_login_required
  user_is_bot
  invalid_arg_name
  invalid_array_arg
  invalid_charset
  invalid_form_data
  invalid_post_type
  missing_post_type
  team_added_to_org
  invalid_json
  json_not_object
  request_timeout
  upgrade_required
  fatal_error
}

union apps_permissions_resources_list_response = apps_permissions_resources_list_success_schema | apps_permissions_resources_list_error_schema

"""Schema for successful response apps.permissions.resources.list method"""
type apps_permissions_resources_list_success_schema {
  ok: Boolean!
  resources: [query_apps_permissions_resources_list_oneOf_0_resources_items]!
  response_metadata: query_apps_permissions_resources_list_oneOf_0_response_metadata
  additionalProperties: JSON
}

type query_apps_permissions_resources_list_oneOf_0_resources_items {
  id: String
  type: String
}

type query_apps_permissions_resources_list_oneOf_0_response_metadata {
  next_cursor: String!
}

"""Schema for error response from apps.permissions.resources.list method"""
type apps_permissions_resources_list_error_schema {
  """Note: PHP callstack is only visible in dev/qa"""
  callstack: String
  error: query_apps_permissions_resources_list_oneOf_1_error!
  ok: Boolean!
}

enum query_apps_permissions_resources_list_oneOf_1_error {
  invalid_cursor
  not_authed
  invalid_auth
  account_inactive
  token_revoked
  no_permission
  org_login_required
  user_is_bot
  invalid_arg_name
  invalid_array_arg
  invalid_charset
  invalid_form_data
  invalid_post_type
  missing_post_type
  team_added_to_org
  invalid_json
  json_not_object
  request_timeout
  upgrade_required
  fatal_error
}

union apps_permissions_scopes_list_response = api_permissions_scopes_list_success_schema | apps_permissions_scopes_list_error_schema

"""Schema for successful response api.permissions.scopes.list method"""
type api_permissions_scopes_list_success_schema {
  ok: Boolean!
  scopes: query_apps_permissions_scopes_list_oneOf_0_scopes!
  additionalProperties: JSON
}

type query_apps_permissions_scopes_list_oneOf_0_scopes {
  app_home: [String]
  channel: [String]
  group: [String]
  im: [String]
  mpim: [String]
  team: [String]
  user: [String]
  additionalProperties: JSON
}

"""Schema for error response from apps.permissions.scopes.list method"""
type apps_permissions_scopes_list_error_schema {
  """Note: PHP callstack is only visible in dev/qa"""
  callstack: String
  error: query_apps_permissions_scopes_list_oneOf_1_error!
  ok: Boolean!
}

enum query_apps_permissions_scopes_list_oneOf_1_error {
  not_authed
  invalid_auth
  account_inactive
  token_revoked
  no_permission
  org_login_required
  user_is_bot
  invalid_arg_name
  invalid_array_arg
  invalid_charset
  invalid_form_data
  invalid_post_type
  missing_post_type
  team_added_to_org
  invalid_json
  json_not_object
  request_timeout
  upgrade_required
  fatal_error
}

union apps_permissions_users_list_response = Default_success_template | Default_error_template

union apps_permissions_users_request_response = Default_success_template | Default_error_template

union apps_uninstall_response = apps_uninstall_schema | apps_uninstall_error_schema

"""Schema for successful response from apps.uninstall method"""
type apps_uninstall_schema {
  ok: Boolean!
}

"""Schema for error response from apps.uninstall method"""
type apps_uninstall_error_schema {
  """Note: PHP callstack is only visible in dev/qa"""
  callstack: String
  error: query_apps_uninstall_oneOf_1_error!
  ok: Boolean!
}

enum query_apps_uninstall_oneOf_1_error {
  invalid_client_id
  bad_client_secret
  client_id_token_mismatch
  not_authed
  invalid_auth
  account_inactive
  token_revoked
  no_permission
  org_login_required
  user_is_bot
  invalid_arg_name
  invalid_array_arg
  invalid_charset
  invalid_form_data
  invalid_post_type
  missing_post_type
  team_added_to_org
  invalid_json
  json_not_object
  request_timeout
  upgrade_required
  fatal_error
}

union auth_revoke_response = auth_revoke_schema | auth_revoke_error_schema

"""Schema for successful response from auth.revoke method"""
type auth_revoke_schema {
  ok: Boolean!
  revoked: Boolean!
}

"""Schema for error response from auth.revoke method"""
type auth_revoke_error_schema {
  """Note: PHP callstack is only visible in dev/qa"""
  callstack: String
  error: query_auth_revoke_oneOf_1_error!
  ok: Boolean!
}

enum query_auth_revoke_oneOf_1_error {
  not_authed
  invalid_auth
  account_inactive
  token_revoked
  no_permission
  org_login_required
  invalid_arg_name
  invalid_array_arg
  invalid_charset
  invalid_form_data
  invalid_post_type
  missing_post_type
  team_added_to_org
  invalid_json
  json_not_object
  request_timeout
  upgrade_required
  fatal_error
}

union auth_test_response = auth_test_success_schema | auth_test_error_schema

"""Schema for successful response auth.test method"""
type auth_test_success_schema {
  bot_id: Bot_User_ID
  is_enterprise_install: Boolean
  ok: Boolean!
  team: String!
  team_id: Team_ID!
  url: String!
  user: String!
  user_id: User_ID!
}

"""Schema for error response auth.test method"""
type auth_test_error_schema {
  """Note: PHP callstack is only visible in dev/qa"""
  callstack: String
  error: query_auth_test_oneOf_1_error!
  ok: Boolean!
}

enum query_auth_test_oneOf_1_error {
  not_authed
  invalid_auth
  token_revoked
  account_inactive
  invalid_arg_name
  invalid_array_arg
  invalid_charset
  invalid_form_data
  invalid_post_type
  missing_post_type
  invalid_json
  json_not_object
  request_timeout
  upgrade_required
}

union bots_info_response = bots_info_schema | bots_info_error_schema

"""Schema for successful response from bots.info method"""
type bots_info_schema {
  bot: query_bots_info_oneOf_0_bot!
  ok: Boolean!
}

type query_bots_info_oneOf_0_bot {
  app_id: App_ID!
  deleted: Boolean!
  icons: query_bots_info_oneOf_0_bot_icons!
  id: Bot_User_ID!
  name: String!
  updated: Int!
  user_id: User_ID
}

type query_bots_info_oneOf_0_bot_icons {
  image_36: URL!
  image_48: URL!
  image_72: URL!
}

"""Schema for error response from bots.info method"""
type bots_info_error_schema {
  """Note: PHP callstack is only visible in dev/qa"""
  callstack: String
  error: query_bots_info_oneOf_1_error!
  ok: Boolean!
}

enum query_bots_info_oneOf_1_error {
  bot_not_found
  not_authed
  invalid_auth
  account_inactive
  token_revoked
  no_permission
  org_login_required
  invalid_arg_name
  invalid_array_arg
  invalid_charset
  invalid_form_data
  invalid_post_type
  missing_post_type
  team_added_to_org
  invalid_json
  json_not_object
  request_timeout
  upgrade_required
  fatal_error
}

union calls_info_response = Default_success_template | Default_error_template

union chat_getPermalink_response = chat_getPermalink_success_schema | chat_getPermalink_error_schema

"""Schema for successful response chat.getPermalink"""
type chat_getPermalink_success_schema {
  channel: Channel_like_conversation_ID!
  ok: Boolean!
  permalink: URL!
}

"""Schema for error response from chat.getPermalink method"""
type chat_getPermalink_error_schema {
  """Note: PHP callstack is only visible in dev/qa"""
  callstack: String
  error: query_chat_getPermalink_oneOf_1_error!
  ok: Boolean!
}

enum query_chat_getPermalink_oneOf_1_error {
  channel_not_found
  message_not_found
  not_authed
  invalid_auth
  account_inactive
  token_revoked
  no_permission
  org_login_required
  invalid_arg_name
  invalid_array_arg
  invalid_charset
  invalid_form_data
  invalid_post_type
  missing_post_type
  team_added_to_org
  invalid_json
  json_not_object
  request_timeout
  upgrade_required
  fatal_error
}

union chat_scheduledMessages_list_response = chat_scheduledMessages_list_schema | chat_scheduledMessages_list_error_schema

"""Schema for successful response from chat.scheduledMessages.list method"""
type chat_scheduledMessages_list_schema {
  ok: Boolean!
  response_metadata: query_chat_scheduledMessages_list_oneOf_0_response_metadata!
  scheduled_messages: [query_chat_scheduledMessages_list_oneOf_0_scheduled_messages_items]!
}

type query_chat_scheduledMessages_list_oneOf_0_response_metadata {
  next_cursor: String!
}

type query_chat_scheduledMessages_list_oneOf_0_scheduled_messages_items {
  channel_id: Channel_ID!
  date_created: query_chat_scheduledMessages_list_oneOf_0_scheduled_messages_items_date_created!
  id: query_chat_scheduledMessages_list_oneOf_0_scheduled_messages_items_id!
  post_at: query_chat_scheduledMessages_list_oneOf_0_scheduled_messages_items_post_at!
  text: String
}

scalar query_chat_scheduledMessages_list_oneOf_0_scheduled_messages_items_date_created

scalar query_chat_scheduledMessages_list_oneOf_0_scheduled_messages_items_id

scalar query_chat_scheduledMessages_list_oneOf_0_scheduled_messages_items_post_at

"""Schema for error response from chat.scheduledMessages.list method"""
type chat_scheduledMessages_list_error_schema {
  """Note: PHP callstack is only visible in dev/qa"""
  callstack: String
  error: query_chat_scheduledMessages_list_oneOf_1_error!
  ok: Boolean!
}

enum query_chat_scheduledMessages_list_oneOf_1_error {
  invalid_channel
  not_authed
  invalid_auth
  account_inactive
  token_revoked
  no_permission
  org_login_required
  ekm_access_denied
  missing_scope
  invalid_arguments
  invalid_arg_name
  invalid_charset
  invalid_form_data
  invalid_post_type
  missing_post_type
  team_added_to_org
  invalid_json
  json_not_object
  request_timeout
  upgrade_required
  fatal_error
}

union conversations_history_response = conversations_history_success_schema | conversations_history_error_schema

"""Schema for successful response from conversations.history method"""
type conversations_history_success_schema {
  channel_actions_count: Int!
  channel_actions_ts: [query_conversations_history_oneOf_0_channel_actions_ts_items]!
  has_more: Boolean!
  messages: [Message_object]!
  ok: Boolean!
  pin_count: Int!
}

union query_conversations_history_oneOf_0_channel_actions_ts_items = Int_container | Void_container

type Int_container {
  Int: Int
}

"""Schema for error response from conversations.history method"""
type conversations_history_error_schema {
  """Note: PHP callstack is only visible in dev/qa"""
  callstack: String
  error: query_conversations_history_oneOf_1_error!
  needed: String
  ok: Boolean!
  provided: String
}

enum query_conversations_history_oneOf_1_error {
  missing_scope
  channel_not_found
  invalid_ts_latest
  invalid_ts_oldest
  not_authed
  invalid_auth
  account_inactive
  invalid_arg_name
  invalid_array_arg
  invalid_charset
  invalid_form_data
  invalid_post_type
  missing_post_type
  invalid_json
  json_not_object
  request_timeout
  upgrade_required
}

union conversations_info_response = conversations_info_success_schema | conversations_info_error_schema

"""Schema for successful response conversations.info"""
type conversations_info_success_schema {
  channel: [mutation_conversations_create_oneOf_0_channel_items]!
  ok: Boolean!
}

union mutation_conversations_create_oneOf_0_channel_items = Conversation_object | Conversation_MPIM_Object | Conversation_IM_Channel_Object_from_conversations__STAR__methods

type Conversation_object {
  accepted_user: User_ID
  connected_team_ids: [Team_or_Enterprise_ID]
  conversation_host_id: Team_or_Enterprise_ID
  created: Int!
  creator: User_ID!
  display_counts: mutation_conversations_create_oneOf_0_channel_items_oneOf_0_display_counts
  enterprise_id: Enterprise_ID
  has_pins: Boolean
  id: Channel_like_conversation_ID!
  internal_team_ids: [Team_ID]
  is_archived: Boolean!
  is_channel: Boolean!
  is_ext_shared: Boolean
  is_frozen: Boolean
  is_general: Boolean!
  is_global_shared: Boolean
  is_group: Boolean!
  is_im: Boolean!
  is_member: Boolean
  is_moved: Int
  is_mpim: Boolean!
  is_non_threadable: Boolean
  is_open: Boolean
  is_org_default: Boolean
  is_org_mandatory: Boolean
  is_org_shared: Boolean!
  is_pending_ext_shared: Boolean
  is_private: Boolean!
  is_read_only: Boolean
  is_shared: Boolean!
  is_starred: Boolean
  is_thread_only: Boolean
  last_read: Timestamp_in_format_0123456789_012345
  latest: [mutation_conversations_create_oneOf_0_channel_items_oneOf_0_latest_items]
  members: [User_ID]
  name: String!
  name_normalized: String!
  num_members: Int
  parent_conversation: [mutation_conversations_create_oneOf_0_channel_items_oneOf_0_parent_conversation_items]
  pending_connected_team_ids: [Team_ID]
  pending_shared: [Team_ID]
  pin_count: Int
  previous_names: [String]
  priority: Float
  purpose: mutation_conversations_create_oneOf_0_channel_items_oneOf_0_purpose!
  shared_team_ids: [Team_ID]
  shares: [mutation_conversations_create_oneOf_0_channel_items_oneOf_0_shares_items]
  timezone_count: Int
  topic: mutation_conversations_create_oneOf_0_channel_items_oneOf_0_topic!
  unlinked: Int
  unread_count: Int
  unread_count_display: Int
  use_case: String
  user: User_ID
  version: Int
}

type mutation_conversations_create_oneOf_0_channel_items_oneOf_0_display_counts {
  display_counts: Int!
  guest_counts: Int!
}

scalar Enterprise_ID

union mutation_conversations_create_oneOf_0_channel_items_oneOf_0_latest_items = Message_object | Void_container

union mutation_conversations_create_oneOf_0_channel_items_oneOf_0_parent_conversation_items = Channel_like_conversation_ID_container | Void_container

type mutation_conversations_create_oneOf_0_channel_items_oneOf_0_purpose {
  creator: User_ID_or_empty_string_COMMA__used_for_topic_and_purpose_creation!
  last_set: Int!
  value: String!
}

type mutation_conversations_create_oneOf_0_channel_items_oneOf_0_shares_items {
  accepted_user: User_ID
  is_active: Boolean!
  team: Team_Object!
  user: User_ID!
}

type Team_Object {
  archived: Boolean
  avatar_base_url: URL
  created: Int
  date_create: Int
  deleted: Boolean
  description: String
  discoverable: [mutation_conversations_create_oneOf_0_channel_items_oneOf_0_shares_items_team_discoverable_items]
  domain: String!
  email_domain: String!
  enterprise_id: Enterprise_ID
  enterprise_name: String
  external_org_migrations: External_Org_Migrations
  has_compliance_export: Boolean
  icon: objs_icon!
  id: Team_or_Enterprise_ID!
  is_assigned: Boolean
  is_enterprise: Int
  is_over_storage_limit: Boolean
  limit_ts: Int
  locale: String
  messages_count: Int
  msg_edit_window_mins: Int
  name: String!
  over_integrations_limit: Boolean
  over_storage_limit: Boolean
  pay_prod_cur: String
  plan: mutation_conversations_create_oneOf_0_channel_items_oneOf_0_shares_items_team_plan
  primary_owner: objs_primary_owner
  sso_provider: mutation_conversations_create_oneOf_0_channel_items_oneOf_0_shares_items_team_sso_provider
}

union mutation_conversations_create_oneOf_0_channel_items_oneOf_0_shares_items_team_discoverable_items = Void_container | String_container

type String_container {
  String: String
}

type External_Org_Migrations {
  current: [mutation_conversations_create_oneOf_0_channel_items_oneOf_0_shares_items_team_external_org_migrations_current_items]!
  date_updated: Int!
}

type mutation_conversations_create_oneOf_0_channel_items_oneOf_0_shares_items_team_external_org_migrations_current_items {
  date_started: Int!
  team_id: String!
}

type objs_icon {
  image_102: String
  image_132: String
  image_230: String
  image_34: String
  image_44: String
  image_68: String
  image_88: String
  image_default: Boolean
}

enum mutation_conversations_create_oneOf_0_channel_items_oneOf_0_shares_items_team_plan {
  _
  std
  plus
  compliance
  enterprise
}

type objs_primary_owner {
  email: String!
  id: String!
}

type mutation_conversations_create_oneOf_0_channel_items_oneOf_0_shares_items_team_sso_provider {
  label: String
  name: String
  type: String
}

type mutation_conversations_create_oneOf_0_channel_items_oneOf_0_topic {
  creator: User_ID_or_empty_string_COMMA__used_for_topic_and_purpose_creation!
  last_set: Int!
  value: String!
}

type Conversation_MPIM_Object {
  accepted_user: User_ID
  connected_team_ids: [Team_ID]
  conversation_host_id: Team_or_Enterprise_ID
  created: Int!
  creator: User_ID!
  display_counts: mutation_conversations_create_oneOf_0_channel_items_oneOf_1_display_counts
  id: Channel_like_conversation_ID!
  internal_team_ids: [Team_ID]
  is_archived: Boolean!
  is_channel: Boolean!
  is_ext_shared: Boolean
  is_frozen: Boolean
  is_general: Boolean!
  is_group: Boolean!
  is_im: Boolean!
  is_member: Boolean
  is_moved: Int
  is_mpim: Boolean!
  is_non_threadable: Boolean
  is_open: Boolean
  is_org_shared: Boolean!
  is_pending_ext_shared: Boolean
  is_private: Boolean!
  is_read_only: Boolean
  is_shared: Boolean!
  is_starred: Boolean
  is_thread_only: Boolean
  last_read: Timestamp_in_format_0123456789_012345
  latest: [mutation_conversations_create_oneOf_0_channel_items_oneOf_1_latest_items]
  members: [User_ID]
  name: String!
  name_normalized: String!
  num_members: Int
  parent_conversation: [mutation_conversations_create_oneOf_0_channel_items_oneOf_1_parent_conversation_items]
  pending_connected_team_ids: [Team_ID]
  pending_shared: [Team_ID]
  pin_count: Int
  previous_names: [String]
  priority: Float
  purpose: mutation_conversations_create_oneOf_0_channel_items_oneOf_1_purpose!
  shared_team_ids: [Team_ID]
  shares: [mutation_conversations_create_oneOf_0_channel_items_oneOf_1_shares_items]
  timezone_count: Int
  topic: mutation_conversations_create_oneOf_0_channel_items_oneOf_1_topic!
  unlinked: Int
  unread_count: Int
  unread_count_display: Int
  user: User_ID
  version: Int
}

type mutation_conversations_create_oneOf_0_channel_items_oneOf_1_display_counts {
  display_counts: Int!
  guest_counts: Int!
}

union mutation_conversations_create_oneOf_0_channel_items_oneOf_1_latest_items = Message_object | Void_container

union mutation_conversations_create_oneOf_0_channel_items_oneOf_1_parent_conversation_items = Channel_like_conversation_ID_container | Void_container

type mutation_conversations_create_oneOf_0_channel_items_oneOf_1_purpose {
  creator: User_ID_or_empty_string_COMMA__used_for_topic_and_purpose_creation!
  last_set: Int!
  value: String!
}

type mutation_conversations_create_oneOf_0_channel_items_oneOf_1_shares_items {
  accepted_user: User_ID
  is_active: Boolean!
  team: Team_Object!
  user: User_ID!
}

type mutation_conversations_create_oneOf_0_channel_items_oneOf_1_topic {
  creator: User_ID_or_empty_string_COMMA__used_for_topic_and_purpose_creation!
  last_set: Int!
  value: String!
}

type Conversation_IM_Channel_Object_from_conversations__STAR__methods {
  created: Int!
  has_pins: Boolean
  id: Direct_Message_Channel_ID!
  is_archived: Boolean
  is_ext_shared: Boolean
  is_frozen: Boolean
  is_im: Boolean!
  is_open: Boolean
  is_org_shared: Boolean!
  is_shared: Boolean
  is_starred: Boolean
  is_user_deleted: Boolean
  last_read: Timestamp_in_format_0123456789_012345
  latest: [mutation_conversations_create_oneOf_0_channel_items_oneOf_2_latest_items]
  parent_conversation: [mutation_conversations_create_oneOf_0_channel_items_oneOf_2_parent_conversation_items]
  pin_count: Int
  priority: Float!
  shares: [mutation_conversations_create_oneOf_0_channel_items_oneOf_2_shares_items]
  unread_count: Int
  unread_count_display: Int
  user: User_ID!
  version: Int
}

union mutation_conversations_create_oneOf_0_channel_items_oneOf_2_latest_items = Message_object | Void_container

union mutation_conversations_create_oneOf_0_channel_items_oneOf_2_parent_conversation_items = Channel_like_conversation_ID_container | Void_container

type mutation_conversations_create_oneOf_0_channel_items_oneOf_2_shares_items {
  date_create: Int!
  id: Team_ID!
  is_active: Boolean!
  name: String!
  team: Team_Object!
}

"""Schema for error response from conversations.info method"""
type conversations_info_error_schema {
  """Note: PHP callstack is only visible in dev/qa"""
  callstack: String
  error: query_conversations_info_oneOf_1_error!
  needed: String
  ok: Boolean!
  provided: String
}

enum query_conversations_info_oneOf_1_error {
  missing_scope
  channel_not_found
  team_added_to_org
  not_authed
  invalid_auth
  account_inactive
  invalid_arg_name
  invalid_array_arg
  invalid_charset
  invalid_form_data
  invalid_post_type
  missing_post_type
  invalid_json
  json_not_object
  request_timeout
  upgrade_required
}

union conversations_list_response = conversations_list_success_schema | conversations_list_error_schema

"""Schema for successful response from conversations.list method"""
type conversations_list_success_schema {
  channels: [[mutation_conversations_create_oneOf_0_channel_items]]!
  ok: Boolean!
  response_metadata: query_conversations_list_oneOf_0_response_metadata
}

type query_conversations_list_oneOf_0_response_metadata {
  next_cursor: String!
}

"""Schema for error response from conversations.list method"""
type conversations_list_error_schema {
  """Note: PHP callstack is only visible in dev/qa"""
  callstack: String
  error: query_conversations_list_oneOf_1_error!
  needed: String
  ok: Boolean!
  provided: String
}

enum query_conversations_list_oneOf_1_error {
  missing_scope
  not_authed
  invalid_auth
  account_inactive
  invalid_arg_name
  invalid_array_arg
  invalid_charset
  invalid_form_data
  invalid_post_type
  missing_post_type
  invalid_json
  json_not_object
  request_timeout
  upgrade_required
}

union conversations_members_response = conversations_members_success_schema | conversations_members_error_schema

"""Schema for successful response conversations.members method"""
type conversations_members_success_schema {
  members: [User_ID]!
  ok: Boolean!
  response_metadata: query_conversations_members_oneOf_0_response_metadata!
}

type query_conversations_members_oneOf_0_response_metadata {
  next_cursor: String!
}

"""Schema for error response conversations.members method"""
type conversations_members_error_schema {
  """Note: PHP callstack is only visible in dev/qa"""
  callstack: String
  error: query_conversations_members_oneOf_1_error!
  ok: Boolean!
}

enum query_conversations_members_oneOf_1_error {
  channel_not_found
  invalid_limit
  invalid_cursor
  fetch_members_failed
  not_authed
  invalid_auth
  account_inactive
  invalid_arg_name
  invalid_array_arg
  invalid_charset
  invalid_form_data
  invalid_post_type
  missing_post_type
  team_added_to_org
  invalid_json
  json_not_object
  request_timeout
  upgrade_required
}

union conversations_replies_response = conversations_replies_success_schema | conversations_replies_error_schema

"""Schema for successful response from conversations.replies method"""
type conversations_replies_success_schema {
  has_more: Boolean
  messages: [[query_conversations_replies_oneOf_0_messages_items_items]]!
  ok: Boolean!
}

union query_conversations_replies_oneOf_0_messages_items_items = query_conversations_replies_oneOf_0_messages_items_items_oneOf_0 | query_conversations_replies_oneOf_0_messages_items_items_oneOf_1

type query_conversations_replies_oneOf_0_messages_items_items_oneOf_0 {
  last_read: Timestamp_in_format_0123456789_012345
  latest_reply: Timestamp_in_format_0123456789_012345
  reply_count: Int!
  reply_users: [User_ID]
  reply_users_count: Int
  source_team: Team_ID
  subscribed: Boolean!
  team: Team_ID
  text: String!
  thread_ts: Timestamp_in_format_0123456789_012345!
  ts: Timestamp_in_format_0123456789_012345!
  type: String!
  unread_count: Int
  user: User_ID!
  user_profile: objs_user_profile_short
  user_team: Team_ID
}

type query_conversations_replies_oneOf_0_messages_items_items_oneOf_1 {
  is_starred: Boolean
  parent_user_id: User_ID!
  source_team: Team_ID
  team: Team_ID
  text: String!
  thread_ts: Timestamp_in_format_0123456789_012345!
  ts: Timestamp_in_format_0123456789_012345!
  type: String!
  user: User_ID!
  user_profile: objs_user_profile_short
  user_team: Team_ID
}

"""Schema for error response from conversations.replies method"""
type conversations_replies_error_schema {
  """Note: PHP callstack is only visible in dev/qa"""
  callstack: String
  error: query_conversations_replies_oneOf_1_error!
  needed: String
  ok: Boolean!
  provided: String
}

enum query_conversations_replies_oneOf_1_error {
  missing_scope
  channel_not_found
  thread_not_found
  not_authed
  invalid_auth
  account_inactive
  invalid_arg_name
  invalid_array_arg
  invalid_charset
  invalid_form_data
  invalid_post_type
  missing_post_type
  team_added_to_org
  invalid_json
  json_not_object
  request_timeout
  upgrade_required
}

union dialog_open_response = dialog_open_schema | dialog_open_error_schema

"""Schema for successful response from dialog.open method"""
type dialog_open_schema {
  ok: Boolean!
}

"""Schema for error response from dialog.open method"""
type dialog_open_error_schema {
  """Note: PHP callstack is only visible in dev/qa"""
  callstack: String
  error: query_dialog_open_oneOf_1_error!
  ok: Boolean!
}

enum query_dialog_open_oneOf_1_error {
  validation_errors
  missing_trigger
  missing_dialog
  trigger_exchanged
  trigger_expired
  invalid_trigger
  app_missing_action_url
  cannot_create_dialog
  failed_sending_dialog
  not_authed
  invalid_auth
  account_inactive
  token_revoked
  no_permission
  org_login_required
  invalid_arg_name
  invalid_array_arg
  invalid_charset
  invalid_form_data
  invalid_post_type
  missing_post_type
  team_added_to_org
  invalid_json
  json_not_object
  request_timeout
  upgrade_required
  fatal_error
}

union dnd_info_response = dnd_info_schema | dnd_info_error_schema

"""Schema for successful response from dnd.info method"""
type dnd_info_schema {
  dnd_enabled: Boolean!
  next_dnd_end_ts: Int!
  next_dnd_start_ts: Int!
  ok: Boolean!
  snooze_enabled: Boolean
  snooze_endtime: Int
  snooze_remaining: Int
}

"""Schema for error response from dnd.info method"""
type dnd_info_error_schema {
  """Note: PHP callstack is only visible in dev/qa"""
  callstack: String
  error: query_dnd_info_oneOf_1_error!
  ok: Boolean!
}

enum query_dnd_info_oneOf_1_error {
  user_not_found
  not_authed
  invalid_auth
  account_inactive
  token_revoked
  no_permission
  org_login_required
  invalid_arg_name
  invalid_array_arg
  invalid_charset
  invalid_form_data
  invalid_post_type
  missing_post_type
  team_added_to_org
  invalid_json
  json_not_object
  request_timeout
  upgrade_required
  fatal_error
}

union dnd_teamInfo_response = Default_success_template | Default_error_template

union emoji_list_response = Default_success_template | Default_error_template

union files_info_response = files_info_schema | files_info_error_schema

"""Schema for successful response from files.info method"""
type files_info_schema {
  comments: [JSON]!
  content_html: Void
  editor: User_ID
  file: file_object!
  ok: Boolean!
  paging: paging_object
  response_metadata: [query_files_info_oneOf_0_response_metadata_items]
}

type paging_object {
  count: Int
  page: Int!
  pages: Int
  per_page: Int
  spill: Int
  total: Int!
}

union query_files_info_oneOf_0_response_metadata_items = new_paging_style | deprecation_warning | deprecation_warning_and_paging_style_together

type new_paging_style {
  next_cursor: String!
}

type deprecation_warning {
  messages: [String]!
  warnings: [method_deprecated_const]!
}

enum method_deprecated_const {
  method_deprecated
}

type deprecation_warning_and_paging_style_together {
  messages: [String]!
  next_cursor: String!
  warnings: [method_deprecated_const]!
}

"""Schema for error response from files.info method"""
type files_info_error_schema {
  """Note: PHP callstack is only visible in dev/qa"""
  callstack: String
  error: query_files_info_oneOf_1_error!
  ok: Boolean!
}

enum query_files_info_oneOf_1_error {
  file_not_found
  file_deleted
  timezone_count_failed
  not_authed
  invalid_auth
  account_inactive
  no_permission
  invalid_arg_name
  invalid_array_arg
  invalid_charset
  invalid_form_data
  invalid_post_type
  missing_post_type
  team_added_to_org
  invalid_json
  json_not_object
  request_timeout
  upgrade_required
}

union files_list_response = files_list_schema | files_list_error_schema

"""Schema for successful response from files.list method"""
type files_list_schema {
  files: [file_object]!
  ok: Boolean!
  paging: paging_object!
}

"""Schema for error response from files.list method"""
type files_list_error_schema {
  """Note: PHP callstack is only visible in dev/qa"""
  callstack: String
  error: query_files_list_oneOf_1_error!
  ok: Boolean!
}

enum query_files_list_oneOf_1_error {
  user_not_found
  unknown_type
  not_authed
  invalid_auth
  account_inactive
  no_permission
  user_is_bot
  invalid_arg_name
  invalid_array_arg
  invalid_charset
  invalid_form_data
  invalid_post_type
  missing_post_type
  team_added_to_org
  invalid_json
  json_not_object
  request_timeout
  upgrade_required
}

union files_remote_info_response = Default_success_template | Default_error_template

union files_remote_list_response = Default_success_template | Default_error_template

union files_remote_share_response = Default_success_template | Default_error_template

union migration_exchange_response = migration_exchange_success_schema | migration_exchange_error_schema

"""Schema for successful response from migration.exchange method"""
type migration_exchange_success_schema {
  enterprise_id: String!
  invalid_user_ids: [String]
  ok: Boolean!
  team_id: Team_ID!
  user_id_map: JSON
  additionalProperties: JSON
}

"""Schema for error response from migration.exchange method"""
type migration_exchange_error_schema {
  """Note: PHP callstack is only visible in dev/qa"""
  callstack: String
  error: query_migration_exchange_oneOf_1_error!
  ok: Boolean!
}

enum query_migration_exchange_oneOf_1_error {
  not_enterprise_team
  too_many_users
  not_authed
  invalid_auth
  account_inactive
  token_revoked
  no_permission
  org_login_required
  invalid_arg_name
  invalid_array_arg
  invalid_charset
  invalid_form_data
  invalid_post_type
  missing_post_type
  team_added_to_org
  invalid_json
  json_not_object
  request_timeout
  upgrade_required
  fatal_error
}

union oauth_access_response = Default_success_template | Default_error_template

union oauth_token_response = Default_success_template | Default_error_template

union oauth_v2_access_response = Default_success_template | Default_error_template

union pins_list_response = query_pins_list_oneOf_0_items_oneOf_0 | query_pins_list_oneOf_0_items_oneOf_1 | pins_list_error_schema

type query_pins_list_oneOf_0_items_oneOf_0 {
  items: [query_pins_list_oneOf_0_items_oneOf_0_items_items]!
  ok: Boolean!
}

union query_pins_list_oneOf_0_items_oneOf_0_items_items = File_Pin | Message_Pin

type File_Pin {
  created: Int
  created_by: User_ID
  file: file_object
  type: file_const
}

enum file_const {
  file
}

type Message_Pin {
  channel: Channel_like_conversation_ID
  created: Int
  created_by: User_ID
  message: Message_object
  type: message_const
}

enum message_const {
  message
}

type query_pins_list_oneOf_0_items_oneOf_1 {
  count: Int!
  ok: Boolean!
}

"""Schema for error response from pins.list method"""
type pins_list_error_schema {
  """Note: PHP callstack is only visible in dev/qa"""
  callstack: String
  error: query_pins_list_oneOf_1_error!
  ok: Boolean!
}

enum query_pins_list_oneOf_1_error {
  channel_not_found
  not_authed
  invalid_auth
  account_inactive
  no_permission
  invalid_arg_name
  invalid_array_arg
  invalid_charset
  invalid_form_data
  invalid_post_type
  missing_post_type
  team_added_to_org
  invalid_json
  json_not_object
  request_timeout
  upgrade_required
}

union reactions_get_response = JSON_container | reactions_get_error_schema

type JSON_container {
  JSON: JSON
}

"""Schema for error response from reactions.get method"""
type reactions_get_error_schema {
  """Note: PHP callstack is only visible in dev/qa"""
  callstack: String
  error: query_reactions_get_oneOf_1_error!
  ok: Boolean!
}

enum query_reactions_get_oneOf_1_error {
  bad_timestamp
  file_not_found
  file_comment_not_found
  message_not_found
  no_item_specified
  not_authed
  invalid_auth
  account_inactive
  no_permission
  invalid_array_arg
  invalid_charset
  invalid_form_data
  invalid_post_type
  missing_post_type
  team_added_to_org
  invalid_json
  json_not_object
  request_timeout
  upgrade_required
}

union reactions_list_response = reactions_list_schema | reactions_list_error_schema

"""Schema for successful response from reactions.list method"""
type reactions_list_schema {
  items: [[query_reactions_list_oneOf_0_items_items_items]]!
  ok: Boolean!
  paging: paging_object
  response_metadata: [query_files_info_oneOf_0_response_metadata_items]
}

union query_reactions_list_oneOf_0_items_items_items = query_reactions_list_oneOf_0_items_items_items_oneOf_0 | query_reactions_list_oneOf_0_items_items_items_oneOf_1 | query_reactions_list_oneOf_0_items_items_items_oneOf_2

type query_reactions_list_oneOf_0_items_items_items_oneOf_0 {
  channel: Channel_like_conversation_ID!
  message: Message_object!
  type: message_const!
}

type query_reactions_list_oneOf_0_items_items_items_oneOf_1 {
  file: file_object!
  type: file_const!
}

type query_reactions_list_oneOf_0_items_items_items_oneOf_2 {
  comment: File_Comment_Object!
  file: file_object!
  type: file_comment_const!
}

enum file_comment_const {
  file_comment
}

"""Schema for error response from reactions.list method"""
type reactions_list_error_schema {
  """Note: PHP callstack is only visible in dev/qa"""
  callstack: String
  error: query_reactions_list_oneOf_1_error!
  ok: Boolean!
}

enum query_reactions_list_oneOf_1_error {
  user_not_found
  not_authed
  invalid_auth
  account_inactiv
  no_permission
  invalid_arg_name
  invalid_array_arg
  invalid_charset
  invalid_form_data
  invalid_post_type
  missing_post_type
  team_added_to_org
  invalid_json
  json_not_object
  request_timeout
  upgrade_required
  fatal_error
}

union reminders_info_response = reminders_info_schema | reminders_info_error_schema

"""Schema for successful response from reminders.info method"""
type reminders_info_schema {
  ok: Boolean!
  reminder: objs_reminder!
}

type objs_reminder {
  complete_ts: Int
  creator: User_ID!
  id: Reminder_ID!
  recurring: Boolean!
  text: String!
  time: Int
  user: User_ID!
}

scalar Reminder_ID

"""Schema for error response from reminders.info method"""
type reminders_info_error_schema {
  """Note: PHP callstack is only visible in dev/qa"""
  callstack: String
  error: query_reminders_info_oneOf_1_error!
  ok: Boolean!
}

enum query_reminders_info_oneOf_1_error {
  not_found
  not_authed
  invalid_auth
  account_inactive
  token_revoked
  no_permission
  org_login_required
  user_is_bot
  invalid_arg_name
  invalid_array_arg
  invalid_charset
  invalid_form_data
  invalid_post_type
  missing_post_type
  team_added_to_org
  invalid_json
  json_not_object
  request_timeout
  upgrade_required
  fatal_error
}

union reminders_list_response = reminders_list_schema | reminders_list_error_schema

"""Schema for successful response from reminders.list method"""
type reminders_list_schema {
  ok: Boolean!
  reminders: [objs_reminder]!
}

"""Schema for error response from reminders.list method"""
type reminders_list_error_schema {
  """Note: PHP callstack is only visible in dev/qa"""
  callstack: String
  error: query_reminders_list_oneOf_1_error!
  ok: Boolean!
}

enum query_reminders_list_oneOf_1_error {
  not_authed
  invalid_auth
  account_inactive
  token_revoked
  no_permission
  org_login_required
  user_is_bot
  invalid_arg_name
  invalid_array_arg
  invalid_charset
  invalid_form_data
  invalid_post_type
  missing_post_type
  team_added_to_org
  invalid_json
  json_not_object
  request_timeout
  upgrade_required
  fatal_error
}

union rtm_connect_response = rtm_connect_schema | rtm_connect_error_schema

"""Schema for successful response from rtm.connect method"""
type rtm_connect_schema {
  ok: Boolean!
  self: query_rtm_connect_oneOf_0_self!
  team: query_rtm_connect_oneOf_0_team!
  url: URL!
}

type query_rtm_connect_oneOf_0_self {
  id: User_ID!
  name: String!
}

type query_rtm_connect_oneOf_0_team {
  domain: String!
  id: Team_ID!
  name: String!
}

"""Schema for error response from rtm.connect method"""
type rtm_connect_error_schema {
  """Note: PHP callstack is only visible in dev/qa"""
  callstack: String
  error: query_rtm_connect_oneOf_1_error!
  ok: Boolean!
}

enum query_rtm_connect_oneOf_1_error {
  not_authed
  invalid_auth
  account_inactive
  token_revoked
  no_permission
  invalid_arg_name
  invalid_array_arg
  invalid_charset
  invalid_form_data
  invalid_post_type
  missing_post_type
  team_added_to_org
  invalid_json
  json_not_object
  request_timeout
  upgrade_required
  fatal_error
}

union search_messages_response = Default_success_template | Default_error_template

union stars_list_response = stars_list_schema | stars_list_error_schema

"""Schema for successful response from stars.list method"""
type stars_list_schema {
  items: [[query_stars_list_oneOf_0_items_items_items]]!
  ok: Boolean!
  paging: paging_object
}

union query_stars_list_oneOf_0_items_items_items = query_stars_list_oneOf_0_items_items_items_oneOf_0 | query_stars_list_oneOf_0_items_items_items_oneOf_1 | query_stars_list_oneOf_0_items_items_items_oneOf_2 | query_stars_list_oneOf_0_items_items_items_oneOf_3 | query_stars_list_oneOf_0_items_items_items_oneOf_4 | query_stars_list_oneOf_0_items_items_items_oneOf_5

type query_stars_list_oneOf_0_items_items_items_oneOf_0 {
  channel: Channel_like_conversation_ID!
  date_create: Int!
  message: Message_object!
  type: message_const!
}

type query_stars_list_oneOf_0_items_items_items_oneOf_1 {
  date_create: Int!
  file: file_object!
  type: file_const!
}

type query_stars_list_oneOf_0_items_items_items_oneOf_2 {
  comment: File_Comment_Object!
  date_create: Int!
  file: file_object!
  type: file_comment_const!
}

type query_stars_list_oneOf_0_items_items_items_oneOf_3 {
  channel: Channel_like_conversation_ID!
  date_create: Int!
  type: channel_const!
}

enum channel_const {
  channel
}

type query_stars_list_oneOf_0_items_items_items_oneOf_4 {
  channel: Direct_Message_Channel_ID!
  date_create: Int!
  type: im_const!
}

enum im_const {
  im
}

type query_stars_list_oneOf_0_items_items_items_oneOf_5 {
  channel: Private_Channel_ID!
  date_create: Int!
  type: group_const!
}

enum group_const {
  group
}

"""Schema for error response from stars.list method"""
type stars_list_error_schema {
  """Note: PHP callstack is only visible in dev/qa"""
  callstack: String
  error: query_stars_list_oneOf_1_error!
  ok: Boolean!
}

enum query_stars_list_oneOf_1_error {
  not_authed
  invalid_auth
  account_inactive
  token_revoked
  no_permission
  org_login_required
  user_is_bot
  invalid_arg_name
  invalid_array_arg
  invalid_charset
  invalid_form_data
  invalid_post_type
  missing_post_type
  team_added_to_org
  invalid_json
  json_not_object
  request_timeout
  upgrade_required
  fatal_error
}

union team_accessLogs_response = team_accessLogs_schema | team_accessLogs_error_schema

"""Schema for successful response from team.accessLogs method"""
type team_accessLogs_schema {
  logins: [query_team_accessLogs_oneOf_0_logins_items]!
  ok: Boolean!
  paging: paging_object!
}

type query_team_accessLogs_oneOf_0_logins_items {
  count: Int!
  country: String!
  date_first: Int!
  date_last: Int!
  ip: String!
  isp: String!
  region: String!
  user_agent: String!
  user_id: User_ID!
  username: String!
}

"""Schema for error response from team.accessLogs method"""
type team_accessLogs_error_schema {
  """Note: PHP callstack is only visible in dev/qa"""
  callstack: String
  error: query_team_accessLogs_oneOf_1_error!
  ok: Boolean!
}

enum query_team_accessLogs_oneOf_1_error {
  paid_only
  over_pagination_limit
  not_authed
  invalid_auth
  account_inactive
  token_revoked
  no_permission
  org_login_required
  user_is_bot
  invalid_arg_name
  invalid_array_arg
  invalid_charset
  invalid_form_data
  invalid_post_type
  missing_post_type
  team_added_to_org
  invalid_json
  json_not_object
  request_timeout
  upgrade_required
  fatal_error
}

union team_billableInfo_response = Default_success_template | Default_error_template

union team_info_response = team_info_schema | team_info_error_schema

"""Schema for successful response from team.info method"""
type team_info_schema {
  ok: Boolean!
  team: Team_Object!
}

"""Schema for error response from team.info method"""
type team_info_error_schema {
  """Note: PHP callstack is only visible in dev/qa"""
  callstack: String
  error: query_team_info_oneOf_1_error!
  ok: Boolean!
}

enum query_team_info_oneOf_1_error {
  not_authed
  invalid_auth
  account_inactive
  token_revoked
  no_permission
  invalid_arg_name
  invalid_array_arg
  invalid_charset
  invalid_form_data
  invalid_post_type
  missing_post_type
  team_added_to_org
  invalid_json
  json_not_object
  request_timeout
  upgrade_required
  fatal_error
}

union team_integrationLogs_response = team_integrationLogs_schema | team_integrationLogs_error_schema

"""Schema for successful response from team.integrationLogs method"""
type team_integrationLogs_schema {
  logs: [query_team_integrationLogs_oneOf_0_logs_items]!
  ok: Boolean!
  paging: paging_object!
}

type query_team_integrationLogs_oneOf_0_logs_items {
  admin_app_id: App_ID
  app_id: App_ID!
  app_type: String!
  change_type: String!
  channel: Channel_like_conversation_ID
  date: String!
  scope: String!
  service_id: String
  service_type: String
  user_id: User_ID!
  user_name: String!
}

"""Schema for error response from team.integrationLogs method"""
type team_integrationLogs_error_schema {
  """Note: PHP callstack is only visible in dev/qa"""
  callstack: String
  error: query_team_integrationLogs_oneOf_1_error!
  ok: Boolean!
}

enum query_team_integrationLogs_oneOf_1_error {
  not_authed
  invalid_auth
  account_inactive
  token_revoked
  no_permission
  org_login_required
  user_is_bot
  invalid_arg_name
  invalid_array_arg
  invalid_charset
  invalid_form_data
  invalid_post_type
  missing_post_type
  team_added_to_org
  invalid_json
  json_not_object
  request_timeout
  upgrade_required
  fatal_error
}

union team_profile_get_response = team_profile_get_success_schema | team_profile_get_error_schema

"""Schema for successful response from team.profile.get method"""
type team_profile_get_success_schema {
  ok: Boolean!
  profile: query_team_profile_get_oneOf_0_profile!
}

type query_team_profile_get_oneOf_0_profile {
  fields: [objs_team_profile_field]!
}

type objs_team_profile_field {
  field_name: String
  hint: String!
  id: query_team_profile_get_oneOf_0_profile_fields_items_id!
  is_hidden: Boolean
  label: String!
  options: [query_team_profile_get_oneOf_0_profile_fields_items_options_items]
  ordering: Float!
  possible_values: [String]
  type: query_team_profile_get_oneOf_0_profile_fields_items_type!
}

scalar query_team_profile_get_oneOf_0_profile_fields_items_id

union query_team_profile_get_oneOf_0_profile_fields_items_options_items = Void_container | objs_team_profile_field_option

type objs_team_profile_field_option {
  is_custom: Boolean
  is_multiple_entry: Boolean
  is_protected: Boolean
  is_scim: Boolean
}

enum query_team_profile_get_oneOf_0_profile_fields_items_type {
  text
  date
  link
  mailto
  options_list
  user
}

"""Schema for error response from team.profile.get method"""
type team_profile_get_error_schema {
  """Note: PHP callstack is only visible in dev/qa"""
  callstack: String
  error: query_team_profile_get_oneOf_1_error!
  ok: Boolean!
}

enum query_team_profile_get_oneOf_1_error {
  not_authed
  invalid_auth
  account_inactive
  no_permission
  user_is_bot
  invalid_arg_name
  invalid_array_arg
  invalid_charset
  invalid_form_data
  invalid_post_typ
  missing_post_type
  team_added_to_org
  invalid_json
  json_not_object
  request_timeou
  upgrade_required
}

union usergroups_list_response = usergroups_list_schema | usergroups_list_error_schema

"""Schema for successful response from usergroups.list method"""
type usergroups_list_schema {
  ok: Boolean!
  usergroups: [Subteam_Usergroup_Object]!
}

type Subteam_Usergroup_Object {
  auto_provision: Boolean!
  auto_type: [mutation_usergroups_create_oneOf_0_usergroup_auto_type_items]!
  channel_count: Int
  created_by: User_ID!
  date_create: Int!
  date_delete: Int!
  date_update: Int!
  deleted_by: [mutation_usergroups_create_oneOf_0_usergroup_deleted_by_items]!
  description: String!
  enterprise_subteam_id: String!
  handle: String!
  id: Subteam_ID!
  is_external: Boolean!
  is_subteam: Boolean!
  is_usergroup: Boolean!
  name: String!
  prefs: mutation_usergroups_create_oneOf_0_usergroup_prefs!
  team_id: Team_ID!
  updated_by: User_ID!
  user_count: Int
  users: [User_ID]
}

union mutation_usergroups_create_oneOf_0_usergroup_auto_type_items = Void_container | mutation_usergroups_create_oneOf_0_usergroup_auto_type_items_oneOf_1_container

type mutation_usergroups_create_oneOf_0_usergroup_auto_type_items_oneOf_1_container {
  mutation_usergroups_create_oneOf_0_usergroup_auto_type_items_oneOf_1: mutation_usergroups_create_oneOf_0_usergroup_auto_type_items_oneOf_1
}

enum mutation_usergroups_create_oneOf_0_usergroup_auto_type_items_oneOf_1 {
  owner
  admin
}

union mutation_usergroups_create_oneOf_0_usergroup_deleted_by_items = Void_container | User_ID_container

type User_ID_container {
  User_ID: User_ID
}

scalar Subteam_ID

type mutation_usergroups_create_oneOf_0_usergroup_prefs {
  channels: [Channel_ID]!
  groups: [Private_Channel_ID]!
}

"""Schema for error response from usergroups.list method"""
type usergroups_list_error_schema {
  """Note: PHP callstack is only visible in dev/qa"""
  callstack: String
  error: query_usergroups_list_oneOf_1_error!
  ok: Boolean!
}

enum query_usergroups_list_oneOf_1_error {
  not_authed
  invalid_auth
  account_inactive
  token_revoked
  no_permission
  org_login_required
  user_is_bot
  user_is_restricted
  invalid_arg_name
  invalid_array_arg
  invalid_charset
  invalid_form_data
  invalid_post_type
  missing_post_type
  team_added_to_org
  invalid_json
  json_not_object
  request_timeout
  upgrade_require
  fatal_error
  missing_charset
  superfluous_charset
}

union usergroups_users_list_response = usergroups_users_list_schema | usergroups_users_list_error_schema

"""Schema for successful response from usergroups.users.list method"""
type usergroups_users_list_schema {
  ok: Boolean!
  users: [User_ID]!
}

"""Schema for error response from usergroups.users.list method"""
type usergroups_users_list_error_schema {
  """Note: PHP callstack is only visible in dev/qa"""
  callstack: String
  error: query_usergroups_users_list_oneOf_1_error!
  ok: Boolean!
}

enum query_usergroups_users_list_oneOf_1_error {
  not_authed
  invalid_auth
  account_inactive
  token_revoked
  no_permission
  org_login_required
  user_is_bot
  user_is_restricted
  invalid_arg_name
  invalid_array_arg
  invalid_charset
  invalid_form_data
  invalid_post_type
  missing_post_type
  team_added_to_org
  invalid_json
  json_not_object
  request_timeout
  upgrade_require
  fatal_error
  missing_charset
  superfluous_charset
}

union users_conversations_response = users_conversations_success_schema | users_conversations_error_schema

"""
Schema for successful response from users.conversations method. Returned conversation objects do not include `num_members` or `is_member`
"""
type users_conversations_success_schema {
  channels: [[mutation_conversations_create_oneOf_0_channel_items]]!
  ok: Boolean!
  response_metadata: query_users_conversations_oneOf_0_response_metadata
  additionalProperties: JSON
}

type query_users_conversations_oneOf_0_response_metadata {
  next_cursor: String!
}

"""Schema for error response from users.conversations method"""
type users_conversations_error_schema {
  """Note: PHP callstack is only visible in dev/qa"""
  callstack: String
  error: query_users_conversations_oneOf_1_error!
  ok: Boolean!
}

enum query_users_conversations_oneOf_1_error {
  method_not_supported_for_channel_type
  missing_scope
  invalid_types
  invalid_cursor
  invalid_limit
  not_authed
  invalid_auth
  account_inactive
  token_revoked
  no_permission
  invalid_arg_name
  invalid_array_arg
  invalid_charset
  invalid_form_data
  invalid_post_type
  missing_post_type
  team_added_to_org
  invalid_json
  json_not_object
  request_timeout
  upgrade_required
  fatal_error
}

union users_getPresence_response = API_method__users_getPresence | users_counts_error_schema

"""
Generated from users.getPresence with shasum e7251aec575d8863f9e0eb38663ae9dc26655f65
"""
type API_method__users_getPresence {
  auto_away: Boolean
  connection_count: Int
  last_activity: Int
  manual_away: Boolean
  ok: Boolean!
  online: Boolean
  presence: String!
  additionalProperties: JSON
}

"""Schema for error response users.getPresence method"""
type users_counts_error_schema {
  error: String!
  ok: Boolean!
  additionalProperties: JSON
}

union users_identity_response = query_users_identity_oneOf_0_items_oneOf_0 | query_users_identity_oneOf_0_items_oneOf_1 | query_users_identity_oneOf_0_items_oneOf_2 | query_users_identity_oneOf_0_items_oneOf_3 | users_identity_error_schema

"""Schema for 'identity.basic' scope"""
type query_users_identity_oneOf_0_items_oneOf_0 {
  ok: Boolean!
  team: query_users_identity_oneOf_0_items_oneOf_0_team!
  user: query_users_identity_oneOf_0_items_oneOf_0_user!
}

type query_users_identity_oneOf_0_items_oneOf_0_team {
  id: Team_ID!
}

type query_users_identity_oneOf_0_items_oneOf_0_user {
  id: User_ID!
  name: String!
}

"""Schema for 'identity.basic,identity.email' scopes"""
type query_users_identity_oneOf_0_items_oneOf_1 {
  ok: Boolean!
  team: query_users_identity_oneOf_0_items_oneOf_1_team!
  user: query_users_identity_oneOf_0_items_oneOf_1_user!
}

type query_users_identity_oneOf_0_items_oneOf_1_team {
  id: Team_ID!
}

type query_users_identity_oneOf_0_items_oneOf_1_user {
  email: EmailAddress!
  id: User_ID!
  name: String!
}

"""
A field whose value conforms to the standard internet email address format as specified in HTML Spec: https://html.spec.whatwg.org/multipage/input.html#valid-e-mail-address.
"""
scalar EmailAddress @specifiedBy(url: "https://html.spec.whatwg.org/multipage/input.html#valid-e-mail-address")

"""Schema for 'identity.basic,identity.avatar' scopes"""
type query_users_identity_oneOf_0_items_oneOf_2 {
  ok: Boolean!
  team: query_users_identity_oneOf_0_items_oneOf_2_team!
  user: query_users_identity_oneOf_0_items_oneOf_2_user!
}

type query_users_identity_oneOf_0_items_oneOf_2_team {
  id: Team_ID!
}

type query_users_identity_oneOf_0_items_oneOf_2_user {
  id: User_ID!
  image_192: String!
  image_24: String!
  image_32: String!
  image_48: String!
  image_512: String!
  image_72: String!
  name: String!
}

"""Schema for 'identity.basic,identity.team' scopes"""
type query_users_identity_oneOf_0_items_oneOf_3 {
  ok: Boolean!
  team: query_users_identity_oneOf_0_items_oneOf_3_team!
  user: query_users_identity_oneOf_0_items_oneOf_3_user!
}

type query_users_identity_oneOf_0_items_oneOf_3_team {
  domain: String!
  id: Team_ID!
  image_102: String!
  image_132: String!
  image_230: String!
  image_34: String!
  image_44: String!
  image_68: String!
  image_88: String!
  image_default: Boolean!
  name: String!
}

type query_users_identity_oneOf_0_items_oneOf_3_user {
  id: User_ID!
  name: String!
}

"""Schema for error response from users.identity method"""
type users_identity_error_schema {
  """Note: PHP callstack is only visible in dev/qa"""
  callstack: String
  error: query_users_identity_oneOf_1_error!
  ok: Boolean!
}

enum query_users_identity_oneOf_1_error {
  not_authed
  invalid_auth
  account_inactive
  token_revoked
  no_permission
  org_login_required
  user_is_bot
  invalid_arg_name
  invalid_array_arg
  invalid_charset
  invalid_form_data
  invalid_post_type
  missing_post_type
  team_added_to_org
  invalid_json
  json_not_object
  request_timeout
  upgrade_required
  fatal_error
}

union users_info_response = users_info_success_schema | users_info_error_schema

"""Schema for successful response from users.info method"""
type users_info_success_schema {
  ok: Boolean!
  user: [query_users_info_oneOf_0_user_items]!
  additionalProperties: JSON
}

union query_users_info_oneOf_0_user_items = query_users_info_oneOf_0_user_items_oneOf_0 | query_users_info_oneOf_0_user_items_oneOf_1

"""user object for non enterprise type"""
type query_users_info_oneOf_0_user_items_oneOf_0 {
  color: query_users_info_oneOf_0_user_items_oneOf_0_color
  deleted: Boolean
  enterprise_user: objs_enterprise_user
  has_2fa: Boolean
  id: User_ID!
  is_admin: Boolean
  is_app_user: Boolean!
  is_bot: Boolean!
  is_external: Boolean
  is_forgotten: Boolean
  is_invited_user: Boolean
  is_owner: Boolean
  is_primary_owner: Boolean
  is_restricted: Boolean
  is_stranger: Boolean
  is_ultra_restricted: Boolean
  locale: String
  name: String!
  presence: String
  profile: User_profile_object!
  real_name: String
  team: Team_or_Enterprise_ID
  team_id: Team_or_Enterprise_ID
  team_profile: query_users_info_oneOf_0_user_items_oneOf_0_team_profile
  two_factor_type: String
  tz: [query_users_info_oneOf_0_user_items_oneOf_0_tz_items]
  tz_label: String
  tz_offset: Float
  updated: Float!
}

scalar query_users_info_oneOf_0_user_items_oneOf_0_color

type objs_enterprise_user {
  enterprise_id: Enterprise_ID!
  enterprise_name: String!
  id: Enterprise_User_ID!
  is_admin: Boolean!
  is_owner: Boolean!
  teams: [Team_ID]!
}

scalar Enterprise_User_ID

type User_profile_object {
  always_active: Boolean
  api_app_id: App_ID_or_empty_string
  avatar_hash: String!
  bot_id: Bot_User_ID
  display_name: String!
  display_name_normalized: String!
  email: EmailAddress
  fields: [JSON]!
  first_name: String
  guest_expiration_ts: Int
  guest_invited_by: String
  image_1024: URL
  image_192: URL
  image_24: URL
  image_32: URL
  image_48: URL
  image_512: URL
  image_72: URL
  image_original: URL
  is_app_user: Boolean
  is_custom_image: Boolean
  is_restricted: Boolean
  is_ultra_restricted: Boolean
  last_avatar_image_hash: String
  last_name: String
  memberships_count: Int
  name: String
  phone: String!
  pronouns: String
  real_name: String!
  real_name_normalized: String!
  skype: String!
  status_default_emoji: String
  status_default_text: String
  status_default_text_canonical: String
  status_emoji: String!
  status_expiration: Int
  status_text: String!
  status_text_canonical: String
  team: Team_or_Enterprise_ID
  title: String!
  updated: Int
  user_id: String
  username: String
}

scalar App_ID_or_empty_string

type query_users_info_oneOf_0_user_items_oneOf_0_team_profile {
  fields: [objs_team_profile_field]!
}

union query_users_info_oneOf_0_user_items_oneOf_0_tz_items = Void_container | String_container

"""enterprise user"""
type query_users_info_oneOf_0_user_items_oneOf_1 {
  color: query_users_info_oneOf_0_user_items_oneOf_1_color
  deleted: Boolean
  enterprise_user: objs_enterprise_user
  has_2fa: Boolean
  id: User_ID!
  is_admin: Boolean
  is_app_user: Boolean!
  is_bot: Boolean!
  is_external: Boolean
  is_forgotten: Boolean
  is_owner: Boolean
  is_primary_owner: Boolean
  is_restricted: Boolean
  is_stranger: Boolean
  is_ultra_restricted: Boolean
  locale: String
  name: String!
  presence: String
  profile: User_profile_object!
  real_name: String
  team_id: Team_or_Enterprise_ID
  team_profile: query_users_info_oneOf_0_user_items_oneOf_1_team_profile
  teams: [Team_or_Enterprise_ID]
  two_factor_type: String
  tz: [query_users_info_oneOf_0_user_items_oneOf_1_tz_items]
  tz_label: String
  tz_offset: Float
  updated: Float!
}

scalar query_users_info_oneOf_0_user_items_oneOf_1_color

type query_users_info_oneOf_0_user_items_oneOf_1_team_profile {
  fields: [objs_team_profile_field]!
}

union query_users_info_oneOf_0_user_items_oneOf_1_tz_items = Void_container | String_container

"""Schema for error response from users.info method"""
type users_info_error_schema {
  callstack: String
  error: query_users_info_oneOf_1_error!
  ok: Boolean!
}

enum query_users_info_oneOf_1_error {
  user_not_found
  user_not_visible
  not_authed
  invalid_auth
  account_inactive
  invalid_arg_name
  invalid_array_arg
  invalid_charset
  invalid_form_data
  invalid_post_type
  missing_post_type
  team_added_to_org
  invalid_json
  json_not_object
  request_timeout
  upgrade_required
}

union users_list_response = users_list_schema | users_list_error_schema

"""Schema for successful response from users.list method"""
type users_list_schema {
  cache_ts: Int!
  members: [[query_users_info_oneOf_0_user_items]]!
  ok: Boolean!
  response_metadata: [query_files_info_oneOf_0_response_metadata_items]
}

"""Schema for error response from users.list method"""
type users_list_error_schema {
  """Note: PHP callstack is only visible in dev/qa"""
  callstack: String
  error: query_users_list_oneOf_1_error!
  ok: Boolean!
}

enum query_users_list_oneOf_1_error {
  limit_required
  invalid_cursor
  not_authed
  invalid_auth
  account_inactive
  no_permission
  invalid_arg_name
  invalid_array_arg
  invalid_charset
  invalid_form_data
  invalid_post_type
  missing_post_type
  team_added_to_org
  invalid_json
  json_not_object
  request_timeout
  upgrade_required
  fatal_error
}

union users_lookupByEmail_response = users_lookupByEmail_success_schema | users_lookupByEmail_error_schema

"""Schema for successful response from users.lookupByEmail method"""
type users_lookupByEmail_success_schema {
  ok: Boolean!
  user: [query_users_info_oneOf_0_user_items]!
  additionalProperties: JSON
}

"""Schema for error response from users.lookupByEmail method"""
type users_lookupByEmail_error_schema {
  """Note: PHP callstack is only visible in dev/qa"""
  callstack: String
  error: query_users_lookupByEmail_oneOf_1_error!
  ok: Boolean!
}

enum query_users_lookupByEmail_oneOf_1_error {
  users_not_found
  enterprise_is_restricted
  not_authed
  invalid_auth
  account_inactive
  no_permission
  invalid_arg_name
  invalid_array_arg
  invalid_charset
  invalid_form_data
  invalid_post_type
  missing_post_type
  team_added_to_org
  invalid_json
  json_not_object
  request_timeout
  upgrade_required
  fatal_error
}

union users_profile_get_response = users_profile_get_schema | users_profile_get_error_schema

"""Schema for successful response from users.profile.get method"""
type users_profile_get_schema {
  ok: Boolean!
  profile: User_profile_object!
}

"""Schema for error response from users.profile.get method"""
type users_profile_get_error_schema {
  """Note: PHP callstack is only visible in dev/qa"""
  callstack: String
  error: query_users_profile_get_oneOf_1_error!
  ok: Boolean!
}

enum query_users_profile_get_oneOf_1_error {
  user_not_found
  not_authed
  invalid_auth
  account_inactive
  token_revoked
  no_permission
  org_login_required
  user_is_bot
  invalid_arg_name
  invalid_array_arg
  invalid_charset
  invalid_form_data
  invalid_post_type
  missing_post_type
  team_added_to_org
  invalid_json
  json_not_object
  request_timeout
  upgrade_required
  fatal_error
}

union views_open_response = Default_success_template | Default_error_template

union views_publish_response = Default_success_template | Default_error_template

union views_push_response = Default_success_template | Default_error_template

union views_update_response = Default_success_template | Default_error_template

union workflows_stepCompleted_response = Default_success_template | Default_error_template

union workflows_stepFailed_response = Default_success_template | Default_error_template

union workflows_updateStep_response = Default_success_template | Default_error_template

type Mutation {
  """Approve an app for installation on a workspace."""
  admin_apps_approve(
    """Authentication token. Requires scope: `admin.apps:write`"""
    token: String!
  ): admin_apps_approve_response

  """Restrict an app for installation on a workspace."""
  admin_apps_restrict(
    """Authentication token. Requires scope: `admin.apps:write`"""
    token: String!
  ): admin_apps_restrict_response

  """Archive a public or private channel."""
  admin_conversations_archive(
    """Authentication token. Requires scope: `admin.conversations:write`"""
    token: String!
  ): admin_conversations_archive_response

  """Convert a public channel to a private channel."""
  admin_conversations_convertToPrivate(
    """Authentication token. Requires scope: `admin.conversations:write`"""
    token: String!
  ): admin_conversations_convertToPrivate_response

  """Create a public or private channel-based conversation."""
  admin_conversations_create(
    """Authentication token. Requires scope: `admin.conversations:write`"""
    token: String!
  ): admin_conversations_create_response

  """Delete a public or private channel."""
  admin_conversations_delete(
    """Authentication token. Requires scope: `admin.conversations:write`"""
    token: String!
  ): admin_conversations_delete_response

  """Disconnect a connected channel from one or more workspaces."""
  admin_conversations_disconnectShared(
    """Authentication token. Requires scope: `admin.conversations:write`"""
    token: String!
  ): admin_conversations_disconnectShared_response

  """Invite a user to a public or private channel."""
  admin_conversations_invite(
    """Authentication token. Requires scope: `admin.conversations:write`"""
    token: String!
  ): admin_conversations_invite_response

  """Rename a public or private channel."""
  admin_conversations_rename(
    """Authentication token. Requires scope: `admin.conversations:write`"""
    token: String!
  ): admin_conversations_rename_response

  """Add an allowlist of IDP groups for accessing a channel"""
  admin_conversations_restrictAccess_addGroup: admin_conversations_restrictAccess_addGroup_response

  """Remove a linked IDP group linked from a private channel"""
  admin_conversations_restrictAccess_removeGroup: admin_conversations_restrictAccess_removeGroup_response

  """Set the posting permissions for a public or private channel."""
  admin_conversations_setConversationPrefs(
    """Authentication token. Requires scope: `admin.conversations:write`"""
    token: String!
  ): admin_conversations_setConversationPrefs_response

  """
  Set the workspaces in an Enterprise grid org that connect to a public or private channel.
  """
  admin_conversations_setTeams(
    """Authentication token. Requires scope: `admin.conversations:write`"""
    token: String!
  ): admin_conversations_setTeams_response

  """Unarchive a public or private channel."""
  admin_conversations_unarchive(
    """Authentication token. Requires scope: `admin.conversations:write`"""
    token: String!
  ): admin_conversations_unarchive_response

  """Add an emoji."""
  admin_emoji_add: admin_emoji_add_response

  """Add an emoji alias."""
  admin_emoji_addAlias: admin_emoji_addAlias_response

  """Remove an emoji across an Enterprise Grid organization"""
  admin_emoji_remove: admin_emoji_remove_response

  """Rename an emoji."""
  admin_emoji_rename: admin_emoji_rename_response

  """Approve a workspace invite request."""
  admin_inviteRequests_approve(
    """Authentication token. Requires scope: `admin.invites:write`"""
    token: String!
  ): admin_inviteRequests_approve_response

  """Deny a workspace invite request."""
  admin_inviteRequests_deny(
    """Authentication token. Requires scope: `admin.invites:write`"""
    token: String!
  ): admin_inviteRequests_deny_response

  """Create an Enterprise team."""
  admin_teams_create(
    """Authentication token. Requires scope: `admin.teams:write`"""
    token: String!
  ): admin_teams_create_response

  """Set the default channels of a workspace."""
  admin_teams_settings_setDefaultChannels: admin_teams_settings_setDefaultChannels_response

  """Set the description of a given workspace."""
  admin_teams_settings_setDescription(
    """Authentication token. Requires scope: `admin.teams:write`"""
    token: String!
  ): admin_teams_settings_setDescription_response

  """
  An API method that allows admins to set the discoverability of a given workspace
  """
  admin_teams_settings_setDiscoverability(
    """Authentication token. Requires scope: `admin.teams:write`"""
    token: String!
  ): admin_teams_settings_setDiscoverability_response

  """Sets the icon of a workspace."""
  admin_teams_settings_setIcon: admin_teams_settings_setIcon_response

  """Set the name of a given workspace."""
  admin_teams_settings_setName(
    """Authentication token. Requires scope: `admin.teams:write`"""
    token: String!
  ): admin_teams_settings_setName_response

  """Add one or more default channels to an IDP group."""
  admin_usergroups_addChannels(
    """Authentication token. Requires scope: `admin.usergroups:write`"""
    token: String!
  ): admin_usergroups_addChannels_response

  """
  Associate one or more default workspaces with an organization-wide IDP group.
  """
  admin_usergroups_addTeams(
    """Authentication token. Requires scope: `admin.teams:write`"""
    token: String!
  ): admin_usergroups_addTeams_response

  """
  Remove one or more default channels from an org-level IDP group (user group).
  """
  admin_usergroups_removeChannels(
    """Authentication token. Requires scope: `admin.usergroups:write`"""
    token: String!
  ): admin_usergroups_removeChannels_response

  """Add an Enterprise user to a workspace."""
  admin_users_assign(
    """Authentication token. Requires scope: `admin.users:write`"""
    token: String!
  ): admin_users_assign_response

  """Invite a user to a workspace."""
  admin_users_invite(
    """Authentication token. Requires scope: `admin.users:write`"""
    token: String!
  ): admin_users_invite_response

  """Remove a user from a workspace."""
  admin_users_remove(
    """Authentication token. Requires scope: `admin.users:write`"""
    token: String!
  ): admin_users_remove_response

  """Invalidate a single session for a user by session_id"""
  admin_users_session_invalidate(
    """Authentication token. Requires scope: `admin.users:write`"""
    token: String!
  ): admin_users_session_invalidate_response

  """Wipes all valid sessions on all devices for a given user"""
  admin_users_session_reset(
    """Authentication token. Requires scope: `admin.users:write`"""
    token: String!
  ): admin_users_session_reset_response

  """Set an existing guest, regular user, or owner to be an admin user."""
  admin_users_setAdmin(
    """Authentication token. Requires scope: `admin.users:write`"""
    token: String!
  ): admin_users_setAdmin_response

  """Set an expiration for a guest user"""
  admin_users_setExpiration(
    """Authentication token. Requires scope: `admin.users:write`"""
    token: String!
  ): admin_users_setExpiration_response

  """
  Set an existing guest, regular user, or admin user to be a workspace owner.
  """
  admin_users_setOwner(
    """Authentication token. Requires scope: `admin.users:write`"""
    token: String!
  ): admin_users_setOwner_response

  """Set an existing guest user, admin user, or owner to be a regular user."""
  admin_users_setRegular(
    """Authentication token. Requires scope: `admin.users:write`"""
    token: String!
  ): admin_users_setRegular_response

  """Registers a new Call."""
  calls_add(
    """Authentication token. Requires scope: `calls:write`"""
    token: String!
  ): calls_add_response

  """Ends a Call."""
  calls_end(
    """Authentication token. Requires scope: `calls:write`"""
    token: String!
  ): calls_end_response

  """Registers new participants added to a Call."""
  calls_participants_add(
    """Authentication token. Requires scope: `calls:write`"""
    token: String!
  ): calls_participants_add_response

  """Registers participants removed from a Call."""
  calls_participants_remove(
    """Authentication token. Requires scope: `calls:write`"""
    token: String!
  ): calls_participants_remove_response

  """Updates information about a Call."""
  calls_update(
    """Authentication token. Requires scope: `calls:write`"""
    token: String!
  ): calls_update_response

  """Deletes a message."""
  chat_delete(
    """Authentication token. Requires scope: `chat:write`"""
    token: String
  ): chat_delete_response

  """Deletes a pending scheduled message from the queue."""
  chat_deleteScheduledMessage(
    """Authentication token. Requires scope: `chat:write`"""
    token: String!
  ): chat_deleteScheduledMessage_response

  """Share a me message into a channel."""
  chat_meMessage(
    """Authentication token. Requires scope: `chat:write`"""
    token: String
  ): chat_meMessage_response

  """Sends an ephemeral message to a user in a channel."""
  chat_postEphemeral(
    """Authentication token. Requires scope: `chat:write`"""
    token: String!
  ): chat_postEphemeral_response

  """Sends a message to a channel."""
  chat_postMessage(
    """Authentication token. Requires scope: `chat:write`"""
    token: String!
  ): chat_postMessage_response

  """Schedules a message to be sent to a channel."""
  chat_scheduleMessage(
    """Authentication token. Requires scope: `chat:write`"""
    token: String
  ): chat_scheduleMessage_response

  """Provide custom unfurl behavior for user-posted URLs"""
  chat_unfurl(
    """Authentication token. Requires scope: `links:write`"""
    token: String!
  ): chat_unfurl_response

  """Updates a message."""
  chat_update(
    """Authentication token. Requires scope: `chat:write`"""
    token: String!
  ): chat_update_response

  """Archives a conversation."""
  conversations_archive(
    """Authentication token. Requires scope: `conversations:write`"""
    token: String
  ): conversations_archive_response

  """Closes a direct message or multi-person direct message."""
  conversations_close(
    """Authentication token. Requires scope: `conversations:write`"""
    token: String
  ): conversations_close_response

  """Initiates a public or private channel-based conversation"""
  conversations_create(
    """Authentication token. Requires scope: `conversations:write`"""
    token: String
  ): conversations_create_response

  """Invites users to a channel."""
  conversations_invite(
    """Authentication token. Requires scope: `conversations:write`"""
    token: String
  ): conversations_invite_response

  """Joins an existing conversation."""
  conversations_join(
    """Authentication token. Requires scope: `channels:write`"""
    token: String
  ): conversations_join_response

  """Removes a user from a conversation."""
  conversations_kick(
    """Authentication token. Requires scope: `conversations:write`"""
    token: String
  ): conversations_kick_response

  """Leaves a conversation."""
  conversations_leave(
    """Authentication token. Requires scope: `conversations:write`"""
    token: String
  ): conversations_leave_response

  """Sets the read cursor in a channel."""
  conversations_mark(
    """Authentication token. Requires scope: `conversations:write`"""
    token: String
  ): conversations_mark_response

  """Opens or resumes a direct message or multi-person direct message."""
  conversations_open(
    """Authentication token. Requires scope: `conversations:write`"""
    token: String
  ): conversations_open_response

  """Renames a conversation."""
  conversations_rename(
    """Authentication token. Requires scope: `conversations:write`"""
    token: String
  ): conversations_rename_response

  """Sets the purpose for a conversation."""
  conversations_setPurpose(
    """Authentication token. Requires scope: `conversations:write`"""
    token: String
  ): conversations_setPurpose_response

  """Sets the topic for a conversation."""
  conversations_setTopic(
    """Authentication token. Requires scope: `conversations:write`"""
    token: String
  ): conversations_setTopic_response

  """Reverses conversation archival."""
  conversations_unarchive(
    """Authentication token. Requires scope: `conversations:write`"""
    token: String
  ): conversations_unarchive_response

  """Ends the current user's Do Not Disturb session immediately."""
  dnd_endDnd(
    """Authentication token. Requires scope: `dnd:write`"""
    token: String!
  ): dnd_endDnd_response

  """Ends the current user's snooze mode immediately."""
  dnd_endSnooze(
    """Authentication token. Requires scope: `dnd:write`"""
    token: String!
  ): dnd_endSnooze_response

  """
  Turns on Do Not Disturb mode for the current user, or changes its duration.
  """
  dnd_setSnooze: dnd_setSnooze_response

  """Deletes an existing comment on a file."""
  files_comments_delete(
    """Authentication token. Requires scope: `files:write:user`"""
    token: String
  ): files_comments_delete_response

  """Deletes a file."""
  files_delete(
    """Authentication token. Requires scope: `files:write:user`"""
    token: String
  ): files_delete_response

  """Adds a file from a remote service"""
  files_remote_add: files_remote_add_response

  """Remove a remote file."""
  files_remote_remove: files_remote_remove_response

  """Updates an existing remote file."""
  files_remote_update: files_remote_update_response

  """Revokes public/external sharing access for a file"""
  files_revokePublicURL(
    """Authentication token. Requires scope: `files:write:user`"""
    token: String
  ): files_revokePublicURL_response

  """Enables a file for public/external sharing."""
  files_sharedPublicURL(
    """Authentication token. Requires scope: `files:write:user`"""
    token: String
  ): files_sharedPublicURL_response

  """Uploads or creates a file."""
  files_upload: files_upload_response

  """Pins an item to a channel."""
  pins_add(
    """Authentication token. Requires scope: `pins:write`"""
    token: String!
  ): pins_add_response

  """Un-pins an item from a channel."""
  pins_remove(
    """Authentication token. Requires scope: `pins:write`"""
    token: String!
  ): pins_remove_response

  """Adds a reaction to an item."""
  reactions_add(
    """Authentication token. Requires scope: `reactions:write`"""
    token: String!
  ): reactions_add_response

  """Removes a reaction from an item."""
  reactions_remove(
    """Authentication token. Requires scope: `reactions:write`"""
    token: String!
  ): reactions_remove_response

  """Creates a reminder."""
  reminders_add(
    """Authentication token. Requires scope: `reminders:write`"""
    token: String!
  ): reminders_add_response

  """Marks a reminder as complete."""
  reminders_complete(
    """Authentication token. Requires scope: `reminders:write`"""
    token: String
  ): reminders_complete_response

  """Deletes a reminder."""
  reminders_delete(
    """Authentication token. Requires scope: `reminders:write`"""
    token: String
  ): reminders_delete_response

  """Adds a star to an item."""
  stars_add(
    """Authentication token. Requires scope: `stars:write`"""
    token: String!
  ): stars_add_response

  """Removes a star from an item."""
  stars_remove(
    """Authentication token. Requires scope: `stars:write`"""
    token: String!
  ): stars_remove_response

  """Create a User Group"""
  usergroups_create(
    """Authentication token. Requires scope: `usergroups:write`"""
    token: String!
  ): usergroups_create_response

  """Disable an existing User Group"""
  usergroups_disable(
    """Authentication token. Requires scope: `usergroups:write`"""
    token: String!
  ): usergroups_disable_response

  """Enable a User Group"""
  usergroups_enable(
    """Authentication token. Requires scope: `usergroups:write`"""
    token: String!
  ): usergroups_enable_response

  """Update an existing User Group"""
  usergroups_update(
    """Authentication token. Requires scope: `usergroups:write`"""
    token: String!
  ): usergroups_update_response

  """Update the list of users for a User Group"""
  usergroups_users_update(
    """Authentication token. Requires scope: `usergroups:write`"""
    token: String!
  ): usergroups_users_update_response

  """Delete the user profile photo"""
  users_deletePhoto: users_deletePhoto_response

  """Set the profile information for a user."""
  users_profile_set(
    """Authentication token. Requires scope: `users.profile:write`"""
    token: String!
  ): users_profile_set_response

  """Marked a user as active. Deprecated and non-functional."""
  users_setActive(
    """Authentication token. Requires scope: `users:write`"""
    token: String!
  ): users_setActive_response

  """Set the user profile photo"""
  users_setPhoto: users_setPhoto_response

  """Manually sets user presence."""
  users_setPresence(
    """Authentication token. Requires scope: `users:write`"""
    token: String!
  ): users_setPresence_response
}

union admin_apps_approve_response = Default_success_template | Default_error_template

union admin_apps_restrict_response = Default_success_template | Default_error_template

union admin_conversations_archive_response = admin_conversations_archive_schema | admin_conversations_archive_error_schema

"""Schema for successful response of admin.conversations.archive"""
type admin_conversations_archive_schema {
  ok: Boolean!
}

"""Schema for error response from admin.conversations.archive"""
type admin_conversations_archive_error_schema {
  error: mutation_admin_conversations_archive_oneOf_1_error!
  ok: Boolean!
}

enum mutation_admin_conversations_archive_oneOf_1_error {
  feature_not_enabled
  channel_not_found
  channel_type_not_supported
  default_org_wide_channel
  already_archived
  cant_archive_general
  restricted_action
  could_not_archive_channel
}

union admin_conversations_convertToPrivate_response = admin_conversations_convertToPrivate_schema | admin_conversations_convertToPrivate_error_schema

"""Schema for successful response of admin.conversations.convertToPrivate"""
type admin_conversations_convertToPrivate_schema {
  ok: Boolean!
}

"""Schema for error response from admin.conversations.convertToPrivate"""
type admin_conversations_convertToPrivate_error_schema {
  error: mutation_admin_conversations_convertToPrivate_oneOf_1_error!
  ok: Boolean!
}

enum mutation_admin_conversations_convertToPrivate_oneOf_1_error {
  feature_not_enabled
  restricted_action
  name_taken
  channel_not_found
  channel_type_not_supported
  default_org_wide_channel
  method_not_supported_for_channel_type
  could_not_convert_channel
  external_channel_migrating
}

union admin_conversations_create_response = admin_conversations_create_schema | admin_conversations_create_error_schema

"""Schema for successful response of admin.conversations.create"""
type admin_conversations_create_schema {
  channel_id: Channel_ID
  ok: Boolean!
}

"""Schema for error response from admin.conversations.create"""
type admin_conversations_create_error_schema {
  error: mutation_admin_conversations_create_oneOf_1_error!
  ok: Boolean!
}

enum mutation_admin_conversations_create_oneOf_1_error {
  feature_not_enabled
  name_taken
  restricted_action
  team_not_found
  invalid_team
  invalid_name
  could_not_create_channel
  team_id_or_org_required
}

union admin_conversations_delete_response = admin_conversations_delete_schema | admin_conversations_delete_error_schema

"""Schema for successful response of admin.conversations.delete"""
type admin_conversations_delete_schema {
  ok: Boolean!
}

"""Schema for error response from admin.conversations.delete"""
type admin_conversations_delete_error_schema {
  error: mutation_admin_conversations_delete_oneOf_1_error!
  ok: Boolean!
}

enum mutation_admin_conversations_delete_oneOf_1_error {
  feature_not_enabled
  not_an_admin
  channel_not_found
  channel_type_not_supported
  default_org_wide_channel
  restricted_action
  could_not_delete_channel
  missing_scope
}

union admin_conversations_disconnectShared_response = admin_conversations_rename_schema | admin_conversations_disconnectShared_error_schema

"""Schema for successful response of admin.conversations.disconnectShared"""
type admin_conversations_rename_schema {
  ok: Boolean!
}

"""Schema for error response from admin.conversations.disconnectShared"""
type admin_conversations_disconnectShared_error_schema {
  error: mutation_admin_conversations_disconnectShared_oneOf_1_error!
  ok: Boolean!
}

enum mutation_admin_conversations_disconnectShared_oneOf_1_error {
  feature_not_enabled
  not_an_admin
  not_an_enterprise
  channel_not_found
  not_supported
  team_not_found
  restricted_action
  missing_scope
  leaving_team_not_in_channel
  no_teams_to_disconnect
  leaving_team_required
  cannot_kick_team
  cannot_kick_home_team
}

union admin_conversations_invite_response = admin_conversations_invite_schema | admin_conversations_invite_error_schema

"""Schema for successful response of admin.conversations.invite"""
type admin_conversations_invite_schema {
  ok: Boolean!
}

"""Schema for error response from admin.conversations.invite"""
type admin_conversations_invite_error_schema {
  error: mutation_admin_conversations_invite_oneOf_1_error!
  ok: Boolean!
  additionalProperties: JSON
}

enum mutation_admin_conversations_invite_oneOf_1_error {
  feature_not_enabled
  channel_not_found
  channel_type_not_supported
  default_org_wide_channel
  restricted_action
  user_must_be_admin
  failed_for_some_users
}

union admin_conversations_rename_response = mutation_admin_conversations_rename_oneOf_0 | admin_conversations_unarchive_error_schema

"""Schema for successful response of admin.conversations.rename"""
type mutation_admin_conversations_rename_oneOf_0 {
  ok: Boolean!
}

"""Schema for error response from admin.conversations.rename"""
type admin_conversations_unarchive_error_schema {
  error: mutation_admin_conversations_rename_oneOf_1_error!
  ok: Boolean!
}

enum mutation_admin_conversations_rename_oneOf_1_error {
  feature_not_enabled
  channel_not_found
  channel_type_not_supported
  restricted_action
  could_not_rename_channel
  default_org_wide_channel
  name_taken
}

union admin_conversations_restrictAccess_addGroup_response = Default_success_template | Default_error_template

union admin_conversations_restrictAccess_removeGroup_response = Default_success_template | Default_error_template

union admin_conversations_setConversationPrefs_response = admin_conversations_setConversationPrefs_schema | admin_conversations_setConversationPrefs_error_schema

"""
Schema for successful response of admin.conversations.setConversationPrefs
"""
type admin_conversations_setConversationPrefs_schema {
  ok: Boolean!
}

"""
Schema for error response from admin.conversations.setConversationPrefs
"""
type admin_conversations_setConversationPrefs_error_schema {
  error: mutation_admin_conversations_setConversationPrefs_oneOf_1_error!
  ok: Boolean!
}

enum mutation_admin_conversations_setConversationPrefs_oneOf_1_error {
  feature_not_enabled
  not_an_admin
  channel_not_found
  channel_type_not_supported
  restricted_action
  missing_scope
  could_not_set_channel_pref
  default_org_wide_channel
}

union admin_conversations_setTeams_response = Default_success_template | Default_error_template

union admin_conversations_unarchive_response = admin_conversations_unarchive_schema | mutation_admin_conversations_unarchive_oneOf_1

"""Schema for successful response of admin.conversations.unarchive"""
type admin_conversations_unarchive_schema {
  ok: Boolean!
}

"""Schema for error response from admin.conversations.unarchive"""
type mutation_admin_conversations_unarchive_oneOf_1 {
  error: mutation_admin_conversations_unarchive_oneOf_1_error!
  ok: Boolean!
}

enum mutation_admin_conversations_unarchive_oneOf_1_error {
  feature_not_enabled
  channel_not_found
  channel_not_archived
  channel_type_not_supported
  restricted_action
  could_not_unarchive_channel
  default_org_wide_channel
  missing_scope
}

union admin_emoji_add_response = Default_success_template | Default_error_template

union admin_emoji_addAlias_response = Default_success_template | Default_error_template

union admin_emoji_remove_response = Default_success_template | Default_error_template

union admin_emoji_rename_response = Default_success_template | Default_error_template

union admin_inviteRequests_approve_response = Default_success_template | Default_error_template

union admin_inviteRequests_deny_response = Default_success_template | Default_error_template

union admin_teams_create_response = Default_success_template | Default_error_template

union admin_teams_settings_setDefaultChannels_response = Default_success_template | Default_error_template

union admin_teams_settings_setDescription_response = Default_success_template | Default_error_template

union admin_teams_settings_setDiscoverability_response = Default_success_template | Default_error_template

union admin_teams_settings_setIcon_response = Default_success_template | Default_error_template

union admin_teams_settings_setName_response = Default_success_template | Default_error_template

union admin_usergroups_addChannels_response = Default_success_template | Default_error_template

union admin_usergroups_addTeams_response = Default_success_template | Default_error_template

union admin_usergroups_removeChannels_response = Default_success_template | Default_error_template

union admin_users_assign_response = Default_success_template | Default_error_template

union admin_users_invite_response = Default_success_template | Default_error_template

union admin_users_remove_response = Default_success_template | Default_error_template

union admin_users_session_invalidate_response = Default_success_template | Default_error_template

union admin_users_session_reset_response = Default_success_template | Default_error_template

union admin_users_setAdmin_response = Default_success_template | Default_error_template

union admin_users_setExpiration_response = Default_success_template | Default_error_template

union admin_users_setOwner_response = Default_success_template | Default_error_template

union admin_users_setRegular_response = Default_success_template | Default_error_template

union calls_add_response = Default_success_template | Default_error_template

union calls_end_response = Default_success_template | Default_error_template

union calls_participants_add_response = Default_success_template | Default_error_template

union calls_participants_remove_response = Default_success_template | Default_error_template

union calls_update_response = Default_success_template | Default_error_template

union chat_delete_response = chat_delete_success_schema | chat_delete_error_schema

"""Schema for successful response of chat.delete method"""
type chat_delete_success_schema {
  channel: Channel_like_conversation_ID!
  ok: Boolean!
  ts: Timestamp_in_format_0123456789_012345!
}

"""Schema for error response from chat.delete method"""
type chat_delete_error_schema {
  """Note: PHP callstack is only visible in dev/qa"""
  callstack: String
  error: mutation_chat_delete_oneOf_1_error!
  ok: Boolean!
}

enum mutation_chat_delete_oneOf_1_error {
  message_not_found
  channel_not_found
  cant_delete_message
  compliance_exports_prevent_deletion
  not_authed
  invalid_auth
  account_inactive
  token_revoked
  no_permission
  invalid_arg_name
  invalid_array_arg
  invalid_charset
  invalid_form_data
  invalid_post_type
  missing_post_type
  team_added_to_org
  invalid_json
  json_not_object
  request_timeout
  upgrade_required
  fatal_error
}

union chat_deleteScheduledMessage_response = chat_deleteScheduledMessage_schema | chat_deleteScheduledMessage_error_schema

"""Schema for successful response from chat.deleteScheduledMessage method"""
type chat_deleteScheduledMessage_schema {
  ok: Boolean!
}

"""Schema for error response from chat.deleteScheduledMessage method"""
type chat_deleteScheduledMessage_error_schema {
  """Note: PHP callstack is only visible in dev/qa"""
  callstack: String
  error: mutation_chat_deleteScheduledMessage_oneOf_1_error!
  ok: Boolean!
}

enum mutation_chat_deleteScheduledMessage_oneOf_1_error {
  invalid_scheduled_message_id
  channel_not_found
  bad_token
  not_authed
  invalid_auth
  account_inactive
  token_revoked
  no_permission
  org_login_required
  ekm_access_denied
  missing_scope
  invalid_arguments
  invalid_arg_name
  invalid_charset
  invalid_form_data
  invalid_post_type
  missing_post_type
  team_added_to_org
  invalid_json
  json_not_object
  request_timeout
  upgrade_required
  fatal_error
}

union chat_meMessage_response = chat_meMessage_schema | chat_meMessage_error_schema

"""Schema for successful response from chat.meMessage method"""
type chat_meMessage_schema {
  channel: Channel_like_conversation_ID
  ok: Boolean!
  ts: Timestamp_in_format_0123456789_012345
}

"""Schema for error response from chat.meMessage method"""
type chat_meMessage_error_schema {
  """Note: PHP callstack is only visible in dev/qa"""
  callstack: String
  error: mutation_chat_meMessage_oneOf_1_error!
  ok: Boolean!
}

enum mutation_chat_meMessage_oneOf_1_error {
  channel_not_found
  not_in_channel
  is_archived
  msg_too_long
  no_text
  rate_limited
  not_authed
  invalid_auth
  account_inactive
  token_revoked
  no_permission
  org_login_required
  invalid_arg_name
  invalid_array_arg
  invalid_charset
  invalid_form_data
  invalid_post_type
  missing_post_type
  team_added_to_org
  invalid_json
  json_not_object
  request_timeout
  upgrade_required
  fatal_error
}

union chat_postEphemeral_response = chat_postEphemeral_success_schema | chat_postEphemeral_error_schema

"""Schema for successful response from chat.postEphemeral method"""
type chat_postEphemeral_success_schema {
  message_ts: Timestamp_in_format_0123456789_012345!
  ok: Boolean!
}

"""Schema for error response from chat.postEphemeral method"""
type chat_postEphemeral_error_schema {
  """Note: PHP callstack is only visible in dev/qa"""
  callstack: String
  error: mutation_chat_postEphemeral_oneOf_1_error!
  ok: Boolean!
}

enum mutation_chat_postEphemeral_oneOf_1_error {
  channel_not_found
  is_archived
  msg_too_long
  no_text
  restricted_action
  too_many_attachments
  user_not_in_channel
  not_authed
  invalid_auth
  account_inactive
  token_revoked
  no_permission
  org_login_required
  invalid_arg_name
  invalid_array_arg
  invalid_charset
  invalid_form_data
  invalid_post_type
  missing_post_type
  team_added_to_org
  invalid_json
  json_not_object
  request_timeout
  upgrade_required
  fatal_error
}

union chat_postMessage_response = chat_postMessage_success_schema | chat_postMessage_error_schema

"""Schema for successful response of chat.postMessage method"""
type chat_postMessage_success_schema {
  channel: Channel_like_conversation_ID!
  message: Message_object!
  ok: Boolean!
  ts: Timestamp_in_format_0123456789_012345!
}

"""Schema for error response chat.postMessage method"""
type chat_postMessage_error_schema {
  """Note: PHP callstack is only visible in dev/qa"""
  callstack: String
  error: mutation_chat_postMessage_oneOf_1_error!
  ok: Boolean!
}

enum mutation_chat_postMessage_oneOf_1_error {
  channel_not_found
  not_in_channel
  is_archived
  msg_too_long
  no_text
  too_many_attachments
  rate_limited
  not_authed
  invalid_auth
  account_inactive
  invalid_arg_name
  invalid_array_arg
  invalid_charset
  invalid_form_data
  invalid_post_type
  missing_post_type
}

union chat_scheduleMessage_response = chat_scheduleMessage_success_schema | chat_scheduleMessage_error_schema

"""Schema for successful response of chat.scheduleMessage method"""
type chat_scheduleMessage_success_schema {
  channel: Channel_like_conversation_ID!
  message: mutation_chat_scheduleMessage_oneOf_0_message!
  ok: Boolean!
  post_at: mutation_chat_scheduleMessage_oneOf_0_post_at!
  scheduled_message_id: Scheduled_Message_ID!
}

type mutation_chat_scheduleMessage_oneOf_0_message {
  bot_id: Bot_User_ID!
  bot_profile: Bot_Profile_Object
  team: Team_ID!
  text: String!
  type: String!
  user: User_ID!
  username: String
}

scalar mutation_chat_scheduleMessage_oneOf_0_post_at

scalar Scheduled_Message_ID

"""Schema for error response chat.scheduleMessage method"""
type chat_scheduleMessage_error_schema {
  """Note: PHP callstack is only visible in dev/qa"""
  callstack: String
  error: mutation_chat_scheduleMessage_oneOf_1_error!
  ok: Boolean!
}

enum mutation_chat_scheduleMessage_oneOf_1_error {
  invalid_time
  time_in_past
  time_too_far
  channel_not_found
  not_in_channel
  is_archived
  msg_too_long
  no_text
  restricted_action
  restricted_action_read_only_channel
  restricted_action_thread_only_channel
  restricted_action_non_threadable_channel
  too_many_attachments
  rate_limited
  not_authed
  invalid_auth
  account_inactive
  token_revoked
  no_permission
  org_login_required
  ekm_access_denied
  missing_scope
  invalid_arguments
  invalid_arg_name
  invalid_charset
  invalid_form_data
  invalid_post_type
  missing_post_type
  team_added_to_org
  invalid_json
  json_not_object
  request_timeout
  upgrade_required
  fatal_error
}

union chat_unfurl_response = chat_unfurl_success_schema | chat_unfurl_error_schema

"""Schema for successful response from chat.unfurl method"""
type chat_unfurl_success_schema {
  ok: Boolean!
}

"""Schema for error response from chat.unfurl method"""
type chat_unfurl_error_schema {
  """Note: PHP callstack is only visible in dev/qa"""
  callstack: String
  error: mutation_chat_unfurl_oneOf_1_error!
  ok: Boolean!
}

enum mutation_chat_unfurl_oneOf_1_error {
  cannot_unfurl_url
  cannot_find_service
  missing_unfurls
  cannot_prompt
  not_authed
  invalid_auth
  account_inactive
  token_revoked
  no_permission
  org_login_required
  user_is_bot
  invalid_arg_name
  invalid_array_arg
  invalid_charset
  invalid_form_data
  invalid_post_type
  missing_post_type
  team_added_to_org
  invalid_json
  json_not_object
  request_timeout
  upgrade_required
  fatal_error
}

union chat_update_response = chat_update_success_schema | chat_update_error_schema

"""Schema for successful response of chat.update method"""
type chat_update_success_schema {
  channel: String!
  message: mutation_chat_update_oneOf_0_message!
  ok: Boolean!
  text: String!
  ts: String!
}

type mutation_chat_update_oneOf_0_message {
  attachments: [JSON]
  blocks: JSON
  text: String!
}

"""Schema for error response chat.update method"""
type chat_update_error_schema {
  """Note: PHP callstack is only visible in dev/qa"""
  callstack: String
  error: mutation_chat_update_oneOf_1_error!
  ok: Boolean!
}

enum mutation_chat_update_oneOf_1_error {
  message_not_found
  cant_update_message
  channel_not_found
  edit_window_closed
  msg_too_long
  too_many_attachments
  rate_limited
  no_text
  not_authed
  invalid_auth
  account_inactive
  token_revoked
  no_permission
  invalid_arg_name
  invalid_array_arg
  invalid_charset
  invalid_form_data
  invalid_post_type
  missing_post_type
  request_timeout
  invalid_json
  json_not_object
  upgrade_required
  fatal_error
  is_inactive
}

union conversations_archive_response = conversations_archive_success_schema | conversations_archive_error_schema

"""Schema for successful response conversations.archive method"""
type conversations_archive_success_schema {
  ok: Boolean!
}

"""Schema for error response from conversations.archive method"""
type conversations_archive_error_schema {
  """Note: PHP callstack is only visible in dev/qa"""
  callstack: String
  error: mutation_conversations_archive_oneOf_1_error!
  needed: String
  ok: Boolean!
  provided: String
}

enum mutation_conversations_archive_oneOf_1_error {
  method_not_supported_for_channel_type
  missing_scope
  not_supported
  channel_not_found
  already_archived
  cant_archive_general
  restricted_action
  not_authed
  invalid_auth
  account_inactive
  user_is_bot
  user_is_restricted
  user_is_ultra_restricted
  invalid_arg_name
  invalid_array_arg
  invalid_charset
  invalid_form_data
  invalid_post_type
  missing_post_type
  invalid_json
  json_not_object
  request_timeout
  upgrade_required
  team_added_to_org
  missing_charset
  superfluous_charset
}

union conversations_close_response = conversations_close_success_schema | conversations_close_error_schema

"""Schema for successful response conversations.close method"""
type conversations_close_success_schema {
  already_closed: Boolean
  no_op: Boolean
  ok: Boolean!
}

"""Schema for error response from conversations.close method"""
type conversations_close_error_schema {
  """Note: PHP callstack is only visible in dev/qa"""
  callstack: String
  error: mutation_conversations_close_oneOf_1_error!
  needed: String
  ok: Boolean!
  provided: String
}

enum mutation_conversations_close_oneOf_1_error {
  method_not_supported_for_channel_type
  channel_not_found
  user_does_not_own_channel
  missing_scope
  not_authed
  invalid_auth
  account_inactive
  invalid_arg_name
  invalid_array_arg
  invalid_charset
  invalid_form_data
  invalid_post_type
  missing_post_type
  team_added_to_org
  invalid_json
  json_not_object
  request_timeout
  upgrade_required
}

union conversations_create_response = conversations_create_success_schema | conversations_create_error_schema

"""Schema for successful response conversations.create method"""
type conversations_create_success_schema {
  channel: [mutation_conversations_create_oneOf_0_channel_items]!
  ok: Boolean!
}

"""Schema for error response from conversations.create method"""
type conversations_create_error_schema {
  """Note: PHP callstack is only visible in dev/qa"""
  callstack: String
  detail: String
  error: mutation_conversations_create_oneOf_1_error!
  needed: String
  ok: Boolean!
  provided: String
}

enum mutation_conversations_create_oneOf_1_error {
  method_not_supported_for_channel_type
  missing_scope
  name_taken
  restricted_action
  no_channel
  invalid_name_required
  invalid_name_punctuation
  invalid_name_maxlength
  invalid_name_specials
  invalid_name
  not_authed
  invalid_auth
  account_inactive
  user_is_bot
  user_is_restricted
  invalid_arg_name
  invalid_array_arg
  invalid_charset
  invalid_form_data
  invalid_post_type
  missing_post_type
  team_added_to_org
  invalid_json
  json_not_object
  request_timeout
  upgrade_required
}

union conversations_invite_response = conversations_invite_error_schema | mutation_conversations_invite_oneOf_1

"""Schema for successful response from conversations.invite method"""
type conversations_invite_error_schema {
  channel: [mutation_conversations_create_oneOf_0_channel_items]!
  ok: Boolean!
}

"""Schema for error response from conversations.invite method"""
type mutation_conversations_invite_oneOf_1 {
  """Note: PHP callstack is only visible in dev/qa"""
  callstack: String
  error: mutation_conversations_invite_oneOf_1_error
  errors: [mutation_conversations_invite_oneOf_1_errors_items]
  needed: String
  ok: Boolean!
  provided: String
}

enum mutation_conversations_invite_oneOf_1_error {
  method_not_supported_for_channel_type
  missing_scope
  channel_not_found
  user_not_found
  no_user
  cant_invite_self
  not_in_channel
  already_in_channel
  is_archived
  cant_invite
  too_many_users
  ura_max_channels
  not_authed
  invalid_auth
  account_inactive
  user_is_bot
  user_is_restricted
  user_is_ultra_restricted
  invalid_arg_name
  invalid_array_arg
  invalid_charset
  invalid_form_data
  invalid_post_type
  missing_post_type
  invalid_json
  json_not_object
  request_timeout
  upgrade_required
  team_added_to_org
  missing_charset
  superfluous_charset
}

type mutation_conversations_invite_oneOf_1_errors_items {
  error: mutation_conversations_invite_oneOf_1_errors_items_error!
  ok: Boolean!
  user: User_ID
}

enum mutation_conversations_invite_oneOf_1_errors_items_error {
  method_not_supported_for_channel_type
  missing_scope
  channel_not_found
  user_not_found
  no_user
  cant_invite_self
  not_in_channel
  already_in_channel
  is_archived
  cant_invite
  too_many_users
  ura_max_channels
  not_authed
  invalid_auth
  account_inactive
  user_is_bot
  user_is_restricted
  user_is_ultra_restricted
  invalid_arg_name
  invalid_array_arg
  invalid_charset
  invalid_form_data
  invalid_post_type
  missing_post_type
  invalid_json
  json_not_object
  request_timeout
  upgrade_required
  team_added_to_org
  missing_charset
  superfluous_charset
}

union conversations_join_response = conversations_join_success_schema | conversations_join_error_schema

"""Schema for successful response from conversations.join method"""
type conversations_join_success_schema {
  channel: [mutation_conversations_create_oneOf_0_channel_items]!
  ok: Boolean!
  response_metadata: Response_metadata
  warning: String
}

type Response_metadata {
  warnings: [String]
}

"""Schema for error response from conversations.join method"""
type conversations_join_error_schema {
  """Note: PHP callstack is only visible in dev/qa"""
  callstack: String
  error: mutation_conversations_join_oneOf_1_error!
  needed: String
  ok: Boolean!
  provided: String
}

enum mutation_conversations_join_oneOf_1_error {
  method_not_supported_for_channel_type
  missing_scope
  channel_not_found
  is_archived
  not_authed
  invalid_auth
  account_inactive
  user_is_bot
  user_is_restricted
  user_is_ultra_restricted
  invalid_arg_name
  invalid_array_arg
  invalid_charset
  invalid_form_data
  invalid_post_type
  missing_post_type
  invalid_json
  json_not_object
  request_timeout
  upgrade_required
  team_added_to_org
  missing_charset
  superfluous_charset
}

union conversations_kick_response = conversations_kick_success_schema | conversations_kick_error_schema

"""Schema for successful response conversations.kick method"""
type conversations_kick_success_schema {
  ok: Boolean!
}

"""Schema for error response conversations.kick method"""
type conversations_kick_error_schema {
  """Note: PHP callstack is only visible in dev/qa"""
  callstack: String
  error: mutation_conversations_kick_oneOf_1_error!
  needed: String
  ok: Boolean!
  provided: String
}

enum mutation_conversations_kick_oneOf_1_error {
  method_not_supported_for_channel_type
  missing_scope
  channel_not_found
  user_not_found
  cant_kick_self
  not_in_channel
  cant_kick_from_general
  restricted_action
  not_authed
  invalid_auth
  account_inactive
  user_is_bot
  user_is_restricted
  invalid_arg_name
  invalid_array_arg
  invalid_charset
  invalid_form_data
  invalid_post_type
  missing_post_type
  invalid_json
  json_not_object
  request_timeout
  upgrade_required
}

union conversations_leave_response = conversations_leave_success_schema | conversations_leave_error_schema

"""Schema for successful response from conversations.leave method"""
type conversations_leave_success_schema {
  not_in_channel: Boolean
  ok: Boolean!
}

"""Schema for error response from conversations.leave method"""
type conversations_leave_error_schema {
  """Note: PHP callstack is only visible in dev/qa"""
  callstack: String
  error: mutation_conversations_leave_oneOf_1_error!
  needed: String
  ok: Boolean!
  provided: String
}

enum mutation_conversations_leave_oneOf_1_error {
  method_not_supported_for_channel_type
  last_member
  missing_scope
  channel_not_found
  is_archived
  cant_leave_general
  not_authed
  invalid_auth
  account_inactive
  user_is_bot
  user_is_restricted
  user_is_ultra_restricted
  invalid_arg_name
  invalid_array_arg
  invalid_charset
  invalid_form_data
  invalid_post_type
  missing_post_type
  invalid_json
  json_not_object
  request_timeout
  upgrade_required
  team_added_to_org
  missing_charset
  superfluous_charset
}

union conversations_mark_response = conversations_mark_success_schema | conversations_mark_error_schema

"""Schema for successful response conversations.mark method"""
type conversations_mark_success_schema {
  ok: Boolean!
}

"""Schema for error response from conversations.mark method"""
type conversations_mark_error_schema {
  """Note: PHP callstack is only visible in dev/qa"""
  callstack: String
  error: mutation_conversations_mark_oneOf_1_error!
  needed: String
  ok: Boolean!
  provided: String
}

enum mutation_conversations_mark_oneOf_1_error {
  method_not_supported_for_channel_type
  missing_scope
  channel_not_found
  invalid_timestamp
  not_in_channel
  not_authed
  invalid_auth
  account_inactive
  invalid_arg_name
  invalid_array_arg
  invalid_charset
  invalid_form_data
  invalid_post_type
  missing_post_type
  invalid_json
  json_not_object
  request_timeout
  upgrade_required
  not_allowed_token_type
}

union conversations_open_response = conversations_open_success_schema | conversations_open_error_schema

"""
Schema for successful response from conversations.open method when opening channels, ims, mpims
"""
type conversations_open_success_schema {
  already_open: Boolean
  channel: [[mutation_conversations_open_oneOf_0_channel_items]]!
  no_op: Boolean
  ok: Boolean!
}

union mutation_conversations_open_oneOf_0_channel_items = Conversation_object | Conversation_MPIM_Object | Conversation_IM_Channel_Object_from_conversations__STAR__methods | mutation_conversations_open_oneOf_0_channel_items_oneOf_1

type mutation_conversations_open_oneOf_0_channel_items_oneOf_1 {
  created: String
  id: Direct_Message_Channel_ID!
  is_im: Boolean
  is_open: Boolean
  last_read: Timestamp_in_format_0123456789_012345
  latest: Message_object
  unread_count: Float
  unread_count_display: Float
  user: User_ID
}

"""Schema for error response from conversations.open method"""
type conversations_open_error_schema {
  """Note: PHP callstack is only visible in dev/qa"""
  callstack: String
  error: mutation_conversations_open_oneOf_1_error!
  ok: Boolean!
}

enum mutation_conversations_open_oneOf_1_error {
  method_not_supported_for_channel_type
  user_not_found
  user_not_visible
  user_disabled
  users_list_not_supplied
  not_enough_users
  too_many_users
  invalid_user_combination
  not_authed
  invalid_auth
  account_inactive
  invalid_arg_name
  invalid_array_arg
  invalid_charset
  invalid_form_data
  invalid_post_type
  missing_post_type
  team_added_to_org
  invalid_json
  json_not_object
  request_timeout
  upgrade_required
  channel_not_found
}

union conversations_rename_response = conversations_rename_success_schema | conversations_rename_error_schema

"""Schema for successful response from conversations.rename method"""
type conversations_rename_success_schema {
  channel: [mutation_conversations_create_oneOf_0_channel_items]!
  ok: Boolean!
}

"""Schema for error response from conversations.rename method"""
type conversations_rename_error_schema {
  """Note: PHP callstack is only visible in dev/qa"""
  callstack: String
  error: mutation_conversations_rename_oneOf_1_error!
  needed: String
  ok: Boolean!
  provided: String
}

enum mutation_conversations_rename_oneOf_1_error {
  user_is_restricted
  method_not_supported_for_channel_type
  missing_scope
  channel_not_found
  not_in_channel
  not_authorized
  invalid_name
  name_taken
  invalid_name_required
  invalid_name_punctuation
  invalid_name_maxlength
  invalid_name_specials
  not_authed
  invalid_auth
  account_inactive
  invalid_arg_name
  invalid_array_arg
  invalid_charset
  invalid_form_data
  invalid_post_type
  missing_post_type
  invalid_json
  json_not_object
  request_timeout
  upgrade_required
}

union conversations_setPurpose_response = conversations_setPurpose_success_schema | conversations_setPurpose_error_schema

"""Schema for successful response from conversations.setPurpose method"""
type conversations_setPurpose_success_schema {
  channel: [mutation_conversations_create_oneOf_0_channel_items]!
  ok: Boolean!
}

"""Schema for error response from conversations.setPurpose method"""
type conversations_setPurpose_error_schema {
  """Note: PHP callstack is only visible in dev/qa"""
  callstack: String
  error: mutation_conversations_setPurpose_oneOf_1_error!
  needed: String
  ok: Boolean!
  provided: String
}

enum mutation_conversations_setPurpose_oneOf_1_error {
  method_not_supported_for_channel_type
  missing_scope
  channel_not_found
  not_in_channel
  is_archived
  too_long
  user_is_restricted
  not_authed
  invalid_auth
  account_inactive
  invalid_arg_name
  invalid_array_arg
  invalid_charset
  invalid_form_data
  invalid_post_type
  missing_post_type
  team_added_to_org
  invalid_json
  json_not_object
  request_timeout
  upgrade_required
}

union conversations_setTopic_response = conversations_setTopic_success_schema | conversations_setTopic_error_schema

"""Schema for successful response from conversations.setTopic method"""
type conversations_setTopic_success_schema {
  channel: [mutation_conversations_create_oneOf_0_channel_items]!
  ok: Boolean!
}

"""Schema for error response from conversations.setTopic method"""
type conversations_setTopic_error_schema {
  """Note: PHP callstack is only visible in dev/qa"""
  callstack: String
  error: mutation_conversations_setTopic_oneOf_1_error!
  needed: String
  ok: Boolean!
  provided: String
}

enum mutation_conversations_setTopic_oneOf_1_error {
  method_not_supported_for_channel_type
  missing_scope
  channel_not_found
  not_in_channel
  is_archived
  too_long
  user_is_restricted
  not_authed
  invalid_auth
  account_inactive
  invalid_arg_name
  invalid_array_arg
  invalid_charset
  invalid_form_data
  invalid_post_type
  missing_post_type
  team_added_to_org
  invalid_json
  json_not_object
  request_timeout
  upgrade_required
}

union conversations_unarchive_response = conversations_unarchive_success_schema | conversations_unarchive_error_schema

"""Schema for successful response from conversations.unarchive method"""
type conversations_unarchive_success_schema {
  ok: Boolean!
}

"""Schema for error response from conversations.unarchive method"""
type conversations_unarchive_error_schema {
  """Note: PHP callstack is only visible in dev/qa"""
  callstack: String
  error: mutation_conversations_unarchive_oneOf_1_error!
  needed: String
  ok: Boolean!
  provided: String
}

enum mutation_conversations_unarchive_oneOf_1_error {
  method_not_supported_for_channel_type
  missing_scope
  channel_not_found
  not_archived
  not_authed
  invalid_auth
  account_inactive
  user_is_bot
  user_is_restricted
  user_is_ultra_restricted
  invalid_arg_name
  invalid_array_arg
  invalid_charset
  invalid_form_data
  invalid_post_type
  missing_post_type
  invalid_json
  json_not_object
  request_timeout
  upgrade_required
  team_added_to_org
  missing_charset
  superfluous_charset
}

union dnd_endDnd_response = dnd_endDnd_schema | dnd_endDnd_error_schema

"""Schema for successful response from dnd.endDnd method"""
type dnd_endDnd_schema {
  ok: Boolean!
}

"""Schema for error response from dnd.endDnd method"""
type dnd_endDnd_error_schema {
  """Note: PHP callstack is only visible in dev/qa"""
  callstack: String
  error: mutation_dnd_endDnd_oneOf_1_error!
  ok: Boolean!
}

enum mutation_dnd_endDnd_oneOf_1_error {
  unknown_error
  not_authed
  invalid_auth
  account_inactive
  token_revoked
  no_permission
  org_login_required
  user_is_bot
  invalid_arg_name
  invalid_array_arg
  invalid_charset
  invalid_form_data
  invalid_post_type
  missing_post_type
  team_added_to_org
  invalid_json
  json_not_object
  request_timeout
  upgrade_required
  fatal_error
}

union dnd_endSnooze_response = dnd_endSnooze_schema | dnd_endSnooze_error_schema

"""Schema for successful response from dnd.endSnooze method"""
type dnd_endSnooze_schema {
  dnd_enabled: Boolean!
  next_dnd_end_ts: Int!
  next_dnd_start_ts: Int!
  ok: Boolean!
  snooze_enabled: Boolean!
}

"""Schema for error response from dnd.endSnooze method"""
type dnd_endSnooze_error_schema {
  """Note: PHP callstack is only visible in dev/qa"""
  callstack: String
  error: mutation_dnd_endSnooze_oneOf_1_error!
  ok: Boolean!
}

enum mutation_dnd_endSnooze_oneOf_1_error {
  snooze_not_active
  snooze_end_failed
  not_authed
  invalid_auth
  account_inactive
  token_revoked
  no_permission
  org_login_required
  user_is_bot
  invalid_arg_name
  invalid_array_arg
  invalid_charset
  invalid_form_data
  invalid_post_type
  missing_post_type
  team_added_to_org
  invalid_json
  json_not_object
  request_timeout
  upgrade_required
  fatal_error
}

union dnd_setSnooze_response = dnd_setSnooze_schema | dnd_setSnooze_error_schema

"""Schema for successful response from dnd.setSnooze method"""
type dnd_setSnooze_schema {
  ok: Boolean!
  snooze_enabled: Boolean!
  snooze_endtime: Int!
  snooze_remaining: Int!
}

"""Schema for error response from dnd.setSnooze method"""
type dnd_setSnooze_error_schema {
  """Note: PHP callstack is only visible in dev/qa"""
  callstack: String
  error: mutation_dnd_setSnooze_oneOf_1_error!
  ok: Boolean!
}

enum mutation_dnd_setSnooze_oneOf_1_error {
  missing_duration
  snooze_failed
  not_authed
  invalid_auth
  account_inactive
  token_revoked
  no_permission
  org_login_required
  user_is_bot
  invalid_arg_name
  invalid_array_arg
  invalid_charset
  invalid_form_data
  invalid_post_type
  missing_post_type
  team_added_to_org
  invalid_json
  json_not_object
  request_timeout
  upgrade_required
  too_long
  fatal_error
}

union files_comments_delete_response = files_comments_delete_schema | files_comments_delete_error_schema

"""Schema for successful response files.comments.delete method"""
type files_comments_delete_schema {
  ok: Boolean!
}

"""Schema for error response files.comments.delete method"""
type files_comments_delete_error_schema {
  """Note: PHP callstack is only visible in dev/qa"""
  callstack: String
  error: mutation_files_comments_delete_oneOf_1_error!
  ok: Boolean!
}

enum mutation_files_comments_delete_oneOf_1_error {
  cant_delete
  comment_not_found
  not_authed
  invalid_auth
  account_inactive
  no_permission
  invalid_arg_name
  invalid_array_arg
  invalid_charset
  invalid_form_data
  invalid_post_type
  missing_post_type
  invalid_json
  json_not_object
  request_timeout
  upgrade_required
}

union files_delete_response = files_delete_schema | files_delete_error_schema

"""Schema for successful response files.delete method"""
type files_delete_schema {
  ok: Boolean!
}

"""Schema for error response files.delete method"""
type files_delete_error_schema {
  """Note: PHP callstack is only visible in dev/qa"""
  callstack: String
  error: mutation_files_delete_oneOf_1_error!
  ok: Boolean!
}

enum mutation_files_delete_oneOf_1_error {
  file_not_found
  file_deleted
  cant_delete_file
  not_authed
  invalid_auth
  account_inactive
  no_permission
  invalid_arg_name
  invalid_array_arg
  invalid_charset
  invalid_form_data
  invalid_post_type
  missing_post_type
  team_added_to_org
  invalid_json
  json_not_object
  request_timeout
  upgrade_required
}

union files_remote_add_response = Default_success_template | Default_error_template

union files_remote_remove_response = Default_success_template | Default_error_template

union files_remote_update_response = Default_success_template | Default_error_template

union files_revokePublicURL_response = files_revokePublicURL_schema | files_revokePublicURL_error_schema

"""Schema for successful response from files.revokePublicURL method"""
type files_revokePublicURL_schema {
  file: file_object!
  ok: Boolean!
}

"""Schema for error response from files.revokePublicURL method"""
type files_revokePublicURL_error_schema {
  """Note: PHP callstack is only visible in dev/qa"""
  callstack: String
  error: mutation_files_revokePublicURL_oneOf_1_error!
  ok: Boolean!
}

enum mutation_files_revokePublicURL_oneOf_1_error {
  file_not_found
  not_authed
  invalid_auth
  account_inactive
  token_revoked
  no_permission
  org_login_required
  user_is_bot
  user_is_restricted
  invalid_arg_name
  invalid_array_arg
  invalid_charset
  invalid_form_data
  invalid_post_type
  missing_post_type
  team_added_to_org
  invalid_json
  json_not_object
  request_timeout
  upgrade_required
  fatal_error
}

union files_sharedPublicURL_response = files_sharedPublicURL_schema | files_sharedPublicURL_error_schema

"""Schema for successful response from files.sharedPublicURL method"""
type files_sharedPublicURL_schema {
  file: file_object!
  ok: Boolean!
}

"""Schema for error response from files.sharedPublicURL method"""
type files_sharedPublicURL_error_schema {
  """Note: PHP callstack is only visible in dev/qa"""
  callstack: String
  error: mutation_files_sharedPublicURL_oneOf_1_error!
  ok: Boolean!
}

enum mutation_files_sharedPublicURL_oneOf_1_error {
  file_not_found
  not_allowed
  not_authed
  invalid_auth
  account_inactive
  token_revoked
  no_permission
  org_login_required
  user_is_bot
  user_is_restricted
  invalid_arg_name
  invalid_array_arg
  invalid_charset
  invalid_form_data
  invalid_post_type
  missing_post_type
  team_added_to_org
  invalid_json
  json_not_object
  request_timeout
  upgrade_required
  fatal_error
}

union files_upload_response = files_upload_schema | files_upload_error_schema

"""Schema for successful response files.upload method"""
type files_upload_schema {
  file: file_object!
  ok: Boolean!
}

"""Schema for error response files.upload method"""
type files_upload_error_schema {
  """Note: PHP callstack is only visible in dev/qa"""
  callstack: String
  error: mutation_files_upload_oneOf_1_error!
  ok: Boolean!
}

enum mutation_files_upload_oneOf_1_error {
  posting_to_general_channel_denied
  invalid_channel
  file_uploads_disabled
  file_uploads_except_images_disabled
  storage_limit_reached
  not_authed
  invalid_auth
  account_inactive
  no_permission
  invalid_arg_name
  invalid_array_arg
  invalid_charset
  invalid_form_data
  invalid_post_type
  missing_post_type
  team_added_to_org
  invalid_json
  json_not_object
  request_timeout
  upgrade_required
}

union pins_add_response = pins_add_schema | pins_add_error_schema

"""Schema for successful response from pins.add method"""
type pins_add_schema {
  ok: Boolean!
}

"""Schema for error response from pins.add method"""
type pins_add_error_schema {
  """Note: PHP callstack is only visible in dev/qa"""
  callstack: String
  error: mutation_pins_add_oneOf_1_error!
  ok: Boolean!
}

enum mutation_pins_add_oneOf_1_error {
  bad_timestamp
  message_not_found
  channel_not_found
  no_item_specified
  already_pinned
  permission_denied
  file_not_shared
  not_pinnable
  not_authed
  invalid_auth
  account_inactive
  no_permission
  invalid_arg_name
  invalid_array_arg
  invalid_charset
  invalid_form_data
  invalid_post_type
  missing_post_type
  team_added_to_org
  invalid_json
  json_not_object
  request_timeout
  upgrade_required
}

union pins_remove_response = pins_remove_schema | pins_remove_error_schema

"""Schema for successful response from pins.remove method"""
type pins_remove_schema {
  ok: Boolean!
}

"""Schema for error response from pins.remove method"""
type pins_remove_error_schema {
  """Note: PHP callstack is only visible in dev/qa"""
  callstack: String
  error: mutation_pins_remove_oneOf_1_error!
  ok: Boolean!
}

enum mutation_pins_remove_oneOf_1_error {
  bad_timestamp
  file_not_found
  file_comment_not_found
  message_not_found
  no_item_specified
  not_pinned
  permission_denied
  not_authed
  invalid_auth
  account_inactive
  no_permission
  invalid_arg_name
  invalid_array_arg
  invalid_charset
  invalid_form_data
  invalid_post_typ
  missing_post_typ
  team_added_to_org
  invalid_json
  json_not_object
  request_timeou
  upgrade_required
}

union reactions_add_response = reactions_add_schema | reactions_add_error_schema

"""Schema for successful response from reactions.add method"""
type reactions_add_schema {
  ok: Boolean!
}

"""Schema for error response from reactions.add method"""
type reactions_add_error_schema {
  """Note: PHP callstack is only visible in dev/qa"""
  callstack: String
  error: mutation_reactions_add_oneOf_1_error!
  ok: Boolean!
}

enum mutation_reactions_add_oneOf_1_error {
  bad_timestamp
  message_not_found
  no_item_specified
  invalid_name
  already_reacted
  too_many_emoji
  too_many_reactions
  not_authed
  invalid_auth
  account_inactive
  no_permission
  invalid_arg_name
  invalid_array_arg
  invalid_charset
  invalid_form_data
  invalid_post_type
  missing_post_type
  team_added_to_org
  invalid_json
  json_not_object
  request_timeout
  upgrade_required
}

union reactions_remove_response = reactions_remove_schema | reactions_remove_error_schema

"""Schema for successful response from reactions.remove method"""
type reactions_remove_schema {
  ok: Boolean!
}

"""Schema for error response from reactions.remove method"""
type reactions_remove_error_schema {
  """Note: PHP callstack is only visible in dev/qa"""
  callstack: String
  error: mutation_reactions_remove_oneOf_1_error!
  ok: Boolean!
}

enum mutation_reactions_remove_oneOf_1_error {
  bad_timestamp
  file_not_found
  file_comment_not_found
  message_not_found
  no_item_specified
  invalid_name
  no_reaction
  not_authed
  invalid_auth
  account_inactive
  no_permission
  invalid_arg_name
  invalid_array_arg
  invalid_charset
  invalid_form_data
  invalid_post_type
  missing_post_type
  team_added_to_org
  invalid_json
  json_not_object
  request_timeout
  upgrade_required
  fatal_error
}

union reminders_add_response = reminders_add_schema | reminders_add_error_schema

"""Schema for successful response from reminders.add method"""
type reminders_add_schema {
  ok: Boolean!
  reminder: objs_reminder!
}

"""Schema for error response from reminders.add method"""
type reminders_add_error_schema {
  """Note: PHP callstack is only visible in dev/qa"""
  callstack: String
  error: mutation_reminders_add_oneOf_1_error!
  ok: Boolean!
}

enum mutation_reminders_add_oneOf_1_error {
  cannot_parse
  user_not_found
  cannot_add_bot
  cannot_add_slackbot
  cannot_add_others
  cannot_add_others_recurring
  not_authed
  invalid_auth
  account_inactive
  token_revoked
  no_permission
  org_login_required
  user_is_bot
  invalid_arg_name
  invalid_array_arg
  invalid_charset
  invalid_form_data
  invalid_post_type
  missing_post_type
  team_added_to_org
  invalid_json
  json_not_object
  request_timeout
  upgrade_required
  fatal_error
}

union reminders_complete_response = reminders_complete_schema | reminders_complete_error_schema

"""Schema for successful response from reminders.complete method"""
type reminders_complete_schema {
  ok: Boolean!
}

"""Schema for error response from reminders.complete method"""
type reminders_complete_error_schema {
  """Note: PHP callstack is only visible in dev/qa"""
  callstack: String
  error: mutation_reminders_complete_oneOf_1_error!
  ok: Boolean!
}

enum mutation_reminders_complete_oneOf_1_error {
  not_found
  cannot_complete_recurring
  cannot_complete_others
  not_authed
  invalid_auth
  account_inactive
  token_revoked
  no_permission
  org_login_required
  user_is_bot
  invalid_arg_name
  invalid_array_arg
  invalid_charset
  invalid_form_data
  invalid_post_type
  missing_post_type
  team_added_to_org
  invalid_json
  json_not_object
  request_timeout
  upgrade_required
  fatal_error
}

union reminders_delete_response = reminders_delete_schema | reminders_delete_error_schema

"""Schema for successful response from reminders.delete method"""
type reminders_delete_schema {
  ok: Boolean!
}

"""Schema for error response from reminders.delete method"""
type reminders_delete_error_schema {
  """Note: PHP callstack is only visible in dev/qa"""
  callstack: String
  error: mutation_reminders_delete_oneOf_1_error!
  ok: Boolean!
}

enum mutation_reminders_delete_oneOf_1_error {
  not_found
  not_authed
  invalid_auth
  account_inactive
  token_revoked
  no_permission
  org_login_required
  user_is_bot
  invalid_arg_name
  invalid_array_arg
  invalid_charset
  invalid_form_data
  invalid_post_type
  missing_post_type
  team_added_to_org
  invalid_json
  json_not_object
  request_timeout
  upgrade_required
  fatal_error
}

union stars_add_response = stars_add_schema | stars_add_error_schema

"""Schema for successful response from stars.add method"""
type stars_add_schema {
  ok: Boolean!
}

"""Schema for error response from stars.add method"""
type stars_add_error_schema {
  """Note: PHP callstack is only visible in dev/qa"""
  callstack: String
  error: mutation_stars_add_oneOf_1_error!
  ok: Boolean!
}

enum mutation_stars_add_oneOf_1_error {
  bad_timestamp
  message_not_found
  file_not_found
  file_comment_not_found
  channel_not_found
  no_item_specified
  already_starred
  not_authed
  invalid_auth
  account_inactive
  token_revoked
  no_permission
  org_login_required
  invalid_arg_name
  invalid_array_arg
  invalid_charset
  invalid_form_data
  invalid_post_type
  missing_post_type
  team_added_to_org
  invalid_json
  json_not_object
  request_timeout
  upgrade_required
  fatal_error
}

union stars_remove_response = stars_remove_schema | stars_remove_error_schema

"""Schema for successful response from stars.remove method"""
type stars_remove_schema {
  ok: Boolean!
}

"""Schema for error response from stars.remove method"""
type stars_remove_error_schema {
  """Note: PHP callstack is only visible in dev/qa"""
  callstack: String
  error: mutation_stars_remove_oneOf_1_error!
  ok: Boolean!
}

enum mutation_stars_remove_oneOf_1_error {
  bad_timestamp
  message_not_found
  file_not_found
  file_comment_not_found
  channel_not_found
  no_item_specified
  not_starred
  not_authed
  invalid_auth
  account_inactive
  token_revoked
  no_permission
  org_login_required
  invalid_arg_name
  invalid_array_arg
  invalid_charset
  invalid_form_data
  invalid_post_type
  missing_post_type
  team_added_to_org
  invalid_json
  json_not_object
  request_timeout
  upgrade_required
  fatal_error
}

union usergroups_create_response = usergroups_create_schema | usergroups_create_error_schema

"""Schema for successful response from usergroups.create method"""
type usergroups_create_schema {
  ok: Boolean!
  usergroup: Subteam_Usergroup_Object!
}

"""Schema for error response from usergroups.create method"""
type usergroups_create_error_schema {
  """Note: PHP callstack is only visible in dev/qa"""
  callstack: String
  error: mutation_usergroups_create_oneOf_1_error!
  ok: Boolean!
}

enum mutation_usergroups_create_oneOf_1_error {
  permission_denied
  not_authed
  invalid_auth
  account_inactive
  token_revoked
  no_permission
  org_login_required
  user_is_bot
  user_is_restricted
  invalid_arg_name
  invalid_array_arg
  invalid_charset
  invalid_form_data
  invalid_post_type
  missing_post_type
  team_added_to_org
  invalid_json
  json_not_object
  request_timeout
  upgrade_required
  fatal_error
}

union usergroups_disable_response = usergroups_disable_schema | usergroups_disable_error_schema

"""Schema for successful response from usergroups.disable method"""
type usergroups_disable_schema {
  ok: Boolean!
  usergroup: Subteam_Usergroup_Object!
}

"""Schema for error response from usergroups.disable method"""
type usergroups_disable_error_schema {
  """Note: PHP callstack is only visible in dev/qa"""
  callstack: String
  error: mutation_usergroups_disable_oneOf_1_error!
  ok: Boolean!
}

enum mutation_usergroups_disable_oneOf_1_error {
  permission_denied
  not_authed
  invalid_auth
  account_inactive
  token_revoked
  no_permission
  org_login_required
  user_is_bot
  user_is_restricted
  invalid_arg_name
  invalid_array_arg
  invalid_charset
  invalid_form_data
  invalid_post_type
  missing_post_type
  team_added_to_org
  invalid_json
  json_not_object
  request_timeout
  upgrade_required
  fatal_error
}

union usergroups_enable_response = usergroups_enable_schema | usergroups_enable_error_schema

"""Schema for successful response from usergroups.enable method"""
type usergroups_enable_schema {
  ok: Boolean!
  usergroup: Subteam_Usergroup_Object!
}

"""Schema for error response from usergroups.enable method"""
type usergroups_enable_error_schema {
  """Note: PHP callstack is only visible in dev/qa"""
  callstack: String
  error: mutation_usergroups_enable_oneOf_1_error!
  ok: Boolean!
}

enum mutation_usergroups_enable_oneOf_1_error {
  not_authed
  invalid_auth
  account_inactive
  token_revoked
  no_permission
  org_login_required
  user_is_bot
  user_is_restricted
  invalid_arg_name
  invalid_array_arg
  invalid_charset
  invalid_form_data
  invalid_post_type
  missing_post_type
  team_added_to_org
  invalid_json
  json_not_object
  request_timeout
  upgrade_require
  fatal_error
  missing_charset
  superfluous_charset
}

union usergroups_update_response = usergroups_update_schema | usergroups_update_error_schema

"""Schema for successful response from usergroups.update method"""
type usergroups_update_schema {
  ok: Boolean!
  usergroup: Subteam_Usergroup_Object!
}

"""Schema for error response from usergroups.update method"""
type usergroups_update_error_schema {
  """Note: PHP callstack is only visible in dev/qa"""
  callstack: String
  error: mutation_usergroups_update_oneOf_1_error!
  ok: Boolean!
}

enum mutation_usergroups_update_oneOf_1_error {
  permission_denied
  not_authed
  invalid_auth
  account_inactive
  token_revoked
  no_permission
  org_login_required
  user_is_bot
  user_is_restricted
  invalid_arg_name
  invalid_array_arg
  invalid_charset
  invalid_form_data
  invalid_post_type
  missing_post_type
  team_added_to_org
  invalid_json
  json_not_object
  request_timeout
  upgrade_require
  fatal_error
  missing_charset
  superfluous_charset
}

union usergroups_users_update_response = usergroups_users_update_schema | usergroups_users_update_error_schema

"""Schema for successful response from usergroups.users.update method"""
type usergroups_users_update_schema {
  ok: Boolean!
  usergroup: Subteam_Usergroup_Object!
}

"""Schema for error response from usergroups.users.update method"""
type usergroups_users_update_error_schema {
  """Note: PHP callstack is only visible in dev/qa"""
  callstack: String
  error: mutation_usergroups_users_update_oneOf_1_error!
  ok: Boolean!
}

enum mutation_usergroups_users_update_oneOf_1_error {
  permission_denied
  not_authed
  invalid_auth
  account_inactive
  token_revoked
  no_permission
  org_login_required
  user_is_bot
  user_is_restricted
  invalid_arg_name
  invalid_array_arg
  invalid_charset
  invalid_form_data
  invalid_post_type
  missing_post_type
  team_added_to_org
  invalid_json
  json_not_object
  request_timeout
  upgrade_require
  fatal_error
  missing_charset
  superfluous_charset
}

union users_deletePhoto_response = users_deletePhoto_schema | users_deletePhoto_error_schema

"""Schema for successful response from users.deletePhoto method"""
type users_deletePhoto_schema {
  ok: Boolean!
}

"""Schema for error response from users.deletePhoto method"""
type users_deletePhoto_error_schema {
  """Note: PHP callstack is only visible in dev/qa"""
  callstack: String
  error: mutation_users_deletePhoto_oneOf_1_error!
  ok: Boolean!
}

enum mutation_users_deletePhoto_oneOf_1_error {
  not_authed
  invalid_auth
  account_inactive
  token_revoked
  no_permission
  org_login_required
  user_is_bot
  invalid_arg_name
  invalid_array_arg
  invalid_charset
  invalid_form_data
  invalid_post_type
  missing_post_type
  team_added_to_org
  invalid_json
  json_not_object
  request_timeout
  upgrade_required
  fatal_error
}

union users_profile_set_response = users_profile_set_schema | users_profile_set_error_schema

"""Schema for successful response from users.profile.set method"""
type users_profile_set_schema {
  email_pending: EmailAddress
  ok: Boolean!
  profile: User_profile_object!
  username: String!
}

"""Schema for error response from users.profile.set method"""
type users_profile_set_error_schema {
  """Note: PHP callstack is only visible in dev/qa"""
  callstack: String
  error: mutation_users_profile_set_oneOf_1_error!
  ok: Boolean!
}

enum mutation_users_profile_set_oneOf_1_error {
  reserved_name
  invalid_profile
  profile_set_failed
  not_admin
  not_app_admin
  cannot_update_admin_user
  not_authed
  invalid_auth
  account_inactive
  token_revoked
  no_permission
  org_login_required
  user_is_bot
  invalid_arg_name
  invalid_array_arg
  invalid_charset
  invalid_form_data
  invalid_post_type
  missing_post_type
  team_added_to_org
  invalid_json
  json_not_object
  request_timeout
  upgrade_required
  fatal_error
}

union users_setActive_response = users_setActive_schema | users_setActive_error_schema

"""Schema for successful response from users.setActive method"""
type users_setActive_schema {
  ok: Boolean!
}

"""Schema for error response from users.setActive method"""
type users_setActive_error_schema {
  """Note: PHP callstack is only visible in dev/qa"""
  callstack: String
  error: mutation_users_setActive_oneOf_1_error!
  ok: Boolean!
}

enum mutation_users_setActive_oneOf_1_error {
  not_authed
  invalid_auth
  account_inactive
  token_revoked
  no_permission
  org_login_required
  ekm_access_denied
  missing_scope
  invalid_arguments
  invalid_arg_name
  invalid_charset
  invalid_form_data
  invalid_post_type
  missing_post_type
  team_added_to_org
  request_timeout
  fatal_error
  internal_error
}

union users_setPhoto_response = users_setPhoto_schema | users_setPhoto_error_schema

"""Schema for successful response from users.setPhoto method"""
type users_setPhoto_schema {
  ok: Boolean!
  profile: mutation_users_setPhoto_oneOf_0_profile!
}

type mutation_users_setPhoto_oneOf_0_profile {
  avatar_hash: mutation_users_setPhoto_oneOf_0_profile_avatar_hash!
  image_1024: URL!
  image_192: URL!
  image_24: URL!
  image_32: URL!
  image_48: URL!
  image_512: URL!
  image_72: URL!
  image_original: URL!
}

scalar mutation_users_setPhoto_oneOf_0_profile_avatar_hash

"""Schema for error response from users.setPhoto method"""
type users_setPhoto_error_schema {
  """Note: PHP callstack is only visible in dev/qa"""
  callstack: String

  """possibly DEV/QA only"""
  debug_step: String

  """possibly DEV/QA only"""
  dims: String
  error: mutation_users_setPhoto_oneOf_1_error!
  ok: Boolean!

  """possibly DEV/QA only"""
  time_ident: Int
}

enum mutation_users_setPhoto_oneOf_1_error {
  bad_image
  too_large
  too_many_frames
  not_found
  not_authed
  invalid_auth
  account_inactive
  token_revoked
  no_permission
  org_login_required
  user_is_bot
  invalid_arg_name
  invalid_array_arg
  invalid_charset
  invalid_form_data
  invalid_post_type
  missing_post_type
  team_added_to_org
  invalid_json
  json_not_object
  request_timeout
  upgrade_required
  fatal_error
}

union users_setPresence_response = users_setPresence_schema | users_setPresence_error_schema

"""Schema for successful response from users.setPresence method"""
type users_setPresence_schema {
  ok: Boolean!
}

"""Schema for error response from users.setPresence method"""
type users_setPresence_error_schema {
  """Note: PHP callstack is only visible in dev/qa"""
  callstack: String
  error: mutation_users_setPresence_oneOf_1_error!
  ok: Boolean!
}

enum mutation_users_setPresence_oneOf_1_error {
  invalid_presence
  not_authed
  invalid_auth
  account_inactive
  token_revoked
  no_permission
  org_login_required
  invalid_arg_name
  invalid_array_arg
  invalid_charset
  invalid_form_data
  invalid_post_type
  missing_post_type
  team_added_to_org
  invalid_json
  json_not_object
  request_timeout
  upgrade_required
  fatal_error
}

scalar ObjMap

enum HTTPMethod {
  GET
  HEAD
  POST
  PUT
  DELETE
  CONNECT
  OPTIONS
  TRACE
  PATCH
}