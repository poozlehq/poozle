directive @resolveRoot on FIELD_DEFINITION

directive @enum(value: String) on ENUM_VALUE

directive @oneOf on OBJECT | INTERFACE

directive @statusCodeTypeName(typeName: String, statusCode: ID) repeatable on UNION

directive @resolveRootField(field: String) on FIELD_DEFINITION | ARGUMENT_DEFINITION | INPUT_FIELD_DEFINITION

directive @typescript(type: String) on SCALAR | ENUM

directive @example(value: ObjMap) repeatable on FIELD_DEFINITION | OBJECT | INPUT_OBJECT | ENUM | SCALAR

directive @globalOptions(sourceName: String, endpoint: String, operationHeaders: ObjMap, queryStringOptions: ObjMap, queryParams: ObjMap) on OBJECT

directive @httpOperation(path: String, operationSpecificHeaders: ObjMap, httpMethod: HTTPMethod, isBinary: Boolean, requestBaseBody: ObjMap, queryParamArgMap: ObjMap, queryStringOptionsByParam: ObjMap) on FIELD_DEFINITION

type Query {
  """Returns all activities assigned to a particular user."""
  getActivities(
    """
    The ID of the user whose activities will be fetched. If omitted, the user associated with the API token will be used. If 0, activities for all company users will be fetched based on the permission sets.
    """
    user_id: Int

    """
    The ID of the filter to use (will narrow down results if used together with `user_id` parameter)
    """
    filter_id: Int

    """
    The type of the activity, can be one type or multiple types separated by a comma. This is in correlation with the `key_string` parameter of ActivityTypes.
    """
    type: String

    """
    For pagination, the limit of entries to be returned. If not provided, 100 items will be returned.
    """
    limit: Int

    """
    For pagination, the position that represents the first result for the page
    """
    start: Int

    """
    Use the activity due date where you wish to begin fetching activities from. Insert due date in YYYY-MM-DD format.
    """
    start_date: Date

    """
    Use the activity due date where you wish to stop fetching activities from. Insert due date in YYYY-MM-DD format.
    """
    end_date: Date
    done: numberBoolean22
  ): getActivities

  """Returns the details of a specific activity."""
  getActivity(
    """The ID of the activity"""
    id: Int!
  ): getActivity

  """Returns all activity fields."""
  getActivityFields: fields

  """Returns all activity types."""
  getActivityTypes: getActivityTypes

  """Returns the add-ons for a single company."""
  getCompanyAddons: subscriptionAddons

  """Returns all call logs assigned to a particular user."""
  getUserCallLogs(
    """Pagination start"""
    start: Int

    """
    For pagination, the limit of entries to be returned. The upper limit is 50.
    """
    limit: Int
  ): getUserCallLogs

  """Returns details of a specific call log."""
  getCallLog(
    """The ID received when you create the call log"""
    id: String!
  ): getCallLog_response

  """
  Returns all supported currencies in given account which should be used when saving monetary values with other objects. The `code` parameter of the returning objects is the currency code according to ISO 4217 for all non-custom currencies.
  """
  getCurrencies(
    """
    Optional search term that is searched for from currency's name and/or code
    """
    term: String
  ): getCurrencies

  """
  Returns all deals. For more information, see the tutorial for <a href="https://pipedrive.readme.io/docs/getting-all-deals" target="_blank" rel="noopener noreferrer">getting all deals</a>.
  """
  getDeals(
    """
    If supplied, only deals matching the given user will be returned. However, `filter_id` and `owned_by_you` takes precedence over `user_id` when supplied.
    """
    user_id: Int

    """The ID of the filter to use"""
    filter_id: Int

    """If supplied, only deals within the given stage will be returned"""
    stage_id: Int
    status: queryInput_getDeals_status = all_not_deleted

    """Pagination start"""
    start: Int

    """Items shown per page"""
    limit: Int

    """
    The field names and sorting mode separated by a comma (`field_name_1 ASC`, `field_name_2 DESC`). Only first-level field keys are supported (no nested keys).
    """
    sort: String
    owned_by_you: queryInput_getDeals_owned_by_you
  ): getDeals

  """
  Searches all deals by title, notes and/or custom fields. This endpoint is a wrapper of <a href="https://developers.pipedrive.com/docs/api/v1/ItemSearch#searchItem">/v1/itemSearch</a> with a narrower OAuth scope. Found deals can be filtered by the person ID and the organization ID.
  """
  searchDeals(
    """
    The search term to look for. Minimum 2 characters (or 1 if using `exact_match`). Please note that the search term has to be URL encoded.
    """
    term: String!
    fields: queryInput_searchDeals_fields

    """
    When enabled, only full exact matches against the given term are returned. It is <b>not</b> case sensitive.
    """
    exact_match: Boolean

    """
    Will filter deals by the provided person ID. The upper limit of found deals associated with the person is 2000.
    """
    person_id: Int

    """
    Will filter deals by the provided organization ID. The upper limit of found deals associated with the organization is 2000.
    """
    organization_id: Int
    status: queryInput_searchDeals_status
    include_fields: deal_cc_email_const

    """
    Pagination start. Note that the pagination is based on main results and does not include related items when using `search_for_related_items` parameter.
    """
    start: Int

    """Items shown per page"""
    limit: Int
  ): searchDeals

  """Returns a summary of all the deals."""
  getDealsSummary(
    status: queryInput_getDealsSummary_status

    """
    <code>user_id</code> will not be considered. Only deals matching the given filter will be returned.
    """
    filter_id: Int

    """
    Only deals matching the given user will be returned. `user_id` will not be considered if you use `filter_id`.
    """
    user_id: Int

    """Only deals within the given stage will be returned"""
    stage_id: Int
  ): getDealsSummary

  """
  Returns open and won deals, grouped by a defined interval of time set in a date-type dealField (`field_key`) — e.g. when month is the chosen interval, and 3 months are asked starting from January 1st, 2012, deals are returned grouped into 3 groups — January, February and March — based on the value of the given `field_key`.
  """
  getDealsTimeline(
    """The date when the first interval starts. Format: YYYY-MM-DD"""
    start_date: Date!
    interval: queryInput_getDealsTimeline_interval!

    """
    The number of given intervals, starting from `start_date`, to fetch. E.g. 3 (months).
    """
    amount: Int!

    """The date field key which deals will be retrieved from"""
    field_key: String!

    """If supplied, only deals matching the given user will be returned"""
    user_id: Int

    """If supplied, only deals matching the given pipeline will be returned"""
    pipeline_id: Int

    """If supplied, only deals matching the given filter will be returned"""
    filter_id: Int
    exclude_deals: queryInput_getDealsTimeline_exclude_deals

    """
    The 3-letter currency code of any of the supported currencies. When supplied, `totals_converted` is returned per each interval which contains the currency-converted total amounts in the given currency. You may also set this parameter to `default_currency` in which case the user's default currency is used.
    """
    totals_convert_currency: String
  ): getDealsTimeline

  """
  Returns the details of a specific deal. Note that this also returns some additional fields which are not present when asking for all deals – such as deal age and stay in pipeline stages. Also note that custom fields appear as long hashes in the resulting data. These hashes can be mapped against the `key` value of dealFields. For more information, see the tutorial for <a href="https://pipedrive.readme.io/docs/getting-details-of-a-deal" target="_blank" rel="noopener noreferrer">getting details of a deal</a>.
  """
  getDeal(
    """The ID of the deal"""
    id: Int!
  ): getDeal

  """Lists activities associated with a deal."""
  getDealActivities(
    """The ID of the deal"""
    id: Int!

    """Pagination start"""
    start: Int

    """Items shown per page"""
    limit: Int
    done: queryInput_getDealActivities_done

    """A comma-separated string of activity IDs to exclude from result"""
    exclude: String
  ): getDealActivities

  """Lists files associated with a deal."""
  getDealFiles(
    """The ID of the deal"""
    id: Int!

    """Pagination start"""
    start: Int

    """Items shown per page"""
    limit: Int

    """
    The field names and sorting mode separated by a comma (`field_name_1 ASC`, `field_name_2 DESC`). Only first-level field keys are supported (no nested keys). Supported fields: `id`, `user_id`, `deal_id`, `person_id`, `org_id`, `product_id`, `add_time`, `update_time`, `file_name`, `file_type`, `file_size`, `comment`.
    """
    sort: String
  ): getAssociatedFiles

  """Lists updates about a deal."""
  getDealUpdates(
    """The ID of the deal"""
    id: Int!

    """Pagination start"""
    start: Int

    """Items shown per page"""
    limit: Int

    """
    Whether to show custom field updates or not. 1 = Include custom field changes. If omitted returns changes without custom field updates.
    """
    all_changes: String

    """
    A comma-separated string for filtering out item specific updates. (Possible values - call, activity, plannedActivity, change, note, deal, file, dealChange, personChange, organizationChange, follower, dealFollower, personFollower, organizationFollower, participant, comment, mailMessage, mailMessageWithAttachment, invoice, document, marketing_campaign_stat, marketing_status_change)
    """
    items: String
  ): getDealUpdates

  """Lists the followers of a deal."""
  getDealFollowers(
    """The ID of the deal"""
    id: Int!
  ): getAssociatedFollowers

  """Lists mail messages associated with a deal."""
  getDealMailMessages(
    """The ID of the deal"""
    id: Int!

    """Pagination start"""
    start: Int

    """Items shown per page"""
    limit: Int
  ): getAssociatedMailMessages

  """
  Lists the participants associated with a deal.<br>If a company uses the [Campaigns product](https://pipedrive.readme.io/docs/campaigns-in-pipedrive-api), then this endpoint will also return the `data.marketing_status` field.
  """
  getDealParticipants(
    """The ID of the deal"""
    id: Int!

    """Pagination start"""
    start: Int

    """Items shown per page"""
    limit: Int
  ): getDealParticipants

  """Lists the users permitted to access a deal."""
  getDealUsers(
    """The ID of the deal"""
    id: Int!
  ): listPermittedUsers

  """
  Lists all persons associated with a deal, regardless of whether the person is the primary contact of the deal, or added as a participant.<br>If a company uses the [Campaigns product](https://pipedrive.readme.io/docs/campaigns-in-pipedrive-api), then this endpoint will also return the `data.marketing_status` field.
  """
  getDealPersons(
    """The ID of the deal"""
    id: Int!

    """Pagination start"""
    start: Int

    """Items shown per page"""
    limit: Int
  ): listPersons

  """Lists products attached to a deal."""
  getDealProducts(
    """The ID of the deal"""
    id: Int!

    """Pagination start"""
    start: Int

    """Items shown per page"""
    limit: Int
    include_product_data: queryInput_getDealProducts_include_product_data
  ): listProducts

  """Returns data about all deal fields."""
  getDealFields(
    """Pagination start"""
    start: Int

    """Items shown per page"""
    limit: Int
  ): query_getDealFields

  """Returns data about a specific deal field."""
  getDealField(
    """The ID of the field"""
    id: Int!
  ): query_getDealField

  """Returns data about all files."""
  getFiles(
    """Pagination start"""
    start: Int

    """Items shown per page"""
    limit: Int

    """
    The field names and sorting mode separated by a comma (`field_name_1 ASC`, `field_name_2 DESC`). Only first-level field keys are supported (no nested keys). Supported fields: `id`, `user_id`, `deal_id`, `person_id`, `org_id`, `product_id`, `add_time`, `update_time`, `file_name`, `file_type`, `file_size`, `comment`.
    """
    sort: String
  ): getFiles

  """Returns data about a specific file."""
  getFile(
    """The ID of the file"""
    id: Int!
  ): getFile

  """Initializes a file download."""
  downloadFile(
    """The ID of the file"""
    id: Int!
  ): Byte

  """Returns data about all filters."""
  getFilters(type: queryInput_getFilters_type): getFilters

  """
  Returns all supported filter helpers. It helps to know what conditions and helpers are available when you want to <a href="/docs/api/v1/Filters#addFilter">add</a> or <a href="/docs/api/v1/Filters#updateFilter">update</a> filters. For more information, see the tutorial for <a href="https://pipedrive.readme.io/docs/adding-a-filter" target="_blank" rel="noopener noreferrer">adding a filter</a>.
  """
  getFilterHelpers: JSON

  """
  Returns data about a specific filter. Note that this also returns the condition lines of the filter.
  """
  getFilter(
    """The ID of the filter"""
    id: Int!
  ): getFilter

  """
  Returns data about goals based on criteria. For searching, append `{searchField}={searchValue}` to the URL, where `searchField` can be any one of the lowest-level fields in dot-notation (e.g. `type.params.pipeline_id`; `title`). `searchValue` should be the value you are looking for on that field. Additionally, `is_active=<true|false>` can be provided to search for only active/inactive goals. When providing `period.start`, `period.end` must also be provided and vice versa.
  """
  getGoals(
    type_name: queryInput_getGoals_type_name

    """The title of the goal"""
    title: String

    """Whether the goal is active or not"""
    is_active: Boolean = true

    """
    The ID of the user who's goal to fetch. When omitted, only your goals will be returned.
    """
    assignee_id: Int
    assignee_type: queryInput_getGoals_assignee_type

    """
    The numeric value of the outcome. If provided, everyone's goals will be returned.
    """
    expected_outcome_target: Float
    expected_outcome_tracking_metric: queryInput_getGoals_expected_outcome_tracking_metric

    """
    The numeric ID of the goal's currency. Only applicable to goals with `expected_outcome.tracking_metric` with value `sum`. If provided, everyone's goals will be returned.
    """
    expected_outcome_currency_id: Int

    """
    An array of pipeline IDs or `null` for all pipelines. If provided, everyone's goals will be returned.
    """
    type_params_pipeline_id: [Int]

    """
    The ID of the stage. Applicable to only `deals_progressed` type of goals. If provided, everyone's goals will be returned.
    """
    type_params_stage_id: Int

    """
    An array of IDs or `null` for all activity types. Only applicable for `activities_completed` and/or `activities_added` types of goals. If provided, everyone's goals will be returned.
    """
    type_params_activity_type_id: [Int]

    """
    The start date of the period for which to find goals. Date in format of YYYY-MM-DD. When `period.start` is provided, `period.end` must be provided too.
    """
    period_start: Date

    """
    The end date of the period for which to find goals. Date in format of YYYY-MM-DD.
    """
    period_end: Date
  ): getGoals

  """Gets the progress of a goal for the specified period."""
  getGoalResult(
    """The ID of the goal that the results are looked for"""
    id: String!

    """
    The start date of the period for which to find the goal's progress. Format: YYYY-MM-DD. This date must be the same or after the goal duration start date.
    """
    period_start: Date!

    """
    The end date of the period for which to find the goal's progress. Format: YYYY-MM-DD. This date must be the same or before the goal duration end date.
    """
    period_end: Date!
  ): getGoalResult

  """Performs a search from your choice of item types and fields."""
  searchItem(
    """
    The search term to look for. Minimum 2 characters (or 1 if using `exact_match`). Please note that the search term has to be URL encoded.
    """
    term: String!
    item_types: queryInput_searchItem_item_types
    fields: queryInput_searchItem_fields

    """
    When enabled, the response will include up to 100 newest related leads and 100 newest related deals for each found person and organization and up to 100 newest related persons for each found organization.
    """
    search_for_related_items: Boolean

    """
    When enabled, only full exact matches against the given term are returned. It is <b>not</b> case sensitive.
    """
    exact_match: Boolean
    include_fields: queryInput_searchItem_include_fields

    """
    Pagination start. Note that the pagination is based on main results and does not include related items when using `search_for_related_items` parameter.
    """
    start: Int

    """Items shown per page"""
    limit: Int
  ): searchItem

  """
  Performs a search from the values of a specific field. Results can either be the distinct values of the field (useful for searching autocomplete field values), or the IDs of actual items (deals, leads, persons, organizations or products).
  """
  searchItemByField(
    """
    The search term to look for. Minimum 2 characters (or 1 if using `exact_match`). Please note that the search term has to be URL encoded.
    """
    term: String!
    field_type: queryInput_searchItemByField_field_type!

    """
    When enabled, only full exact matches against the given term are returned. The search <b>is</b> case sensitive.
    """
    exact_match: Boolean

    """
    The key of the field to search from. The field key can be obtained by fetching the list of the fields using any of the fields' API GET methods (dealFields, personFields, etc.).
    """
    field_key: String!

    """
    Whether to return the IDs of the matching items or not. When not set or set to `0` or `false`, only distinct values of the searched field are returned. When set to `1` or `true`, the ID of each found item is returned.
    """
    return_item_ids: Boolean

    """Pagination start"""
    start: Int

    """Items shown per page"""
    limit: Int
  ): searchItemByField

  "Returns multiple leads. Leads are sorted by the time they were created, from oldest to newest. Pagination can be controlled using `limit` and `start` query parameters. If a lead contains custom fields, the fields' values will be included in the response in the same format as with the `Deals` endpoints. If a custom field's value hasn't been set for the lead, it won't appear in the response. Please note that leads do not have a separate set of custom fields, instead they inherit the custom fields' structure from deals.\n"
  getLeads(
    """
    For pagination, the limit of entries to be returned. If not provided, 100 items will be returned.
    """
    limit: Int

    """
    For pagination, the position that represents the first result for the page
    """
    start: Int
    archived_status: queryInput_getLeads_archived_status

    """
    If supplied, only leads matching the given user will be returned. However, `filter_id` takes precedence over `owner_id` when supplied.
    """
    owner_id: Int

    """
    If supplied, only leads matching the given person will be returned. However, `filter_id` takes precedence over `person_id` when supplied.
    """
    person_id: Int

    """
    If supplied, only leads matching the given organization will be returned. However, `filter_id` takes precedence over `organization_id` when supplied.
    """
    organization_id: Int

    """The ID of the filter to use"""
    filter_id: Int
    sort: queryInput_getLeads_sort
  ): getLeads

  """
  Returns details of a specific lead. If a lead contains custom fields, the fields' values will be included in the response in the same format as with the `Deals` endpoints. If a custom field's value hasn't been set for the lead, it won't appear in the response. Please note that leads do not have a separate set of custom fields, instead they inherit the custom fields’ structure from deals.
  """
  getLead(
    """The ID of the lead"""
    id: UUID!
  ): getLead_response

  """Lists the users permitted to access a lead."""
  getLeadUsers(
    """The ID of the lead"""
    id: String!
  ): query_getLeadUsers

  """
  Searches all leads by title, notes and/or custom fields. This endpoint is a wrapper of <a href="https://developers.pipedrive.com/docs/api/v1/ItemSearch#searchItem">/v1/itemSearch</a> with a narrower OAuth scope. Found leads can be filtered by the person ID and the organization ID.
  """
  searchLeads(
    """
    The search term to look for. Minimum 2 characters (or 1 if using `exact_match`). Please note that the search term has to be URL encoded.
    """
    term: String!
    fields: queryInput_searchLeads_fields

    """
    When enabled, only full exact matches against the given term are returned. It is <b>not</b> case sensitive.
    """
    exact_match: Boolean

    """
    Will filter leads by the provided person ID. The upper limit of found leads associated with the person is 2000.
    """
    person_id: Int

    """
    Will filter leads by the provided organization ID. The upper limit of found leads associated with the organization is 2000.
    """
    organization_id: Int
    include_fields: lead_was_seen_const

    """
    Pagination start. Note that the pagination is based on main results and does not include related items when using `search_for_related_items` parameter.
    """
    start: Int

    """Items shown per page"""
    limit: Int
  ): searchLeads

  """
  Returns details of all lead labels. This endpoint does not support pagination and all labels are always returned.
  """
  getLeadLabels: getLeadLabels

  "Returns all lead sources. Please note that the list of lead sources is fixed, it cannot be modified. All leads created through the Pipedrive API will have a lead source `API` assigned.\n"
  getLeadSources: getLeadSources

  """Returns data about teams within the company."""
  getTeams(order_by: queryInput_getTeams_order_by = id, skip_users: numberBooleanDefault0105): teams

  """Returns data about a specific team."""
  getTeam(
    """The ID of the team"""
    id: Int!
    skip_users: numberBooleanDefault0105
  ): getTeam_response

  """Returns a list of all user IDs within a team."""
  getTeamUsers(
    """The ID of the team"""
    id: Int!
  ): getTeamUsers_response

  """
  Returns data about all teams which have the specified user as a member.
  """
  getUserTeams(
    """The ID of the user"""
    id: Int!
    order_by: queryInput_getUserTeams_order_by = id
    skip_users: numberBooleanDefault0105
  ): query_getUserTeams

  """Returns data about a specific mail message."""
  getMailMessage(
    """The ID of the mail message to fetch"""
    id: Int!
    include_body: queryInput_getMailMessage_include_body
  ): mailMessage

  """
  Returns mail threads in a specified folder ordered by the most recent message within.
  """
  getMailThreads(
    folder: queryInput_getMailThreads_folder! = inbox

    """Pagination start"""
    start: Int

    """Items shown per page"""
    limit: Int
  ): getMailThreads

  """Returns a specific mail thread."""
  getMailThread(
    """The ID of the mail thread"""
    id: Int!
  ): getOneMailThread

  """Returns all the mail messages inside a specified mail thread."""
  getMailThreadMessages(
    """The ID of the mail thread"""
    id: Int!
  ): getAllMailMessagesOfMailThread

  """Returns all notes."""
  getNotes(
    """
    The ID of the user whose notes to fetch. If omitted, notes by all users will be returned.
    """
    user_id: Int

    """
    The ID of the lead which notes to fetch. If omitted, notes about all leads will be returned.
    """
    lead_id: UUID

    """
    The ID of the deal which notes to fetch. If omitted, notes about all deals will be returned.
    """
    deal_id: Int

    """
    The ID of the person whose notes to fetch. If omitted, notes about all persons will be returned.
    """
    person_id: Int

    """
    The ID of the organization which notes to fetch. If omitted, notes about all organizations will be returned.
    """
    org_id: Int

    """Pagination start"""
    start: Int

    """Items shown per page"""
    limit: Int

    """
    The field names and sorting mode separated by a comma (`field_name_1 ASC`, `field_name_2 DESC`). Only first-level field keys are supported (no nested keys). Supported fields: `id`, `user_id`, `deal_id`, `person_id`, `org_id`, `content`, `add_time`, `update_time`.
    """
    sort: String

    """The date in format of YYYY-MM-DD from which notes to fetch"""
    start_date: Date

    """The date in format of YYYY-MM-DD until which notes to fetch to"""
    end_date: Date
    pinned_to_lead_flag: queryInput_getNotes_pinned_to_lead_flag
    pinned_to_deal_flag: queryInput_getNotes_pinned_to_deal_flag
    pinned_to_organization_flag: queryInput_getNotes_pinned_to_organization_flag
    pinned_to_person_flag: queryInput_getNotes_pinned_to_person_flag
  ): getNotes

  """Returns details about a specific note."""
  getNote(
    """The ID of the note"""
    id: Int!
  ): query_getNote

  """Returns all comments associated with a note."""
  getNoteComments(
    """The ID of the note"""
    id: Int!

    """Pagination start"""
    start: Int

    """Items shown per page"""
    limit: Int
  ): getComments

  """Returns the details of a comment."""
  getComment(
    """The ID of the note"""
    id: Int!

    """The ID of the comment"""
    commentId: UUID!
  ): query_getComment

  """Returns data about all note fields."""
  getNoteFields: getNoteFields

  """Returns all organizations."""
  getOrganizations(
    """
    If supplied, only organizations owned by the given user will be returned. However, `filter_id` takes precedence over `user_id` when both are supplied.
    """
    user_id: Int

    """The ID of the filter to use"""
    filter_id: Int

    """
    If supplied, only organizations whose name starts with the specified letter will be returned (case insensitive)
    """
    first_char: String

    """Pagination start"""
    start: Int

    """Items shown per page"""
    limit: Int

    """
    The field names and sorting mode separated by a comma (`field_name_1 ASC`, `field_name_2 DESC`). Only first-level field keys are supported (no nested keys).
    """
    sort: String
  ): getOrganizations

  """
  Searches all organizations by name, address, notes and/or custom fields. This endpoint is a wrapper of <a href="https://developers.pipedrive.com/docs/api/v1/ItemSearch#searchItem">/v1/itemSearch</a> with a narrower OAuth scope.
  """
  searchOrganization(
    """
    The search term to look for. Minimum 2 characters (or 1 if using `exact_match`). Please note that the search term has to be URL encoded.
    """
    term: String!
    fields: queryInput_searchOrganization_fields

    """
    When enabled, only full exact matches against the given term are returned. It is <b>not</b> case sensitive.
    """
    exact_match: Boolean

    """
    Pagination start. Note that the pagination is based on main results and does not include related items when using `search_for_related_items` parameter.
    """
    start: Int

    """Items shown per page"""
    limit: Int
  ): searchOrganization

  """
  Returns the details of an organization. Note that this also returns some additional fields which are not present when asking for all organizations. Also note that custom fields appear as long hashes in the resulting data. These hashes can be mapped against the `key` value of organizationFields.
  """
  getOrganization(
    """The ID of the organization"""
    id: Int!
  ): getOrganization

  """Lists activities associated with an organization."""
  getOrganizationActivities(
    """The ID of the organization"""
    id: Int!

    """Pagination start"""
    start: Int

    """Items shown per page"""
    limit: Int
    done: queryInput_getOrganizationActivities_done

    """A comma-separated string of activity IDs to exclude from result"""
    exclude: String
  ): getAssociatedActivities

  """Lists deals associated with an organization."""
  getOrganizationDeals(
    """The ID of the organization"""
    id: Int!

    """Pagination start"""
    start: Int

    """Items shown per page"""
    limit: Int
    status: queryInput_getOrganizationDeals_status = all_not_deleted

    """
    The field names and sorting mode separated by a comma (`field_name_1 ASC`, `field_name_2 DESC`). Only first-level field keys are supported (no nested keys).
    """
    sort: String
    only_primary_association: queryInput_getOrganizationDeals_only_primary_association
  ): getAssociatedDeals

  """Lists files associated with an organization."""
  getOrganizationFiles(
    """The ID of the organization"""
    id: Int!

    """Pagination start"""
    start: Int

    """Items shown per page"""
    limit: Int

    """
    The field names and sorting mode separated by a comma (`field_name_1 ASC`, `field_name_2 DESC`). Only first-level field keys are supported (no nested keys). Supported fields: `id`, `user_id`, `deal_id`, `person_id`, `org_id`, `product_id`, `add_time`, `update_time`, `file_name`, `file_type`, `file_size`, `comment`.
    """
    sort: String
  ): query_getOrganizationFiles

  """Lists updates about an organization."""
  getOrganizationUpdates(
    """The ID of the organization"""
    id: Int!

    """Pagination start"""
    start: Int

    """Items shown per page"""
    limit: Int

    """
    Whether to show custom field updates or not. 1 = Include custom field changes. If omitted, returns changes without custom field updates.
    """
    all_changes: String

    """
    A comma-separated string for filtering out item specific updates. (Possible values - activity, plannedActivity, note, file, change, deal, follower, participant, mailMessage, mailMessageWithAttachment, invoice, activityFile, document)
    """
    items: String
  ): getAssociatedUpdates

  """Lists the followers of an organization."""
  getOrganizationFollowers(
    """The ID of the organization"""
    id: Int!
  ): query_getOrganizationFollowers

  """Lists mail messages associated with an organization."""
  getOrganizationMailMessages(
    """The ID of the organization"""
    id: Int!

    """Pagination start"""
    start: Int

    """Items shown per page"""
    limit: Int
  ): query_getOrganizationMailMessages

  """List users permitted to access an organization."""
  getOrganizationUsers(
    """The ID of the organization"""
    id: Int!
  ): query_getOrganizationUsers

  """
  Lists persons associated with an organization.<br>If a company uses the [Campaigns product](https://pipedrive.readme.io/docs/campaigns-in-pipedrive-api), then this endpoint will also return the `data.marketing_status` field.
  """
  getOrganizationPersons(
    """The ID of the organization"""
    id: Int!

    """Pagination start"""
    start: Int

    """Items shown per page"""
    limit: Int
  ): query_getOrganizationPersons

  """Returns data about all organization fields."""
  getOrganizationFields(
    """Pagination start"""
    start: Int

    """Items shown per page"""
    limit: Int
  ): query_getOrganizationFields

  """Returns data about a specific organization field."""
  getOrganizationField(
    """The ID of the field"""
    id: Int!
  ): query_getOrganizationField

  """Gets all of the relationships for a supplied organization ID."""
  getOrganizationRelationships(
    """The ID of the organization to get relationships for"""
    org_id: Int!
  ): getOrganizationRelationships

  """Finds and returns an organization relationship from its ID."""
  getOrganizationRelationship(
    """The ID of the organization relationship"""
    id: Int!

    """The ID of the base organization for the returned calculated values"""
    org_id: Int
  ): getOrganizationRelationship

  """Returns data about all permission sets."""
  getPermissionSets(app: queryInput_getPermissionSets_app): getPermissionSets

  """Returns data about a specific permission set."""
  getPermissionSet(
    """The ID of the permission set"""
    id: String!
  ): getPermissionSet_response

  """Returns the list of assignments for a permission set."""
  getPermissionSetAssignments(
    """The ID of the permission set"""
    id: String!

    """Pagination start"""
    start: Int

    """Items shown per page"""
    limit: Int
  ): getPermissionSetAssignments_response

  """Returns all persons."""
  getPersons(
    """
    If supplied, only persons owned by the given user will be returned. However, `filter_id` takes precedence over `user_id` when both are supplied.
    """
    user_id: Int

    """The ID of the filter to use"""
    filter_id: Int

    """
    If supplied, only persons whose name starts with the specified letter will be returned (case insensitive)
    """
    first_char: String

    """Pagination start"""
    start: Int

    """Items shown per page"""
    limit: Int

    """
    The field names and sorting mode separated by a comma (`field_name_1 ASC`, `field_name_2 DESC`). Only first-level field keys are supported (no nested keys).
    """
    sort: String
  ): getPersons

  """
  Searches all persons by name, email, phone, notes and/or custom fields. This endpoint is a wrapper of <a href="https://developers.pipedrive.com/docs/api/v1/ItemSearch#searchItem">/v1/itemSearch</a> with a narrower OAuth scope. Found persons can be filtered by organization ID.
  """
  searchPersons(
    """
    The search term to look for. Minimum 2 characters (or 1 if using `exact_match`). Please note that the search term has to be URL encoded.
    """
    term: String!
    fields: queryInput_searchPersons_fields

    """
    When enabled, only full exact matches against the given term are returned. It is <b>not</b> case sensitive.
    """
    exact_match: Boolean

    """
    Will filter persons by the provided organization ID. The upper limit of found persons associated with the organization is 2000.
    """
    organization_id: Int
    include_fields: person_picture_const

    """
    Pagination start. Note that the pagination is based on main results and does not include related items when using `search_for_related_items` parameter.
    """
    start: Int

    """Items shown per page"""
    limit: Int
  ): searchPersons

  """
  Returns the details of a person. Note that this also returns some additional fields which are not present when asking for all persons. Also note that custom fields appear as long hashes in the resulting data. These hashes can be mapped against the `key` value of personFields.<br>If a company uses the [Campaigns product](https://pipedrive.readme.io/docs/campaigns-in-pipedrive-api), then this endpoint will also return the `data.marketing_status` field.
  """
  getPerson(
    """The ID of the person"""
    id: Int!
  ): getPerson

  """Lists activities associated with a person."""
  getPersonActivities(
    """The ID of the person"""
    id: Int!

    """Pagination start"""
    start: Int

    """Items shown per page"""
    limit: Int
    done: queryInput_getPersonActivities_done

    """A comma-separated string of activity IDs to exclude from result"""
    exclude: String
  ): query_getPersonActivities

  """Lists deals associated with a person."""
  getPersonDeals(
    """The ID of the person"""
    id: Int!

    """Pagination start"""
    start: Int

    """Items shown per page"""
    limit: Int
    status: queryInput_getPersonDeals_status = all_not_deleted

    """
    The field names and sorting mode separated by a comma (`field_name_1 ASC`, `field_name_2 DESC`). Only first-level field keys are supported (no nested keys).
    """
    sort: String
  ): query_getPersonDeals

  """Lists files associated with a person."""
  getPersonFiles(
    """The ID of the person"""
    id: Int!

    """Pagination start"""
    start: Int

    """Items shown per page"""
    limit: Int

    """
    The field names and sorting mode separated by a comma (`field_name_1 ASC`, `field_name_2 DESC`). Only first-level field keys are supported (no nested keys). Supported fields: `id`, `user_id`, `deal_id`, `person_id`, `org_id`, `product_id`, `add_time`, `update_time`, `file_name`, `file_type`, `file_size`, `comment`.
    """
    sort: String
  ): query_getPersonFiles

  """
  Lists updates about a person.<br>If a company uses the [Campaigns product](https://pipedrive.readme.io/docs/campaigns-in-pipedrive-api), then this endpoint's response will also include updates for the `marketing_status` field.
  """
  getPersonUpdates(
    """The ID of the person"""
    id: Int!

    """Pagination start"""
    start: Int

    """Items shown per page"""
    limit: Int

    """
    Whether to show custom field updates or not. 1 = Include custom field changes. If omitted returns changes without custom field updates.
    """
    all_changes: String

    """
    A comma-separated string for filtering out item specific updates. (Possible values - call, activity, plannedActivity, change, note, deal, file, dealChange, personChange, organizationChange, follower, dealFollower, personFollower, organizationFollower, participant, comment, mailMessage, mailMessageWithAttachment, invoice, document, marketing_campaign_stat, marketing_status_change)
    """
    items: String
  ): getAssociatedPersonUpdates

  """Lists the followers of a person."""
  getPersonFollowers(
    """The ID of the person"""
    id: Int!
  ): query_getPersonFollowers

  """Lists mail messages associated with a person."""
  getPersonMailMessages(
    """The ID of the person"""
    id: Int!

    """Pagination start"""
    start: Int

    """Items shown per page"""
    limit: Int
  ): query_getPersonMailMessages

  """List users permitted to access a person."""
  getPersonUsers(
    """The ID of the person"""
    id: Int!
  ): query_getPersonUsers

  """Lists products associated with a person."""
  getPersonProducts(
    """The ID of the person"""
    id: Int!

    """Pagination start"""
    start: Int

    """Items shown per page"""
    limit: Int
  ): getPersonProducts

  """
  Returns data about all person fields.<br>If a company uses the [Campaigns product](https://pipedrive.readme.io/docs/campaigns-in-pipedrive-api), then this endpoint will also return the `data.marketing_status` field.
  """
  getPersonFields(
    """Pagination start"""
    start: Int

    """Items shown per page"""
    limit: Int
  ): query_getPersonFields

  """Returns data about a specific person field."""
  getPersonField(
    """The ID of the field"""
    id: Int!
  ): query_getPersonField

  """Returns data about all pipelines."""
  getPipelines: getPipelines

  """
  Returns data about a specific pipeline. Also returns the summary of the deals in this pipeline across its stages.
  """
  getPipeline(
    """The ID of the pipeline"""
    id: Int!

    """
    The 3-letter currency code of any of the supported currencies. When supplied, `per_stages_converted` is returned in `deals_summary` which contains the currency-converted total amounts in the given currency per each stage. You may also set this parameter to `default_currency` in which case users default currency is used.
    """
    totals_convert_currency: String
  ): getPipeline

  """
  Returns all stage-to-stage conversion and pipeline-to-close rates for the given time period.
  """
  getPipelineConversionStatistics(
    """The ID of the pipeline"""
    id: Int!

    """The start of the period. Date in format of YYYY-MM-DD."""
    start_date: Date!

    """The end of the period. Date in format of YYYY-MM-DD."""
    end_date: Date!

    """
    The ID of the user who's pipeline metrics statistics to fetch. If omitted, the authorized user will be used.
    """
    user_id: Int
  ): getPipelineConversionStatistics

  """Lists deals in a specific pipeline across all its stages."""
  getPipelineDeals(
    """The ID of the pipeline"""
    id: Int!

    """If supplied, only deals matching the given filter will be returned"""
    filter_id: Int

    """
    If supplied, `filter_id` will not be considered and only deals owned by the given user will be returned. If omitted, deals owned by the authorized user will be returned.
    """
    user_id: Int
    everyone: queryInput_getPipelineDeals_everyone

    """If supplied, only deals within the given stage will be returned"""
    stage_id: Int

    """Pagination start"""
    start: Int

    """Items shown per page"""
    limit: Int
    get_summary: queryInput_getPipelineDeals_get_summary

    """
    The 3-letter currency code of any of the supported currencies. When supplied, `per_stages_converted` is returned inside `deals_summary` inside `additional_data` which contains the currency-converted total amounts in the given currency per each stage. You may also set this parameter to `default_currency` in which case users default currency is used. Only works when `get_summary` parameter flag is enabled.
    """
    totals_convert_currency: String
  ): getStageDeals

  """Returns statistics for deals movements for the given time period."""
  getPipelineMovementStatistics(
    """The ID of the pipeline"""
    id: Int!

    """The start of the period. Date in format of YYYY-MM-DD."""
    start_date: Date!

    """The end of the period. Date in format of YYYY-MM-DD."""
    end_date: Date!

    """
    The ID of the user who's pipeline statistics to fetch. If omitted, the authorized user will be used.
    """
    user_id: Int
  ): getPipelineMovementStatistics

  """Returns data about all products."""
  getProducts(
    """If supplied, only products owned by the given user will be returned"""
    user_id: Int

    """The ID of the filter to use"""
    filter_id: Int

    """
    An array of integers with the IDs of the products that should be returned in the response
    """
    ids: [Int]

    """
    If supplied, only products whose name starts with the specified letter will be returned (case insensitive)
    """
    first_char: String

    """
    If supplied, the response will return the total numbers of products in the `additional_data.summary.total_count` property
    """
    get_summary: Boolean

    """Pagination start"""
    start: Int

    """Items shown per page"""
    limit: Int
  ): getProducts

  """
  Searches all products by name, code and/or custom fields. This endpoint is a wrapper of <a href="https://developers.pipedrive.com/docs/api/v1/ItemSearch#searchItem">/v1/itemSearch</a> with a narrower OAuth scope.
  """
  searchProducts(
    """
    The search term to look for. Minimum 2 characters (or 1 if using `exact_match`). Please note that the search term has to be URL encoded.
    """
    term: String!
    fields: queryInput_searchProducts_fields

    """
    When enabled, only full exact matches against the given term are returned. It is <b>not</b> case sensitive.
    """
    exact_match: Boolean
    include_fields: product_price_const

    """
    Pagination start. Note that the pagination is based on main results and does not include related items when using `search_for_related_items` parameter.
    """
    start: Int

    """Items shown per page"""
    limit: Int
  ): searchProducts

  """Returns data about a specific product."""
  getProduct(
    """The ID of the product"""
    id: Int!
  ): query_getProduct

  """Returns data about deals that have a product attached to it."""
  getProductDeals(
    """The ID of the product"""
    id: Int!

    """Pagination start"""
    start: Int

    """Items shown per page"""
    limit: Int
    status: queryInput_getProductDeals_status = all_not_deleted
  ): query_getProductDeals

  """Lists files associated with a product."""
  getProductFiles(
    """The ID of the product"""
    id: Int!

    """Pagination start"""
    start: Int

    """Items shown per page"""
    limit: Int

    """
    The field name and sorting mode (`field_name_1 ASC` or `field_name_1 DESC`). Supported fields: `update_time`, `id`
    """
    sort: String
  ): query_getProductFiles

  """Lists the followers of a product."""
  getProductFollowers(
    """The ID of the product"""
    id: Int!

    """Pagination start"""
    start: Int

    """Items shown per page"""
    limit: Int
  ): getProductFollowersResponseSuccess

  """Lists users permitted to access a product."""
  getProductUsers(
    """The ID of the product"""
    id: Int!
  ): query_getProductUsers

  """Returns data about all product fields."""
  getProductFields(
    """Pagination start"""
    start: Int

    """Items shown per page"""
    limit: Int
  ): getProductFields

  """Returns data about a specific product field."""
  getProductField(
    """The ID of the product field"""
    id: Int!
  ): getProductField_response

  """
  Returns data about all recent changes occurred after the given timestamp.
  """
  getRecents(
    """The timestamp in UTC. Format: YYYY-MM-DD HH:MM:SS"""
    since_timestamp: String!
    items: queryInput_getRecents_items

    """Pagination start"""
    start: Int

    """Items shown per page"""
    limit: Int
  ): getRecents

  """Returns all the roles within the company."""
  getRoles(
    """Pagination start"""
    start: Int

    """Items shown per page"""
    limit: Int
  ): getRoles

  """Returns the details of a specific role."""
  getRole(
    """The ID of the role"""
    id: Int!
  ): getRole

  """Returns all users assigned to a role."""
  getRoleAssignments(
    """The ID of the role"""
    id: Int!

    """Pagination start"""
    start: Int

    """Items shown per page"""
    limit: Int
  ): getUserRoleAssignments

  """Returns the visibility settings of a specific role."""
  getRoleSettings(
    """The ID of the role"""
    id: Int!
  ): getRoleSettings

  """Returns data about all stages."""
  getStages(
    """
    The ID of the pipeline to fetch stages for. If omitted, stages for all pipelines will be fetched.
    """
    pipeline_id: Int
  ): getStages

  """Returns data about a specific stage."""
  getStage(
    """The ID of the stage"""
    id: Int!
    everyone: queryInput_getStage_everyone
  ): getStage

  """Lists deals in a specific stage."""
  getStageDeals(
    """The ID of the stage"""
    id: Int!

    """If supplied, only deals matching the given filter will be returned"""
    filter_id: Int

    """
    If supplied, `filter_id` will not be considered and only deals owned by the given user will be returned. If omitted, deals owned by the authorized user will be returned.
    """
    user_id: Int
    everyone: queryInput_getStageDeals_everyone

    """Pagination start"""
    start: Int

    """Items shown per page"""
    limit: Int
  ): query_getStageDeals

  """Returns details of an installment or a recurring subscription."""
  getSubscription(
    """The ID of the subscription"""
    id: Int!
  ): query_getSubscription

  """
  Returns details of an installment or a recurring subscription by the deal ID.
  """
  findSubscriptionByDeal(
    """The ID of the deal"""
    dealId: Int!
  ): query_findSubscriptionByDeal

  """Returns all payments of an installment or recurring subscription."""
  getSubscriptionPayments(
    """The ID of the subscription"""
    id: Int!
  ): payment

  """Returns data about all users within the company."""
  getUsers: users

  """Finds users by their name."""
  findUsersByName(
    """The search term to look for"""
    term: String!
    search_by_email: queryInput_findUsersByName_search_by_email
  ): query_findUsersByName

  """
  Returns data about an authorized user within the company with bound company data: company ID, company name, and domain. Note that the `locale` property means 'Date/number format' in the Pipedrive account settings, not the chosen language.
  """
  getCurrentUser: getCurrentUser_response

  """Returns data about a specific user within the company."""
  getUser(
    """The ID of the user"""
    id: Int!
  ): getUser_response

  """Lists the followers of a specific user."""
  getUserFollowers(
    """The ID of the user"""
    id: Int!
  ): getUserFollowers_response

  """
  Lists aggregated permissions over all assigned permission sets for a user.
  """
  getUserPermissions(
    """The ID of the user"""
    id: Int!
  ): getUserPermissions

  """Lists role assignments for a user."""
  getUserRoleAssignments(
    """The ID of the user"""
    id: Int!

    """Pagination start"""
    start: Int

    """Items shown per page"""
    limit: Int
  ): query_getUserRoleAssignments

  """Lists the settings of user's assigned role."""
  getUserRoleSettings(
    """The ID of the user"""
    id: Int!
  ): query_getUserRoleSettings

  """Returns data about all connections for the authorized user."""
  getUserConnections: getUserConnections_response

  """
  Lists the settings of an authorized user. Example response contains a shortened list of settings.
  """
  getUserSettings: getUserSettings_response

  """Returns data about all the Webhooks of a company."""
  getWebhooks: getWebhooks_response
}

type getActivities {
  success: Boolean
  data: [query_getActivities_data_items]
  additional_data: query_getActivities_additional_data
  related_objects: query_getActivities_related_objects
}

type query_getActivities_data_items {
  """The due date of the activity. Format: YYYY-MM-DD"""
  due_date: Date

  """The due time of the activity in UTC. Format: HH:MM"""
  due_time: String

  """The duration of the activity. Format: HH:MM"""
  duration: String

  """The ID of the deal this activity is associated with"""
  deal_id: Int

  """The ID of the lead in the UUID format this activity is associated with"""
  lead_id: UUID

  """The ID of the person this activity is associated with"""
  person_id: Int

  """The ID of the organization this activity is associated with"""
  org_id: Int

  """The note of the activity (HTML format)"""
  note: String

  """
  The address of the activity. Pipedrive will automatically check if the location matches a geo-location on Google maps.
  """
  location: String

  """
  Additional details about the activity that is synced to your external calendar. Unlike the note added to the activity, the description is publicly visible to any guests added to the activity.
  """
  public_description: String

  """The activity ID, generated when the activity was created"""
  id: Int

  """Whether the activity is done or not"""
  done: Boolean

  """The subject of the activity"""
  subject: String

  """
  The type of the activity. This is in correlation with the `key_string` parameter of ActivityTypes.
  """
  type: String

  """The ID of the user whom the activity is assigned to"""
  user_id: Int

  """
  List of multiple persons (participants) this activity is associated with
  """
  participants: [JSON]

  """
  Marks if the activity is set as 'Busy' or 'Free'. If the flag is set to `true`, your customers will not be able to book that time slot through any Scheduler links. The flag can also be unset. When the value of the flag is unset (`null`), the flag defaults to 'Busy' if it has a time set, and 'Free' if it is an all-day event without specified time.
  """
  busy_flag: Boolean

  """
  The attendees of the activity. This can be either your existing Pipedrive contacts or an external email address.
  """
  attendees: [JSON]

  """The user's company ID"""
  company_id: Int

  """
  If the activity references some other object, it is indicated here. For example, value `Salesphone` refers to activities created with Caller.
  """
  reference_type: String

  """Together with the `reference_type`, gives the ID of the other object"""
  reference_id: Int

  """The ID of Marketplace app, which is connected to this activity"""
  conference_meeting_client: String

  """The link to join the meeting which is associated with this activity"""
  conference_meeting_url: String

  """
  The meeting ID of the meeting provider (Zoom, MS Teams etc.) that is associated with this activity
  """
  conference_meeting_id: String

  """
  The creation date and time of the activity in UTC. Format: YYYY-MM-DD HH:MM:SS.
  """
  add_time: String

  """
  The date and time this activity was marked as done. Format: YYYY-MM-DD HH:MM:SS.
  """
  marked_as_done_time: String

  """
  The date and time of latest notifications sent about this activity to the participants or the attendees of this activity
  """
  last_notification_time: String

  """
  The ID of the user who triggered the sending of the latest notifications about this activity to the participants or the attendees of this activity
  """
  last_notification_user_id: Int

  """The ID of the language the notifications are sent in"""
  notification_language_id: Int

  """Whether the activity is active or not"""
  active_flag: Boolean

  """
  The last update date and time of the activity. Format: YYYY-MM-DD HH:MM:SS.
  """
  update_time: String

  """The ID of the user who was the last to update this activity"""
  update_user_id: Int

  """
  For the activity which syncs to Google calendar, this is the Google event ID. NB! This field is related to old Google calendar sync and will be deprecated soon.
  """
  gcal_event_id: String

  """
  The Google calendar ID that this activity syncs to. NB! This field is related to old Google calendar sync and will be deprecated soon.
  """
  google_calendar_id: String

  """
  The Google calendar API etag (version) that is used for syncing this activity. NB! This field is related to old Google calendar sync and will be deprecated soon.
  """
  google_calendar_etag: String

  """
  For activities that sync to an external calendar, this setting indicates if the activity syncs with context (what are the deals, persons, organizations this activity is related to)
  """
  calendar_sync_include_context: String

  """The timezone the activity was created in an external calendar"""
  source_timezone: String

  """
  The rule for the recurrence of the activity. Is important for activities synced into Pipedrive from an external calendar. Example: "RRULE:FREQ=WEEKLY;BYDAY=WE"
  """
  rec_rule: String

  """
  Additional rules for the recurrence of the activity, extend the `rec_rule`. Is important for activities synced into Pipedrive from an external calendar.
  """
  rec_rule_extension: String

  """
  The ID of parent activity for a recurrent activity if the current activity is an exception to recurrence rules
  """
  rec_master_activity_id: Int

  """
  The list of recurring activity instances. It is in a structure as follows: `[{due_date: "2020-06-24", due_time: "10:00:00"}]`
  """
  series: [JSON]

  """The ID of the user who created the activity"""
  created_by_user_id: Int

  """Subfield of location field. Indicates apartment/suite number."""
  location_subpremise: String

  """Subfield of location field. Indicates house number."""
  location_street_number: String

  """Subfield of location field. Indicates street name."""
  location_route: String

  """Subfield of location field. Indicates district/sublocality."""
  location_sublocality: String

  """Subfield of location field. Indicates city/town/village/locality."""
  location_locality: String

  """Subfield of location field. Indicates state/county."""
  location_admin_area_level_1: String

  """Subfield of location field. Indicates region."""
  location_admin_area_level_2: String

  """Subfield of location field. Indicates country."""
  location_country: String

  """Subfield of location field. Indicates ZIP/postal code."""
  location_postal_code: String

  """Subfield of location field. Indicates full/combined address."""
  location_formatted_address: String

  """The name of the organization this activity is associated with"""
  org_name: String

  """The name of the person this activity is associated with"""
  person_name: String

  """The name of the deal this activity is associated with"""
  deal_title: String

  """The name of the user this activity is owned by"""
  owner_name: String

  """The BCC email address of the person"""
  person_dropbox_bcc: String

  """The BCC email address of the deal"""
  deal_dropbox_bcc: String

  """
  The ID of the user to whom the activity is assigned to. Equal to `user_id`.
  """
  assigned_to_user_id: Int
  file: JSON
}

"""Represents date values"""
scalar Date

"""
A field whose value is a generic Universally Unique Identifier: https://en.wikipedia.org/wiki/Universally_unique_identifier.
"""
scalar UUID

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON @specifiedBy(url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf")

type query_getActivities_additional_data {
  pagination: query_getActivities_additional_data_pagination
}

"""Pagination details of the list"""
type query_getActivities_additional_data_pagination {
  """Pagination start"""
  start: Int

  """Items shown per page"""
  limit: Int

  """Whether there are more list items in the collection than displayed"""
  more_items_in_collection: Boolean

  """Next pagination start"""
  next_start: Int
}

type query_getActivities_related_objects {
  user: query_getActivities_related_objects_user
  deal: query_getActivities_related_objects_deal
  person: query_getActivities_related_objects_person
  organization: query_getActivities_related_objects_organization
}

type query_getActivities_related_objects_user {
  USER_ID: query_getActivities_related_objects_user_USER_ID
}

type query_getActivities_related_objects_user_USER_ID {
  """The ID of the user"""
  id: Int

  """The name of the user"""
  name: String

  """The email of the user"""
  email: String

  """Whether the user has picture or not. 0 = No picture, 1 = Has picture."""
  has_pic: Int

  """The user picture hash"""
  pic_hash: String

  """Whether the user is active or not"""
  active_flag: Boolean
  JSON: JSON
}

type query_getActivities_related_objects_deal {
  DEAL_ID: query_getActivities_related_objects_deal_DEAL_ID
}

"""The ID of the deal which is associated with the item"""
type query_getActivities_related_objects_deal_DEAL_ID {
  """The ID of the deal associated with the item"""
  id: Int

  """The title of the deal associated with the item"""
  title: String

  """The status of the deal associated with the item"""
  status: String

  """The value of the deal that is associated with the item"""
  value: Float

  """The currency of the deal value"""
  currency: String

  """The ID of the stage the deal is currently at"""
  stage_id: Int

  """The ID of the pipeline the deal is in"""
  pipeline_id: Int
}

type query_getActivities_related_objects_person {
  PERSON_ID: query_getActivities_related_objects_person_PERSON_ID
}

type query_getActivities_related_objects_person_PERSON_ID {
  """The ID of the person associated with the item"""
  id: Int

  """The name of the person associated with the item"""
  name: String

  """The emails of the person associated with the item"""
  email: [query_getActivities_related_objects_person_PERSON_ID_email_items]

  """The phone numbers of the person associated with the item"""
  phone: [query_getActivities_related_objects_person_PERSON_ID_phone_items]

  """The ID of the owner of the person that is associated with the item"""
  owner_id: Int
}

type query_getActivities_related_objects_person_PERSON_ID_email_items {
  """The type of the email"""
  label: String

  """The email of the associated person"""
  value: String

  """Whether this is the primary email or not"""
  primary: Boolean
}

type query_getActivities_related_objects_person_PERSON_ID_phone_items {
  """The type of the phone number"""
  label: String

  """The phone number of the person associated with the item"""
  value: String

  """Whether this is the primary phone number or not"""
  primary: Boolean
}

type query_getActivities_related_objects_organization {
  ORGANIZATION_ID: query_getActivities_related_objects_organization_ORGANIZATION_ID
}

"""The ID of the organization associated with the item"""
type query_getActivities_related_objects_organization_ORGANIZATION_ID {
  """The ID of the organization associated with the item"""
  id: Int

  """The name of the organization associated with the item"""
  name: String

  """
  The number of people connected with the organization that is associated with the item
  """
  people_count: Int

  """
  The ID of the owner of the organization that is associated with the item
  """
  owner_id: Int

  """The address of the organization"""
  address: String

  """The BCC email of the organization associated with the item"""
  cc_email: String
}

"""
Whether the activity is done or not. 0 = Not done, 1 = Done. If omitted returns both done and not done activities.
"""
enum numberBoolean22 {
  _0
  _1
}

type getActivity {
  success: Boolean
  data: query_getActivity_data
  related_objects: query_getActivity_related_objects
}

type query_getActivity_data {
  """The due date of the activity. Format: YYYY-MM-DD"""
  due_date: Date

  """The due time of the activity in UTC. Format: HH:MM"""
  due_time: String

  """The duration of the activity. Format: HH:MM"""
  duration: String

  """The ID of the deal this activity is associated with"""
  deal_id: Int

  """The ID of the lead in the UUID format this activity is associated with"""
  lead_id: UUID

  """The ID of the person this activity is associated with"""
  person_id: Int

  """The ID of the organization this activity is associated with"""
  org_id: Int

  """The note of the activity (HTML format)"""
  note: String

  """
  The address of the activity. Pipedrive will automatically check if the location matches a geo-location on Google maps.
  """
  location: String

  """
  Additional details about the activity that is synced to your external calendar. Unlike the note added to the activity, the description is publicly visible to any guests added to the activity.
  """
  public_description: String

  """The activity ID, generated when the activity was created"""
  id: Int

  """Whether the activity is done or not"""
  done: Boolean

  """The subject of the activity"""
  subject: String

  """
  The type of the activity. This is in correlation with the `key_string` parameter of ActivityTypes.
  """
  type: String

  """The ID of the user whom the activity is assigned to"""
  user_id: Int

  """
  List of multiple persons (participants) this activity is associated with
  """
  participants: [JSON]

  """
  Marks if the activity is set as 'Busy' or 'Free'. If the flag is set to `true`, your customers will not be able to book that time slot through any Scheduler links. The flag can also be unset. When the value of the flag is unset (`null`), the flag defaults to 'Busy' if it has a time set, and 'Free' if it is an all-day event without specified time.
  """
  busy_flag: Boolean

  """
  The attendees of the activity. This can be either your existing Pipedrive contacts or an external email address.
  """
  attendees: [JSON]

  """The user's company ID"""
  company_id: Int

  """
  If the activity references some other object, it is indicated here. For example, value `Salesphone` refers to activities created with Caller.
  """
  reference_type: String

  """Together with the `reference_type`, gives the ID of the other object"""
  reference_id: Int

  """The ID of Marketplace app, which is connected to this activity"""
  conference_meeting_client: String

  """The link to join the meeting which is associated with this activity"""
  conference_meeting_url: String

  """
  The meeting ID of the meeting provider (Zoom, MS Teams etc.) that is associated with this activity
  """
  conference_meeting_id: String

  """
  The creation date and time of the activity in UTC. Format: YYYY-MM-DD HH:MM:SS.
  """
  add_time: String

  """
  The date and time this activity was marked as done. Format: YYYY-MM-DD HH:MM:SS.
  """
  marked_as_done_time: String

  """
  The date and time of latest notifications sent about this activity to the participants or the attendees of this activity
  """
  last_notification_time: String

  """
  The ID of the user who triggered the sending of the latest notifications about this activity to the participants or the attendees of this activity
  """
  last_notification_user_id: Int

  """The ID of the language the notifications are sent in"""
  notification_language_id: Int

  """Whether the activity is active or not"""
  active_flag: Boolean

  """
  The last update date and time of the activity. Format: YYYY-MM-DD HH:MM:SS.
  """
  update_time: String

  """The ID of the user who was the last to update this activity"""
  update_user_id: Int

  """
  For the activity which syncs to Google calendar, this is the Google event ID. NB! This field is related to old Google calendar sync and will be deprecated soon.
  """
  gcal_event_id: String

  """
  The Google calendar ID that this activity syncs to. NB! This field is related to old Google calendar sync and will be deprecated soon.
  """
  google_calendar_id: String

  """
  The Google calendar API etag (version) that is used for syncing this activity. NB! This field is related to old Google calendar sync and will be deprecated soon.
  """
  google_calendar_etag: String

  """
  For activities that sync to an external calendar, this setting indicates if the activity syncs with context (what are the deals, persons, organizations this activity is related to)
  """
  calendar_sync_include_context: String

  """The timezone the activity was created in an external calendar"""
  source_timezone: String

  """
  The rule for the recurrence of the activity. Is important for activities synced into Pipedrive from an external calendar. Example: "RRULE:FREQ=WEEKLY;BYDAY=WE"
  """
  rec_rule: String

  """
  Additional rules for the recurrence of the activity, extend the `rec_rule`. Is important for activities synced into Pipedrive from an external calendar.
  """
  rec_rule_extension: String

  """
  The ID of parent activity for a recurrent activity if the current activity is an exception to recurrence rules
  """
  rec_master_activity_id: Int

  """
  The list of recurring activity instances. It is in a structure as follows: `[{due_date: "2020-06-24", due_time: "10:00:00"}]`
  """
  series: [JSON]

  """The ID of the user who created the activity"""
  created_by_user_id: Int

  """Subfield of location field. Indicates apartment/suite number."""
  location_subpremise: String

  """Subfield of location field. Indicates house number."""
  location_street_number: String

  """Subfield of location field. Indicates street name."""
  location_route: String

  """Subfield of location field. Indicates district/sublocality."""
  location_sublocality: String

  """Subfield of location field. Indicates city/town/village/locality."""
  location_locality: String

  """Subfield of location field. Indicates state/county."""
  location_admin_area_level_1: String

  """Subfield of location field. Indicates region."""
  location_admin_area_level_2: String

  """Subfield of location field. Indicates country."""
  location_country: String

  """Subfield of location field. Indicates ZIP/postal code."""
  location_postal_code: String

  """Subfield of location field. Indicates full/combined address."""
  location_formatted_address: String

  """The name of the organization this activity is associated with"""
  org_name: String

  """The name of the person this activity is associated with"""
  person_name: String

  """The name of the deal this activity is associated with"""
  deal_title: String

  """The name of the user this activity is owned by"""
  owner_name: String

  """The BCC email address of the person"""
  person_dropbox_bcc: String

  """The BCC email address of the deal"""
  deal_dropbox_bcc: String

  """
  The ID of the user to whom the activity is assigned to. Equal to `user_id`.
  """
  assigned_to_user_id: Int
  file: JSON
}

type query_getActivity_related_objects {
  user: query_getActivity_related_objects_user
  deal: query_getActivity_related_objects_deal
  person: query_getActivity_related_objects_person
  organization: query_getActivity_related_objects_organization
}

type query_getActivity_related_objects_user {
  USER_ID: query_getActivity_related_objects_user_USER_ID
}

type query_getActivity_related_objects_user_USER_ID {
  """The ID of the user"""
  id: Int

  """The name of the user"""
  name: String

  """The email of the user"""
  email: String

  """Whether the user has picture or not. 0 = No picture, 1 = Has picture."""
  has_pic: Int

  """The user picture hash"""
  pic_hash: String

  """Whether the user is active or not"""
  active_flag: Boolean
  JSON: JSON
}

type query_getActivity_related_objects_deal {
  DEAL_ID: query_getActivity_related_objects_deal_DEAL_ID
}

"""The ID of the deal which is associated with the item"""
type query_getActivity_related_objects_deal_DEAL_ID {
  """The ID of the deal associated with the item"""
  id: Int

  """The title of the deal associated with the item"""
  title: String

  """The status of the deal associated with the item"""
  status: String

  """The value of the deal that is associated with the item"""
  value: Float

  """The currency of the deal value"""
  currency: String

  """The ID of the stage the deal is currently at"""
  stage_id: Int

  """The ID of the pipeline the deal is in"""
  pipeline_id: Int
}

type query_getActivity_related_objects_person {
  PERSON_ID: query_getActivity_related_objects_person_PERSON_ID
}

type query_getActivity_related_objects_person_PERSON_ID {
  """The ID of the person associated with the item"""
  id: Int

  """The name of the person associated with the item"""
  name: String

  """The emails of the person associated with the item"""
  email: [query_getActivity_related_objects_person_PERSON_ID_email_items]

  """The phone numbers of the person associated with the item"""
  phone: [query_getActivity_related_objects_person_PERSON_ID_phone_items]

  """The ID of the owner of the person that is associated with the item"""
  owner_id: Int
}

type query_getActivity_related_objects_person_PERSON_ID_email_items {
  """The type of the email"""
  label: String

  """The email of the associated person"""
  value: String

  """Whether this is the primary email or not"""
  primary: Boolean
}

type query_getActivity_related_objects_person_PERSON_ID_phone_items {
  """The type of the phone number"""
  label: String

  """The phone number of the person associated with the item"""
  value: String

  """Whether this is the primary phone number or not"""
  primary: Boolean
}

type query_getActivity_related_objects_organization {
  ORGANIZATION_ID: query_getActivity_related_objects_organization_ORGANIZATION_ID
}

"""The ID of the organization associated with the item"""
type query_getActivity_related_objects_organization_ORGANIZATION_ID {
  """The ID of the organization associated with the item"""
  id: Int

  """The name of the organization associated with the item"""
  name: String

  """
  The number of people connected with the organization that is associated with the item
  """
  people_count: Int

  """
  The ID of the owner of the organization that is associated with the item
  """
  owner_id: Int

  """The address of the organization"""
  address: String

  """The BCC email of the organization associated with the item"""
  cc_email: String
}

type fields {
  """If the response is successful or not"""
  success: Boolean
  data: [query_getActivityFields_allOf_1_data_items]
  additional_data: query_getActivityFields_allOf_1_additional_data
}

type query_getActivityFields_allOf_1_data_items {
  """The ID of the field. Value is `null` in case of subfields."""
  id: Int

  """
  The key of the field. For custom fields this is generated upon creation.
  """
  key: String

  """The name of the field"""
  name: String

  """The order number of the field"""
  order_nr: Int
  field_type: query_getActivityFields_allOf_1_data_items_field_type

  """The creation time of the field"""
  add_time: String

  """The update time of the field"""
  update_time: String

  """
  The ID of the user who created or most recently updated the field, only applicable for custom fields
  """
  last_updated_by_user_id: Int

  """The active flag of the field"""
  active_flag: Boolean

  """The edit flag of the field"""
  edit_flag: Boolean

  """Not used"""
  index_visible_flag: Boolean

  """Not used"""
  details_visible_flag: Boolean

  """Not used"""
  add_visible_flag: Boolean

  """Not used"""
  important_flag: Boolean

  """Whether or not the field of an item can be edited in bulk"""
  bulk_edit_allowed: Boolean

  """Whether or not items can be searched by this field"""
  searchable_flag: Boolean

  """Whether or not items can be filtered by this field"""
  filtering_allowed: Boolean

  """Whether or not items can be sorted by this field"""
  sortable_flag: Boolean

  """Whether or not the field is mandatory"""
  mandatory_flag: Boolean

  """
  The options of the field. When there are no options, `null` is returned.
  """
  options: [JSON]

  """
  The deleted options of the field. Only present when there is at least 1 deleted option.
  """
  options_deleted: [JSON]

  """
  Whether or not the field is a subfield of another field. Only present if field is subfield.
  """
  is_subfield: Boolean

  """The subfields of the field. Only present when the field has subfields."""
  subfields: [JSON]
}

"""
The type of the field<table><tr><th>Value</th><th>Description</th></tr><tr><td>`address`</td><td>Address field (has multiple subfields, autocompleted by Google Maps)</td></tr><tr><td>`date`</td><td>Date (format YYYY-MM-DD)</td></tr><tr><td>`daterange`</td><td>Date-range field (has a start date and end date value, both YYYY-MM-DD)</td></tr><tr><td>`double`</td><td>Numeric value</td></tr><tr><td>`enum`</td><td>Options field with a single possible chosen option</td></tr><tr></tr><tr><td>`monetary`</td><td>Monetary field (has a numeric value and a currency value)</td></tr><tr><td>`org`</td><td>Organization field (contains an organization ID which is stored on the same account)</td></tr><tr><td>`people`</td><td>Person field (contains a person ID which is stored on the same account)</td></tr><tr><td>`phone`</td><td>Phone field (up to 255 numbers and/or characters)</td></tr><tr><td>`set`</td><td>Options field with a possibility of having multiple chosen options</td></tr><tr><td>`text`</td><td>Long text (up to 65k characters)</td></tr><tr><td>`time`</td><td>Time field (format HH:MM:SS)</td></tr><tr><td>`timerange`</td><td>Time-range field (has a start time and end time value, both HH:MM:SS)</td></tr><tr><td>`user`</td><td>User field (contains a user ID of another Pipedrive user)</td></tr><tr><td>`varchar`</td><td>Text (up to 255 characters)</td></tr><tr><td>`varchar_auto`</td><td>Autocomplete text (up to 255 characters)</td></tr><tr><td>`visible_to`</td><td>System field that keeps item's visibility setting</td></tr></table>
"""
enum query_getActivityFields_allOf_1_data_items_field_type {
  address
  date
  daterange
  double
  enum
  monetary
  org
  people
  phone
  set
  text
  time
  timerange
  user
  varchar
  varchar_auto
  visible_to
}

"""The additional data of the list"""
type query_getActivityFields_allOf_1_additional_data {
  """Pagination start"""
  start: Int

  """Items shown per page"""
  limit: Int

  """If there are more list items in the collection than displayed or not"""
  more_items_in_collection: Boolean
}

type getActivityTypes {
  """If the response is successful or not"""
  success: Boolean

  """The array of activity types"""
  data: [query_getActivityTypes_allOf_1_data_items]
}

type query_getActivityTypes_allOf_1_data_items {
  """The ID of the activity type"""
  id: Int

  """The name of the activity type"""
  name: String
  icon_key: query_getActivityTypes_allOf_1_data_items_icon_key

  """
  A designated color for the activity type in 6-character HEX format (e.g. `FFFFFF` for white, `000000` for black)
  """
  color: String

  """
  An order number for the activity type. Order numbers should be used to order the types in the activity type selections.
  """
  order_nr: Int

  """
  A string that is generated by the API based on the given name of the activity type upon creation
  """
  key_string: String

  """The active flag of the activity type"""
  active_flag: Boolean

  """Whether the activity type is a custom one or not"""
  is_custom_flag: Boolean

  """The creation time of the activity type"""
  add_time: String

  """The update time of the activity type"""
  update_time: String
}

"""Icon graphic to use for representing this activity type"""
enum query_getActivityTypes_allOf_1_data_items_icon_key {
  task
  email
  meeting
  deadline
  call
  lunch
  calendar
  downarrow
  document
  smartphone
  camera
  scissors
  cogs
  bubble
  uparrow
  checkbox
  signpost
  shuffle
  addressbook
  linegraph
  picture
  car
  world
  search
  clip
  sound
  brush
  key
  padlock
  pricetag
  suitcase
  finish
  plane
  loop
  wifi
  truck
  cart
  bulb
  bell
  presentation
}

type subscriptionAddons {
  """If the response is successful or not"""
  success: Boolean

  """An array of add-ons that the company has."""
  data: [JSON]
}

type getUserCallLogs {
  """If the response is successful or not"""
  success: Boolean
  data: [responseCallLogObject2]
  additional_data: query_getUserCallLogs_additional_data
}

type responseCallLogObject2 {
  """
  The ID of the owner of the call log. Please note that a user without account settings access cannot create call logs for other users.
  """
  user_id: Int

  """
  If specified, this activity will be converted into a call log, with the information provided. When this field is used, you don't need to specify `deal_id`, `person_id` or `org_id`, as they will be ignored in favor of the values already available in the activity. The `activity_id` must refer to a `call` type activity.
  """
  activity_id: Int

  """The name of the activity this call is attached to"""
  subject: String

  """The duration of the call in seconds"""
  duration: String
  outcome: query_getUserCallLogs_data_items_allOf_0_outcome!

  """The number that made the call"""
  from_phone_number: String

  """The number called"""
  to_phone_number: String!

  """
  The date and time of the start of the call in UTC. Format: YYYY-MM-DD HH:MM:SS.
  """
  start_time: DateTime!

  """
  The date and time of the end of the call in UTC. Format: YYYY-MM-DD HH:MM:SS.
  """
  end_time: DateTime!

  """The ID of the person this call is associated with"""
  person_id: Int

  """The ID of the organization this call is associated with"""
  org_id: Int

  """The ID of the deal this call is associated with"""
  deal_id: Int

  """The note for the call log in HTML format"""
  note: String

  """The call log ID, generated when the call log was created"""
  id: String

  """
  If the call log has an audio recording attached, the value should be true
  """
  has_recording: Boolean

  """The company ID of the owner of the call log"""
  company_id: Int
}

"""Describes the outcome of the call"""
enum query_getUserCallLogs_data_items_allOf_0_outcome {
  connected
  no_answer
  left_message
  left_voicemail
  wrong_number
  busy
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

"""The additional data of the list"""
type query_getUserCallLogs_additional_data {
  """Pagination start"""
  start: Int

  """Items shown per page"""
  limit: Int

  """If there are more list items in the collection than displayed or not"""
  more_items_in_collection: Boolean
}

union getCallLog_response = getCallLog_200_response | query_getCallLog_oneOf_1

type getCallLog_200_response {
  """If the response is successful or not"""
  success: Boolean
  data: responseCallLogObject3
}

type responseCallLogObject3 {
  """
  The ID of the owner of the call log. Please note that a user without account settings access cannot create call logs for other users.
  """
  user_id: Int

  """
  If specified, this activity will be converted into a call log, with the information provided. When this field is used, you don't need to specify `deal_id`, `person_id` or `org_id`, as they will be ignored in favor of the values already available in the activity. The `activity_id` must refer to a `call` type activity.
  """
  activity_id: Int

  """The name of the activity this call is attached to"""
  subject: String

  """The duration of the call in seconds"""
  duration: String
  outcome: query_getCallLog_oneOf_0_allOf_1_data_allOf_0_outcome!

  """The number that made the call"""
  from_phone_number: String

  """The number called"""
  to_phone_number: String!

  """
  The date and time of the start of the call in UTC. Format: YYYY-MM-DD HH:MM:SS.
  """
  start_time: DateTime!

  """
  The date and time of the end of the call in UTC. Format: YYYY-MM-DD HH:MM:SS.
  """
  end_time: DateTime!

  """The ID of the person this call is associated with"""
  person_id: Int

  """The ID of the organization this call is associated with"""
  org_id: Int

  """The ID of the deal this call is associated with"""
  deal_id: Int

  """The note for the call log in HTML format"""
  note: String

  """The call log ID, generated when the call log was created"""
  id: String

  """
  If the call log has an audio recording attached, the value should be true
  """
  has_recording: Boolean

  """The company ID of the owner of the call log"""
  company_id: Int
}

"""Describes the outcome of the call"""
enum query_getCallLog_oneOf_0_allOf_1_data_allOf_0_outcome {
  connected
  no_answer
  left_message
  left_voicemail
  wrong_number
  busy
}

type query_getCallLog_oneOf_1 {
  success: Boolean

  """The description of the error"""
  error: String

  """A message describing how to solve the problem"""
  error_info: String
  data: JSON
  additional_data: JSON
}

type getCurrencies {
  """If the response is successful or not"""
  success: Boolean

  """The array of currencies"""
  data: [query_getCurrencies_data_items]
}

type query_getCurrencies_data_items {
  """The ID of the currency"""
  id: Int

  """The code of the currency"""
  code: String

  """The name of the currency"""
  name: String

  """The amount of decimal points of the currency"""
  decimal_points: Int

  """The symbol of the currency"""
  symbol: String

  """Whether the currency is active or not"""
  active_flag: Boolean

  """Whether the currency is a custom one or not"""
  is_custom_flag: Boolean
}

type getDeals {
  """If the response is successful or not"""
  success: Boolean

  """The array of deals"""
  data: [dealNonStrict3]
  additional_data: query_getDeals_additional_data
  related_objects: query_getDeals_related_objects
}

type dealNonStrict3 {
  """The ID of the deal"""
  id: Int
  creator_user_id: query_getDeals_data_items_allOf_0_creator_user_id
  user_id: query_getDeals_data_items_allOf_0_user_id
  person_id: query_getDeals_data_items_allOf_0_person_id
  org_id: query_getDeals_data_items_allOf_0_org_id

  """The ID of the deal stage"""
  stage_id: Int

  """The title of the deal"""
  title: String

  """The value of the deal"""
  value: Float

  """The currency associated with the deal"""
  currency: String

  """The creation date and time of the deal"""
  add_time: String

  """The last updated date and time of the deal"""
  update_time: String

  """The last updated date and time of the deal stage"""
  stage_change_time: String

  """Whether the deal is active or not"""
  active: Boolean

  """Whether the deal is deleted or not"""
  deleted: Boolean

  """The status of the deal"""
  status: String

  """The success probability percentage of the deal"""
  probability: Float

  """The date of the next activity associated with the deal"""
  next_activity_date: String

  """The time of the next activity associated with the deal"""
  next_activity_time: String

  """The ID of the next activity associated with the deal"""
  next_activity_id: Int

  """The ID of the last activity associated with the deal"""
  last_activity_id: Int

  """The date of the last activity associated with the deal"""
  last_activity_date: String

  """The reason for losing the deal"""
  lost_reason: String

  """The visibility of the deal"""
  visible_to: String

  """The date and time of closing the deal"""
  close_time: String

  """The ID of pipeline associated with the deal"""
  pipeline_id: Int

  """The date and time of changing the deal status as won"""
  won_time: String

  """The date and time of the first time changing the deal status as won"""
  first_won_time: String

  """The date and time of changing the deal status as lost"""
  lost_time: String

  """The number of products associated with the deal"""
  products_count: Int

  """The number of files associated with the deal"""
  files_count: Int

  """The number of notes associated with the deal"""
  notes_count: Int

  """The number of followers associated with the deal"""
  followers_count: Int

  """The number of emails associated with the deal"""
  email_messages_count: Int

  """The number of activities associated with the deal"""
  activities_count: Int

  """The number of completed activities associated with the deal"""
  done_activities_count: Int

  """The number of incomplete activities associated with the deal"""
  undone_activities_count: Int

  """The number of participants associated with the deal"""
  participants_count: Int

  """The expected close date of the deal"""
  expected_close_date: Date

  """The date and time of the last incoming email associated with the deal"""
  last_incoming_mail_time: String

  """The date and time of the last outgoing email associated with the deal"""
  last_outgoing_mail_time: String

  """The label assigned to the deal"""
  label: Int

  """The order number of the deal stage associated with the deal"""
  stage_order_nr: Int

  """The name of the person associated with the deal"""
  person_name: String

  """The name of the organization associated with the deal"""
  org_name: String

  """The subject of the next activity associated with the deal"""
  next_activity_subject: String

  """The type of the next activity associated with the deal"""
  next_activity_type: String

  """The duration of the next activity associated with the deal"""
  next_activity_duration: String

  """The note of the next activity associated with the deal"""
  next_activity_note: String

  """The deal value formatted with selected currency. E.g. US$500"""
  formatted_value: String

  """
  Probability times deal value. Probability can either be deal probability or if not set, then stage probability.
  """
  weighted_value: Float

  """The weighted_value formatted with selected currency. E.g. US$500"""
  formatted_weighted_value: String

  """The currency associated with the deal"""
  weighted_value_currency: String

  """The date and time of changing the deal status as rotten"""
  rotten_time: String

  """The name of the deal owner"""
  owner_name: String

  """The BCC email of the deal"""
  cc_email: String

  """If the organization that is associated with the deal is hidden or not"""
  org_hidden: Boolean

  """If the person that is associated with the deal is hidden or not"""
  person_hidden: Boolean
}

"""The creator of the deal"""
type query_getDeals_data_items_allOf_0_creator_user_id {
  """The ID of the deal creator"""
  id: Int

  """The name of the deal creator"""
  name: String

  """The email of the deal creator"""
  email: String

  """If the creator has a picture or not"""
  has_pic: Boolean

  """The creator picture hash"""
  pic_hash: String

  """Whether the creator is active or not"""
  active_flag: Boolean

  """The ID of the deal creator"""
  value: Int
}

type query_getDeals_data_items_allOf_0_user_id {
  """The ID of the user"""
  id: Int

  """The name of the user"""
  name: String

  """The email of the user"""
  email: String

  """If the user has a picture or not"""
  has_pic: Boolean

  """The user picture hash"""
  pic_hash: String

  """Whether the user is active or not"""
  active_flag: Boolean

  """The ID of the user"""
  value: Int
}

type query_getDeals_data_items_allOf_0_person_id {
  """Whether the associated person is active or not"""
  active_flag: Boolean

  """The name of the person associated with the deal"""
  name: String

  """The emails of the person associated with the deal"""
  email: [query_getDeals_data_items_allOf_0_person_id_allOf_0_email_items]

  """The phone numbers of the person associated with the deal"""
  phone: [query_getDeals_data_items_allOf_0_person_id_allOf_0_phone_items]

  """The ID of the owner of the person that is associated with the deal"""
  owner_id: Int

  """The ID of the person associated with the deal"""
  value: Int
}

type query_getDeals_data_items_allOf_0_person_id_allOf_0_email_items {
  """The type of the email"""
  label: String

  """The email of the associated person"""
  value: String

  """If this is the primary email or not"""
  primary: Boolean
}

type query_getDeals_data_items_allOf_0_person_id_allOf_0_phone_items {
  """The type of the phone number"""
  label: String

  """The phone number of the person associated with the deal"""
  value: String

  """If this is the primary phone number or not"""
  primary: Boolean
}

type query_getDeals_data_items_allOf_0_org_id {
  """The name of the organization associated with the deal"""
  name: String

  """
  The number of people connected with the organization that is associated with the deal
  """
  people_count: Int

  """
  The ID of the owner of the organization that is associated with the deal
  """
  owner_id: Int

  """The address of the organization that is associated with the deal"""
  address: String

  """Whether the associated organization is active or not"""
  active_flag: Boolean

  """The BCC email of the organization associated with the deal"""
  cc_email: String

  """The ID of the organization associated with the deal"""
  value: Int
}

"""The additional data of the list"""
type query_getDeals_additional_data {
  """Pagination start"""
  start: Int

  """Items shown per page"""
  limit: Int

  """If there are more list items in the collection than displayed or not"""
  more_items_in_collection: Boolean
}

type query_getDeals_related_objects {
  user: query_getDeals_related_objects_user
  organization: query_getDeals_related_objects_organization
  person: query_getDeals_related_objects_person
}

"""The user who is associated with the deal"""
type query_getDeals_related_objects_user {
  """The ID of the user"""
  id: Int

  """The name of the user"""
  name: String

  """The email of the user"""
  email: String

  """If the user has a picture or not"""
  has_pic: Boolean

  """The user picture hash"""
  pic_hash: String

  """Whether the user is active or not"""
  active_flag: Boolean
}

"""The organization which is associated with the deal"""
type query_getDeals_related_objects_organization {
  """The name of the organization associated with the deal"""
  name: String

  """
  The number of people connected with the organization that is associated with the deal
  """
  people_count: Int

  """
  The ID of the owner of the organization that is associated with the deal
  """
  owner_id: Int

  """The address of the organization that is associated with the deal"""
  address: String

  """Whether the associated organization is active or not"""
  active_flag: Boolean

  """The BCC email of the organization associated with the deal"""
  cc_email: String
}

"""The person who is associated with the deal"""
type query_getDeals_related_objects_person {
  """Whether the associated person is active or not"""
  active_flag: Boolean

  """The name of the person associated with the deal"""
  name: String

  """The emails of the person associated with the deal"""
  email: [query_getDeals_related_objects_person_email_items]

  """The phone numbers of the person associated with the deal"""
  phone: [query_getDeals_related_objects_person_phone_items]

  """The ID of the owner of the person that is associated with the deal"""
  owner_id: Int
}

type query_getDeals_related_objects_person_email_items {
  """The type of the email"""
  label: String

  """The email of the associated person"""
  value: String

  """If this is the primary email or not"""
  primary: Boolean
}

type query_getDeals_related_objects_person_phone_items {
  """The type of the phone number"""
  label: String

  """The phone number of the person associated with the deal"""
  value: String

  """If this is the primary phone number or not"""
  primary: Boolean
}

"""
Only fetch deals with a specific status. If omitted, all not deleted deals are returned. If set to deleted, deals that have been deleted up to 30 days ago will be included.
"""
enum queryInput_getDeals_status {
  open
  won
  lost
  deleted
  all_not_deleted
}

"""
When supplied, only deals owned by you are returned. However, `filter_id` takes precedence over `owned_by_you` when both are supplied.
"""
enum queryInput_getDeals_owned_by_you {
  _0
  _1
}

type searchDeals {
  """If the response is successful or not"""
  success: Boolean
  data: query_searchDeals_allOf_1_data
  additional_data: query_searchDeals_allOf_1_additional_data
}

type query_searchDeals_allOf_1_data {
  """The array of deals"""
  items: [query_searchDeals_allOf_1_data_items_items]
}

type query_searchDeals_allOf_1_data_items_items {
  """Search result relevancy"""
  result_score: Float
  item: query_searchDeals_allOf_1_data_items_items_item
}

type query_searchDeals_allOf_1_data_items_items_item {
  """The ID of the deal"""
  id: Int

  """The type of the item"""
  type: String

  """The title of the deal"""
  title: String

  """The value of the deal"""
  value: Int

  """The currency of the deal"""
  currency: String

  """The status of the deal"""
  status: String

  """The visibility of the deal"""
  visible_to: Int
  owner: query_searchDeals_allOf_1_data_items_items_item_owner
  stage: query_searchDeals_allOf_1_data_items_items_item_stage
  person: query_searchDeals_allOf_1_data_items_items_item_person
  organization: query_searchDeals_allOf_1_data_items_items_item_organization

  """Custom fields"""
  custom_fields: [String]

  """An array of notes"""
  notes: [String]
}

type query_searchDeals_allOf_1_data_items_items_item_owner {
  """The ID of the owner of the deal"""
  id: Int
}

type query_searchDeals_allOf_1_data_items_items_item_stage {
  """The ID of the stage of the deal"""
  id: Int

  """The name of the stage of the deal"""
  name: String
}

type query_searchDeals_allOf_1_data_items_items_item_person {
  """The ID of the person the deal is associated with"""
  id: Int

  """The name of the person the deal is associated with"""
  name: String
}

type query_searchDeals_allOf_1_data_items_items_item_organization {
  """The ID of the organization the deal is associated with"""
  id: Int

  """The name of the organization the deal is associated with"""
  name: String
}

type query_searchDeals_allOf_1_additional_data {
  pagination: query_searchDeals_allOf_1_additional_data_pagination
}

"""Pagination details of the list"""
type query_searchDeals_allOf_1_additional_data_pagination {
  """Pagination start"""
  start: Int

  """Items shown per page"""
  limit: Int

  """Whether there are more list items in the collection than displayed"""
  more_items_in_collection: Boolean

  """Next pagination start"""
  next_start: Int
}

"""
A comma-separated string array. The fields to perform the search from. Defaults to all of them.
"""
enum queryInput_searchDeals_fields {
  custom_fields
  notes
  title
}

"""
Will filter deals by the provided specific status. open = Open, won = Won, lost = Lost. The upper limit of found deals associated with the status is 2000.
"""
enum queryInput_searchDeals_status {
  open
  won
  lost
}

enum deal_cc_email_const {
  deal_cc_email
}

type getDealsSummary {
  """If the response is successful or not"""
  success: Boolean
  data: query_getDealsSummary_data
}

"""The summary of deals"""
type query_getDealsSummary_data {
  values_total: query_getDealsSummary_data_values_total
  weighted_values_total: query_getDealsSummary_data_weighted_values_total

  """The total number of deals"""
  total_count: Int

  """The total value of deals converted into the company default currency"""
  total_currency_converted_value: Float

  """
  The total weighted value of deals converted into the company default currency
  """
  total_weighted_currency_converted_value: Float

  """
  The total converted value of deals formatted with the company default currency. E.g. US$5,100.96
  """
  total_currency_converted_value_formatted: String

  """
  The total weighted value of deals formatted with the company default currency. E.g. US$5,100.96
  """
  total_weighted_currency_converted_value_formatted: String
}

"""The total values of the deals grouped by deal currency"""
type query_getDealsSummary_data_values_total {
  """The total value of deals in the deal currency group"""
  value: Float

  """The number of deals in the deal currency group"""
  count: Int

  """The total value of deals converted into the company default currency"""
  value_converted: Float

  """The total value of deals formatted with deal currency. E.g. €50"""
  value_formatted: String

  """The value_converted formatted with deal currency. E.g. US$50.10"""
  value_converted_formatted: String
}

"""
The total weighted values of the deals grouped by deal currency. The weighted value is calculated as probability times deal value.
"""
type query_getDealsSummary_data_weighted_values_total {
  """The total weighted value of the deals in the deal currency group"""
  value: Float

  """The number of deals in the deal currency group"""
  count: Int

  """
  The total weighted value of the deals formatted with deal currency. E.g. €50
  """
  value_formatted: String
}

"""
Only fetch deals with a specific status. open = Open, won = Won, lost = Lost
"""
enum queryInput_getDealsSummary_status {
  open
  won
  lost
}

type getDealsTimeline {
  """If the response is successful or not"""
  success: Boolean
  data: query_getDealsTimeline_data
}

"""
Open and won deals grouped into periods by defined interval, amount and date-type dealField (`field_key`)
"""
type query_getDealsTimeline_data {
  """The start date and time of the period"""
  period_start: String

  """The end date and time of the period"""
  period_end: String
  deals: [query_getDealsTimeline_data_deals_items]
  totals: query_getDealsTimeline_data_totals
}

type query_getDealsTimeline_data_deals_items {
  """The ID of the deal"""
  id: Int

  """The ID of the deal creator"""
  creator_user_id: Int

  """The ID of the user"""
  user_id: Int

  """The ID of the person associated with the deal"""
  person_id: Int

  """The ID of the organization associated with the deal"""
  org_id: Int

  """The ID of the deal stage"""
  stage_id: Int

  """The title of the deal"""
  title: String

  """The value of the deal"""
  value: Float

  """The currency associated with the deal"""
  currency: String

  """The creation date and time of the deal"""
  add_time: String

  """The last updated date and time of the deal"""
  update_time: String

  """The last updated date and time of the deal stage"""
  stage_change_time: String

  """Whether the deal is active or not"""
  active: Boolean

  """Whether the deal is deleted or not"""
  deleted: Boolean

  """The status of the deal"""
  status: String

  """The success probability percentage of the deal"""
  probability: Float

  """The date of the next activity associated with the deal"""
  next_activity_date: String

  """The time of the next activity associated with the deal"""
  next_activity_time: String

  """The ID of the next activity associated with the deal"""
  next_activity_id: Int

  """The ID of the last activity associated with the deal"""
  last_activity_id: Int

  """The date of the last activity associated with the deal"""
  last_activity_date: String

  """The reason for losing the deal"""
  lost_reason: String

  """The visibility of the deal"""
  visible_to: String

  """The date and time of closing the deal"""
  close_time: String

  """The ID of pipeline associated with the deal"""
  pipeline_id: Int

  """The date and time of changing the deal status as won"""
  won_time: String

  """The date and time of the first time changing the deal status as won"""
  first_won_time: String

  """The date and time of changing the deal status as lost"""
  lost_time: String

  """The number of products associated with the deal"""
  products_count: Int

  """The number of files associated with the deal"""
  files_count: Int

  """The number of notes associated with the deal"""
  notes_count: Int

  """The number of followers associated with the deal"""
  followers_count: Int

  """The number of emails associated with the deal"""
  email_messages_count: Int

  """The number of activities associated with the deal"""
  activities_count: Int

  """The number of completed activities associated with the deal"""
  done_activities_count: Int

  """The number of incomplete activities associated with the deal"""
  undone_activities_count: Int

  """The number of participants associated with the deal"""
  participants_count: Int

  """The expected close date of the deal"""
  expected_close_date: Date

  """The date and time of the last incoming email associated with the deal"""
  last_incoming_mail_time: String

  """The date and time of the last outgoing email associated with the deal"""
  last_outgoing_mail_time: String

  """The label assigned to the deal"""
  label: Int

  """The order number of the deal stage associated with the deal"""
  stage_order_nr: Int

  """The name of the person associated with the deal"""
  person_name: String

  """The name of the organization associated with the deal"""
  org_name: String

  """The subject of the next activity associated with the deal"""
  next_activity_subject: String

  """The type of the next activity associated with the deal"""
  next_activity_type: String

  """The duration of the next activity associated with the deal"""
  next_activity_duration: String

  """The note of the next activity associated with the deal"""
  next_activity_note: String

  """The deal value formatted with selected currency. E.g. US$500"""
  formatted_value: String

  """
  Probability times deal value. Probability can either be deal probability or if not set, then stage probability.
  """
  weighted_value: Float

  """The weighted_value formatted with selected currency. E.g. US$500"""
  formatted_weighted_value: String

  """The currency associated with the deal"""
  weighted_value_currency: String

  """The date and time of changing the deal status as rotten"""
  rotten_time: String

  """The name of the deal owner"""
  owner_name: String

  """The BCC email of the deal"""
  cc_email: String

  """If the organization that is associated with the deal is hidden or not"""
  org_hidden: Boolean

  """If the person that is associated with the deal is hidden or not"""
  person_hidden: Boolean
}

"""The total values of deals for the given period"""
type query_getDealsTimeline_data_totals {
  """The number of deals for the given period"""
  count: Int
  values: JSON
  weighted_values: JSON

  """The number of open deals for the given period"""
  open_count: Int
  open_values: JSON
  weighted_open_values: JSON

  """The number of won deals for the given period"""
  won_count: Int
  won_values: JSON
}

"""
The type of the interval<table><tr><th>Value</th><th>Description</th></tr><tr><td>`day`</td><td>Day</td></tr><tr><td>`week`</td><td>A full week (7 days) starting from `start_date`</td></tr><tr><td>`month`</td><td>A full month (depending on the number of days in given month) starting from `start_date`</td></tr><tr><td>`quarter`</td><td>A full quarter (3 months) starting from `start_date`</td></tr></table>
"""
enum queryInput_getDealsTimeline_interval {
  day
  week
  month
  quarter
}

"""
Whether to exclude deals list (1) or not (0). Note that when deals are excluded, the timeline summary (counts and values) is still returned.
"""
enum queryInput_getDealsTimeline_exclude_deals {
  _0
  _1
}

type getDeal {
  """If the response is successful or not"""
  success: Boolean
  data: dealNonStrictWithDetails
  additional_data: query_getDeal_additional_data
  related_objects: query_getDeal_related_objects
}

type dealNonStrictWithDetails {
  """The ID of the deal"""
  id: Int
  creator_user_id: query_getDeal_data_allOf_0_allOf_0_creator_user_id
  user_id: query_getDeal_data_allOf_0_allOf_0_user_id
  person_id: query_getDeal_data_allOf_0_allOf_0_person_id
  org_id: query_getDeal_data_allOf_0_allOf_0_org_id

  """The ID of the deal stage"""
  stage_id: Int

  """The title of the deal"""
  title: String

  """The value of the deal"""
  value: Float

  """The currency associated with the deal"""
  currency: String

  """The creation date and time of the deal"""
  add_time: String

  """The last updated date and time of the deal"""
  update_time: String

  """The last updated date and time of the deal stage"""
  stage_change_time: String

  """Whether the deal is active or not"""
  active: Boolean

  """Whether the deal is deleted or not"""
  deleted: Boolean

  """The status of the deal"""
  status: String

  """The success probability percentage of the deal"""
  probability: Float

  """The date of the next activity associated with the deal"""
  next_activity_date: String

  """The time of the next activity associated with the deal"""
  next_activity_time: String

  """The ID of the next activity associated with the deal"""
  next_activity_id: Int

  """The ID of the last activity associated with the deal"""
  last_activity_id: Int

  """The date of the last activity associated with the deal"""
  last_activity_date: String

  """The reason for losing the deal"""
  lost_reason: String

  """The visibility of the deal"""
  visible_to: String

  """The date and time of closing the deal"""
  close_time: String

  """The ID of pipeline associated with the deal"""
  pipeline_id: Int

  """The date and time of changing the deal status as won"""
  won_time: String

  """The date and time of the first time changing the deal status as won"""
  first_won_time: String

  """The date and time of changing the deal status as lost"""
  lost_time: String

  """The number of products associated with the deal"""
  products_count: Int

  """The number of files associated with the deal"""
  files_count: Int

  """The number of notes associated with the deal"""
  notes_count: Int

  """The number of followers associated with the deal"""
  followers_count: Int

  """The number of emails associated with the deal"""
  email_messages_count: Int

  """The number of activities associated with the deal"""
  activities_count: Int

  """The number of completed activities associated with the deal"""
  done_activities_count: Int

  """The number of incomplete activities associated with the deal"""
  undone_activities_count: Int

  """The number of participants associated with the deal"""
  participants_count: Int

  """The expected close date of the deal"""
  expected_close_date: Date

  """The date and time of the last incoming email associated with the deal"""
  last_incoming_mail_time: String

  """The date and time of the last outgoing email associated with the deal"""
  last_outgoing_mail_time: String

  """The label assigned to the deal"""
  label: Int

  """The order number of the deal stage associated with the deal"""
  stage_order_nr: Int

  """The name of the person associated with the deal"""
  person_name: String

  """The name of the organization associated with the deal"""
  org_name: String

  """The subject of the next activity associated with the deal"""
  next_activity_subject: String

  """The type of the next activity associated with the deal"""
  next_activity_type: String

  """The duration of the next activity associated with the deal"""
  next_activity_duration: String

  """The note of the next activity associated with the deal"""
  next_activity_note: String

  """The deal value formatted with selected currency. E.g. US$500"""
  formatted_value: String

  """
  Probability times deal value. Probability can either be deal probability or if not set, then stage probability.
  """
  weighted_value: Float

  """The weighted_value formatted with selected currency. E.g. US$500"""
  formatted_weighted_value: String

  """The currency associated with the deal"""
  weighted_value_currency: String

  """The date and time of changing the deal status as rotten"""
  rotten_time: String

  """The name of the deal owner"""
  owner_name: String

  """The BCC email of the deal"""
  cc_email: String

  """If the organization that is associated with the deal is hidden or not"""
  org_hidden: Boolean

  """If the person that is associated with the deal is hidden or not"""
  person_hidden: Boolean
  average_time_to_won: query_getDeal_data_allOf_1_average_time_to_won

  """The average of the deal stage progression"""
  average_stage_progress: Float
  age: query_getDeal_data_allOf_1_age
  stay_in_pipeline_stages: query_getDeal_data_allOf_1_stay_in_pipeline_stages
  last_activity: JSON
  next_activity: JSON
}

"""The creator of the deal"""
type query_getDeal_data_allOf_0_allOf_0_creator_user_id {
  """The ID of the deal creator"""
  id: Int

  """The name of the deal creator"""
  name: String

  """The email of the deal creator"""
  email: String

  """If the creator has a picture or not"""
  has_pic: Boolean

  """The creator picture hash"""
  pic_hash: String

  """Whether the creator is active or not"""
  active_flag: Boolean

  """The ID of the deal creator"""
  value: Int
}

type query_getDeal_data_allOf_0_allOf_0_user_id {
  """The ID of the user"""
  id: Int

  """The name of the user"""
  name: String

  """The email of the user"""
  email: String

  """If the user has a picture or not"""
  has_pic: Boolean

  """The user picture hash"""
  pic_hash: String

  """Whether the user is active or not"""
  active_flag: Boolean

  """The ID of the user"""
  value: Int
}

type query_getDeal_data_allOf_0_allOf_0_person_id {
  """Whether the associated person is active or not"""
  active_flag: Boolean

  """The name of the person associated with the deal"""
  name: String

  """The emails of the person associated with the deal"""
  email: [query_getDeal_data_allOf_0_allOf_0_person_id_allOf_0_email_items]

  """The phone numbers of the person associated with the deal"""
  phone: [query_getDeal_data_allOf_0_allOf_0_person_id_allOf_0_phone_items]

  """The ID of the owner of the person that is associated with the deal"""
  owner_id: Int

  """The ID of the person associated with the deal"""
  value: Int
}

type query_getDeal_data_allOf_0_allOf_0_person_id_allOf_0_email_items {
  """The type of the email"""
  label: String

  """The email of the associated person"""
  value: String

  """If this is the primary email or not"""
  primary: Boolean
}

type query_getDeal_data_allOf_0_allOf_0_person_id_allOf_0_phone_items {
  """The type of the phone number"""
  label: String

  """The phone number of the person associated with the deal"""
  value: String

  """If this is the primary phone number or not"""
  primary: Boolean
}

type query_getDeal_data_allOf_0_allOf_0_org_id {
  """The name of the organization associated with the deal"""
  name: String

  """
  The number of people connected with the organization that is associated with the deal
  """
  people_count: Int

  """
  The ID of the owner of the organization that is associated with the deal
  """
  owner_id: Int

  """The address of the organization that is associated with the deal"""
  address: String

  """Whether the associated organization is active or not"""
  active_flag: Boolean

  """The BCC email of the organization associated with the deal"""
  cc_email: String

  """The ID of the organization associated with the deal"""
  value: Int
}

"""The average time to win the deal"""
type query_getDeal_data_allOf_1_average_time_to_won {
  """Years"""
  y: Int

  """Months"""
  m: Int

  """Days"""
  d: Int

  """Hours"""
  h: Int

  """Minutes"""
  i: Int

  """Seconds"""
  s: Int

  """The total time in seconds"""
  total_seconds: Int
}

"""The lifetime of the deal"""
type query_getDeal_data_allOf_1_age {
  """Years"""
  y: Int

  """Months"""
  m: Int

  """Days"""
  d: Int

  """Hours"""
  h: Int

  """Minutes"""
  i: Int

  """Seconds"""
  s: Int

  """The total time in seconds"""
  total_seconds: Int
}

"""
The details of the duration of the deal being in each stage of the pipeline
"""
type query_getDeal_data_allOf_1_stay_in_pipeline_stages {
  times_in_stages: JSON

  """The order of the deal progression through the pipeline stages"""
  order_of_stages: [Int]
}

type query_getDeal_additional_data {
  """The BCC email of the deal"""
  dropbox_email: String
}

type query_getDeal_related_objects {
  user: query_getDeal_related_objects_user
  organization: query_getDeal_related_objects_organization
  person: query_getDeal_related_objects_person
}

"""The user who is associated with the deal"""
type query_getDeal_related_objects_user {
  """The ID of the user"""
  id: Int

  """The name of the user"""
  name: String

  """The email of the user"""
  email: String

  """If the user has a picture or not"""
  has_pic: Boolean

  """The user picture hash"""
  pic_hash: String

  """Whether the user is active or not"""
  active_flag: Boolean
}

"""The organization which is associated with the deal"""
type query_getDeal_related_objects_organization {
  """The name of the organization associated with the deal"""
  name: String

  """
  The number of people connected with the organization that is associated with the deal
  """
  people_count: Int

  """
  The ID of the owner of the organization that is associated with the deal
  """
  owner_id: Int

  """The address of the organization that is associated with the deal"""
  address: String

  """Whether the associated organization is active or not"""
  active_flag: Boolean

  """The BCC email of the organization associated with the deal"""
  cc_email: String
}

"""The person who is associated with the deal"""
type query_getDeal_related_objects_person {
  """Whether the associated person is active or not"""
  active_flag: Boolean

  """The name of the person associated with the deal"""
  name: String

  """The emails of the person associated with the deal"""
  email: [query_getDeal_related_objects_person_email_items]

  """The phone numbers of the person associated with the deal"""
  phone: [query_getDeal_related_objects_person_phone_items]

  """The ID of the owner of the person that is associated with the deal"""
  owner_id: Int
}

type query_getDeal_related_objects_person_email_items {
  """The type of the email"""
  label: String

  """The email of the associated person"""
  value: String

  """If this is the primary email or not"""
  primary: Boolean
}

type query_getDeal_related_objects_person_phone_items {
  """The type of the phone number"""
  label: String

  """The phone number of the person associated with the deal"""
  value: String

  """If this is the primary phone number or not"""
  primary: Boolean
}

type getDealActivities {
  """If the response is successful or not"""
  success: Boolean

  """The array of activities"""
  data: [query_getDealActivities_allOf_1_data_items]
  additional_data: activityDistributionDataWithAdditionalData
  related_objects: query_getDealActivities_allOf_1_related_objects
}

type query_getDealActivities_allOf_1_data_items {
  """The due date of the activity. Format: YYYY-MM-DD"""
  due_date: Date

  """The due time of the activity in UTC. Format: HH:MM"""
  due_time: String

  """The duration of the activity. Format: HH:MM"""
  duration: String

  """The ID of the deal this activity is associated with"""
  deal_id: Int

  """The ID of the lead in the UUID format this activity is associated with"""
  lead_id: UUID

  """The ID of the person this activity is associated with"""
  person_id: Int

  """The ID of the organization this activity is associated with"""
  org_id: Int

  """The note of the activity (HTML format)"""
  note: String

  """
  The address of the activity. Pipedrive will automatically check if the location matches a geo-location on Google maps.
  """
  location: String

  """
  Additional details about the activity that is synced to your external calendar. Unlike the note added to the activity, the description is publicly visible to any guests added to the activity.
  """
  public_description: String

  """The activity ID, generated when the activity was created"""
  id: Int

  """Whether the activity is done or not"""
  done: Boolean

  """The subject of the activity"""
  subject: String

  """
  The type of the activity. This is in correlation with the `key_string` parameter of ActivityTypes.
  """
  type: String

  """The ID of the user whom the activity is assigned to"""
  user_id: Int

  """
  List of multiple persons (participants) this activity is associated with
  """
  participants: [JSON]

  """
  Marks if the activity is set as 'Busy' or 'Free'. If the flag is set to `true`, your customers will not be able to book that time slot through any Scheduler links. The flag can also be unset. When the value of the flag is unset (`null`), the flag defaults to 'Busy' if it has a time set, and 'Free' if it is an all-day event without specified time.
  """
  busy_flag: Boolean

  """
  The attendees of the activity. This can be either your existing Pipedrive contacts or an external email address.
  """
  attendees: [JSON]

  """The user's company ID"""
  company_id: Int

  """
  If the activity references some other object, it is indicated here. For example, value `Salesphone` refers to activities created with Caller.
  """
  reference_type: String

  """Together with the `reference_type`, gives the ID of the other object"""
  reference_id: Int

  """The ID of Marketplace app, which is connected to this activity"""
  conference_meeting_client: String

  """The link to join the meeting which is associated with this activity"""
  conference_meeting_url: String

  """
  The meeting ID of the meeting provider (Zoom, MS Teams etc.) that is associated with this activity
  """
  conference_meeting_id: String

  """
  The creation date and time of the activity in UTC. Format: YYYY-MM-DD HH:MM:SS.
  """
  add_time: String

  """
  The date and time this activity was marked as done. Format: YYYY-MM-DD HH:MM:SS.
  """
  marked_as_done_time: String

  """
  The date and time of latest notifications sent about this activity to the participants or the attendees of this activity
  """
  last_notification_time: String

  """
  The ID of the user who triggered the sending of the latest notifications about this activity to the participants or the attendees of this activity
  """
  last_notification_user_id: Int

  """The ID of the language the notifications are sent in"""
  notification_language_id: Int

  """Whether the activity is active or not"""
  active_flag: Boolean

  """
  The last update date and time of the activity. Format: YYYY-MM-DD HH:MM:SS.
  """
  update_time: String

  """The ID of the user who was the last to update this activity"""
  update_user_id: Int

  """
  For the activity which syncs to Google calendar, this is the Google event ID. NB! This field is related to old Google calendar sync and will be deprecated soon.
  """
  gcal_event_id: String

  """
  The Google calendar ID that this activity syncs to. NB! This field is related to old Google calendar sync and will be deprecated soon.
  """
  google_calendar_id: String

  """
  The Google calendar API etag (version) that is used for syncing this activity. NB! This field is related to old Google calendar sync and will be deprecated soon.
  """
  google_calendar_etag: String

  """
  For activities that sync to an external calendar, this setting indicates if the activity syncs with context (what are the deals, persons, organizations this activity is related to)
  """
  calendar_sync_include_context: String

  """The timezone the activity was created in an external calendar"""
  source_timezone: String

  """
  The rule for the recurrence of the activity. Is important for activities synced into Pipedrive from an external calendar. Example: "RRULE:FREQ=WEEKLY;BYDAY=WE"
  """
  rec_rule: String

  """
  Additional rules for the recurrence of the activity, extend the `rec_rule`. Is important for activities synced into Pipedrive from an external calendar.
  """
  rec_rule_extension: String

  """
  The ID of parent activity for a recurrent activity if the current activity is an exception to recurrence rules
  """
  rec_master_activity_id: Int

  """
  The list of recurring activity instances. It is in a structure as follows: `[{due_date: "2020-06-24", due_time: "10:00:00"}]`
  """
  series: [JSON]

  """The ID of the user who created the activity"""
  created_by_user_id: Int

  """Subfield of location field. Indicates apartment/suite number."""
  location_subpremise: String

  """Subfield of location field. Indicates house number."""
  location_street_number: String

  """Subfield of location field. Indicates street name."""
  location_route: String

  """Subfield of location field. Indicates district/sublocality."""
  location_sublocality: String

  """Subfield of location field. Indicates city/town/village/locality."""
  location_locality: String

  """Subfield of location field. Indicates state/county."""
  location_admin_area_level_1: String

  """Subfield of location field. Indicates region."""
  location_admin_area_level_2: String

  """Subfield of location field. Indicates country."""
  location_country: String

  """Subfield of location field. Indicates ZIP/postal code."""
  location_postal_code: String

  """Subfield of location field. Indicates full/combined address."""
  location_formatted_address: String

  """The name of the organization this activity is associated with"""
  org_name: String

  """The name of the person this activity is associated with"""
  person_name: String

  """The name of the deal this activity is associated with"""
  deal_title: String

  """The name of the user this activity is owned by"""
  owner_name: String

  """The BCC email address of the person"""
  person_dropbox_bcc: String

  """The BCC email address of the deal"""
  deal_dropbox_bcc: String

  """
  The ID of the user to whom the activity is assigned to. Equal to `user_id`.
  """
  assigned_to_user_id: Int
  file: JSON
}

type activityDistributionDataWithAdditionalData {
  activity_distribution: query_getDealActivities_allOf_1_additional_data_allOf_0_activity_distribution

  """Pagination start"""
  start: Int

  """Items shown per page"""
  limit: Int

  """If there are more list items in the collection than displayed or not"""
  more_items_in_collection: Boolean
}

"""
The distribution of activities related to the organization grouped by the user ID
"""
type query_getDealActivities_allOf_1_additional_data_allOf_0_activity_distribution {
  ASSIGNED_TO_USER_ID: query_getDealActivities_allOf_1_additional_data_allOf_0_activity_distribution_ASSIGNED_TO_USER_ID
}

"""The ID of the user"""
type query_getDealActivities_allOf_1_additional_data_allOf_0_activity_distribution_ASSIGNED_TO_USER_ID {
  activities: query_getDealActivities_allOf_1_additional_data_allOf_0_activity_distribution_ASSIGNED_TO_USER_ID_activities

  """The name of the user"""
  name: String

  """The overall count of activities for the user"""
  activity_count: Int

  """The percentage of activities belongs to the user"""
  share: Int
}

"""The count of activities related to the user grouped by activity type"""
type query_getDealActivities_allOf_1_additional_data_allOf_0_activity_distribution_ASSIGNED_TO_USER_ID_activities {
  """The count of activities related to a specific type"""
  ACTIVITY_TYPE_NAME: Int
}

type query_getDealActivities_allOf_1_related_objects {
  organization: query_getDealActivities_allOf_1_related_objects_organization
  person: query_getDealActivities_allOf_1_related_objects_person
  deal: query_getDealActivities_allOf_1_related_objects_deal
  user: query_getDealActivities_allOf_1_related_objects_user
}

type query_getDealActivities_allOf_1_related_objects_organization {
  ORGANIZATION_ID: query_getDealActivities_allOf_1_related_objects_organization_ORGANIZATION_ID
}

"""The ID of the organization associated with the item"""
type query_getDealActivities_allOf_1_related_objects_organization_ORGANIZATION_ID {
  """Whether the associated organization is active or not"""
  active_flag: Boolean

  """The ID of the organization associated with the item"""
  id: Int

  """The name of the organization associated with the item"""
  name: String

  """
  The number of people connected with the organization that is associated with the item
  """
  people_count: Int

  """
  The ID of the owner of the organization that is associated with the item
  """
  owner_id: Int

  """The address of the organization"""
  address: String

  """The BCC email of the organization associated with the item"""
  cc_email: String
}

type query_getDealActivities_allOf_1_related_objects_person {
  PERSON_ID: query_getDealActivities_allOf_1_related_objects_person_PERSON_ID
}

"""The ID of the person associated with the item"""
type query_getDealActivities_allOf_1_related_objects_person_PERSON_ID {
  """Whether the associated person is active or not"""
  active_flag: Boolean

  """The ID of the person associated with the item"""
  id: Int

  """The name of the person associated with the item"""
  name: String

  """The emails of the person associated with the item"""
  email: [query_getDealActivities_allOf_1_related_objects_person_PERSON_ID_allOf_1_email_items]

  """The phone numbers of the person associated with the item"""
  phone: [query_getDealActivities_allOf_1_related_objects_person_PERSON_ID_allOf_1_phone_items]

  """The ID of the owner of the person that is associated with the item"""
  owner_id: Int
}

type query_getDealActivities_allOf_1_related_objects_person_PERSON_ID_allOf_1_email_items {
  """The type of the email"""
  label: String

  """The email of the associated person"""
  value: String

  """Whether this is the primary email or not"""
  primary: Boolean
}

type query_getDealActivities_allOf_1_related_objects_person_PERSON_ID_allOf_1_phone_items {
  """The type of the phone number"""
  label: String

  """The phone number of the person associated with the item"""
  value: String

  """Whether this is the primary phone number or not"""
  primary: Boolean
}

type query_getDealActivities_allOf_1_related_objects_deal {
  DEAL_ID: query_getDealActivities_allOf_1_related_objects_deal_DEAL_ID
}

"""The ID of the deal which is associated with the item"""
type query_getDealActivities_allOf_1_related_objects_deal_DEAL_ID {
  """The ID of the deal associated with the item"""
  id: Int

  """The title of the deal associated with the item"""
  title: String

  """The status of the deal associated with the item"""
  status: String

  """The value of the deal that is associated with the item"""
  value: Float

  """The currency of the deal value"""
  currency: String

  """The ID of the stage the deal is currently at"""
  stage_id: Int

  """The ID of the pipeline the deal is in"""
  pipeline_id: Int
}

type query_getDealActivities_allOf_1_related_objects_user {
  USER_ID: query_getDealActivities_allOf_1_related_objects_user_USER_ID
}

type query_getDealActivities_allOf_1_related_objects_user_USER_ID {
  """The ID of the user"""
  id: Int

  """The name of the user"""
  name: String

  """The email of the user"""
  email: String

  """Whether the user has picture or not. 0 = No picture, 1 = Has picture."""
  has_pic: Int

  """The user picture hash"""
  pic_hash: String

  """Whether the user is active or not"""
  active_flag: Boolean
  JSON: JSON
}

"""
Whether the activity is done or not. 0 = Not done, 1 = Done. If omitted, returns both Done and Not done activities.
"""
enum queryInput_getDealActivities_done {
  _0
  _1
}

type getAssociatedFiles {
  """If the response is successful or not"""
  success: Boolean

  """The array of files"""
  data: [query_getDealFiles_allOf_1_data_items]
  additional_data: query_getDealFiles_allOf_1_additional_data
}

"""The file data"""
type query_getDealFiles_allOf_1_data_items {
  """The ID of the file"""
  id: Int

  """The ID of the user to associate the file with"""
  user_id: Int

  """The ID of the deal to associate the file with"""
  deal_id: Int

  """The ID of the person to associate the file with"""
  person_id: Int

  """The ID of the organization to associate the file with"""
  org_id: Int

  """The ID of the product to associate the file with"""
  product_id: Int

  """The ID of the activity to associate the file with"""
  activity_id: Int

  """The ID of the lead to associate the file with"""
  lead_id: UUID

  """
  The date and time when the file was added/created. Format: YYYY-MM-DD HH:MM:SS
  """
  add_time: String

  """
  The last updated date and time of the file. Format: YYYY-MM-DD HH:MM:SS
  """
  update_time: String

  """The original name of the file"""
  file_name: String

  """The size of the file"""
  file_size: Int

  """
  Whether the user is active or not. false = Not activated, true = Activated
  """
  active_flag: Boolean

  """Whether the file was uploaded as inline or not"""
  inline_flag: Boolean

  """
  The location type to send the file to. Only googledrive is supported at the moment.
  """
  remote_location: String

  """The ID of the remote item"""
  remote_id: String

  """The ID of the inline attachment"""
  cid: String

  """The location of the cloud storage"""
  s3_bucket: String

  """The ID of the mail message to associate the file with"""
  mail_message_id: String

  """The ID of the mail template to associate the file with"""
  mail_template_id: String

  """The name of the deal associated with the dile"""
  deal_name: String

  """The name of the person associated with the file"""
  person_name: String

  """The name of the organization associated with the file"""
  org_name: String

  """The name of the product associated with the file"""
  product_name: String

  """The name of the lead associated with the file"""
  lead_name: String

  """The URL of the download file"""
  url: String

  """The visible name of the file"""
  name: String

  """The description of the file"""
  description: String
}

"""The additional data of the list"""
type query_getDealFiles_allOf_1_additional_data {
  """Pagination start"""
  start: Int

  """Items shown per page"""
  limit: Int

  """If there are more list items in the collection than displayed or not"""
  more_items_in_collection: Boolean
}

type getDealUpdates {
  """If the response is successful or not"""
  success: Boolean
  data: [query_getDealUpdates_allOf_1_data_items]
  additional_data: query_getDealUpdates_allOf_1_additional_data
  related_objects: query_getDealUpdates_allOf_1_related_objects
}

type query_getDealUpdates_allOf_1_data_items {
  """
  The type of the deal update. (Possible object types - dealChange, note, activity, mailMessage, invoice, document, file)
  """
  object: String

  """The creation date and time of the update"""
  timestamp: String
  data: JSON
}

"""The additional data of the list"""
type query_getDealUpdates_allOf_1_additional_data {
  """Pagination start"""
  start: Int

  """Items shown per page"""
  limit: Int

  """If there are more list items in the collection than displayed or not"""
  more_items_in_collection: Boolean
}

type query_getDealUpdates_allOf_1_related_objects {
  deal: query_getDealUpdates_allOf_1_related_objects_deal
  organization: query_getDealUpdates_allOf_1_related_objects_organization
  user: query_getDealUpdates_allOf_1_related_objects_user
  person: query_getDealUpdates_allOf_1_related_objects_person
}

type query_getDealUpdates_allOf_1_related_objects_deal {
  DEAL_ID: query_getDealUpdates_allOf_1_related_objects_deal_DEAL_ID
}

"""The ID of the deal which is associated with the item"""
type query_getDealUpdates_allOf_1_related_objects_deal_DEAL_ID {
  """The ID of the deal associated with the item"""
  id: Int

  """The title of the deal associated with the item"""
  title: String

  """The status of the deal associated with the item"""
  status: String

  """The value of the deal that is associated with the item"""
  value: Float

  """The currency of the deal value"""
  currency: String

  """The ID of the stage the deal is currently at"""
  stage_id: Int

  """The ID of the pipeline the deal is in"""
  pipeline_id: Int
}

type query_getDealUpdates_allOf_1_related_objects_organization {
  ORGANIZATION_ID: query_getDealUpdates_allOf_1_related_objects_organization_ORGANIZATION_ID
}

"""The ID of the organization associated with the item"""
type query_getDealUpdates_allOf_1_related_objects_organization_ORGANIZATION_ID {
  """The ID of the organization associated with the item"""
  id: Int

  """The name of the organization associated with the item"""
  name: String

  """
  The number of people connected with the organization that is associated with the item
  """
  people_count: Int

  """
  The ID of the owner of the organization that is associated with the item
  """
  owner_id: Int

  """The address of the organization"""
  address: String

  """The BCC email of the organization associated with the item"""
  cc_email: String
}

type query_getDealUpdates_allOf_1_related_objects_user {
  USER_ID: query_getDealUpdates_allOf_1_related_objects_user_USER_ID
}

type query_getDealUpdates_allOf_1_related_objects_user_USER_ID {
  """The ID of the user"""
  id: Int

  """The name of the user"""
  name: String

  """The email of the user"""
  email: String

  """Whether the user has picture or not. 0 = No picture, 1 = Has picture."""
  has_pic: Int

  """The user picture hash"""
  pic_hash: String

  """Whether the user is active or not"""
  active_flag: Boolean
  JSON: JSON
}

type query_getDealUpdates_allOf_1_related_objects_person {
  PERSON_ID: query_getDealUpdates_allOf_1_related_objects_person_PERSON_ID
}

"""The ID of the person associated with the item"""
type query_getDealUpdates_allOf_1_related_objects_person_PERSON_ID {
  """Whether the associated person is active or not"""
  active_flag: Boolean

  """The ID of the person associated with the item"""
  id: Int

  """The name of the person associated with the item"""
  name: String

  """The emails of the person associated with the item"""
  email: [query_getDealUpdates_allOf_1_related_objects_person_PERSON_ID_allOf_1_email_items]

  """The phone numbers of the person associated with the item"""
  phone: [query_getDealUpdates_allOf_1_related_objects_person_PERSON_ID_allOf_1_phone_items]

  """The ID of the owner of the person that is associated with the item"""
  owner_id: Int
}

type query_getDealUpdates_allOf_1_related_objects_person_PERSON_ID_allOf_1_email_items {
  """The type of the email"""
  label: String

  """The email of the associated person"""
  value: String

  """Whether this is the primary email or not"""
  primary: Boolean
}

type query_getDealUpdates_allOf_1_related_objects_person_PERSON_ID_allOf_1_phone_items {
  """The type of the phone number"""
  label: String

  """The phone number of the person associated with the item"""
  value: String

  """Whether this is the primary phone number or not"""
  primary: Boolean
}

type getAssociatedFollowers {
  """If the response is successful or not"""
  success: Boolean

  """The list of followers"""
  data: [query_getDealFollowers_allOf_1_data_items]
  additional_data: query_getDealFollowers_allOf_1_additional_data
}

type query_getDealFollowers_allOf_1_data_items {
  """The ID of the user"""
  user_id: Int

  """The ID of the user follower"""
  id: Int

  """The ID of the deal which the follower was added to"""
  deal_id: Int

  """The date and time when the follower was added to the person"""
  add_time: String
}

"""The additional data of the list"""
type query_getDealFollowers_allOf_1_additional_data {
  """Pagination start"""
  start: Int

  """Items shown per page"""
  limit: Int

  """If there are more list items in the collection than displayed or not"""
  more_items_in_collection: Boolean
}

type getAssociatedMailMessages {
  """If the response is successful or not"""
  success: Boolean

  """The array of mail messages"""
  data: [query_getDealMailMessages_allOf_1_data_items]
  additional_data: query_getDealMailMessages_allOf_1_additional_data
}

type query_getDealMailMessages_allOf_1_data_items {
  """The type of the data item"""
  object: String

  """The date and time when the item was created"""
  timestamp: String
  data: mailMessageItemForList
}

type mailMessageItemForList {
  """ID of the mail message."""
  id: Int

  """The array of mail message sender (object)"""
  from: [query_getDealMailMessages_allOf_1_data_items_data_allOf_0_from_items]

  """The array of mail message receiver (object)"""
  to: [query_getDealMailMessages_allOf_1_data_items_data_allOf_0_to_items]

  """The array of mail message copies (object)"""
  cc: [query_getDealMailMessages_allOf_1_data_items_data_allOf_0_cc_items]

  """The array of mail message blind copies (object)"""
  bcc: [query_getDealMailMessages_allOf_1_data_items_data_allOf_0_bcc_items]

  """The mail message body URL"""
  body_url: String

  """The connection account ID"""
  account_id: String

  """ID of the user whom mail message will be assigned to"""
  user_id: Int

  """ID of the mail message thread"""
  mail_thread_id: Int

  """The subject of mail message"""
  subject: String

  """The snippet of mail message. Snippet length is up to 225 characters."""
  snippet: String
  mail_tracking_status: query_getDealMailMessages_allOf_1_data_items_data_allOf_0_mail_tracking_status
  mail_link_tracking_enabled_flag: numberBooleanDefault016
  read_flag: numberBooleanDefault017

  """
  If the mail message has a draft status then the value is the mail message object as JSON formatted string, otherwise `null`.
  """
  draft: String
  draft_flag: numberBooleanDefault018
  synced_flag: numberBooleanDefault019
  deleted_flag: numberBooleanDefault020
  has_body_flag: numberBooleanDefault021
  sent_flag: numberBooleanDefault022
  sent_from_pipedrive_flag: numberBooleanDefault023
  smart_bcc_flag: numberBooleanDefault024

  """Creation or receival time of the mail message"""
  message_time: DateTime

  """The insertion into the database time of the mail message"""
  add_time: DateTime

  """The updating time in the database of the mail message"""
  update_time: DateTime
  has_attachments_flag: numberBooleanDefault025
  has_inline_attachments_flag: numberBooleanDefault026
  has_real_attachments_flag: numberBooleanDefault027

  """The Mail Message ID assigned by the sync provider"""
  nylas_id: String

  """The name of the S3 bucket"""
  s3_bucket: String

  """The path of the S3 bucket"""
  s3_bucket_path: String

  """If the Mail Message has been deleted on the provider side or not"""
  external_deleted_flag: Boolean

  """The Mail Message ID assigned by the mail user agent"""
  mua_message_id: String

  """The ID of the mail template"""
  template_id: Int

  """The add date and time of the Mail Message"""
  timestamp: String

  """The type of the data item"""
  item_type: String

  """The ID of the company"""
  company_id: Int
}

type query_getDealMailMessages_allOf_1_data_items_data_allOf_0_from_items {
  """ID of the mail participant"""
  id: Int

  """Mail address of the mail participant"""
  email_address: String

  """Name of the mail participant"""
  name: String

  """ID of the linked person to the mail message"""
  linked_person_id: Int

  """Name of the linked person to the mail message"""
  linked_person_name: String

  """ID of the mail message participant"""
  mail_message_party_id: Int
}

type query_getDealMailMessages_allOf_1_data_items_data_allOf_0_to_items {
  """ID of the mail participant"""
  id: Int

  """Mail address of the mail participant"""
  email_address: String

  """Name of the mail participant"""
  name: String

  """ID of the linked person to the mail message"""
  linked_person_id: Int

  """Name of the linked person to the mail message"""
  linked_person_name: String

  """ID of the mail message participant"""
  mail_message_party_id: Int
}

type query_getDealMailMessages_allOf_1_data_items_data_allOf_0_cc_items {
  """ID of the mail participant"""
  id: Int

  """Mail address of the mail participant"""
  email_address: String

  """Name of the mail participant"""
  name: String

  """ID of the linked person to the mail message"""
  linked_person_id: Int

  """Name of the linked person to the mail message"""
  linked_person_name: String

  """ID of the mail message participant"""
  mail_message_party_id: Int
}

type query_getDealMailMessages_allOf_1_data_items_data_allOf_0_bcc_items {
  """ID of the mail participant"""
  id: Int

  """Mail address of the mail participant"""
  email_address: String

  """Name of the mail participant"""
  name: String

  """ID of the linked person to the mail message"""
  linked_person_id: Int

  """Name of the linked person to the mail message"""
  linked_person_name: String

  """ID of the mail message participant"""
  mail_message_party_id: Int
}

"""
The status of tracking mail message. Value is `null` if tracking is not enabled.
"""
enum query_getDealMailMessages_allOf_1_data_items_data_allOf_0_mail_tracking_status {
  opened
  not_opened
}

enum numberBooleanDefault016 {
  _0
  _1
}

enum numberBooleanDefault017 {
  _0
  _1
}

enum numberBooleanDefault018 {
  _0
  _1
}

enum numberBooleanDefault019 {
  _0
  _1
}

enum numberBooleanDefault020 {
  _0
  _1
}

enum numberBooleanDefault021 {
  _0
  _1
}

enum numberBooleanDefault022 {
  _0
  _1
}

enum numberBooleanDefault023 {
  _0
  _1
}

enum numberBooleanDefault024 {
  _0
  _1
}

enum numberBooleanDefault025 {
  _0
  _1
}

enum numberBooleanDefault026 {
  _0
  _1
}

enum numberBooleanDefault027 {
  _0
  _1
}

"""The additional data of the list"""
type query_getDealMailMessages_allOf_1_additional_data {
  """Pagination start"""
  start: Int

  """Items shown per page"""
  limit: Int

  """If there are more list items in the collection than displayed or not"""
  more_items_in_collection: Boolean
}

type getDealParticipants {
  """If the request was successful or not"""
  success: Boolean

  """The array of participants"""
  data: [query_getDealParticipants_data_items]
  additional_data: query_getDealParticipants_additional_data
  related_objects: query_getDealParticipants_related_objects
}

type query_getDealParticipants_data_items {
  """The ID of the person"""
  id: Int

  """The ID of the company related to the person"""
  company_id: Int

  """Whether the person is active or not"""
  active_flag: Boolean

  """
  A phone number supplied as a string or an array of phone objects related to the person. The structure of the array is as follows: `[{ "value": "12345", "primary": "true", "label": "mobile" }]`. Please note that only `value` is required.
  """
  phone: [query_getDealParticipants_data_items_allOf_0_phone_items]

  """
  An email address as a string or an array of email objects related to the person. The structure of the array is as follows: `[{ "value": "mail@example.com", "primary": "true", "label": "main" } ]`. Please note that only `value` is required.
  """
  email: [query_getDealParticipants_data_items_allOf_0_email_items]

  """The first letter of the name of the person"""
  first_char: String

  """
  The date and time when the person was added/created. Format: YYYY-MM-DD HH:MM:SS
  """
  add_time: String

  """
  The last updated date and time of the person. Format: YYYY-MM-DD HH:MM:SS
  """
  update_time: String

  """The visibility group ID of who can see the person"""
  visible_to: String
  picture_id: query_getDealParticipants_data_items_allOf_0_picture_id

  """The label assigned to the person"""
  label: Int

  """The name of the organization associated with the person"""
  org_name: String

  """The name of the owner associated with the person"""
  owner_name: String

  """The BCC email associated with the person"""
  cc_email: String
  owner_id: owner
  org_id: relationshipOrganizationInfoItemWithActiveFlag

  """The name of the person"""
  name: String

  """The first name of the person"""
  first_name: String

  """The last name of the person"""
  last_name: String

  """The count of email messages related to the person"""
  email_messages_count: Int

  """The count of activities related to the person"""
  activities_count: Int

  """The count of done activities related to the person"""
  done_activities_count: Int

  """The count of undone activities related to the person"""
  undone_activities_count: Int

  """The count of files related to the person"""
  files_count: Int

  """The count of notes related to the person"""
  notes_count: Int

  """The count of followers related to the person"""
  followers_count: Int

  """
  The date and time of the last incoming email associated with the person
  """
  last_incoming_mail_time: String

  """
  The date and time of the last outgoing email associated with the person
  """
  last_outgoing_mail_time: String

  """The count of open deals related with the item"""
  open_deals_count: Int

  """The count of related open deals related with the item"""
  related_open_deals_count: Int

  """The count of closed deals related with the item"""
  closed_deals_count: Int

  """The count of related closed deals related with the item"""
  related_closed_deals_count: Int

  """The count of won deals related with the item"""
  won_deals_count: Int

  """The count of related won deals related with the item"""
  related_won_deals_count: Int

  """The count of lost deals related with the item"""
  lost_deals_count: Int

  """The count of related lost deals related with the item"""
  related_lost_deals_count: Int

  """The date of the next activity associated with the deal"""
  next_activity_date: String

  """The time of the next activity associated with the deal"""
  next_activity_time: String

  """The ID of the next activity associated with the deal"""
  next_activity_id: Int

  """The ID of the last activity associated with the deal"""
  last_activity_id: Int

  """The date of the last activity associated with the deal"""
  last_activity_date: String
}

type query_getDealParticipants_data_items_allOf_0_phone_items {
  """The phone number"""
  value: String

  """
  Boolean that indicates if phone number is primary for the person or not
  """
  primary: Boolean

  """
  The label that indicates the type of the phone number. (Possible values - work, home, mobile or other)
  """
  label: String
}

type query_getDealParticipants_data_items_allOf_0_email_items {
  """Email"""
  value: String

  """Boolean that indicates if email is primary for the person or not"""
  primary: Boolean

  """
  The label that indicates the type of the email. (Possible values - work, home or other)
  """
  label: String
}

type query_getDealParticipants_data_items_allOf_0_picture_id {
  """The ID of the picture associated with the item"""
  id: Int

  """The type of item the picture is related to"""
  item_type: String

  """The ID of related item"""
  item_id: Int

  """Whether the associated picture is active or not"""
  active_flag: Boolean

  """The add time of the picture"""
  add_time: String

  """The update time of the picture"""
  update_time: String

  """The ID of the user who added the picture"""
  added_by_user_id: Int
  pictures: query_getDealParticipants_data_items_allOf_0_picture_id_allOf_1_pictures
}

type query_getDealParticipants_data_items_allOf_0_picture_id_allOf_1_pictures {
  """The URL of the 128*128 picture"""
  _128: String

  """The URL of the 512*512 picture"""
  _512: String
}

type owner {
  """The ID of the user"""
  id: Int

  """The name of the user"""
  name: String

  """The email of the user"""
  email: String

  """Whether the user has picture or not. 0 = No picture, 1 = Has picture."""
  has_pic: Int

  """The user picture hash"""
  pic_hash: String

  """Whether the user is active or not"""
  active_flag: Boolean

  """The ID of the owner"""
  value: Int
}

type relationshipOrganizationInfoItemWithActiveFlag {
  """The name of the organization associated with the item"""
  name: String

  """
  The number of people connected with the organization that is associated with the item
  """
  people_count: Int

  """
  The ID of the owner of the organization that is associated with the item
  """
  owner_id: Int

  """The address of the organization"""
  address: String

  """The BCC email of the organization associated with the item"""
  cc_email: String

  """The ID of the organization"""
  value: Int

  """Whether the associated organization is active or not"""
  active_flag: Boolean
}

"""The additional data of the list"""
type query_getDealParticipants_additional_data {
  """Pagination start"""
  start: Int

  """Items shown per page"""
  limit: Int

  """If there are more list items in the collection than displayed or not"""
  more_items_in_collection: Boolean
}

type query_getDealParticipants_related_objects {
  user: query_getDealParticipants_related_objects_user
  organization: query_getDealParticipants_related_objects_organization
  person: query_getDealParticipants_related_objects_person
}

"""The user who is associated with the deal"""
type query_getDealParticipants_related_objects_user {
  """The ID of the user"""
  id: Int

  """The name of the user"""
  name: String

  """The email of the user"""
  email: String

  """If the user has a picture or not"""
  has_pic: Boolean

  """The user picture hash"""
  pic_hash: String

  """Whether the user is active or not"""
  active_flag: Boolean
}

"""The organization which is associated with the deal"""
type query_getDealParticipants_related_objects_organization {
  """The name of the organization associated with the deal"""
  name: String

  """
  The number of people connected with the organization that is associated with the deal
  """
  people_count: Int

  """
  The ID of the owner of the organization that is associated with the deal
  """
  owner_id: Int

  """The address of the organization that is associated with the deal"""
  address: String

  """Whether the associated organization is active or not"""
  active_flag: Boolean

  """The BCC email of the organization associated with the deal"""
  cc_email: String
}

"""The person who is associated with the deal"""
type query_getDealParticipants_related_objects_person {
  """Whether the associated person is active or not"""
  active_flag: Boolean

  """The name of the person associated with the deal"""
  name: String

  """The emails of the person associated with the deal"""
  email: [query_getDealParticipants_related_objects_person_email_items]

  """The phone numbers of the person associated with the deal"""
  phone: [query_getDealParticipants_related_objects_person_phone_items]

  """The ID of the owner of the person that is associated with the deal"""
  owner_id: Int
}

type query_getDealParticipants_related_objects_person_email_items {
  """The type of the email"""
  label: String

  """The email of the associated person"""
  value: String

  """If this is the primary email or not"""
  primary: Boolean
}

type query_getDealParticipants_related_objects_person_phone_items {
  """The type of the phone number"""
  label: String

  """The phone number of the person associated with the deal"""
  value: String

  """If this is the primary phone number or not"""
  primary: Boolean
}

type listPermittedUsers {
  """If the response is successful or not"""
  success: Boolean
  data: query_getDealUsers_allOf_1_data
}

type query_getDealUsers_allOf_1_data {
  """The list of permitted users IDs"""
  id: [Int]
}

type listPersons {
  """If the response is successful or not"""
  success: Boolean

  """The array of persons"""
  data: [query_getDealPersons_allOf_1_data_items]
  additional_data: query_getDealPersons_allOf_1_additional_data
  related_objects: query_getDealPersons_allOf_1_related_objects
}

type query_getDealPersons_allOf_1_data_items {
  """The ID of the person"""
  id: Int

  """The ID of the company related to the person"""
  company_id: Int

  """Whether the person is active or not"""
  active_flag: Boolean

  """
  A phone number supplied as a string or an array of phone objects related to the person. The structure of the array is as follows: `[{ "value": "12345", "primary": "true", "label": "mobile" }]`. Please note that only `value` is required.
  """
  phone: [query_getDealPersons_allOf_1_data_items_allOf_0_phone_items]

  """
  An email address as a string or an array of email objects related to the person. The structure of the array is as follows: `[{ "value": "mail@example.com", "primary": "true", "label": "main" } ]`. Please note that only `value` is required.
  """
  email: [query_getDealPersons_allOf_1_data_items_allOf_0_email_items]

  """The first letter of the name of the person"""
  first_char: String

  """
  The date and time when the person was added/created. Format: YYYY-MM-DD HH:MM:SS
  """
  add_time: String

  """
  The last updated date and time of the person. Format: YYYY-MM-DD HH:MM:SS
  """
  update_time: String

  """The visibility group ID of who can see the person"""
  visible_to: String
  picture_id: query_getDealPersons_allOf_1_data_items_allOf_0_picture_id

  """The label assigned to the person"""
  label: Int

  """The name of the organization associated with the person"""
  org_name: String

  """The name of the owner associated with the person"""
  owner_name: String

  """The BCC email associated with the person"""
  cc_email: String
  owner_id: owner
  org_id: relationshipOrganizationInfoItemWithActiveFlag

  """The name of the person"""
  name: String

  """The first name of the person"""
  first_name: String

  """The last name of the person"""
  last_name: String

  """The count of email messages related to the person"""
  email_messages_count: Int

  """The count of activities related to the person"""
  activities_count: Int

  """The count of done activities related to the person"""
  done_activities_count: Int

  """The count of undone activities related to the person"""
  undone_activities_count: Int

  """The count of files related to the person"""
  files_count: Int

  """The count of notes related to the person"""
  notes_count: Int

  """The count of followers related to the person"""
  followers_count: Int

  """
  The date and time of the last incoming email associated with the person
  """
  last_incoming_mail_time: String

  """
  The date and time of the last outgoing email associated with the person
  """
  last_outgoing_mail_time: String

  """The count of open deals related with the item"""
  open_deals_count: Int

  """The count of related open deals related with the item"""
  related_open_deals_count: Int

  """The count of closed deals related with the item"""
  closed_deals_count: Int

  """The count of related closed deals related with the item"""
  related_closed_deals_count: Int

  """The count of won deals related with the item"""
  won_deals_count: Int

  """The count of related won deals related with the item"""
  related_won_deals_count: Int

  """The count of lost deals related with the item"""
  lost_deals_count: Int

  """The count of related lost deals related with the item"""
  related_lost_deals_count: Int

  """The date of the next activity associated with the deal"""
  next_activity_date: String

  """The time of the next activity associated with the deal"""
  next_activity_time: String

  """The ID of the next activity associated with the deal"""
  next_activity_id: Int

  """The ID of the last activity associated with the deal"""
  last_activity_id: Int

  """The date of the last activity associated with the deal"""
  last_activity_date: String
}

type query_getDealPersons_allOf_1_data_items_allOf_0_phone_items {
  """The phone number"""
  value: String

  """
  Boolean that indicates if phone number is primary for the person or not
  """
  primary: Boolean

  """
  The label that indicates the type of the phone number. (Possible values - work, home, mobile or other)
  """
  label: String
}

type query_getDealPersons_allOf_1_data_items_allOf_0_email_items {
  """Email"""
  value: String

  """Boolean that indicates if email is primary for the person or not"""
  primary: Boolean

  """
  The label that indicates the type of the email. (Possible values - work, home or other)
  """
  label: String
}

type query_getDealPersons_allOf_1_data_items_allOf_0_picture_id {
  """The ID of the picture associated with the item"""
  id: Int

  """The type of item the picture is related to"""
  item_type: String

  """The ID of related item"""
  item_id: Int

  """Whether the associated picture is active or not"""
  active_flag: Boolean

  """The add time of the picture"""
  add_time: String

  """The update time of the picture"""
  update_time: String

  """The ID of the user who added the picture"""
  added_by_user_id: Int
  pictures: query_getDealPersons_allOf_1_data_items_allOf_0_picture_id_allOf_1_pictures
}

type query_getDealPersons_allOf_1_data_items_allOf_0_picture_id_allOf_1_pictures {
  """The URL of the 128*128 picture"""
  _128: String

  """The URL of the 512*512 picture"""
  _512: String
}

"""The additional data of the list"""
type query_getDealPersons_allOf_1_additional_data {
  """Pagination start"""
  start: Int

  """Items shown per page"""
  limit: Int

  """If there are more list items in the collection than displayed or not"""
  more_items_in_collection: Boolean
}

type query_getDealPersons_allOf_1_related_objects {
  organization: query_getDealPersons_allOf_1_related_objects_organization
  user: query_getDealPersons_allOf_1_related_objects_user
}

type query_getDealPersons_allOf_1_related_objects_organization {
  ORGANIZATION_ID: query_getDealPersons_allOf_1_related_objects_organization_ORGANIZATION_ID
}

"""The ID of the organization associated with the item"""
type query_getDealPersons_allOf_1_related_objects_organization_ORGANIZATION_ID {
  """Whether the associated organization is active or not"""
  active_flag: Boolean

  """The ID of the organization associated with the item"""
  id: Int

  """The name of the organization associated with the item"""
  name: String

  """
  The number of people connected with the organization that is associated with the item
  """
  people_count: Int

  """
  The ID of the owner of the organization that is associated with the item
  """
  owner_id: Int

  """The address of the organization"""
  address: String

  """The BCC email of the organization associated with the item"""
  cc_email: String
}

type query_getDealPersons_allOf_1_related_objects_user {
  USER_ID: query_getDealPersons_allOf_1_related_objects_user_USER_ID
}

type query_getDealPersons_allOf_1_related_objects_user_USER_ID {
  """The ID of the user"""
  id: Int

  """The name of the user"""
  name: String

  """The email of the user"""
  email: String

  """Whether the user has picture or not. 0 = No picture, 1 = Has picture."""
  has_pic: Int

  """The user picture hash"""
  pic_hash: String

  """Whether the user is active or not"""
  active_flag: Boolean
  JSON: JSON
}

type listProducts {
  """If the response is successful or not"""
  success: Boolean
  data: query_getDealProducts_allOf_1_data
  additional_data: query_getDealProducts_allOf_1_additional_data
  related_objects: query_getDealProducts_allOf_1_related_objects
}

type query_getDealProducts_allOf_1_data {
  """The array of products"""
  items: [query_getDealProducts_allOf_1_data_items_items]
}

type query_getDealProducts_allOf_1_data_items_items {
  """
  The ID of the deal-product (the ID of the product attached to the deal)
  """
  id: Int

  """The ID of the deal"""
  deal_id: Int

  """The order number of the product"""
  order_nr: Int

  """The ID of the product"""
  product_id: Int

  """The ID of the product variation"""
  product_variation_id: Int

  """The price value of the product"""
  item_price: Int

  """The discount percentage of the product"""
  discount_percentage: Int

  """The duration of the product"""
  duration: Int

  """The type of the duration. (For example hourly, daily, etc.)"""
  duration_unit: String

  """The product sum without the discount"""
  sum_no_discount: Float

  """The sum of all the products attached to the deal"""
  sum: Float

  """The currency associated with the deal product"""
  currency: String

  """Whether the product is enabled or not"""
  enabled_flag: Boolean

  """The date and time when the product was added to the deal"""
  add_time: String

  """The date and time when the deal product was last edited"""
  last_edit: String

  """The comments of the product"""
  comments: String

  """Whether the product is active or not"""
  active_flag: Boolean

  """The product tax"""
  tax: Float

  """The product name"""
  name: String

  """The formatted sum of the product"""
  sum_formatted: String

  """The formatted quantity of the product"""
  quantity_formatted: String

  """The quantity of the product"""
  quantity: Int
  product: query_getDealProducts_allOf_1_data_items_items_product
}

type query_getDealProducts_allOf_1_data_items_items_product {
  """The ID of the product"""
  id: Float

  """The name of the product"""
  name: String

  """The product code"""
  code: String

  """The unit in which this product is sold"""
  unit: String

  """The ax percentage"""
  tax: Float
  active_flag: numberBooleanDefault1
  selectable: query_getDealProducts_allOf_1_data_items_items_product_allOf_0_selectable
  visible_to: query_getDealProducts_allOf_1_data_items_items_product_allOf_0_visible_to
  owner_id: JSON
  prices: JSON
}

"""Whether this product is active or not"""
enum numberBooleanDefault1 {
  _0
  _1
}

"""Whether this product is selected in deals or not"""
enum query_getDealProducts_allOf_1_data_items_items_product_allOf_0_selectable {
  _0
  _1
}

enum query_getDealProducts_allOf_1_data_items_items_product_allOf_0_visible_to {
  _1
  _3
  _5
  _7
}

type query_getDealProducts_allOf_1_additional_data {
  """The total quantity of the products"""
  products_quantity_total: Int

  """The total sum of the products"""
  products_sum_total: Int

  """Whether variations is enabled or not"""
  variations_enabled: Boolean

  """The total formatted quantity of the products"""
  products_quantity_total_formatted: String

  """The total formatted sum of the products"""
  products_sum_total_formatted: String
  pagination: query_getDealProducts_allOf_1_additional_data_allOf_1_pagination
}

"""Pagination details of the list"""
type query_getDealProducts_allOf_1_additional_data_allOf_1_pagination {
  """Pagination start"""
  start: Int

  """Items shown per page"""
  limit: Int

  """Whether there are more list items in the collection than displayed"""
  more_items_in_collection: Boolean

  """Next pagination start"""
  next_start: Int
}

type query_getDealProducts_allOf_1_related_objects {
  user: query_getDealProducts_allOf_1_related_objects_user
}

type query_getDealProducts_allOf_1_related_objects_user {
  USER_ID: query_getDealProducts_allOf_1_related_objects_user_USER_ID
}

type query_getDealProducts_allOf_1_related_objects_user_USER_ID {
  """The ID of the user"""
  id: Int

  """The name of the user"""
  name: String

  """The email of the user"""
  email: String

  """Whether the user has picture or not. 0 = No picture, 1 = Has picture."""
  has_pic: Int

  """The user picture hash"""
  pic_hash: String

  """Whether the user is active or not"""
  active_flag: Boolean
  JSON: JSON
}

"""
Whether to fetch product data along with each attached product (1) or not (0, default)
"""
enum queryInput_getDealProducts_include_product_data {
  _0
  _1
}

type query_getDealFields {
  """If the response is successful or not"""
  success: Boolean
  data: [query_getDealFields_allOf_1_data_items]
  additional_data: query_getDealFields_allOf_1_additional_data
}

type query_getDealFields_allOf_1_data_items {
  """The ID of the field. Value is `null` in case of subfields."""
  id: Int

  """
  The key of the field. For custom fields this is generated upon creation.
  """
  key: String

  """The name of the field"""
  name: String

  """The order number of the field"""
  order_nr: Int
  field_type: query_getDealFields_allOf_1_data_items_field_type

  """The creation time of the field"""
  add_time: String

  """The update time of the field"""
  update_time: String

  """
  The ID of the user who created or most recently updated the field, only applicable for custom fields
  """
  last_updated_by_user_id: Int

  """The active flag of the field"""
  active_flag: Boolean

  """The edit flag of the field"""
  edit_flag: Boolean

  """Not used"""
  index_visible_flag: Boolean

  """Not used"""
  details_visible_flag: Boolean

  """Not used"""
  add_visible_flag: Boolean

  """Not used"""
  important_flag: Boolean

  """Whether or not the field of an item can be edited in bulk"""
  bulk_edit_allowed: Boolean

  """Whether or not items can be searched by this field"""
  searchable_flag: Boolean

  """Whether or not items can be filtered by this field"""
  filtering_allowed: Boolean

  """Whether or not items can be sorted by this field"""
  sortable_flag: Boolean

  """Whether or not the field is mandatory"""
  mandatory_flag: Boolean

  """
  The options of the field. When there are no options, `null` is returned.
  """
  options: [JSON]

  """
  The deleted options of the field. Only present when there is at least 1 deleted option.
  """
  options_deleted: [JSON]

  """
  Whether or not the field is a subfield of another field. Only present if field is subfield.
  """
  is_subfield: Boolean

  """The subfields of the field. Only present when the field has subfields."""
  subfields: [JSON]
}

"""
The type of the field<table><tr><th>Value</th><th>Description</th></tr><tr><td>`address`</td><td>Address field (has multiple subfields, autocompleted by Google Maps)</td></tr><tr><td>`date`</td><td>Date (format YYYY-MM-DD)</td></tr><tr><td>`daterange`</td><td>Date-range field (has a start date and end date value, both YYYY-MM-DD)</td></tr><tr><td>`double`</td><td>Numeric value</td></tr><tr><td>`enum`</td><td>Options field with a single possible chosen option</td></tr><tr></tr><tr><td>`monetary`</td><td>Monetary field (has a numeric value and a currency value)</td></tr><tr><td>`org`</td><td>Organization field (contains an organization ID which is stored on the same account)</td></tr><tr><td>`people`</td><td>Person field (contains a person ID which is stored on the same account)</td></tr><tr><td>`phone`</td><td>Phone field (up to 255 numbers and/or characters)</td></tr><tr><td>`set`</td><td>Options field with a possibility of having multiple chosen options</td></tr><tr><td>`text`</td><td>Long text (up to 65k characters)</td></tr><tr><td>`time`</td><td>Time field (format HH:MM:SS)</td></tr><tr><td>`timerange`</td><td>Time-range field (has a start time and end time value, both HH:MM:SS)</td></tr><tr><td>`user`</td><td>User field (contains a user ID of another Pipedrive user)</td></tr><tr><td>`varchar`</td><td>Text (up to 255 characters)</td></tr><tr><td>`varchar_auto`</td><td>Autocomplete text (up to 255 characters)</td></tr><tr><td>`visible_to`</td><td>System field that keeps item's visibility setting</td></tr></table>
"""
enum query_getDealFields_allOf_1_data_items_field_type {
  address
  date
  daterange
  double
  enum
  monetary
  org
  people
  phone
  set
  text
  time
  timerange
  user
  varchar
  varchar_auto
  visible_to
}

"""The additional data of the list"""
type query_getDealFields_allOf_1_additional_data {
  """Pagination start"""
  start: Int

  """Items shown per page"""
  limit: Int

  """If there are more list items in the collection than displayed or not"""
  more_items_in_collection: Boolean
}

type query_getDealField {
  """If the response is successful or not"""
  success: Boolean
  data: query_getDealField_allOf_1_data
}

type query_getDealField_allOf_1_data {
  """The ID of the field. Value is `null` in case of subfields."""
  id: Int

  """
  The key of the field. For custom fields this is generated upon creation.
  """
  key: String

  """The name of the field"""
  name: String

  """The order number of the field"""
  order_nr: Int
  field_type: query_getDealField_allOf_1_data_field_type

  """The creation time of the field"""
  add_time: String

  """The update time of the field"""
  update_time: String

  """
  The ID of the user who created or most recently updated the field, only applicable for custom fields
  """
  last_updated_by_user_id: Int

  """The active flag of the field"""
  active_flag: Boolean

  """The edit flag of the field"""
  edit_flag: Boolean

  """Not used"""
  index_visible_flag: Boolean

  """Not used"""
  details_visible_flag: Boolean

  """Not used"""
  add_visible_flag: Boolean

  """Not used"""
  important_flag: Boolean

  """Whether or not the field of an item can be edited in bulk"""
  bulk_edit_allowed: Boolean

  """Whether or not items can be searched by this field"""
  searchable_flag: Boolean

  """Whether or not items can be filtered by this field"""
  filtering_allowed: Boolean

  """Whether or not items can be sorted by this field"""
  sortable_flag: Boolean

  """Whether or not the field is mandatory"""
  mandatory_flag: Boolean

  """
  The options of the field. When there are no options, `null` is returned.
  """
  options: [JSON]

  """
  The deleted options of the field. Only present when there is at least 1 deleted option.
  """
  options_deleted: [JSON]

  """
  Whether or not the field is a subfield of another field. Only present if field is subfield.
  """
  is_subfield: Boolean

  """The subfields of the field. Only present when the field has subfields."""
  subfields: [JSON]
}

"""
The type of the field<table><tr><th>Value</th><th>Description</th></tr><tr><td>`address`</td><td>Address field (has multiple subfields, autocompleted by Google Maps)</td></tr><tr><td>`date`</td><td>Date (format YYYY-MM-DD)</td></tr><tr><td>`daterange`</td><td>Date-range field (has a start date and end date value, both YYYY-MM-DD)</td></tr><tr><td>`double`</td><td>Numeric value</td></tr><tr><td>`enum`</td><td>Options field with a single possible chosen option</td></tr><tr></tr><tr><td>`monetary`</td><td>Monetary field (has a numeric value and a currency value)</td></tr><tr><td>`org`</td><td>Organization field (contains an organization ID which is stored on the same account)</td></tr><tr><td>`people`</td><td>Person field (contains a person ID which is stored on the same account)</td></tr><tr><td>`phone`</td><td>Phone field (up to 255 numbers and/or characters)</td></tr><tr><td>`set`</td><td>Options field with a possibility of having multiple chosen options</td></tr><tr><td>`text`</td><td>Long text (up to 65k characters)</td></tr><tr><td>`time`</td><td>Time field (format HH:MM:SS)</td></tr><tr><td>`timerange`</td><td>Time-range field (has a start time and end time value, both HH:MM:SS)</td></tr><tr><td>`user`</td><td>User field (contains a user ID of another Pipedrive user)</td></tr><tr><td>`varchar`</td><td>Text (up to 255 characters)</td></tr><tr><td>`varchar_auto`</td><td>Autocomplete text (up to 255 characters)</td></tr><tr><td>`visible_to`</td><td>System field that keeps item's visibility setting</td></tr></table>
"""
enum query_getDealField_allOf_1_data_field_type {
  address
  date
  daterange
  double
  enum
  monetary
  org
  people
  phone
  set
  text
  time
  timerange
  user
  varchar
  varchar_auto
  visible_to
}

type getFiles {
  """If the request was successful or not"""
  success: Boolean

  """The array of all uploaded files"""
  data: [query_getFiles_data_items]
  additional_data: query_getFiles_additional_data
}

"""The file data"""
type query_getFiles_data_items {
  """The ID of the file"""
  id: Int

  """The ID of the user to associate the file with"""
  user_id: Int

  """The ID of the deal to associate the file with"""
  deal_id: Int

  """The ID of the person to associate the file with"""
  person_id: Int

  """The ID of the organization to associate the file with"""
  org_id: Int

  """The ID of the product to associate the file with"""
  product_id: Int

  """The ID of the activity to associate the file with"""
  activity_id: Int

  """The ID of the lead to associate the file with"""
  lead_id: UUID

  """
  The date and time when the file was added/created. Format: YYYY-MM-DD HH:MM:SS
  """
  add_time: String

  """
  The last updated date and time of the file. Format: YYYY-MM-DD HH:MM:SS
  """
  update_time: String

  """The original name of the file"""
  file_name: String

  """The size of the file"""
  file_size: Int

  """
  Whether the user is active or not. false = Not activated, true = Activated
  """
  active_flag: Boolean

  """Whether the file was uploaded as inline or not"""
  inline_flag: Boolean

  """
  The location type to send the file to. Only googledrive is supported at the moment.
  """
  remote_location: String

  """The ID of the remote item"""
  remote_id: String

  """The ID of the inline attachment"""
  cid: String

  """The location of the cloud storage"""
  s3_bucket: String

  """The ID of the mail message to associate the file with"""
  mail_message_id: String

  """The ID of the mail template to associate the file with"""
  mail_template_id: String

  """The name of the deal associated with the file"""
  deal_name: String

  """The name of the person associated with the file"""
  person_name: String

  """The name of the organization associated with the file"""
  org_name: String

  """The name of the product associated with the file"""
  product_name: String

  """The name of the lead associated with the file"""
  lead_name: String

  """The URL of the download file"""
  url: String

  """The visible name of the file"""
  name: String

  """The description of the file"""
  description: String
}

type query_getFiles_additional_data {
  pagination: paginationDetails
}

"""Pagination details of the list"""
type paginationDetails {
  """Pagination start"""
  start: Int

  """Items shown per page"""
  limit: Int

  """If there are more list items in the collection than displayed or not"""
  more_items_in_collection: Boolean

  """Next pagination start"""
  next_start: Int
}

type getFile {
  """If the request was successful or not"""
  success: Boolean
  data: query_getFile_data
}

"""The file data"""
type query_getFile_data {
  """The ID of the file"""
  id: Int

  """The ID of the user to associate the file with"""
  user_id: Int

  """The ID of the deal to associate the file with"""
  deal_id: Int

  """The ID of the person to associate the file with"""
  person_id: Int

  """The ID of the organization to associate the file with"""
  org_id: Int

  """The ID of the product to associate the file with"""
  product_id: Int

  """The ID of the activity to associate the file with"""
  activity_id: Int

  """The ID of the lead to associate the file with"""
  lead_id: UUID

  """
  The date and time when the file was added/created. Format: YYYY-MM-DD HH:MM:SS
  """
  add_time: String

  """
  The last updated date and time of the file. Format: YYYY-MM-DD HH:MM:SS
  """
  update_time: String

  """The original name of the file"""
  file_name: String

  """The size of the file"""
  file_size: Int

  """
  Whether the user is active or not. false = Not activated, true = Activated
  """
  active_flag: Boolean

  """Whether the file was uploaded as inline or not"""
  inline_flag: Boolean

  """
  The location type to send the file to. Only googledrive is supported at the moment.
  """
  remote_location: String

  """The ID of the remote item"""
  remote_id: String

  """The ID of the inline attachment"""
  cid: String

  """The location of the cloud storage"""
  s3_bucket: String

  """The ID of the mail message to associate the file with"""
  mail_message_id: String

  """The ID of the mail template to associate the file with"""
  mail_template_id: String

  """The name of the deal associated with the file"""
  deal_name: String

  """The name of the person associated with the file"""
  person_name: String

  """The name of the organization associated with the file"""
  org_name: String

  """The name of the product associated with the file"""
  product_name: String

  """The name of the lead associated with the file"""
  lead_name: String

  """The URL of the download file"""
  url: String

  """The visible name of the file"""
  name: String

  """The description of the file"""
  description: String
}

"""The `Byte` scalar type represents byte value as a Buffer"""
scalar Byte

type getFilters {
  """If the response is successful or not"""
  success: Boolean

  """The array of filters"""
  data: [query_getFilters_allOf_1_data_items]
}

"""The filter object"""
type query_getFilters_allOf_1_data_items {
  """The ID of the filter"""
  id: Int

  """The name of the filter"""
  name: String

  """The active flag of the filter"""
  active_flag: Boolean

  """The type of the item"""
  type: String

  """The owner of the filter"""
  user_id: Int

  """The date and time when the filter was added"""
  add_time: String

  """The date and time when the filter was updated"""
  update_time: String

  """The visibility group ID of who can see then filter"""
  visible_to: Int

  """Used by Pipedrive webapp"""
  custom_view_id: Int
}

"""The types of filters to fetch"""
enum queryInput_getFilters_type {
  deals
  leads
  org
  people
  products
  activity
}

type getFilter {
  """If the response is successful or not"""
  success: Boolean
  data: query_getFilter_allOf_1_data
}

"""The filter object"""
type query_getFilter_allOf_1_data {
  """The ID of the filter"""
  id: Int

  """The name of the filter"""
  name: String

  """The active flag of the filter"""
  active_flag: Boolean

  """The type of the item"""
  type: String

  """The owner of the filter"""
  user_id: Int

  """The date and time when the filter was added"""
  add_time: String

  """The date and time when the filter was updated"""
  update_time: String

  """The visibility group ID of who can see then filter"""
  visible_to: Int

  """Used by Pipedrive webapp"""
  custom_view_id: Int
}

type getGoals {
  """If the request was successful or not"""
  success: Boolean
  data: query_getGoals_data
}

type query_getGoals_data {
  goals: [query_getGoals_data_goals_items]
}

type query_getGoals_data_goals_items {
  """The ID of the goal"""
  id: String

  """The ID of the creator of the goal"""
  owner_id: Int

  """The title of the goal"""
  title: String
  type: query_getGoals_data_goals_items_type
  assignee: query_getGoals_data_goals_items_assignee

  """The interval of the goal"""
  interval: String
  duration: query_getGoals_data_goals_items_duration
  expected_outcome: query_getGoals_data_goals_items_expected_outcome

  """Whether the goal is currently active or not"""
  is_active: Boolean

  """The IDs of the reports that belong to the goal"""
  report_ids: [String]
}

"""The type of the goal"""
type query_getGoals_data_goals_items_type {
  """The name of the goal type"""
  name: String
  params: query_getGoals_data_goals_items_type_params
}

"""The parameters that accompany the goal type"""
type query_getGoals_data_goals_items_type_params {
  """The IDs of pipelines of the goal"""
  pipeline_id: [Int]

  """The IDs of activity types of the goal"""
  activity_type_id: [Int]
}

"""Who the goal is assigned to"""
type query_getGoals_data_goals_items_assignee {
  """The ID of the goal assignee"""
  id: Int

  """The type of the assignee"""
  type: String
}

"""The duration of the goal"""
type query_getGoals_data_goals_items_duration {
  """The start date of the goal"""
  start: String

  """The end date of the goal"""
  end: String
}

"""The expected outcome of the goal"""
type query_getGoals_data_goals_items_expected_outcome {
  """The numeric target of the goal"""
  target: Int

  """The tracking metric of the goal"""
  tracking_metric: String
}

"""The type of the goal. If provided, everyone's goals will be returned."""
enum queryInput_getGoals_type_name {
  deals_won
  deals_progressed
  activities_completed
  activities_added
  deals_started
}

"""
The type of the goal's assignee. If provided, everyone's goals will be returned.
"""
enum queryInput_getGoals_assignee_type {
  person
  company
  team
}

"""
The tracking metric of the expected outcome of the goal. If provided, everyone's goals will be returned.
"""
enum queryInput_getGoals_expected_outcome_tracking_metric {
  quantity
  sum
}

type getGoalResult {
  """If the request was successful or not"""
  success: Boolean
  data: query_getGoalResult_data
}

type query_getGoalResult_data {
  """The numeric progress of the goal"""
  progress: Int
  goal: query_getGoalResult_data_goal
}

type query_getGoalResult_data_goal {
  """The ID of the goal"""
  id: String

  """The ID of the creator of the goal"""
  owner_id: Int

  """The title of the goal"""
  title: String
  type: query_getGoalResult_data_goal_type
  assignee: query_getGoalResult_data_goal_assignee

  """The interval of the goal"""
  interval: String
  duration: query_getGoalResult_data_goal_duration
  expected_outcome: query_getGoalResult_data_goal_expected_outcome

  """Whether the goal is currently active or not"""
  is_active: Boolean

  """The IDs of the reports that belong to the goal"""
  report_ids: [String]
}

"""The type of the goal"""
type query_getGoalResult_data_goal_type {
  """The name of the goal type"""
  name: String
  params: query_getGoalResult_data_goal_type_params
}

"""The parameters that accompany the goal type"""
type query_getGoalResult_data_goal_type_params {
  """The IDs of pipelines of the goal"""
  pipeline_id: [Int]

  """The IDs of activity types of the goal"""
  activity_type_id: [Int]
}

"""Who the goal is assigned to"""
type query_getGoalResult_data_goal_assignee {
  """The ID of the goal assignee"""
  id: Int

  """The type of the assignee"""
  type: String
}

"""The duration of the goal"""
type query_getGoalResult_data_goal_duration {
  """The start date of the goal"""
  start: String

  """The end date of the goal"""
  end: String
}

"""The expected outcome of the goal"""
type query_getGoalResult_data_goal_expected_outcome {
  """The numeric target of the goal"""
  target: Int

  """The tracking metric of the goal"""
  tracking_metric: String
}

type searchItem {
  """If the response is successful or not"""
  success: Boolean
  data: query_searchItem_allOf_1_data
  additional_data: query_searchItem_allOf_1_additional_data
}

type query_searchItem_allOf_1_data {
  """The array of found items"""
  items: [query_searchItem_allOf_1_data_items_items]

  """The array of related items if `search_for_related_items` was enabled"""
  related_items: [query_searchItem_allOf_1_data_related_items_items]
}

type query_searchItem_allOf_1_data_items_items {
  """Search result relevancy"""
  result_score: Float
  item: JSON
}

type query_searchItem_allOf_1_data_related_items_items {
  """Search result relevancy"""
  result_score: Float
  item: JSON
}

type query_searchItem_allOf_1_additional_data {
  pagination: query_searchItem_allOf_1_additional_data_pagination
}

"""Pagination details of the list"""
type query_searchItem_allOf_1_additional_data_pagination {
  """Pagination start"""
  start: Int

  """Items shown per page"""
  limit: Int

  """Whether there are more list items in the collection than displayed"""
  more_items_in_collection: Boolean

  """Next pagination start"""
  next_start: Int
}

"""
A comma-separated string array. The type of items to perform the search from. Defaults to all.
"""
enum queryInput_searchItem_item_types {
  deal
  person
  organization
  product
  lead
  file
  mail_attachment
  project
}

"""
A comma-separated string array. The fields to perform the search from. Defaults to all. Relevant for each item type are:<br> <table> <tr><th><b>Item type</b></th><th><b>Field</b></th></tr> <tr><td>Deal</td><td>`custom_fields`, `notes`, `title`</td></tr> <tr><td>Person</td><td>`custom_fields`, `email`, `name`, `notes`, `phone`</td></tr> <tr><td>Organization</td><td>`address`, `custom_fields`, `name`, `notes`</td></tr> <tr><td>Product</td><td>`code`, `custom_fields`, `name`</td></tr> <tr><td>Lead</td><td>`custom_fields`, `notes`, `email`, `organization_name`, `person_name`, `phone`, `title`</td></tr> <tr><td>File</td><td>`name`</td></tr> <tr><td>Mail attachment</td><td>`name`</td></tr> <tr><td>Project</td><td> `custom_fields`, `notes`, `title`, `description` </td></tr> </table> <br> When searching for leads, the email, organization_name, person_name, and phone fields will return results only for leads not linked to contacts. For searching leads by person or organization values, please use `search_for_related_items`.
"""
enum queryInput_searchItem_fields {
  address
  code
  custom_fields
  email
  name
  notes
  organization_name
  person_name
  phone
  title
  description
}

"""
A comma-separated string array. Supports including optional fields in the results which are not provided by default.
"""
enum queryInput_searchItem_include_fields {
  deal_cc_email
  person_picture
  product_price
}

type searchItemByField {
  """If the response is successful or not"""
  success: Boolean

  """The array of results"""
  data: [query_searchItemByField_allOf_1_data_items]
  additional_data: query_searchItemByField_allOf_1_additional_data
}

type query_searchItemByField_allOf_1_data_items {
  """The ID of the item"""
  id: Int

  """The value of the searched `field_key`"""
  _DOLLAR_field_key: JSON
}

type query_searchItemByField_allOf_1_additional_data {
  pagination: query_searchItemByField_allOf_1_additional_data_pagination
}

"""Pagination details of the list"""
type query_searchItemByField_allOf_1_additional_data_pagination {
  """Pagination start"""
  start: Int

  """Items shown per page"""
  limit: Int

  """Whether there are more list items in the collection than displayed"""
  more_items_in_collection: Boolean

  """Next pagination start"""
  next_start: Int
}

"""The type of the field to perform the search from"""
enum queryInput_searchItemByField_field_type {
  dealField
  leadField
  personField
  organizationField
  productField
  projectField
}

type getLeads {
  success: Boolean
  data: [query_getLeads_data_items]
  additional_data: query_getLeads_additional_data
}

type query_getLeads_data_items {
  """The unique ID of the lead in the UUID format"""
  id: UUID

  """The title of the lead"""
  title: String

  """The ID of the user who owns the lead"""
  owner_id: Int

  """The ID of the user who created the lead"""
  creator_id: Int

  """The IDs of the lead labels which are associated with the lead"""
  label_ids: [UUID]

  """The ID of a person which this lead is linked to"""
  person_id: Int

  """The ID of an organization which this lead is linked to"""
  organization_id: Int

  """
  Defines where the lead comes from. Will be `API` if the lead was created through the Public API and will be `Manually created` if the lead was created manually through the UI.
  """
  source_name: String

  """A flag indicating whether the lead is archived or not"""
  is_archived: Boolean

  """
  A flag indicating whether the lead was seen by someone in the Pipedrive UI
  """
  was_seen: Boolean
  value: query_getLeads_data_items_value

  """
  The date of when the deal which will be created from the lead is expected to be closed. In ISO 8601 format: YYYY-MM-DD.
  """
  expected_close_date: Date

  """The ID of the next activity associated with the lead"""
  next_activity_id: Int

  """
  The date and time of when the lead was created. In ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.
  """
  add_time: DateTime

  """
  The date and time of when the lead was last updated. In ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.
  """
  update_time: DateTime
  visible_to: query_getLeads_data_items_visible_to

  """The BCC email of the lead"""
  cc_email: String
}

"""The potential value of the lead"""
type query_getLeads_data_items_value {
  amount: Float!
  currency: String!
}

enum query_getLeads_data_items_visible_to {
  _1
  _3
  _5
  _7
}

"""The additional data of the list"""
type query_getLeads_additional_data {
  """Pagination start"""
  start: Int

  """Items shown per page"""
  limit: Int

  """If there are more list items in the collection than displayed or not"""
  more_items_in_collection: Boolean
}

"""
Filtering based on the archived status of a lead. If not provided, `All` is used.
"""
enum queryInput_getLeads_archived_status {
  archived
  not_archived
  all
}

"""
The field names and sorting mode separated by a comma (`field_name_1 ASC`, `field_name_2 DESC`). Only first-level field keys are supported (no nested keys).
"""
enum queryInput_getLeads_sort {
  id
  title
  owner_id
  creator_id
  was_seen
  expected_close_date
  next_activity_id
  add_time
  update_time
}

union getLead_response = query_getLead_oneOf_0 | query_getLead_oneOf_1

type query_getLead_oneOf_0 {
  success: Boolean
  data: query_getLead_oneOf_0_data
}

type query_getLead_oneOf_0_data {
  """The unique ID of the lead in the UUID format"""
  id: UUID

  """The title of the lead"""
  title: String

  """The ID of the user who owns the lead"""
  owner_id: Int

  """The ID of the user who created the lead"""
  creator_id: Int

  """The IDs of the lead labels which are associated with the lead"""
  label_ids: [UUID]

  """The ID of a person which this lead is linked to"""
  person_id: Int

  """The ID of an organization which this lead is linked to"""
  organization_id: Int

  """
  Defines where the lead comes from. Will be `API` if the lead was created through the Public API and will be `Manually created` if the lead was created manually through the UI.
  """
  source_name: String

  """A flag indicating whether the lead is archived or not"""
  is_archived: Boolean

  """
  A flag indicating whether the lead was seen by someone in the Pipedrive UI
  """
  was_seen: Boolean
  value: query_getLead_oneOf_0_data_value

  """
  The date of when the deal which will be created from the lead is expected to be closed. In ISO 8601 format: YYYY-MM-DD.
  """
  expected_close_date: Date

  """The ID of the next activity associated with the lead"""
  next_activity_id: Int

  """
  The date and time of when the lead was created. In ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.
  """
  add_time: DateTime

  """
  The date and time of when the lead was last updated. In ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.
  """
  update_time: DateTime
  visible_to: query_getLead_oneOf_0_data_visible_to

  """The BCC email of the lead"""
  cc_email: String
}

"""The potential value of the lead"""
type query_getLead_oneOf_0_data_value {
  amount: Float!
  currency: String!
}

enum query_getLead_oneOf_0_data_visible_to {
  _1
  _3
  _5
  _7
}

type query_getLead_oneOf_1 {
  success: Boolean

  """The description of the error"""
  error: String

  """A message describing how to solve the problem"""
  error_info: String
  data: JSON
  additional_data: JSON
}

type query_getLeadUsers {
  """If the response is successful or not"""
  success: Boolean

  """The list of user IDs"""
  data: [Int]
}

type searchLeads {
  """If the response is successful or not"""
  success: Boolean
  data: query_searchLeads_allOf_1_data
  additional_data: query_searchLeads_allOf_1_additional_data
}

type query_searchLeads_allOf_1_data {
  """The array of leads"""
  items: [query_searchLeads_allOf_1_data_items_items]
}

type query_searchLeads_allOf_1_data_items_items {
  """Search result relevancy"""
  result_score: Float
  item: query_searchLeads_allOf_1_data_items_items_item
}

type query_searchLeads_allOf_1_data_items_items_item {
  """The ID of the lead"""
  id: String

  """The type of the item"""
  type: String

  """The title of the lead"""
  title: String
  owner: query_searchLeads_allOf_1_data_items_items_item_owner
  person: query_searchLeads_allOf_1_data_items_items_item_person
  organization: query_searchLeads_allOf_1_data_items_items_item_organization
  phones: [String]
  emails: [String]

  """Custom fields"""
  custom_fields: [String]

  """An array of notes"""
  notes: [String]

  """The value of the lead"""
  value: Int

  """The currency of the lead"""
  currency: String

  """The visibility of the lead"""
  visible_to: Int

  """A flag indicating whether the lead is archived or not"""
  is_archived: Boolean
}

type query_searchLeads_allOf_1_data_items_items_item_owner {
  """The ID of the owner of the lead"""
  id: Int
}

type query_searchLeads_allOf_1_data_items_items_item_person {
  """The ID of the person the lead is associated with"""
  id: Int

  """The name of the person the lead is associated with"""
  name: String
}

type query_searchLeads_allOf_1_data_items_items_item_organization {
  """The ID of the organization the lead is associated with"""
  id: Int

  """The name of the organization the lead is associated with"""
  name: String
}

type query_searchLeads_allOf_1_additional_data {
  pagination: query_searchLeads_allOf_1_additional_data_pagination
}

"""Pagination details of the list"""
type query_searchLeads_allOf_1_additional_data_pagination {
  """Pagination start"""
  start: Int

  """Items shown per page"""
  limit: Int

  """Whether there are more list items in the collection than displayed"""
  more_items_in_collection: Boolean

  """Next pagination start"""
  next_start: Int
}

"""
A comma-separated string array. The fields to perform the search from. Defaults to all of them.
"""
enum queryInput_searchLeads_fields {
  custom_fields
  notes
  title
}

enum lead_was_seen_const {
  lead_was_seen
}

type getLeadLabels {
  success: Boolean
  data: [query_getLeadLabels_data_items]
}

type query_getLeadLabels_data_items {
  """The unique ID of the lead label"""
  id: UUID

  """The name of the lead label"""
  name: String
  color: query_getLeadLabels_data_items_color

  """
  The date and time of when the lead label was created. In ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.
  """
  add_time: DateTime

  """
  The date and time of when the lead label was last updated. In ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.
  """
  update_time: DateTime
}

"""The color of the label. Only a subset of colors can be used."""
enum query_getLeadLabels_data_items_color {
  green
  blue
  red
  yellow
  purple
  gray
}

type getLeadSources {
  success: Boolean
  data: [query_getLeadSources_data_items]
}

type query_getLeadSources_data_items {
  """The unique name of a lead source"""
  name: String
}

type teams {
  """If the response is successful or not"""
  success: Boolean
  data: [baseTeam]
}

type baseTeam {
  """The team ID"""
  id: Int

  """The team name"""
  name: String

  """The team description"""
  description: String

  """The team manager ID"""
  manager_id: Int

  """The list of user IDs"""
  users: [Int]
  active_flag: numberBoolean
  deleted_flag: numberBoolean2

  """The team creation time. Format: YYYY-MM-DD HH:MM:SS"""
  add_time: String

  """The ID of the user who created the team"""
  created_by_user_id: Int
}

enum numberBoolean {
  _0
  _1
}

enum numberBoolean2 {
  _0
  _1
}

"""The field name to sort returned teams by"""
enum queryInput_getTeams_order_by {
  id
  name
  manager_id
  active_flag
}

"""When enabled, the teams will not include IDs of member users"""
enum numberBooleanDefault0105 {
  _0
  _1
}

union getTeam_response = query_getTeam_oneOf_0 | failResponse

type query_getTeam_oneOf_0 {
  """If the response is successful or not"""
  success: Boolean
  data: baseTeam
}

type failResponse {
  """If the response is successful or not"""
  success: Boolean

  """The error message"""
  error: String
}

union getTeamUsers_response = query_getTeamUsers_oneOf_0 | failResponse

type query_getTeamUsers_oneOf_0 {
  """If the response is successful or not"""
  success: Boolean

  """The list of user IDs"""
  data: [Int]
}

type query_getUserTeams {
  """If the response is successful or not"""
  success: Boolean
  data: [baseTeam]
}

"""The field name to sort returned teams by"""
enum queryInput_getUserTeams_order_by {
  id
  name
  manager_id
  active_flag
}

type mailMessage {
  """If the response is successful or not"""
  success: Boolean

  """
  The email service specific status code and it is returned through the response body.
  """
  statusCode: Int

  """The status text of the response."""
  statusText: String

  """The service name of the response."""
  service: String
  data: query_getMailMessage_allOf_1_data
}

type query_getMailMessage_allOf_1_data {
  """ID of the mail message."""
  id: Int

  """The array of mail message sender (object)"""
  from: [query_getMailMessage_allOf_1_data_from_items]

  """The array of mail message receiver (object)"""
  to: [query_getMailMessage_allOf_1_data_to_items]

  """The array of mail message copies (object)"""
  cc: [query_getMailMessage_allOf_1_data_cc_items]

  """The array of mail message blind copies (object)"""
  bcc: [query_getMailMessage_allOf_1_data_bcc_items]

  """The mail message body URL"""
  body_url: String

  """The connection account ID"""
  account_id: String

  """ID of the user whom mail message will be assigned to"""
  user_id: Int

  """ID of the mail message thread"""
  mail_thread_id: Int

  """The subject of mail message"""
  subject: String

  """The snippet of mail message. Snippet length is up to 225 characters."""
  snippet: String
  mail_tracking_status: query_getMailMessage_allOf_1_data_mail_tracking_status
  mail_link_tracking_enabled_flag: numberBooleanDefault028
  read_flag: numberBooleanDefault029

  """
  If the mail message has a draft status then the value is the mail message object as JSON formatted string, otherwise `null`.
  """
  draft: String
  draft_flag: numberBooleanDefault030
  synced_flag: numberBooleanDefault031
  deleted_flag: numberBooleanDefault032
  has_body_flag: numberBooleanDefault033
  sent_flag: numberBooleanDefault034
  sent_from_pipedrive_flag: numberBooleanDefault035
  smart_bcc_flag: numberBooleanDefault036

  """Creation or receival time of the mail message"""
  message_time: DateTime

  """The insertion into the database time of the mail message"""
  add_time: DateTime

  """The updating time in the database of the mail message"""
  update_time: DateTime
  has_attachments_flag: numberBooleanDefault037
  has_inline_attachments_flag: numberBooleanDefault038
  has_real_attachments_flag: numberBooleanDefault039
}

type query_getMailMessage_allOf_1_data_from_items {
  """ID of the mail participant"""
  id: Int

  """Mail address of the mail participant"""
  email_address: String

  """Name of the mail participant"""
  name: String

  """ID of the linked person to the mail message"""
  linked_person_id: Int

  """Name of the linked person to the mail message"""
  linked_person_name: String

  """ID of the mail message participant"""
  mail_message_party_id: Int
}

type query_getMailMessage_allOf_1_data_to_items {
  """ID of the mail participant"""
  id: Int

  """Mail address of the mail participant"""
  email_address: String

  """Name of the mail participant"""
  name: String

  """ID of the linked person to the mail message"""
  linked_person_id: Int

  """Name of the linked person to the mail message"""
  linked_person_name: String

  """ID of the mail message participant"""
  mail_message_party_id: Int
}

type query_getMailMessage_allOf_1_data_cc_items {
  """ID of the mail participant"""
  id: Int

  """Mail address of the mail participant"""
  email_address: String

  """Name of the mail participant"""
  name: String

  """ID of the linked person to the mail message"""
  linked_person_id: Int

  """Name of the linked person to the mail message"""
  linked_person_name: String

  """ID of the mail message participant"""
  mail_message_party_id: Int
}

type query_getMailMessage_allOf_1_data_bcc_items {
  """ID of the mail participant"""
  id: Int

  """Mail address of the mail participant"""
  email_address: String

  """Name of the mail participant"""
  name: String

  """ID of the linked person to the mail message"""
  linked_person_id: Int

  """Name of the linked person to the mail message"""
  linked_person_name: String

  """ID of the mail message participant"""
  mail_message_party_id: Int
}

"""
The status of tracking mail message. Value is `null` if tracking is not enabled.
"""
enum query_getMailMessage_allOf_1_data_mail_tracking_status {
  opened
  not_opened
}

enum numberBooleanDefault028 {
  _0
  _1
}

enum numberBooleanDefault029 {
  _0
  _1
}

enum numberBooleanDefault030 {
  _0
  _1
}

enum numberBooleanDefault031 {
  _0
  _1
}

enum numberBooleanDefault032 {
  _0
  _1
}

enum numberBooleanDefault033 {
  _0
  _1
}

enum numberBooleanDefault034 {
  _0
  _1
}

enum numberBooleanDefault035 {
  _0
  _1
}

enum numberBooleanDefault036 {
  _0
  _1
}

enum numberBooleanDefault037 {
  _0
  _1
}

enum numberBooleanDefault038 {
  _0
  _1
}

enum numberBooleanDefault039 {
  _0
  _1
}

"""
Whether to include the full message body or not. `0` = Don't include, `1` = Include
"""
enum queryInput_getMailMessage_include_body {
  _0
  _1
}

type getMailThreads {
  """If the response is successful or not"""
  success: Boolean

  """The array of mail threads"""
  data: [query_getMailThreads_allOf_1_data_items]
}

type query_getMailThreads_allOf_1_data_items {
  """ID of the mail thread"""
  id: Int

  """The connection account ID"""
  account_id: String

  """ID of the user whom mail message will be assigned to"""
  user_id: Int

  """The subject"""
  subject: String

  """A snippet"""
  snippet: String
  read_flag: numberBooleanDefault040

  """Mail tracking status"""
  mail_tracking_status: String
  has_attachments_flag: numberBooleanDefault041
  has_inline_attachments_flag: numberBooleanDefault042
  has_real_attachments_flag: numberBooleanDefault043
  deleted_flag: numberBooleanDefault044
  synced_flag: numberBooleanDefault045
  smart_bcc_flag: numberBooleanDefault046
  mail_link_tracking_enabled_flag: numberBooleanDefault047
  parties: query_getMailThreads_allOf_1_data_items_allOf_1_parties

  """Parties of the drafted mail thread"""
  drafts_parties: [JSON]

  """Folders in which messages from thread are being stored"""
  folders: [String]

  """Version"""
  version: Float

  """A snippet from a draft"""
  snippet_draft: String

  """A snippet from a message sent"""
  snippet_sent: String

  """An amount of messages"""
  message_count: Int
  has_draft_flag: numberBooleanDefault048
  has_sent_flag: numberBooleanDefault049
  archived_flag: numberBooleanDefault050
  shared_flag: numberBooleanDefault051
  external_deleted_flag: numberBooleanDefault052
  first_message_to_me_flag: numberBooleanDefault053

  """Last message timestamp"""
  last_message_timestamp: DateTime

  """
  The time when the mail thread has had the first message received or created
  """
  first_message_timestamp: DateTime

  """The last time when the mail thread has had a message sent"""
  last_message_sent_timestamp: DateTime

  """The last time when the mail thread has had a message received"""
  last_message_received_timestamp: DateTime

  """The time when the mail thread was inserted to database"""
  add_time: DateTime

  """The time when the mail thread was updated in database received"""
  update_time: DateTime

  """The ID of the deal"""
  deal_id: Int

  """Status of the deal"""
  deal_status: String

  """The ID of the lead"""
  lead_id: UUID
  all_messages_sent_flag: numberBooleanDefault054
}

enum numberBooleanDefault040 {
  _0
  _1
}

enum numberBooleanDefault041 {
  _0
  _1
}

enum numberBooleanDefault042 {
  _0
  _1
}

enum numberBooleanDefault043 {
  _0
  _1
}

enum numberBooleanDefault044 {
  _0
  _1
}

enum numberBooleanDefault045 {
  _0
  _1
}

enum numberBooleanDefault046 {
  _0
  _1
}

enum numberBooleanDefault047 {
  _0
  _1
}

"""Parties of the mail thread"""
type query_getMailThreads_allOf_1_data_items_allOf_1_parties {
  """Recipients of the mail thread"""
  to: [query_getMailThreads_allOf_1_data_items_allOf_1_parties_to_items]

  """Senders of the mail thread"""
  from: [query_getMailThreads_allOf_1_data_items_allOf_1_parties_from_items]
}

"""Member of a thread"""
type query_getMailThreads_allOf_1_data_items_allOf_1_parties_to_items {
  """ID of the mail thread participant"""
  id: Int

  """Name of the mail thread participant"""
  name: String

  """Whether the mail thread participant was last to send an email"""
  latest_sent: Boolean

  """Email address of the mail thread participant"""
  email_address: String

  """Message time"""
  message_time: Float

  """ID of the linked person"""
  linked_person_id: Int

  """Email of the linked person"""
  linked_person_name: String

  """ID of the mail message party"""
  mail_message_party_id: Int

  """Linked Organization ID"""
  linked_organization_id: Int
}

"""Member of a thread"""
type query_getMailThreads_allOf_1_data_items_allOf_1_parties_from_items {
  """ID of the mail thread participant"""
  id: Int

  """Name of the mail thread participant"""
  name: String

  """Whether the mail thread participant was last to send an email"""
  latest_sent: Boolean

  """Email address of the mail thread participant"""
  email_address: String

  """Message time"""
  message_time: Float

  """ID of the linked person"""
  linked_person_id: Int

  """Email of the linked person"""
  linked_person_name: String

  """ID of the mail message party"""
  mail_message_party_id: Int

  """Linked Organization ID"""
  linked_organization_id: Int
}

enum numberBooleanDefault048 {
  _0
  _1
}

enum numberBooleanDefault049 {
  _0
  _1
}

enum numberBooleanDefault050 {
  _0
  _1
}

enum numberBooleanDefault051 {
  _0
  _1
}

enum numberBooleanDefault052 {
  _0
  _1
}

enum numberBooleanDefault053 {
  _0
  _1
}

enum numberBooleanDefault054 {
  _0
  _1
}

"""The type of folder to fetch"""
enum queryInput_getMailThreads_folder {
  inbox
  drafts
  sent
  archive
}

type getOneMailThread {
  """If the response is successful or not"""
  success: Boolean
  data: baseMailThread2
}

type baseMailThread2 {
  """ID of the mail thread"""
  id: Int

  """The connection account ID"""
  account_id: String

  """ID of the user whom mail message will be assigned to"""
  user_id: Int

  """The subject"""
  subject: String

  """A snippet"""
  snippet: String
  read_flag: numberBooleanDefault055

  """Mail tracking status"""
  mail_tracking_status: String
  has_attachments_flag: numberBooleanDefault056
  has_inline_attachments_flag: numberBooleanDefault057
  has_real_attachments_flag: numberBooleanDefault058
  deleted_flag: numberBooleanDefault059
  synced_flag: numberBooleanDefault060
  smart_bcc_flag: numberBooleanDefault061
  mail_link_tracking_enabled_flag: numberBooleanDefault062
  parties: query_getMailThread_allOf_1_data_allOf_1_parties

  """Parties of the drafted mail thread"""
  drafts_parties: [JSON]

  """Folders in which messages from thread are being stored"""
  folders: [String]

  """Version"""
  version: Float

  """A snippet from a draft"""
  snippet_draft: String

  """A snippet from a message sent"""
  snippet_sent: String

  """An amount of messages"""
  message_count: Int
  has_draft_flag: numberBooleanDefault063
  has_sent_flag: numberBooleanDefault064
  archived_flag: numberBooleanDefault065
  shared_flag: numberBooleanDefault066
  external_deleted_flag: numberBooleanDefault067
  first_message_to_me_flag: numberBooleanDefault068

  """Last message timestamp"""
  last_message_timestamp: DateTime

  """
  The time when the mail thread has had the first message received or created
  """
  first_message_timestamp: DateTime

  """The last time when the mail thread has had a message sent"""
  last_message_sent_timestamp: DateTime

  """The last time when the mail thread has had a message received"""
  last_message_received_timestamp: DateTime

  """The time when the mail thread was inserted to database"""
  add_time: DateTime

  """The time when the mail thread was updated in database received"""
  update_time: DateTime

  """The ID of the deal"""
  deal_id: Int

  """Status of the deal"""
  deal_status: String

  """The ID of the lead"""
  lead_id: UUID
  all_messages_sent_flag: numberBooleanDefault069
}

enum numberBooleanDefault055 {
  _0
  _1
}

enum numberBooleanDefault056 {
  _0
  _1
}

enum numberBooleanDefault057 {
  _0
  _1
}

enum numberBooleanDefault058 {
  _0
  _1
}

enum numberBooleanDefault059 {
  _0
  _1
}

enum numberBooleanDefault060 {
  _0
  _1
}

enum numberBooleanDefault061 {
  _0
  _1
}

enum numberBooleanDefault062 {
  _0
  _1
}

"""Parties of the mail thread"""
type query_getMailThread_allOf_1_data_allOf_1_parties {
  """Recipients of the mail thread"""
  to: [query_getMailThread_allOf_1_data_allOf_1_parties_to_items]

  """Senders of the mail thread"""
  from: [query_getMailThread_allOf_1_data_allOf_1_parties_from_items]
}

"""Member of a thread"""
type query_getMailThread_allOf_1_data_allOf_1_parties_to_items {
  """ID of the mail thread participant"""
  id: Int

  """Name of the mail thread participant"""
  name: String

  """Whether the mail thread participant was last to send an email"""
  latest_sent: Boolean

  """Email address of the mail thread participant"""
  email_address: String

  """Message time"""
  message_time: Float

  """ID of the linked person"""
  linked_person_id: Int

  """Email of the linked person"""
  linked_person_name: String

  """ID of the mail message party"""
  mail_message_party_id: Int

  """Linked Organization ID"""
  linked_organization_id: Int
}

"""Member of a thread"""
type query_getMailThread_allOf_1_data_allOf_1_parties_from_items {
  """ID of the mail thread participant"""
  id: Int

  """Name of the mail thread participant"""
  name: String

  """Whether the mail thread participant was last to send an email"""
  latest_sent: Boolean

  """Email address of the mail thread participant"""
  email_address: String

  """Message time"""
  message_time: Float

  """ID of the linked person"""
  linked_person_id: Int

  """Email of the linked person"""
  linked_person_name: String

  """ID of the mail message party"""
  mail_message_party_id: Int

  """Linked Organization ID"""
  linked_organization_id: Int
}

enum numberBooleanDefault063 {
  _0
  _1
}

enum numberBooleanDefault064 {
  _0
  _1
}

enum numberBooleanDefault065 {
  _0
  _1
}

enum numberBooleanDefault066 {
  _0
  _1
}

enum numberBooleanDefault067 {
  _0
  _1
}

enum numberBooleanDefault068 {
  _0
  _1
}

enum numberBooleanDefault069 {
  _0
  _1
}

type getAllMailMessagesOfMailThread {
  """If the response is successful or not"""
  success: Boolean

  """The array of the mail messages of the mail thread"""
  data: [query_getMailThreadMessages_allOf_1_data_items]
}

type query_getMailThreadMessages_allOf_1_data_items {
  """ID of the mail thread"""
  id: Int

  """The connection account ID"""
  account_id: String

  """ID of the user whom mail message will be assigned to"""
  user_id: Int

  """The subject"""
  subject: String

  """A snippet"""
  snippet: String
  read_flag: numberBooleanDefault070

  """Mail tracking status"""
  mail_tracking_status: String
  has_attachments_flag: numberBooleanDefault071
  has_inline_attachments_flag: numberBooleanDefault072
  has_real_attachments_flag: numberBooleanDefault073
  deleted_flag: numberBooleanDefault074
  synced_flag: numberBooleanDefault075
  smart_bcc_flag: numberBooleanDefault076
  mail_link_tracking_enabled_flag: numberBooleanDefault077

  """Senders of the mail thread"""
  from: [query_getMailThreadMessages_allOf_1_data_items_allOf_1_from_items]

  """Recipients of the mail thread"""
  to: [query_getMailThreadMessages_allOf_1_data_items_allOf_1_to_items]

  """Participants of the Cc"""
  cc: [query_getMailThreadMessages_allOf_1_data_items_allOf_1_cc_items]

  """Participants of the Bcc"""
  bcc: [query_getMailThreadMessages_allOf_1_data_items_allOf_1_bcc_items]

  """A link to the mail thread message"""
  body_url: String

  """ID of the mail thread"""
  mail_thread_id: Int

  """
  If the mail message has a draft status then the value is the mail message object as JSON formatted string, otherwise `null`.
  """
  draft: String
  has_body_flag: numberBooleanDefault078
  sent_flag: numberBooleanDefault079
  sent_from_pipedrive_flag: numberBooleanDefault080

  """The time when the mail message was received or created"""
  message_time: DateTime

  """The time when the mail message was inserted to database"""
  add_time: DateTime

  """The time when the mail message was updated in database received"""
  update_time: DateTime
}

enum numberBooleanDefault070 {
  _0
  _1
}

enum numberBooleanDefault071 {
  _0
  _1
}

enum numberBooleanDefault072 {
  _0
  _1
}

enum numberBooleanDefault073 {
  _0
  _1
}

enum numberBooleanDefault074 {
  _0
  _1
}

enum numberBooleanDefault075 {
  _0
  _1
}

enum numberBooleanDefault076 {
  _0
  _1
}

enum numberBooleanDefault077 {
  _0
  _1
}

"""Member of a thread"""
type query_getMailThreadMessages_allOf_1_data_items_allOf_1_from_items {
  """ID of the mail thread participant"""
  id: Int

  """Name of the mail thread participant"""
  name: String

  """Whether the mail thread participant was last to send an email"""
  latest_sent: Boolean

  """Email address of the mail thread participant"""
  email_address: String

  """Message time"""
  message_time: Float

  """ID of the linked person"""
  linked_person_id: Int

  """Email of the linked person"""
  linked_person_name: String

  """ID of the mail message party"""
  mail_message_party_id: Int

  """Linked Organization ID"""
  linked_organization_id: Int
}

"""Member of a thread"""
type query_getMailThreadMessages_allOf_1_data_items_allOf_1_to_items {
  """ID of the mail thread participant"""
  id: Int

  """Name of the mail thread participant"""
  name: String

  """Whether the mail thread participant was last to send an email"""
  latest_sent: Boolean

  """Email address of the mail thread participant"""
  email_address: String

  """Message time"""
  message_time: Float

  """ID of the linked person"""
  linked_person_id: Int

  """Email of the linked person"""
  linked_person_name: String

  """ID of the mail message party"""
  mail_message_party_id: Int

  """Linked Organization ID"""
  linked_organization_id: Int
}

"""Member of a thread"""
type query_getMailThreadMessages_allOf_1_data_items_allOf_1_cc_items {
  """ID of the mail thread participant"""
  id: Int

  """Name of the mail thread participant"""
  name: String

  """Whether the mail thread participant was last to send an email"""
  latest_sent: Boolean

  """Email address of the mail thread participant"""
  email_address: String

  """Message time"""
  message_time: Float

  """ID of the linked person"""
  linked_person_id: Int

  """Email of the linked person"""
  linked_person_name: String

  """ID of the mail message party"""
  mail_message_party_id: Int

  """Linked Organization ID"""
  linked_organization_id: Int
}

"""Member of a thread"""
type query_getMailThreadMessages_allOf_1_data_items_allOf_1_bcc_items {
  """ID of the mail thread participant"""
  id: Int

  """Name of the mail thread participant"""
  name: String

  """Whether the mail thread participant was last to send an email"""
  latest_sent: Boolean

  """Email address of the mail thread participant"""
  email_address: String

  """Message time"""
  message_time: Float

  """ID of the linked person"""
  linked_person_id: Int

  """Email of the linked person"""
  linked_person_name: String

  """ID of the mail message party"""
  mail_message_party_id: Int

  """Linked Organization ID"""
  linked_organization_id: Int
}

enum numberBooleanDefault078 {
  _0
  _1
}

enum numberBooleanDefault079 {
  _0
  _1
}

enum numberBooleanDefault080 {
  _0
  _1
}

type getNotes {
  """If the request was successful or not"""
  success: Boolean

  """The array of notes"""
  data: [query_getNotes_data_items]
  additional_data: query_getNotes_additional_data
}

type query_getNotes_data_items {
  """The ID of the note"""
  id: Int

  """Whether the note is active or deleted"""
  active_flag: Boolean

  """The creation date and time of the note"""
  add_time: String

  """
  The content of the note in HTML format. Subject to sanitization on the back-end.
  """
  content: String
  deal: query_getNotes_data_items_deal

  """The ID of the lead the note is attached to"""
  lead_id: UUID

  """The ID of the deal the note is attached to"""
  deal_id: Int

  """The ID of the user who last updated the note"""
  last_update_user_id: Int

  """The ID of the organization the note is attached to"""
  org_id: Int
  organization: query_getNotes_data_items_organization
  person: query_getNotes_data_items_person

  """The ID of the person the note is attached to"""
  person_id: Int

  """If true, the results are filtered by note to deal pinning state"""
  pinned_to_deal_flag: Boolean

  """
  If true, the results are filtered by note to organization pinning state
  """
  pinned_to_organization_flag: Boolean

  """If true, the results are filtered by note to person pinning state"""
  pinned_to_person_flag: Boolean

  """The last updated date and time of the note"""
  update_time: String
  user: query_getNotes_data_items_user

  """The ID of the note creator"""
  user_id: Int
}

"""The deal this note is attached to"""
type query_getNotes_data_items_deal {
  """The title of the deal this note is attached to"""
  title: String
}

"""The organization the note is attached to"""
type query_getNotes_data_items_organization {
  """The name of the organization the note is attached to"""
  name: String
}

"""The person the note is attached to"""
type query_getNotes_data_items_person {
  """The name of the person the note is attached to"""
  name: String
}

"""The user who created the note"""
type query_getNotes_data_items_user {
  """The email of the note creator"""
  email: String

  """The URL of the note creator avatar picture"""
  icon_url: String

  """Whether the note is created by you or not"""
  is_you: Boolean

  """The name of the note creator"""
  name: String
}

type query_getNotes_additional_data {
  pagination: query_getNotes_additional_data_pagination
}

"""The pagination details of the list"""
type query_getNotes_additional_data_pagination {
  """Pagination start"""
  start: Int

  """Items shown per page"""
  limit: Int

  """If there are more list items in the collection than displayed or not"""
  more_items_in_collection: Boolean

  """Next pagination start"""
  next_start: Int
}

"""If set, the results are filtered by note to lead pinning state"""
enum queryInput_getNotes_pinned_to_lead_flag {
  _0
  _1
}

"""If set, the results are filtered by note to deal pinning state"""
enum queryInput_getNotes_pinned_to_deal_flag {
  _0
  _1
}

"""If set, the results are filtered by note to organization pinning state"""
enum queryInput_getNotes_pinned_to_organization_flag {
  _0
  _1
}

"""If set, the results are filtered by note to person pinning state"""
enum queryInput_getNotes_pinned_to_person_flag {
  _0
  _1
}

type query_getNote {
  """If the request was successful or not"""
  success: Boolean
  data: query_getNote_data
}

type query_getNote_data {
  """The ID of the note"""
  id: Int

  """Whether the note is active or deleted"""
  active_flag: Boolean

  """The creation date and time of the note"""
  add_time: String

  """
  The content of the note in HTML format. Subject to sanitization on the back-end.
  """
  content: String
  deal: query_getNote_data_deal

  """The ID of the lead the note is attached to"""
  lead_id: UUID

  """The ID of the deal the note is attached to"""
  deal_id: Int

  """The ID of the user who last updated the note"""
  last_update_user_id: Int

  """The ID of the organization the note is attached to"""
  org_id: Int
  organization: query_getNote_data_organization
  person: query_getNote_data_person

  """The ID of the person the note is attached to"""
  person_id: Int

  """If true, the results are filtered by note to deal pinning state"""
  pinned_to_deal_flag: Boolean

  """
  If true, the results are filtered by note to organization pinning state
  """
  pinned_to_organization_flag: Boolean

  """If true, the results are filtered by note to person pinning state"""
  pinned_to_person_flag: Boolean

  """The last updated date and time of the note"""
  update_time: String
  user: query_getNote_data_user

  """The ID of the note creator"""
  user_id: Int
}

"""The deal this note is attached to"""
type query_getNote_data_deal {
  """The title of the deal this note is attached to"""
  title: String
}

"""The organization the note is attached to"""
type query_getNote_data_organization {
  """The name of the organization the note is attached to"""
  name: String
}

"""The person the note is attached to"""
type query_getNote_data_person {
  """The name of the person the note is attached to"""
  name: String
}

"""The user who created the note"""
type query_getNote_data_user {
  """The email of the note creator"""
  email: String

  """The URL of the note creator avatar picture"""
  icon_url: String

  """Whether the note is created by you or not"""
  is_you: Boolean

  """The name of the note creator"""
  name: String
}

type getComments {
  """If the request was successful or not"""
  success: Boolean

  """The array of comments"""
  data: [query_getNoteComments_data_items]
  additional_data: query_getNoteComments_additional_data
}

type query_getNoteComments_data_items {
  """The ID of the note"""
  uuid: UUID

  """Whether the note is active or deleted"""
  active_flag: Boolean

  """The creation date and time of the note"""
  add_time: String

  """The creation date and time of the note"""
  update_time: String

  """
  The content of the note in HTML format. Subject to sanitization on the back-end.
  """
  content: String

  """
  The ID of the object that the comment is attached to, will be the id of the note
  """
  object_id: String

  """
  The type of object that the comment is attached to, will be "note"
  """
  object_type: String

  """The ID of the user who created the comment"""
  user_id: Int

  """The ID of the user who last updated the comment"""
  updater_id: Int

  """The ID of the company"""
  company_id: Int
}

type query_getNoteComments_additional_data {
  pagination: query_getNoteComments_additional_data_pagination
}

"""The pagination details of the list"""
type query_getNoteComments_additional_data_pagination {
  """Pagination start"""
  start: Int

  """Items shown per page"""
  limit: Int

  """If there are more list items in the collection than displayed or not"""
  more_items_in_collection: Boolean

  """Next pagination start"""
  next_start: Int
}

type query_getComment {
  """If the request was successful or not"""
  success: Boolean
  data: query_getComment_data
}

type query_getComment_data {
  """The ID of the note"""
  uuid: UUID

  """Whether the note is active or deleted"""
  active_flag: Boolean

  """The creation date and time of the note"""
  add_time: String

  """The creation date and time of the note"""
  update_time: String

  """
  The content of the note in HTML format. Subject to sanitization on the back-end.
  """
  content: String

  """
  The ID of the object that the comment is attached to, will be the id of the note
  """
  object_id: String

  """
  The type of object that the comment is attached to, will be "note"
  """
  object_type: String

  """The ID of the user who created the comment"""
  user_id: Int

  """The ID of the user who last updated the comment"""
  updater_id: Int

  """The ID of the company"""
  company_id: Int
}

type getNoteFields {
  """If the response is successful or not"""
  success: Boolean
  data: [query_getNoteFields_allOf_1_data_items]
  additional_data: query_getNoteFields_allOf_1_additional_data
}

type query_getNoteFields_allOf_1_data_items {
  """The ID of the field"""
  id: Int

  """The key of the field"""
  key: String

  """The name of the field"""
  name: String
  field_type: query_getNoteFields_allOf_1_data_items_field_type

  """The active flag of the field"""
  active_flag: Boolean

  """The edit flag of the field"""
  edit_flag: Boolean

  """Not used"""
  bulk_edit_allowed: Boolean

  """Whether or not the field is mandatory"""
  mandatory_flag: Boolean

  """
  The options of the field. When there are no options, `null` is returned.
  """
  options: [query_getNoteFields_allOf_1_data_items_options_items]
}

"""
The type of the field<table><tr><th>Value</th><th>Description</th></tr><tr><td>`address`</td><td>Address field (has multiple subfields, autocompleted by Google Maps)</td></tr><tr><td>`date`</td><td>Date (format YYYY-MM-DD)</td></tr><tr><td>`daterange`</td><td>Date-range field (has a start date and end date value, both YYYY-MM-DD)</td></tr><tr><td>`double`</td><td>Numeric value</td></tr><tr><td>`enum`</td><td>Options field with a single possible chosen option</td></tr><tr></tr><tr><td>`monetary`</td><td>Monetary field (has a numeric value and a currency value)</td></tr><tr><td>`org`</td><td>Organization field (contains an organization ID which is stored on the same account)</td></tr><tr><td>`people`</td><td>Person field (contains a person ID which is stored on the same account)</td></tr><tr><td>`phone`</td><td>Phone field (up to 255 numbers and/or characters)</td></tr><tr><td>`set`</td><td>Options field with a possibility of having multiple chosen options</td></tr><tr><td>`text`</td><td>Long text (up to 65k characters)</td></tr><tr><td>`time`</td><td>Time field (format HH:MM:SS)</td></tr><tr><td>`timerange`</td><td>Time-range field (has a start time and end time value, both HH:MM:SS)</td></tr><tr><td>`user`</td><td>User field (contains a user ID of another Pipedrive user)</td></tr><tr><td>`varchar`</td><td>Text (up to 255 characters)</td></tr><tr><td>`varchar_auto`</td><td>Autocomplete text (up to 255 characters)</td></tr><tr><td>`visible_to`</td><td>System field that keeps item's visibility setting</td></tr></table>
"""
enum query_getNoteFields_allOf_1_data_items_field_type {
  address
  date
  daterange
  double
  enum
  monetary
  org
  people
  phone
  set
  text
  time
  timerange
  user
  varchar
  varchar_auto
  visible_to
}

type query_getNoteFields_allOf_1_data_items_options_items {
  id: Int
  label: String
}

"""The additional data of the list"""
type query_getNoteFields_allOf_1_additional_data {
  """Pagination start"""
  start: Int

  """Items shown per page"""
  limit: Int

  """If there are more list items in the collection than displayed or not"""
  more_items_in_collection: Boolean
}

type getOrganizations {
  """If the response is successful or not"""
  success: Boolean

  """The array of organizations"""
  data: [query_getOrganizations_allOf_1_data_items]
  additional_data: query_getOrganizations_allOf_1_additional_data
  related_objects: query_getOrganizations_allOf_1_related_objects
}

type query_getOrganizations_allOf_1_data_items {
  """The ID of the organization"""
  id: Int

  """The ID of the company related to the organization"""
  company_id: Int
  owner_id: query_getOrganizations_allOf_1_data_items_allOf_0_owner_id

  """The name of the organization"""
  name: String

  """Whether the organization is active or not"""
  active_flag: Boolean
  picture_id: query_getOrganizations_allOf_1_data_items_allOf_0_picture_id

  """The country code of the organization"""
  country_code: String

  """The first character of the organization name"""
  first_char: String

  """The creation date and time of the organization"""
  add_time: String

  """The last updated date and time of the organization"""
  update_time: String

  """The visibility group ID of who can see the organization"""
  visible_to: String

  """The ID of the label"""
  label: Int

  """The name of the organization owner"""
  owner_name: String

  """The BCC email of the organization"""
  cc_email: String

  """The count of email messages related to the organization"""
  email_messages_count: Int

  """The count of persons related to the organization"""
  people_count: Int

  """The count of activities related to the organization"""
  activities_count: Int

  """The count of done activities related to the organization"""
  done_activities_count: Int

  """The count of undone activities related to the organization"""
  undone_activities_count: Int

  """The count of files related to the organization"""
  files_count: Int

  """The count of notes related to the organization"""
  notes_count: Int

  """The count of followers related to the organization"""
  followers_count: Int

  """The full address of the organization"""
  address: String

  """The sub-premise of the organization location"""
  address_subpremise: String

  """The street number of the organization location"""
  address_street_number: String

  """The route of the organization location"""
  address_route: String

  """The sub-locality of the organization location"""
  address_sublocality: String

  """The locality of the organization location"""
  address_locality: String

  """The level 1 admin area of the organization location"""
  address_admin_area_level_1: String

  """The level 2 admin area of the organization location"""
  address_admin_area_level_2: String

  """The country of the organization location"""
  address_country: String

  """The postal code of the organization location"""
  address_postal_code: String

  """The formatted organization location"""
  address_formatted_address: String

  """The count of open deals related with the item"""
  open_deals_count: Int

  """The count of related open deals related with the item"""
  related_open_deals_count: Int

  """The count of closed deals related with the item"""
  closed_deals_count: Int

  """The count of related closed deals related with the item"""
  related_closed_deals_count: Int

  """The count of won deals related with the item"""
  won_deals_count: Int

  """The count of related won deals related with the item"""
  related_won_deals_count: Int

  """The count of lost deals related with the item"""
  lost_deals_count: Int

  """The count of related lost deals related with the item"""
  related_lost_deals_count: Int

  """The date of the next activity associated with the deal"""
  next_activity_date: String

  """The time of the next activity associated with the deal"""
  next_activity_time: String

  """The ID of the next activity associated with the deal"""
  next_activity_id: Int

  """The ID of the last activity associated with the deal"""
  last_activity_id: Int

  """The date of the last activity associated with the deal"""
  last_activity_date: String
}

type query_getOrganizations_allOf_1_data_items_allOf_0_owner_id {
  """The ID of the user"""
  id: Int

  """The name of the user"""
  name: String

  """The email of the user"""
  email: String

  """Whether the user has picture or not. 0 = No picture, 1 = Has picture."""
  has_pic: Int

  """The user picture hash"""
  pic_hash: String

  """Whether the user is active or not"""
  active_flag: Boolean

  """The ID of the owner"""
  value: Int
}

type query_getOrganizations_allOf_1_data_items_allOf_0_picture_id {
  """The ID of the picture associated with the item"""
  value: Int

  """The type of item the picture is related to"""
  item_type: String

  """The ID of related item"""
  item_id: Int

  """Whether the associated picture is active or not"""
  active_flag: Boolean

  """The add time of the picture"""
  add_time: String

  """The update time of the picture"""
  update_time: String

  """The ID of the user who added the picture"""
  added_by_user_id: Int
  pictures: query_getOrganizations_allOf_1_data_items_allOf_0_picture_id_allOf_1_pictures
}

type query_getOrganizations_allOf_1_data_items_allOf_0_picture_id_allOf_1_pictures {
  """The URL of the 128*128 picture"""
  _128: String

  """The URL of the 512*512 picture"""
  _512: String
}

type query_getOrganizations_allOf_1_additional_data {
  pagination: query_getOrganizations_allOf_1_additional_data_pagination
}

"""Pagination details of the list"""
type query_getOrganizations_allOf_1_additional_data_pagination {
  """Pagination start"""
  start: Int

  """Items shown per page"""
  limit: Int

  """Whether there are more list items in the collection than displayed"""
  more_items_in_collection: Boolean

  """Next pagination start"""
  next_start: Int
}

type query_getOrganizations_allOf_1_related_objects {
  organization: query_getOrganizations_allOf_1_related_objects_organization
  user: query_getOrganizations_allOf_1_related_objects_user
  picture: query_getOrganizations_allOf_1_related_objects_picture
}

type query_getOrganizations_allOf_1_related_objects_organization {
  ORGANIZATION_ID: query_getOrganizations_allOf_1_related_objects_organization_ORGANIZATION_ID
}

"""The ID of the organization associated with the item"""
type query_getOrganizations_allOf_1_related_objects_organization_ORGANIZATION_ID {
  """The ID of the organization associated with the item"""
  id: Int

  """The name of the organization associated with the item"""
  name: String

  """
  The number of people connected with the organization that is associated with the item
  """
  people_count: Int

  """
  The ID of the owner of the organization that is associated with the item
  """
  owner_id: Int

  """The address of the organization"""
  address: String

  """The BCC email of the organization associated with the item"""
  cc_email: String
}

type query_getOrganizations_allOf_1_related_objects_user {
  USER_ID: query_getOrganizations_allOf_1_related_objects_user_USER_ID
}

type query_getOrganizations_allOf_1_related_objects_user_USER_ID {
  """The ID of the user"""
  id: Int

  """The name of the user"""
  name: String

  """The email of the user"""
  email: String

  """Whether the user has picture or not. 0 = No picture, 1 = Has picture."""
  has_pic: Int

  """The user picture hash"""
  pic_hash: String

  """Whether the user is active or not"""
  active_flag: Boolean
  JSON: JSON
}

"""The picture that is associated with the item"""
type query_getOrganizations_allOf_1_related_objects_picture {
  PICTURE_ID: query_getOrganizations_allOf_1_related_objects_picture_PICTURE_ID
}

type query_getOrganizations_allOf_1_related_objects_picture_PICTURE_ID {
  """The ID of the picture associated with the item"""
  id: Int

  """The type of item the picture is related to"""
  item_type: String

  """The ID of related item"""
  item_id: Int

  """Whether the associated picture is active or not"""
  active_flag: Boolean

  """The add time of the picture"""
  add_time: String

  """The update time of the picture"""
  update_time: String

  """The ID of the user who added the picture"""
  added_by_user_id: Int
  pictures: query_getOrganizations_allOf_1_related_objects_picture_PICTURE_ID_allOf_1_pictures
}

type query_getOrganizations_allOf_1_related_objects_picture_PICTURE_ID_allOf_1_pictures {
  """The URL of the 128*128 picture"""
  _128: String

  """The URL of the 512*512 picture"""
  _512: String
}

type searchOrganization {
  """If the response is successful or not"""
  success: Boolean
  data: query_searchOrganization_allOf_1_data
  additional_data: query_searchOrganization_allOf_1_additional_data
}

type query_searchOrganization_allOf_1_data {
  """The array of found items"""
  items: [query_searchOrganization_allOf_1_data_items_items]
}

type query_searchOrganization_allOf_1_data_items_items {
  """Search result relevancy"""
  result_score: Float
  item: query_searchOrganization_allOf_1_data_items_items_item
}

type query_searchOrganization_allOf_1_data_items_items_item {
  """The ID of the organization"""
  id: Int

  """The type of the item"""
  type: String

  """The name of the organization"""
  name: String

  """The address of the organization"""
  address: String

  """The visibility of the organization"""
  visible_to: Int
  owner: query_searchOrganization_allOf_1_data_items_items_item_owner

  """Custom fields"""
  custom_fields: [String]

  """An array of notes"""
  notes: [String]
}

type query_searchOrganization_allOf_1_data_items_items_item_owner {
  """The ID of the owner of the deal"""
  id: Int
}

type query_searchOrganization_allOf_1_additional_data {
  pagination: query_searchOrganization_allOf_1_additional_data_pagination
}

"""Pagination details of the list"""
type query_searchOrganization_allOf_1_additional_data_pagination {
  """Pagination start"""
  start: Int

  """Items shown per page"""
  limit: Int

  """Whether there are more list items in the collection than displayed"""
  more_items_in_collection: Boolean

  """Next pagination start"""
  next_start: Int
}

"""
A comma-separated string array. The fields to perform the search from. Defaults to all of them.
"""
enum queryInput_searchOrganization_fields {
  address
  custom_fields
  notes
  name
}

type getOrganization {
  """If the response is successful or not"""
  success: Boolean
  data: organizationItem
  additional_data: query_getOrganization_allOf_1_additional_data
  related_objects: query_getOrganization_allOf_1_related_objects
}

type organizationItem {
  """The ID of the organization"""
  id: Int

  """The ID of the company related to the organization"""
  company_id: Int
  owner_id: query_getOrganization_allOf_1_data_allOf_0_allOf_0_allOf_0_owner_id

  """The name of the organization"""
  name: String

  """Whether the organization is active or not"""
  active_flag: Boolean
  picture_id: query_getOrganization_allOf_1_data_allOf_0_allOf_0_allOf_0_picture_id

  """The country code of the organization"""
  country_code: String

  """The first character of the organization name"""
  first_char: String

  """The creation date and time of the organization"""
  add_time: String

  """The last updated date and time of the organization"""
  update_time: String

  """The visibility group ID of who can see the organization"""
  visible_to: String

  """The ID of the label"""
  label: Int

  """The name of the organization owner"""
  owner_name: String

  """The BCC email of the organization"""
  cc_email: String

  """The count of email messages related to the organization"""
  email_messages_count: Int

  """The count of persons related to the organization"""
  people_count: Int

  """The count of activities related to the organization"""
  activities_count: Int

  """The count of done activities related to the organization"""
  done_activities_count: Int

  """The count of undone activities related to the organization"""
  undone_activities_count: Int

  """The count of files related to the organization"""
  files_count: Int

  """The count of notes related to the organization"""
  notes_count: Int

  """The count of followers related to the organization"""
  followers_count: Int

  """The full address of the organization"""
  address: String

  """The sub-premise of the organization location"""
  address_subpremise: String

  """The street number of the organization location"""
  address_street_number: String

  """The route of the organization location"""
  address_route: String

  """The sub-locality of the organization location"""
  address_sublocality: String

  """The locality of the organization location"""
  address_locality: String

  """The level 1 admin area of the organization location"""
  address_admin_area_level_1: String

  """The level 2 admin area of the organization location"""
  address_admin_area_level_2: String

  """The country of the organization location"""
  address_country: String

  """The postal code of the organization location"""
  address_postal_code: String

  """The formatted organization location"""
  address_formatted_address: String

  """The count of open deals related with the item"""
  open_deals_count: Int

  """The count of related open deals related with the item"""
  related_open_deals_count: Int

  """The count of closed deals related with the item"""
  closed_deals_count: Int

  """The count of related closed deals related with the item"""
  related_closed_deals_count: Int

  """The count of won deals related with the item"""
  won_deals_count: Int

  """The count of related won deals related with the item"""
  related_won_deals_count: Int

  """The count of lost deals related with the item"""
  lost_deals_count: Int

  """The count of related lost deals related with the item"""
  related_lost_deals_count: Int

  """The date of the next activity associated with the deal"""
  next_activity_date: String

  """The time of the next activity associated with the deal"""
  next_activity_time: String

  """The ID of the next activity associated with the deal"""
  next_activity_id: Int

  """The ID of the last activity associated with the deal"""
  last_activity_id: Int

  """The date of the last activity associated with the deal"""
  last_activity_date: String

  """
  If the company ID of the organization and company ID of the request is same or not
  """
  edit_name: Boolean
  last_activity: JSON
  next_activity: JSON
}

type query_getOrganization_allOf_1_data_allOf_0_allOf_0_allOf_0_owner_id {
  """The ID of the user"""
  id: Int

  """The name of the user"""
  name: String

  """The email of the user"""
  email: String

  """Whether the user has picture or not. 0 = No picture, 1 = Has picture."""
  has_pic: Int

  """The user picture hash"""
  pic_hash: String

  """Whether the user is active or not"""
  active_flag: Boolean

  """The ID of the owner"""
  value: Int
}

type query_getOrganization_allOf_1_data_allOf_0_allOf_0_allOf_0_picture_id {
  """The ID of the picture associated with the item"""
  value: Int

  """The type of item the picture is related to"""
  item_type: String

  """The ID of related item"""
  item_id: Int

  """Whether the associated picture is active or not"""
  active_flag: Boolean

  """The add time of the picture"""
  add_time: String

  """The update time of the picture"""
  update_time: String

  """The ID of the user who added the picture"""
  added_by_user_id: Int
  pictures: query_getOrganization_allOf_1_data_allOf_0_allOf_0_allOf_0_picture_id_allOf_1_pictures
}

type query_getOrganization_allOf_1_data_allOf_0_allOf_0_allOf_0_picture_id_allOf_1_pictures {
  """The URL of the 128*128 picture"""
  _128: String

  """The URL of the 512*512 picture"""
  _512: String
}

type query_getOrganization_allOf_1_additional_data {
  followers: query_getOrganization_allOf_1_additional_data_followers

  """Dropbox email for the organization"""
  dropbox_email: String
}

"""The follower that is associated with the item"""
type query_getOrganization_allOf_1_additional_data_followers {
  FOLLOWER_USER_ID: query_getOrganization_allOf_1_additional_data_followers_FOLLOWER_USER_ID
}

type query_getOrganization_allOf_1_additional_data_followers_FOLLOWER_USER_ID {
  """The ID of the follower associated with the item"""
  id: Int

  """The name of the follower"""
  name: String

  """The email of the follower"""
  email: String

  """The user ID of the follower"""
  user_id: Int

  """The follower picture hash"""
  pic_hash: String
}

type query_getOrganization_allOf_1_related_objects {
  organization: query_getOrganization_allOf_1_related_objects_organization
  user: query_getOrganization_allOf_1_related_objects_user
  picture: query_getOrganization_allOf_1_related_objects_picture
}

type query_getOrganization_allOf_1_related_objects_organization {
  ORGANIZATION_ID: query_getOrganization_allOf_1_related_objects_organization_ORGANIZATION_ID
}

"""The ID of the organization associated with the item"""
type query_getOrganization_allOf_1_related_objects_organization_ORGANIZATION_ID {
  """The ID of the organization associated with the item"""
  id: Int

  """The name of the organization associated with the item"""
  name: String

  """
  The number of people connected with the organization that is associated with the item
  """
  people_count: Int

  """
  The ID of the owner of the organization that is associated with the item
  """
  owner_id: Int

  """The address of the organization"""
  address: String

  """The BCC email of the organization associated with the item"""
  cc_email: String
}

type query_getOrganization_allOf_1_related_objects_user {
  USER_ID: query_getOrganization_allOf_1_related_objects_user_USER_ID
}

type query_getOrganization_allOf_1_related_objects_user_USER_ID {
  """The ID of the user"""
  id: Int

  """The name of the user"""
  name: String

  """The email of the user"""
  email: String

  """Whether the user has picture or not. 0 = No picture, 1 = Has picture."""
  has_pic: Int

  """The user picture hash"""
  pic_hash: String

  """Whether the user is active or not"""
  active_flag: Boolean
  JSON: JSON
}

"""The picture that is associated with the item"""
type query_getOrganization_allOf_1_related_objects_picture {
  PICTURE_ID: query_getOrganization_allOf_1_related_objects_picture_PICTURE_ID
}

type query_getOrganization_allOf_1_related_objects_picture_PICTURE_ID {
  """The ID of the picture associated with the item"""
  id: Int

  """The type of item the picture is related to"""
  item_type: String

  """The ID of related item"""
  item_id: Int

  """Whether the associated picture is active or not"""
  active_flag: Boolean

  """The add time of the picture"""
  add_time: String

  """The update time of the picture"""
  update_time: String

  """The ID of the user who added the picture"""
  added_by_user_id: Int
  pictures: query_getOrganization_allOf_1_related_objects_picture_PICTURE_ID_allOf_1_pictures
}

type query_getOrganization_allOf_1_related_objects_picture_PICTURE_ID_allOf_1_pictures {
  """The URL of the 128*128 picture"""
  _128: String

  """The URL of the 512*512 picture"""
  _512: String
}

type getAssociatedActivities {
  """If the response is successful or not"""
  success: Boolean

  """The array of activities"""
  data: [query_getOrganizationActivities_allOf_1_data_items]
  additional_data: query_getOrganizationActivities_allOf_1_additional_data
}

type query_getOrganizationActivities_allOf_1_data_items {
  """The due date of the activity. Format: YYYY-MM-DD"""
  due_date: Date

  """The due time of the activity in UTC. Format: HH:MM"""
  due_time: String

  """The duration of the activity. Format: HH:MM"""
  duration: String

  """The ID of the deal this activity is associated with"""
  deal_id: Int

  """The ID of the lead in the UUID format this activity is associated with"""
  lead_id: UUID

  """The ID of the person this activity is associated with"""
  person_id: Int

  """The ID of the organization this activity is associated with"""
  org_id: Int

  """The note of the activity (HTML format)"""
  note: String

  """
  The address of the activity. Pipedrive will automatically check if the location matches a geo-location on Google maps.
  """
  location: String

  """
  Additional details about the activity that is synced to your external calendar. Unlike the note added to the activity, the description is publicly visible to any guests added to the activity.
  """
  public_description: String

  """The activity ID, generated when the activity was created"""
  id: Int

  """Whether the activity is done or not"""
  done: Boolean

  """The subject of the activity"""
  subject: String

  """
  The type of the activity. This is in correlation with the `key_string` parameter of ActivityTypes.
  """
  type: String

  """The ID of the user whom the activity is assigned to"""
  user_id: Int

  """
  List of multiple persons (participants) this activity is associated with
  """
  participants: [JSON]

  """
  Marks if the activity is set as 'Busy' or 'Free'. If the flag is set to `true`, your customers will not be able to book that time slot through any Scheduler links. The flag can also be unset. When the value of the flag is unset (`null`), the flag defaults to 'Busy' if it has a time set, and 'Free' if it is an all-day event without specified time.
  """
  busy_flag: Boolean

  """
  The attendees of the activity. This can be either your existing Pipedrive contacts or an external email address.
  """
  attendees: [JSON]

  """The user's company ID"""
  company_id: Int

  """
  If the activity references some other object, it is indicated here. For example, value `Salesphone` refers to activities created with Caller.
  """
  reference_type: String

  """Together with the `reference_type`, gives the ID of the other object"""
  reference_id: Int

  """The ID of Marketplace app, which is connected to this activity"""
  conference_meeting_client: String

  """The link to join the meeting which is associated with this activity"""
  conference_meeting_url: String

  """
  The meeting ID of the meeting provider (Zoom, MS Teams etc.) that is associated with this activity
  """
  conference_meeting_id: String

  """
  The creation date and time of the activity in UTC. Format: YYYY-MM-DD HH:MM:SS.
  """
  add_time: String

  """
  The date and time this activity was marked as done. Format: YYYY-MM-DD HH:MM:SS.
  """
  marked_as_done_time: String

  """
  The date and time of latest notifications sent about this activity to the participants or the attendees of this activity
  """
  last_notification_time: String

  """
  The ID of the user who triggered the sending of the latest notifications about this activity to the participants or the attendees of this activity
  """
  last_notification_user_id: Int

  """The ID of the language the notifications are sent in"""
  notification_language_id: Int

  """Whether the activity is active or not"""
  active_flag: Boolean

  """
  The last update date and time of the activity. Format: YYYY-MM-DD HH:MM:SS.
  """
  update_time: String

  """The ID of the user who was the last to update this activity"""
  update_user_id: Int

  """
  For the activity which syncs to Google calendar, this is the Google event ID. NB! This field is related to old Google calendar sync and will be deprecated soon.
  """
  gcal_event_id: String

  """
  The Google calendar ID that this activity syncs to. NB! This field is related to old Google calendar sync and will be deprecated soon.
  """
  google_calendar_id: String

  """
  The Google calendar API etag (version) that is used for syncing this activity. NB! This field is related to old Google calendar sync and will be deprecated soon.
  """
  google_calendar_etag: String

  """
  For activities that sync to an external calendar, this setting indicates if the activity syncs with context (what are the deals, persons, organizations this activity is related to)
  """
  calendar_sync_include_context: String

  """The timezone the activity was created in an external calendar"""
  source_timezone: String

  """
  The rule for the recurrence of the activity. Is important for activities synced into Pipedrive from an external calendar. Example: "RRULE:FREQ=WEEKLY;BYDAY=WE"
  """
  rec_rule: String

  """
  Additional rules for the recurrence of the activity, extend the `rec_rule`. Is important for activities synced into Pipedrive from an external calendar.
  """
  rec_rule_extension: String

  """
  The ID of parent activity for a recurrent activity if the current activity is an exception to recurrence rules
  """
  rec_master_activity_id: Int

  """
  The list of recurring activity instances. It is in a structure as follows: `[{due_date: "2020-06-24", due_time: "10:00:00"}]`
  """
  series: [JSON]

  """The ID of the user who created the activity"""
  created_by_user_id: Int

  """Subfield of location field. Indicates apartment/suite number."""
  location_subpremise: String

  """Subfield of location field. Indicates house number."""
  location_street_number: String

  """Subfield of location field. Indicates street name."""
  location_route: String

  """Subfield of location field. Indicates district/sublocality."""
  location_sublocality: String

  """Subfield of location field. Indicates city/town/village/locality."""
  location_locality: String

  """Subfield of location field. Indicates state/county."""
  location_admin_area_level_1: String

  """Subfield of location field. Indicates region."""
  location_admin_area_level_2: String

  """Subfield of location field. Indicates country."""
  location_country: String

  """Subfield of location field. Indicates ZIP/postal code."""
  location_postal_code: String

  """Subfield of location field. Indicates full/combined address."""
  location_formatted_address: String

  """The name of the organization this activity is associated with"""
  org_name: String

  """The name of the person this activity is associated with"""
  person_name: String

  """The name of the deal this activity is associated with"""
  deal_title: String

  """The name of the user this activity is owned by"""
  owner_name: String

  """The BCC email address of the person"""
  person_dropbox_bcc: String

  """The BCC email address of the deal"""
  deal_dropbox_bcc: String

  """
  The ID of the user to whom the activity is assigned to. Equal to `user_id`.
  """
  assigned_to_user_id: Int
  file: JSON
}

type query_getOrganizationActivities_allOf_1_additional_data {
  activity_distribution: query_getOrganizationActivities_allOf_1_additional_data_allOf_0_activity_distribution

  """Pagination start"""
  start: Int

  """Items shown per page"""
  limit: Int

  """If there are more list items in the collection than displayed or not"""
  more_items_in_collection: Boolean
}

"""
The distribution of activities related to the organization grouped by the user ID
"""
type query_getOrganizationActivities_allOf_1_additional_data_allOf_0_activity_distribution {
  ASSIGNED_TO_USER_ID: query_getOrganizationActivities_allOf_1_additional_data_allOf_0_activity_distribution_ASSIGNED_TO_USER_ID
}

"""The ID of the user"""
type query_getOrganizationActivities_allOf_1_additional_data_allOf_0_activity_distribution_ASSIGNED_TO_USER_ID {
  activities: query_getOrganizationActivities_allOf_1_additional_data_allOf_0_activity_distribution_ASSIGNED_TO_USER_ID_activities

  """The name of the user"""
  name: String

  """The overall count of activities for the user"""
  activity_count: Int

  """The percentage of activities belongs to the user"""
  share: Int
}

"""The count of activities related to the user grouped by activity type"""
type query_getOrganizationActivities_allOf_1_additional_data_allOf_0_activity_distribution_ASSIGNED_TO_USER_ID_activities {
  """The count of activities related to a specific type"""
  ACTIVITY_TYPE_NAME: Int
}

"""
Whether the activity is done or not. 0 = Not done, 1 = Done. If omitted returns both Done and Not done activities.
"""
enum queryInput_getOrganizationActivities_done {
  _0
  _1
}

type getAssociatedDeals {
  """If the response is successful or not"""
  success: Boolean

  """The array of deals"""
  data: [query_getOrganizationDeals_allOf_1_data_items]
  additional_data: query_getOrganizationDeals_allOf_1_additional_data
  related_objects: query_getOrganizationDeals_allOf_1_related_objects
}

type query_getOrganizationDeals_allOf_1_data_items {
  """The ID of the deal"""
  id: Int
  creator_user_id: query_getOrganizationDeals_allOf_1_data_items_allOf_0_creator_user_id
  user_id: query_getOrganizationDeals_allOf_1_data_items_allOf_0_user_id
  person_id: query_getOrganizationDeals_allOf_1_data_items_allOf_0_person_id
  org_id: query_getOrganizationDeals_allOf_1_data_items_allOf_0_org_id

  """The ID of the deal stage"""
  stage_id: Int

  """The title of the deal"""
  title: String

  """The value of the deal"""
  value: Float

  """The currency associated with the deal"""
  currency: String

  """The creation date and time of the deal"""
  add_time: String

  """The last updated date and time of the deal"""
  update_time: String

  """The last updated date and time of the deal stage"""
  stage_change_time: String

  """Whether the deal is active or not"""
  active: Boolean

  """Whether the deal is deleted or not"""
  deleted: Boolean

  """The status of the deal"""
  status: String

  """The success probability percentage of the deal"""
  probability: Float

  """The date of the next activity associated with the deal"""
  next_activity_date: String

  """The time of the next activity associated with the deal"""
  next_activity_time: String

  """The ID of the next activity associated with the deal"""
  next_activity_id: Int

  """The ID of the last activity associated with the deal"""
  last_activity_id: Int

  """The date of the last activity associated with the deal"""
  last_activity_date: String

  """The reason for losing the deal"""
  lost_reason: String

  """The visibility of the deal"""
  visible_to: String

  """The date and time of closing the deal"""
  close_time: String

  """The ID of pipeline associated with the deal"""
  pipeline_id: Int

  """The date and time of changing the deal status as won"""
  won_time: String

  """The date and time of the first time changing the deal status as won"""
  first_won_time: String

  """The date and time of changing the deal status as lost"""
  lost_time: String

  """The number of products associated with the deal"""
  products_count: Int

  """The number of files associated with the deal"""
  files_count: Int

  """The number of notes associated with the deal"""
  notes_count: Int

  """The number of followers associated with the deal"""
  followers_count: Int

  """The number of emails associated with the deal"""
  email_messages_count: Int

  """The number of activities associated with the deal"""
  activities_count: Int

  """The number of completed activities associated with the deal"""
  done_activities_count: Int

  """The number of incomplete activities associated with the deal"""
  undone_activities_count: Int

  """The number of participants associated with the deal"""
  participants_count: Int

  """The expected close date of the deal"""
  expected_close_date: Date

  """The date and time of the last incoming email associated with the deal"""
  last_incoming_mail_time: String

  """The date and time of the last outgoing email associated with the deal"""
  last_outgoing_mail_time: String

  """The label assigned to the deal"""
  label: Int

  """The order number of the deal stage associated with the deal"""
  stage_order_nr: Int

  """The name of the person associated with the deal"""
  person_name: String

  """The name of the organization associated with the deal"""
  org_name: String

  """The subject of the next activity associated with the deal"""
  next_activity_subject: String

  """The type of the next activity associated with the deal"""
  next_activity_type: String

  """The duration of the next activity associated with the deal"""
  next_activity_duration: String

  """The note of the next activity associated with the deal"""
  next_activity_note: String

  """The deal value formatted with selected currency. E.g. US$500"""
  formatted_value: String

  """
  Probability times deal value. Probability can either be deal probability or if not set, then stage probability.
  """
  weighted_value: Float

  """The weighted_value formatted with selected currency. E.g. US$500"""
  formatted_weighted_value: String

  """The currency associated with the deal"""
  weighted_value_currency: String

  """The date and time of changing the deal status as rotten"""
  rotten_time: String

  """The name of the deal owner"""
  owner_name: String

  """The BCC email of the deal"""
  cc_email: String

  """If the organization that is associated with the deal is hidden or not"""
  org_hidden: Boolean

  """If the person that is associated with the deal is hidden or not"""
  person_hidden: Boolean
}

"""The creator of the deal"""
type query_getOrganizationDeals_allOf_1_data_items_allOf_0_creator_user_id {
  """The ID of the deal creator"""
  id: Int

  """The name of the deal creator"""
  name: String

  """The email of the deal creator"""
  email: String

  """If the creator has a picture or not"""
  has_pic: Boolean

  """The creator picture hash"""
  pic_hash: String

  """Whether the creator is active or not"""
  active_flag: Boolean

  """The ID of the deal creator"""
  value: Int
}

type query_getOrganizationDeals_allOf_1_data_items_allOf_0_user_id {
  """The ID of the user"""
  id: Int

  """The name of the user"""
  name: String

  """The email of the user"""
  email: String

  """If the user has a picture or not"""
  has_pic: Boolean

  """The user picture hash"""
  pic_hash: String

  """Whether the user is active or not"""
  active_flag: Boolean

  """The ID of the user"""
  value: Int
}

type query_getOrganizationDeals_allOf_1_data_items_allOf_0_person_id {
  """Whether the associated person is active or not"""
  active_flag: Boolean

  """The name of the person associated with the deal"""
  name: String

  """The emails of the person associated with the deal"""
  email: [query_getOrganizationDeals_allOf_1_data_items_allOf_0_person_id_allOf_0_email_items]

  """The phone numbers of the person associated with the deal"""
  phone: [query_getOrganizationDeals_allOf_1_data_items_allOf_0_person_id_allOf_0_phone_items]

  """The ID of the owner of the person that is associated with the deal"""
  owner_id: Int

  """The ID of the person associated with the deal"""
  value: Int
}

type query_getOrganizationDeals_allOf_1_data_items_allOf_0_person_id_allOf_0_email_items {
  """The type of the email"""
  label: String

  """The email of the associated person"""
  value: String

  """If this is the primary email or not"""
  primary: Boolean
}

type query_getOrganizationDeals_allOf_1_data_items_allOf_0_person_id_allOf_0_phone_items {
  """The type of the phone number"""
  label: String

  """The phone number of the person associated with the deal"""
  value: String

  """If this is the primary phone number or not"""
  primary: Boolean
}

type query_getOrganizationDeals_allOf_1_data_items_allOf_0_org_id {
  """The name of the organization associated with the deal"""
  name: String

  """
  The number of people connected with the organization that is associated with the deal
  """
  people_count: Int

  """
  The ID of the owner of the organization that is associated with the deal
  """
  owner_id: Int

  """The address of the organization that is associated with the deal"""
  address: String

  """Whether the associated organization is active or not"""
  active_flag: Boolean

  """The BCC email of the organization associated with the deal"""
  cc_email: String

  """The ID of the organization associated with the deal"""
  value: Int
}

"""The additional data of the list"""
type query_getOrganizationDeals_allOf_1_additional_data {
  """Pagination start"""
  start: Int

  """Items shown per page"""
  limit: Int

  """If there are more list items in the collection than displayed or not"""
  more_items_in_collection: Boolean
}

type query_getOrganizationDeals_allOf_1_related_objects {
  organization: query_getOrganizationDeals_allOf_1_related_objects_organization
  person: query_getOrganizationDeals_allOf_1_related_objects_person
  user: query_getOrganizationDeals_allOf_1_related_objects_user
  stage: query_getOrganizationDeals_allOf_1_related_objects_stage
  pipeline: query_getOrganizationDeals_allOf_1_related_objects_pipeline
}

type query_getOrganizationDeals_allOf_1_related_objects_organization {
  ORGANIZATION_ID: query_getOrganizationDeals_allOf_1_related_objects_organization_ORGANIZATION_ID
}

"""The ID of the organization associated with the item"""
type query_getOrganizationDeals_allOf_1_related_objects_organization_ORGANIZATION_ID {
  """Whether the associated organization is active or not"""
  active_flag: Boolean

  """The ID of the organization associated with the item"""
  id: Int

  """The name of the organization associated with the item"""
  name: String

  """
  The number of people connected with the organization that is associated with the item
  """
  people_count: Int

  """
  The ID of the owner of the organization that is associated with the item
  """
  owner_id: Int

  """The address of the organization"""
  address: String

  """The BCC email of the organization associated with the item"""
  cc_email: String
}

type query_getOrganizationDeals_allOf_1_related_objects_person {
  PERSON_ID: query_getOrganizationDeals_allOf_1_related_objects_person_PERSON_ID
}

"""The ID of the person associated with the item"""
type query_getOrganizationDeals_allOf_1_related_objects_person_PERSON_ID {
  """Whether the associated person is active or not"""
  active_flag: Boolean

  """The ID of the person associated with the item"""
  id: Int

  """The name of the person associated with the item"""
  name: String

  """The emails of the person associated with the item"""
  email: [query_getOrganizationDeals_allOf_1_related_objects_person_PERSON_ID_allOf_1_email_items]

  """The phone numbers of the person associated with the item"""
  phone: [query_getOrganizationDeals_allOf_1_related_objects_person_PERSON_ID_allOf_1_phone_items]

  """The ID of the owner of the person that is associated with the item"""
  owner_id: Int
}

type query_getOrganizationDeals_allOf_1_related_objects_person_PERSON_ID_allOf_1_email_items {
  """The type of the email"""
  label: String

  """The email of the associated person"""
  value: String

  """Whether this is the primary email or not"""
  primary: Boolean
}

type query_getOrganizationDeals_allOf_1_related_objects_person_PERSON_ID_allOf_1_phone_items {
  """The type of the phone number"""
  label: String

  """The phone number of the person associated with the item"""
  value: String

  """Whether this is the primary phone number or not"""
  primary: Boolean
}

type query_getOrganizationDeals_allOf_1_related_objects_user {
  USER_ID: query_getOrganizationDeals_allOf_1_related_objects_user_USER_ID
}

type query_getOrganizationDeals_allOf_1_related_objects_user_USER_ID {
  """The ID of the user"""
  id: Int

  """The name of the user"""
  name: String

  """The email of the user"""
  email: String

  """Whether the user has picture or not. 0 = No picture, 1 = Has picture."""
  has_pic: Int

  """The user picture hash"""
  pic_hash: String

  """Whether the user is active or not"""
  active_flag: Boolean
  JSON: JSON
}

type query_getOrganizationDeals_allOf_1_related_objects_stage {
  """The ID of the stage"""
  id: Int

  """Defines the order of the stage"""
  order_nr: Int

  """The name of the stage"""
  name: String

  """Whether the stage is active or deleted"""
  active_flag: Boolean

  """
  The success probability percentage of the deal. Used/shown when the deal weighted values are used.
  """
  deal_probability: Int

  """The ID of the pipeline to add the stage to"""
  pipeline_id: Int

  """Whether deals in this stage can become rotten"""
  rotten_flag: Boolean

  """
  The number of days the deals not updated in this stage would become rotten. Applies only if the `rotten_flag` is set.
  """
  rotten_days: Int

  """The stage creation time. Format: YYYY-MM-DD HH:MM:SS."""
  add_time: String

  """The stage update time. Format: YYYY-MM-DD HH:MM:SS."""
  update_time: String
}

type query_getOrganizationDeals_allOf_1_related_objects_pipeline {
  """The ID of the pipeline"""
  id: Int

  """The name of the pipeline"""
  name: String

  """The pipeline title displayed in the URL"""
  url_title: String

  """
  Defines the order of pipelines. First order (`order_nr=0`) is the default pipeline.
  """
  order_nr: Int

  """Whether this pipeline will be made inactive (hidden) or active"""
  active: Boolean

  """Whether deal probability is disabled or enabled for this pipeline"""
  deal_probability: Boolean

  """The pipeline creation time. Format: YYYY-MM-DD HH:MM:SS."""
  add_time: String

  """The pipeline update time. Format: YYYY-MM-DD HH:MM:SS."""
  update_time: String
}

"""
Only fetch deals with a specific status. If omitted, all not deleted deals are returned. If set to deleted, deals that have been deleted up to 30 days ago will be included.
"""
enum queryInput_getOrganizationDeals_status {
  open
  won
  lost
  deleted
  all_not_deleted
}

"""
If set, only deals that are directly associated to the organization are fetched. If not set (default), all deals are fetched that are either directly or indirectly related to the organization. Indirect relations include relations through custom, organization-type fields and through persons of the given organization.
"""
enum queryInput_getOrganizationDeals_only_primary_association {
  _0
  _1
}

type query_getOrganizationFiles {
  """If the response is successful or not"""
  success: Boolean

  """The array of files"""
  data: [query_getOrganizationFiles_allOf_1_data_items]
  additional_data: query_getOrganizationFiles_allOf_1_additional_data
}

"""The file data"""
type query_getOrganizationFiles_allOf_1_data_items {
  """The ID of the file"""
  id: Int

  """The ID of the user to associate the file with"""
  user_id: Int

  """The ID of the deal to associate the file with"""
  deal_id: Int

  """The ID of the person to associate the file with"""
  person_id: Int

  """The ID of the organization to associate the file with"""
  org_id: Int

  """The ID of the product to associate the file with"""
  product_id: Int

  """The ID of the activity to associate the file with"""
  activity_id: Int

  """The ID of the lead to associate the file with"""
  lead_id: UUID

  """
  The date and time when the file was added/created. Format: YYYY-MM-DD HH:MM:SS
  """
  add_time: String

  """
  The last updated date and time of the file. Format: YYYY-MM-DD HH:MM:SS
  """
  update_time: String

  """The original name of the file"""
  file_name: String

  """The size of the file"""
  file_size: Int

  """
  Whether the user is active or not. false = Not activated, true = Activated
  """
  active_flag: Boolean

  """Whether the file was uploaded as inline or not"""
  inline_flag: Boolean

  """
  The location type to send the file to. Only googledrive is supported at the moment.
  """
  remote_location: String

  """The ID of the remote item"""
  remote_id: String

  """The ID of the inline attachment"""
  cid: String

  """The location of the cloud storage"""
  s3_bucket: String

  """The ID of the mail message to associate the file with"""
  mail_message_id: String

  """The ID of the mail template to associate the file with"""
  mail_template_id: String

  """The name of the deal associated with the dile"""
  deal_name: String

  """The name of the person associated with the file"""
  person_name: String

  """The name of the organization associated with the file"""
  org_name: String

  """The name of the product associated with the file"""
  product_name: String

  """The name of the lead associated with the file"""
  lead_name: String

  """The URL of the download file"""
  url: String

  """The visible name of the file"""
  name: String

  """The description of the file"""
  description: String
}

"""The additional data of the list"""
type query_getOrganizationFiles_allOf_1_additional_data {
  """Pagination start"""
  start: Int

  """Items shown per page"""
  limit: Int

  """If there are more list items in the collection than displayed or not"""
  more_items_in_collection: Boolean
}

type getAssociatedUpdates {
  """If the response is successful or not"""
  success: Boolean
  data: [query_getOrganizationUpdates_allOf_1_data_items]
  additional_data: query_getOrganizationUpdates_allOf_1_additional_data
  related_objects: query_getOrganizationUpdates_allOf_1_related_objects
}

type query_getOrganizationUpdates_allOf_1_data_items {
  """
  The type of the person update. (Possible object types - organizationChange, dealChange, file, activity)
  """
  object: String

  """The creation date and time of the update"""
  timestamp: String
  data: JSON
}

"""The additional data of the list"""
type query_getOrganizationUpdates_allOf_1_additional_data {
  """Pagination start"""
  start: Int

  """Items shown per page"""
  limit: Int

  """If there are more list items in the collection than displayed or not"""
  more_items_in_collection: Boolean
}

type query_getOrganizationUpdates_allOf_1_related_objects {
  organization: query_getOrganizationUpdates_allOf_1_related_objects_organization
  user: query_getOrganizationUpdates_allOf_1_related_objects_user
}

type query_getOrganizationUpdates_allOf_1_related_objects_organization {
  ORGANIZATION_ID: query_getOrganizationUpdates_allOf_1_related_objects_organization_ORGANIZATION_ID
}

"""The ID of the organization associated with the item"""
type query_getOrganizationUpdates_allOf_1_related_objects_organization_ORGANIZATION_ID {
  """The ID of the organization associated with the item"""
  id: Int

  """The name of the organization associated with the item"""
  name: String

  """
  The number of people connected with the organization that is associated with the item
  """
  people_count: Int

  """
  The ID of the owner of the organization that is associated with the item
  """
  owner_id: Int

  """The address of the organization"""
  address: String

  """The BCC email of the organization associated with the item"""
  cc_email: String
}

type query_getOrganizationUpdates_allOf_1_related_objects_user {
  USER_ID: query_getOrganizationUpdates_allOf_1_related_objects_user_USER_ID
}

type query_getOrganizationUpdates_allOf_1_related_objects_user_USER_ID {
  """The ID of the user"""
  id: Int

  """The name of the user"""
  name: String

  """The email of the user"""
  email: String

  """Whether the user has picture or not. 0 = No picture, 1 = Has picture."""
  has_pic: Int

  """The user picture hash"""
  pic_hash: String

  """Whether the user is active or not"""
  active_flag: Boolean
  JSON: JSON
}

type query_getOrganizationFollowers {
  """If the request was successful or not"""
  success: Boolean

  """The array of followers"""
  data: [query_getOrganizationFollowers_data_items]
  additional_data: query_getOrganizationFollowers_additional_data
}

type query_getOrganizationFollowers_data_items {
  """The ID of the organization"""
  org_id: Int

  """The user ID of the follower related to the item"""
  user_id: Int

  """The ID of the follower"""
  id: Int

  """The date and time of adding the follower to the item"""
  add_time: DateTime
}

type query_getOrganizationFollowers_additional_data {
  pagination: query_getOrganizationFollowers_additional_data_pagination
}

"""Pagination details of the list"""
type query_getOrganizationFollowers_additional_data_pagination {
  """Pagination start"""
  start: Int

  """Items shown per page"""
  limit: Int

  """Whether there are more list items in the collection than displayed"""
  more_items_in_collection: Boolean

  """Next pagination start"""
  next_start: Int
}

type query_getOrganizationMailMessages {
  """If the response is successful or not"""
  success: Boolean

  """The array of mail messages"""
  data: [query_getOrganizationMailMessages_allOf_1_data_items]
  additional_data: query_getOrganizationMailMessages_allOf_1_additional_data
}

type query_getOrganizationMailMessages_allOf_1_data_items {
  """The type of the data item"""
  object: String

  """The date and time when the item was created"""
  timestamp: String
  data: query_getOrganizationMailMessages_allOf_1_data_items_data
}

type query_getOrganizationMailMessages_allOf_1_data_items_data {
  """ID of the mail message."""
  id: Int

  """The array of mail message sender (object)"""
  from: [query_getOrganizationMailMessages_allOf_1_data_items_data_allOf_0_from_items]

  """The array of mail message receiver (object)"""
  to: [query_getOrganizationMailMessages_allOf_1_data_items_data_allOf_0_to_items]

  """The array of mail message copies (object)"""
  cc: [query_getOrganizationMailMessages_allOf_1_data_items_data_allOf_0_cc_items]

  """The array of mail message blind copies (object)"""
  bcc: [query_getOrganizationMailMessages_allOf_1_data_items_data_allOf_0_bcc_items]

  """The mail message body URL"""
  body_url: String

  """The connection account ID"""
  account_id: String

  """ID of the user whom mail message will be assigned to"""
  user_id: Int

  """ID of the mail message thread"""
  mail_thread_id: Int

  """The subject of mail message"""
  subject: String

  """The snippet of mail message. Snippet length is up to 225 characters."""
  snippet: String
  mail_tracking_status: query_getOrganizationMailMessages_allOf_1_data_items_data_allOf_0_mail_tracking_status
  mail_link_tracking_enabled_flag: numberBooleanDefault081
  read_flag: numberBooleanDefault082

  """
  If the mail message has a draft status then the value is the mail message object as JSON formatted string, otherwise `null`.
  """
  draft: String
  draft_flag: numberBooleanDefault083
  synced_flag: numberBooleanDefault084
  deleted_flag: numberBooleanDefault085
  has_body_flag: numberBooleanDefault086
  sent_flag: numberBooleanDefault087
  sent_from_pipedrive_flag: numberBooleanDefault088
  smart_bcc_flag: numberBooleanDefault089

  """Creation or receival time of the mail message"""
  message_time: DateTime

  """The insertion into the database time of the mail message"""
  add_time: DateTime

  """The updating time in the database of the mail message"""
  update_time: DateTime
  has_attachments_flag: numberBooleanDefault090
  has_inline_attachments_flag: numberBooleanDefault091
  has_real_attachments_flag: numberBooleanDefault092

  """The Mail Message ID assigned by the sync provider"""
  nylas_id: String

  """The name of the S3 bucket"""
  s3_bucket: String

  """The path of the S3 bucket"""
  s3_bucket_path: String

  """If the Mail Message has been deleted on the provider side or not"""
  external_deleted_flag: Boolean

  """The Mail Message ID assigned by the mail user agent"""
  mua_message_id: String

  """The ID of the mail template"""
  template_id: Int

  """The add date and time of the Mail Message"""
  timestamp: String

  """The type of the data item"""
  item_type: String

  """The ID of the company"""
  company_id: Int
}

type query_getOrganizationMailMessages_allOf_1_data_items_data_allOf_0_from_items {
  """ID of the mail participant"""
  id: Int

  """Mail address of the mail participant"""
  email_address: String

  """Name of the mail participant"""
  name: String

  """ID of the linked person to the mail message"""
  linked_person_id: Int

  """Name of the linked person to the mail message"""
  linked_person_name: String

  """ID of the mail message participant"""
  mail_message_party_id: Int
}

type query_getOrganizationMailMessages_allOf_1_data_items_data_allOf_0_to_items {
  """ID of the mail participant"""
  id: Int

  """Mail address of the mail participant"""
  email_address: String

  """Name of the mail participant"""
  name: String

  """ID of the linked person to the mail message"""
  linked_person_id: Int

  """Name of the linked person to the mail message"""
  linked_person_name: String

  """ID of the mail message participant"""
  mail_message_party_id: Int
}

type query_getOrganizationMailMessages_allOf_1_data_items_data_allOf_0_cc_items {
  """ID of the mail participant"""
  id: Int

  """Mail address of the mail participant"""
  email_address: String

  """Name of the mail participant"""
  name: String

  """ID of the linked person to the mail message"""
  linked_person_id: Int

  """Name of the linked person to the mail message"""
  linked_person_name: String

  """ID of the mail message participant"""
  mail_message_party_id: Int
}

type query_getOrganizationMailMessages_allOf_1_data_items_data_allOf_0_bcc_items {
  """ID of the mail participant"""
  id: Int

  """Mail address of the mail participant"""
  email_address: String

  """Name of the mail participant"""
  name: String

  """ID of the linked person to the mail message"""
  linked_person_id: Int

  """Name of the linked person to the mail message"""
  linked_person_name: String

  """ID of the mail message participant"""
  mail_message_party_id: Int
}

"""
The status of tracking mail message. Value is `null` if tracking is not enabled.
"""
enum query_getOrganizationMailMessages_allOf_1_data_items_data_allOf_0_mail_tracking_status {
  opened
  not_opened
}

enum numberBooleanDefault081 {
  _0
  _1
}

enum numberBooleanDefault082 {
  _0
  _1
}

enum numberBooleanDefault083 {
  _0
  _1
}

enum numberBooleanDefault084 {
  _0
  _1
}

enum numberBooleanDefault085 {
  _0
  _1
}

enum numberBooleanDefault086 {
  _0
  _1
}

enum numberBooleanDefault087 {
  _0
  _1
}

enum numberBooleanDefault088 {
  _0
  _1
}

enum numberBooleanDefault089 {
  _0
  _1
}

enum numberBooleanDefault090 {
  _0
  _1
}

enum numberBooleanDefault091 {
  _0
  _1
}

enum numberBooleanDefault092 {
  _0
  _1
}

"""The additional data of the list"""
type query_getOrganizationMailMessages_allOf_1_additional_data {
  """Pagination start"""
  start: Int

  """Items shown per page"""
  limit: Int

  """If there are more list items in the collection than displayed or not"""
  more_items_in_collection: Boolean
}

type query_getOrganizationUsers {
  """If the response is successful or not"""
  success: Boolean

  """The list of permitted user IDs"""
  data: [Float]
}

type query_getOrganizationPersons {
  """If the response is successful or not"""
  success: Boolean

  """The array of persons"""
  data: [query_getOrganizationPersons_allOf_1_data_items]
  additional_data: query_getOrganizationPersons_allOf_1_additional_data
  related_objects: query_getOrganizationPersons_allOf_1_related_objects
}

type query_getOrganizationPersons_allOf_1_data_items {
  """The ID of the person"""
  id: Int

  """The ID of the company related to the person"""
  company_id: Int

  """Whether the person is active or not"""
  active_flag: Boolean

  """
  A phone number supplied as a string or an array of phone objects related to the person. The structure of the array is as follows: `[{ "value": "12345", "primary": "true", "label": "mobile" }]`. Please note that only `value` is required.
  """
  phone: [query_getOrganizationPersons_allOf_1_data_items_allOf_0_phone_items]

  """
  An email address as a string or an array of email objects related to the person. The structure of the array is as follows: `[{ "value": "mail@example.com", "primary": "true", "label": "main" } ]`. Please note that only `value` is required.
  """
  email: [query_getOrganizationPersons_allOf_1_data_items_allOf_0_email_items]

  """The first letter of the name of the person"""
  first_char: String

  """
  The date and time when the person was added/created. Format: YYYY-MM-DD HH:MM:SS
  """
  add_time: String

  """
  The last updated date and time of the person. Format: YYYY-MM-DD HH:MM:SS
  """
  update_time: String

  """The visibility group ID of who can see the person"""
  visible_to: String
  picture_id: query_getOrganizationPersons_allOf_1_data_items_allOf_0_picture_id

  """The label assigned to the person"""
  label: Int

  """The name of the organization associated with the person"""
  org_name: String

  """The name of the owner associated with the person"""
  owner_name: String

  """The BCC email associated with the person"""
  cc_email: String
  owner_id: owner
  org_id: relationshipOrganizationInfoItemWithActiveFlag

  """The name of the person"""
  name: String

  """The first name of the person"""
  first_name: String

  """The last name of the person"""
  last_name: String

  """The count of email messages related to the person"""
  email_messages_count: Int

  """The count of activities related to the person"""
  activities_count: Int

  """The count of done activities related to the person"""
  done_activities_count: Int

  """The count of undone activities related to the person"""
  undone_activities_count: Int

  """The count of files related to the person"""
  files_count: Int

  """The count of notes related to the person"""
  notes_count: Int

  """The count of followers related to the person"""
  followers_count: Int

  """
  The date and time of the last incoming email associated with the person
  """
  last_incoming_mail_time: String

  """
  The date and time of the last outgoing email associated with the person
  """
  last_outgoing_mail_time: String

  """The count of open deals related with the item"""
  open_deals_count: Int

  """The count of related open deals related with the item"""
  related_open_deals_count: Int

  """The count of closed deals related with the item"""
  closed_deals_count: Int

  """The count of related closed deals related with the item"""
  related_closed_deals_count: Int

  """The count of won deals related with the item"""
  won_deals_count: Int

  """The count of related won deals related with the item"""
  related_won_deals_count: Int

  """The count of lost deals related with the item"""
  lost_deals_count: Int

  """The count of related lost deals related with the item"""
  related_lost_deals_count: Int

  """The date of the next activity associated with the deal"""
  next_activity_date: String

  """The time of the next activity associated with the deal"""
  next_activity_time: String

  """The ID of the next activity associated with the deal"""
  next_activity_id: Int

  """The ID of the last activity associated with the deal"""
  last_activity_id: Int

  """The date of the last activity associated with the deal"""
  last_activity_date: String
}

type query_getOrganizationPersons_allOf_1_data_items_allOf_0_phone_items {
  """The phone number"""
  value: String

  """
  Boolean that indicates if phone number is primary for the person or not
  """
  primary: Boolean

  """
  The label that indicates the type of the phone number. (Possible values - work, home, mobile or other)
  """
  label: String
}

type query_getOrganizationPersons_allOf_1_data_items_allOf_0_email_items {
  """Email"""
  value: String

  """Boolean that indicates if email is primary for the person or not"""
  primary: Boolean

  """
  The label that indicates the type of the email. (Possible values - work, home or other)
  """
  label: String
}

type query_getOrganizationPersons_allOf_1_data_items_allOf_0_picture_id {
  """The ID of the picture associated with the item"""
  id: Int

  """The type of item the picture is related to"""
  item_type: String

  """The ID of related item"""
  item_id: Int

  """Whether the associated picture is active or not"""
  active_flag: Boolean

  """The add time of the picture"""
  add_time: String

  """The update time of the picture"""
  update_time: String

  """The ID of the user who added the picture"""
  added_by_user_id: Int
  pictures: query_getOrganizationPersons_allOf_1_data_items_allOf_0_picture_id_allOf_1_pictures
}

type query_getOrganizationPersons_allOf_1_data_items_allOf_0_picture_id_allOf_1_pictures {
  """The URL of the 128*128 picture"""
  _128: String

  """The URL of the 512*512 picture"""
  _512: String
}

"""The additional data of the list"""
type query_getOrganizationPersons_allOf_1_additional_data {
  """Pagination start"""
  start: Int

  """Items shown per page"""
  limit: Int

  """If there are more list items in the collection than displayed or not"""
  more_items_in_collection: Boolean
}

type query_getOrganizationPersons_allOf_1_related_objects {
  organization: query_getOrganizationPersons_allOf_1_related_objects_organization
  user: query_getOrganizationPersons_allOf_1_related_objects_user
}

type query_getOrganizationPersons_allOf_1_related_objects_organization {
  ORGANIZATION_ID: query_getOrganizationPersons_allOf_1_related_objects_organization_ORGANIZATION_ID
}

"""The ID of the organization associated with the item"""
type query_getOrganizationPersons_allOf_1_related_objects_organization_ORGANIZATION_ID {
  """Whether the associated organization is active or not"""
  active_flag: Boolean

  """The ID of the organization associated with the item"""
  id: Int

  """The name of the organization associated with the item"""
  name: String

  """
  The number of people connected with the organization that is associated with the item
  """
  people_count: Int

  """
  The ID of the owner of the organization that is associated with the item
  """
  owner_id: Int

  """The address of the organization"""
  address: String

  """The BCC email of the organization associated with the item"""
  cc_email: String
}

type query_getOrganizationPersons_allOf_1_related_objects_user {
  USER_ID: query_getOrganizationPersons_allOf_1_related_objects_user_USER_ID
}

type query_getOrganizationPersons_allOf_1_related_objects_user_USER_ID {
  """The ID of the user"""
  id: Int

  """The name of the user"""
  name: String

  """The email of the user"""
  email: String

  """Whether the user has picture or not. 0 = No picture, 1 = Has picture."""
  has_pic: Int

  """The user picture hash"""
  pic_hash: String

  """Whether the user is active or not"""
  active_flag: Boolean
  JSON: JSON
}

type query_getOrganizationFields {
  """If the response is successful or not"""
  success: Boolean
  data: [query_getOrganizationFields_allOf_1_data_items]
  additional_data: query_getOrganizationFields_allOf_1_additional_data
}

type query_getOrganizationFields_allOf_1_data_items {
  """The ID of the field. Value is `null` in case of subfields."""
  id: Int

  """
  The key of the field. For custom fields this is generated upon creation.
  """
  key: String

  """The name of the field"""
  name: String

  """The order number of the field"""
  order_nr: Int
  field_type: query_getOrganizationFields_allOf_1_data_items_field_type

  """The creation time of the field"""
  add_time: String

  """The update time of the field"""
  update_time: String

  """
  The ID of the user who created or most recently updated the field, only applicable for custom fields
  """
  last_updated_by_user_id: Int

  """The active flag of the field"""
  active_flag: Boolean

  """The edit flag of the field"""
  edit_flag: Boolean

  """Not used"""
  index_visible_flag: Boolean

  """Not used"""
  details_visible_flag: Boolean

  """Not used"""
  add_visible_flag: Boolean

  """Not used"""
  important_flag: Boolean

  """Whether or not the field of an item can be edited in bulk"""
  bulk_edit_allowed: Boolean

  """Whether or not items can be searched by this field"""
  searchable_flag: Boolean

  """Whether or not items can be filtered by this field"""
  filtering_allowed: Boolean

  """Whether or not items can be sorted by this field"""
  sortable_flag: Boolean

  """Whether or not the field is mandatory"""
  mandatory_flag: Boolean

  """
  The options of the field. When there are no options, `null` is returned.
  """
  options: [JSON]

  """
  The deleted options of the field. Only present when there is at least 1 deleted option.
  """
  options_deleted: [JSON]

  """
  Whether or not the field is a subfield of another field. Only present if field is subfield.
  """
  is_subfield: Boolean

  """The subfields of the field. Only present when the field has subfields."""
  subfields: [JSON]
}

"""
The type of the field<table><tr><th>Value</th><th>Description</th></tr><tr><td>`address`</td><td>Address field (has multiple subfields, autocompleted by Google Maps)</td></tr><tr><td>`date`</td><td>Date (format YYYY-MM-DD)</td></tr><tr><td>`daterange`</td><td>Date-range field (has a start date and end date value, both YYYY-MM-DD)</td></tr><tr><td>`double`</td><td>Numeric value</td></tr><tr><td>`enum`</td><td>Options field with a single possible chosen option</td></tr><tr></tr><tr><td>`monetary`</td><td>Monetary field (has a numeric value and a currency value)</td></tr><tr><td>`org`</td><td>Organization field (contains an organization ID which is stored on the same account)</td></tr><tr><td>`people`</td><td>Person field (contains a person ID which is stored on the same account)</td></tr><tr><td>`phone`</td><td>Phone field (up to 255 numbers and/or characters)</td></tr><tr><td>`set`</td><td>Options field with a possibility of having multiple chosen options</td></tr><tr><td>`text`</td><td>Long text (up to 65k characters)</td></tr><tr><td>`time`</td><td>Time field (format HH:MM:SS)</td></tr><tr><td>`timerange`</td><td>Time-range field (has a start time and end time value, both HH:MM:SS)</td></tr><tr><td>`user`</td><td>User field (contains a user ID of another Pipedrive user)</td></tr><tr><td>`varchar`</td><td>Text (up to 255 characters)</td></tr><tr><td>`varchar_auto`</td><td>Autocomplete text (up to 255 characters)</td></tr><tr><td>`visible_to`</td><td>System field that keeps item's visibility setting</td></tr></table>
"""
enum query_getOrganizationFields_allOf_1_data_items_field_type {
  address
  date
  daterange
  double
  enum
  monetary
  org
  people
  phone
  set
  text
  time
  timerange
  user
  varchar
  varchar_auto
  visible_to
}

"""The additional data of the list"""
type query_getOrganizationFields_allOf_1_additional_data {
  """Pagination start"""
  start: Int

  """Items shown per page"""
  limit: Int

  """If there are more list items in the collection than displayed or not"""
  more_items_in_collection: Boolean
}

type query_getOrganizationField {
  """If the response is successful or not"""
  success: Boolean
  data: query_getOrganizationField_allOf_1_data
}

type query_getOrganizationField_allOf_1_data {
  """The ID of the field. Value is `null` in case of subfields."""
  id: Int

  """
  The key of the field. For custom fields this is generated upon creation.
  """
  key: String

  """The name of the field"""
  name: String

  """The order number of the field"""
  order_nr: Int
  field_type: query_getOrganizationField_allOf_1_data_field_type

  """The creation time of the field"""
  add_time: String

  """The update time of the field"""
  update_time: String

  """
  The ID of the user who created or most recently updated the field, only applicable for custom fields
  """
  last_updated_by_user_id: Int

  """The active flag of the field"""
  active_flag: Boolean

  """The edit flag of the field"""
  edit_flag: Boolean

  """Not used"""
  index_visible_flag: Boolean

  """Not used"""
  details_visible_flag: Boolean

  """Not used"""
  add_visible_flag: Boolean

  """Not used"""
  important_flag: Boolean

  """Whether or not the field of an item can be edited in bulk"""
  bulk_edit_allowed: Boolean

  """Whether or not items can be searched by this field"""
  searchable_flag: Boolean

  """Whether or not items can be filtered by this field"""
  filtering_allowed: Boolean

  """Whether or not items can be sorted by this field"""
  sortable_flag: Boolean

  """Whether or not the field is mandatory"""
  mandatory_flag: Boolean

  """
  The options of the field. When there are no options, `null` is returned.
  """
  options: [JSON]

  """
  The deleted options of the field. Only present when there is at least 1 deleted option.
  """
  options_deleted: [JSON]

  """
  Whether or not the field is a subfield of another field. Only present if field is subfield.
  """
  is_subfield: Boolean

  """The subfields of the field. Only present when the field has subfields."""
  subfields: [JSON]
}

"""
The type of the field<table><tr><th>Value</th><th>Description</th></tr><tr><td>`address`</td><td>Address field (has multiple subfields, autocompleted by Google Maps)</td></tr><tr><td>`date`</td><td>Date (format YYYY-MM-DD)</td></tr><tr><td>`daterange`</td><td>Date-range field (has a start date and end date value, both YYYY-MM-DD)</td></tr><tr><td>`double`</td><td>Numeric value</td></tr><tr><td>`enum`</td><td>Options field with a single possible chosen option</td></tr><tr></tr><tr><td>`monetary`</td><td>Monetary field (has a numeric value and a currency value)</td></tr><tr><td>`org`</td><td>Organization field (contains an organization ID which is stored on the same account)</td></tr><tr><td>`people`</td><td>Person field (contains a person ID which is stored on the same account)</td></tr><tr><td>`phone`</td><td>Phone field (up to 255 numbers and/or characters)</td></tr><tr><td>`set`</td><td>Options field with a possibility of having multiple chosen options</td></tr><tr><td>`text`</td><td>Long text (up to 65k characters)</td></tr><tr><td>`time`</td><td>Time field (format HH:MM:SS)</td></tr><tr><td>`timerange`</td><td>Time-range field (has a start time and end time value, both HH:MM:SS)</td></tr><tr><td>`user`</td><td>User field (contains a user ID of another Pipedrive user)</td></tr><tr><td>`varchar`</td><td>Text (up to 255 characters)</td></tr><tr><td>`varchar_auto`</td><td>Autocomplete text (up to 255 characters)</td></tr><tr><td>`visible_to`</td><td>System field that keeps item's visibility setting</td></tr></table>
"""
enum query_getOrganizationField_allOf_1_data_field_type {
  address
  date
  daterange
  double
  enum
  monetary
  org
  people
  phone
  set
  text
  time
  timerange
  user
  varchar
  varchar_auto
  visible_to
}

type getOrganizationRelationships {
  """If the response is successful or not"""
  success: Boolean

  """The array of organization relationships"""
  data: [organizationRelationshipDetails]
  additional_data: query_getOrganizationRelationships_allOf_1_additional_data
  related_objects: query_getOrganizationRelationships_allOf_1_related_objects
}

type organizationRelationshipDetails {
  """The ID of the organization relationship"""
  id: Int

  """The type of the relationship"""
  type: String
  rel_owner_org_id: query_getOrganizationRelationships_allOf_1_data_items_allOf_0_allOf_0_rel_owner_org_id
  rel_linked_org_id: query_getOrganizationRelationships_allOf_1_data_items_allOf_0_allOf_0_rel_linked_org_id

  """The creation date and time of the relationship"""
  add_time: String

  """The last updated date and time of the relationship"""
  update_time: String

  """Whether the relationship is active or not"""
  active_flag: String

  """The calculated type of the relationship with the linked organization"""
  calculated_type: String

  """The ID of the linked organization"""
  calculated_related_org_id: Int

  """The name of the linked organization"""
  related_organization_name: String
}

type query_getOrganizationRelationships_allOf_1_data_items_allOf_0_allOf_0_rel_owner_org_id {
  """The name of the organization associated with the item"""
  name: String

  """
  The number of people connected with the organization that is associated with the item
  """
  people_count: Int

  """
  The ID of the owner of the organization that is associated with the item
  """
  owner_id: Int

  """The address of the organization"""
  address: String

  """The BCC email of the organization associated with the item"""
  cc_email: String

  """The ID of the organization"""
  value: Int
}

type query_getOrganizationRelationships_allOf_1_data_items_allOf_0_allOf_0_rel_linked_org_id {
  """The name of the organization associated with the item"""
  name: String

  """
  The number of people connected with the organization that is associated with the item
  """
  people_count: Int

  """
  The ID of the owner of the organization that is associated with the item
  """
  owner_id: Int

  """The address of the organization"""
  address: String

  """The BCC email of the organization associated with the item"""
  cc_email: String

  """The ID of the organization"""
  value: Int
}

"""The additional data of the list"""
type query_getOrganizationRelationships_allOf_1_additional_data {
  """Pagination start"""
  start: Int

  """Items shown per page"""
  limit: Int

  """If there are more list items in the collection than displayed or not"""
  more_items_in_collection: Boolean
}

type query_getOrganizationRelationships_allOf_1_related_objects {
  organization: query_getOrganizationRelationships_allOf_1_related_objects_organization
}

type query_getOrganizationRelationships_allOf_1_related_objects_organization {
  ORGANIZATION_ID: query_getOrganizationRelationships_allOf_1_related_objects_organization_ORGANIZATION_ID
}

"""The ID of the organization associated with the item"""
type query_getOrganizationRelationships_allOf_1_related_objects_organization_ORGANIZATION_ID {
  """The ID of the organization associated with the item"""
  id: Int

  """The name of the organization associated with the item"""
  name: String

  """
  The number of people connected with the organization that is associated with the item
  """
  people_count: Int

  """
  The ID of the owner of the organization that is associated with the item
  """
  owner_id: Int

  """The address of the organization"""
  address: String

  """The BCC email of the organization associated with the item"""
  cc_email: String
}

type getOrganizationRelationship {
  """If the response is successful or not"""
  success: Boolean
  data: query_getOrganizationRelationship_allOf_1_data
  related_objects: query_getOrganizationRelationship_allOf_1_related_objects
}

type query_getOrganizationRelationship_allOf_1_data {
  """The ID of the organization relationship"""
  id: Int

  """The type of the relationship"""
  type: String
  rel_owner_org_id: query_getOrganizationRelationship_allOf_1_data_allOf_0_rel_owner_org_id
  rel_linked_org_id: query_getOrganizationRelationship_allOf_1_data_allOf_0_rel_linked_org_id

  """The creation date and time of the relationship"""
  add_time: String

  """The last updated date and time of the relationship"""
  update_time: String

  """Whether the relationship is active or not"""
  active_flag: String

  """The calculated type of the relationship with the linked organization"""
  calculated_type: String

  """The ID of the linked organization"""
  calculated_related_org_id: Int
}

type query_getOrganizationRelationship_allOf_1_data_allOf_0_rel_owner_org_id {
  """The name of the organization associated with the item"""
  name: String

  """
  The number of people connected with the organization that is associated with the item
  """
  people_count: Int

  """
  The ID of the owner of the organization that is associated with the item
  """
  owner_id: Int

  """The address of the organization"""
  address: String

  """The BCC email of the organization associated with the item"""
  cc_email: String

  """The ID of the organization"""
  value: Int
}

type query_getOrganizationRelationship_allOf_1_data_allOf_0_rel_linked_org_id {
  """The name of the organization associated with the item"""
  name: String

  """
  The number of people connected with the organization that is associated with the item
  """
  people_count: Int

  """
  The ID of the owner of the organization that is associated with the item
  """
  owner_id: Int

  """The address of the organization"""
  address: String

  """The BCC email of the organization associated with the item"""
  cc_email: String

  """The ID of the organization"""
  value: Int
}

type query_getOrganizationRelationship_allOf_1_related_objects {
  organization: query_getOrganizationRelationship_allOf_1_related_objects_organization
}

type query_getOrganizationRelationship_allOf_1_related_objects_organization {
  ORGANIZATION_ID: query_getOrganizationRelationship_allOf_1_related_objects_organization_ORGANIZATION_ID
}

"""The ID of the organization associated with the item"""
type query_getOrganizationRelationship_allOf_1_related_objects_organization_ORGANIZATION_ID {
  """The ID of the organization associated with the item"""
  id: Int

  """The name of the organization associated with the item"""
  name: String

  """
  The number of people connected with the organization that is associated with the item
  """
  people_count: Int

  """
  The ID of the owner of the organization that is associated with the item
  """
  owner_id: Int

  """The address of the organization"""
  address: String

  """The BCC email of the organization associated with the item"""
  cc_email: String
}

type getPermissionSets {
  """If the response is successful or not"""
  success: Boolean

  """The array of permission set"""
  data: [query_getPermissionSets_allOf_1_data_items]
}

type query_getPermissionSets_allOf_1_data_items {
  """The ID of user permission set"""
  id: String

  """The name of the permission set"""
  name: String

  """The description of the permission set"""
  description: String
  app: query_getPermissionSets_allOf_1_data_items_app
  type: query_getPermissionSets_allOf_1_data_items_type

  """The number of users assigned to this permission set"""
  assignment_count: Int
}

"""The app that permission set belongs to"""
enum query_getPermissionSets_allOf_1_data_items_app {
  sales
  projects
  campaigns
  global
  account_settings
}

"""The type of permission set"""
enum query_getPermissionSets_allOf_1_data_items_type {
  admin
  manager
  regular
  custom
}

"""The app to filter the permission sets by"""
enum queryInput_getPermissionSets_app {
  sales
  projects
  campaigns
  global
  account_settings
}

union getPermissionSet_response = singlePermissionSet | JSON_container

type singlePermissionSet {
  """The ID of user permission set"""
  id: String

  """The name of the permission set"""
  name: String

  """The description of the permission set"""
  description: String
  app: query_getPermissionSet_oneOf_0_allOf_0_app
  type: query_getPermissionSet_oneOf_0_allOf_0_type

  """The number of users assigned to this permission set"""
  assignment_count: Int

  """A permission assigned to this permission set"""
  contents: [String]
}

"""The app that permission set belongs to"""
enum query_getPermissionSet_oneOf_0_allOf_0_app {
  sales
  projects
  campaigns
  global
  account_settings
}

"""The type of permission set"""
enum query_getPermissionSet_oneOf_0_allOf_0_type {
  admin
  manager
  regular
  custom
}

type JSON_container {
  JSON: JSON
}

union getPermissionSetAssignments_response = userAssignmentsToPermissionSet | JSON_container

type userAssignmentsToPermissionSet {
  """If the response is successful or not"""
  success: Boolean

  """An array of the assignments of the user"""
  data: [query_getPermissionSetAssignments_oneOf_0_allOf_1_data_items]
}

type query_getPermissionSetAssignments_oneOf_0_allOf_1_data_items {
  """The ID of the user in the permission set"""
  user_id: Int

  """The ID of the permission set"""
  permission_set_id: String

  """The name of the permission set"""
  name: String
}

type getPersons {
  """If the response is successful or not"""
  success: Boolean

  """The array of persons"""
  data: [query_getPersons_allOf_1_data_items]
  additional_data: query_getPersons_allOf_1_additional_data
  related_objects: query_getPersons_allOf_1_related_objects
}

type query_getPersons_allOf_1_data_items {
  """The ID of the person"""
  id: Int

  """The ID of the company related to the person"""
  company_id: Int

  """Whether the person is active or not"""
  active_flag: Boolean

  """
  A phone number supplied as a string or an array of phone objects related to the person. The structure of the array is as follows: `[{ "value": "12345", "primary": "true", "label": "mobile" }]`. Please note that only `value` is required.
  """
  phone: [query_getPersons_allOf_1_data_items_allOf_0_phone_items]

  """
  An email address as a string or an array of email objects related to the person. The structure of the array is as follows: `[{ "value": "mail@example.com", "primary": "true", "label": "main" } ]`. Please note that only `value` is required.
  """
  email: [query_getPersons_allOf_1_data_items_allOf_0_email_items]

  """The first letter of the name of the person"""
  first_char: String

  """
  The date and time when the person was added/created. Format: YYYY-MM-DD HH:MM:SS
  """
  add_time: String

  """
  The last updated date and time of the person. Format: YYYY-MM-DD HH:MM:SS
  """
  update_time: String

  """The visibility group ID of who can see the person"""
  visible_to: String
  picture_id: query_getPersons_allOf_1_data_items_allOf_0_picture_id

  """The label assigned to the person"""
  label: Int

  """The name of the organization associated with the person"""
  org_name: String

  """The name of the owner associated with the person"""
  owner_name: String

  """The BCC email associated with the person"""
  cc_email: String
  owner_id: owner
  org_id: relationshipOrganizationInfoItemWithActiveFlag

  """The name of the person"""
  name: String

  """The first name of the person"""
  first_name: String

  """The last name of the person"""
  last_name: String

  """The count of email messages related to the person"""
  email_messages_count: Int

  """The count of activities related to the person"""
  activities_count: Int

  """The count of done activities related to the person"""
  done_activities_count: Int

  """The count of undone activities related to the person"""
  undone_activities_count: Int

  """The count of files related to the person"""
  files_count: Int

  """The count of notes related to the person"""
  notes_count: Int

  """The count of followers related to the person"""
  followers_count: Int

  """
  The date and time of the last incoming email associated with the person
  """
  last_incoming_mail_time: String

  """
  The date and time of the last outgoing email associated with the person
  """
  last_outgoing_mail_time: String

  """The count of open deals related with the item"""
  open_deals_count: Int

  """The count of related open deals related with the item"""
  related_open_deals_count: Int

  """The count of closed deals related with the item"""
  closed_deals_count: Int

  """The count of related closed deals related with the item"""
  related_closed_deals_count: Int

  """The count of won deals related with the item"""
  won_deals_count: Int

  """The count of related won deals related with the item"""
  related_won_deals_count: Int

  """The count of lost deals related with the item"""
  lost_deals_count: Int

  """The count of related lost deals related with the item"""
  related_lost_deals_count: Int

  """The date of the next activity associated with the deal"""
  next_activity_date: String

  """The time of the next activity associated with the deal"""
  next_activity_time: String

  """The ID of the next activity associated with the deal"""
  next_activity_id: Int

  """The ID of the last activity associated with the deal"""
  last_activity_id: Int

  """The date of the last activity associated with the deal"""
  last_activity_date: String
}

type query_getPersons_allOf_1_data_items_allOf_0_phone_items {
  """The phone number"""
  value: String

  """
  Boolean that indicates if phone number is primary for the person or not
  """
  primary: Boolean

  """
  The label that indicates the type of the phone number. (Possible values - work, home, mobile or other)
  """
  label: String
}

type query_getPersons_allOf_1_data_items_allOf_0_email_items {
  """Email"""
  value: String

  """Boolean that indicates if email is primary for the person or not"""
  primary: Boolean

  """
  The label that indicates the type of the email. (Possible values - work, home or other)
  """
  label: String
}

type query_getPersons_allOf_1_data_items_allOf_0_picture_id {
  """The ID of the picture associated with the item"""
  id: Int

  """The type of item the picture is related to"""
  item_type: String

  """The ID of related item"""
  item_id: Int

  """Whether the associated picture is active or not"""
  active_flag: Boolean

  """The add time of the picture"""
  add_time: String

  """The update time of the picture"""
  update_time: String

  """The ID of the user who added the picture"""
  added_by_user_id: Int
  pictures: query_getPersons_allOf_1_data_items_allOf_0_picture_id_allOf_1_pictures
}

type query_getPersons_allOf_1_data_items_allOf_0_picture_id_allOf_1_pictures {
  """The URL of the 128*128 picture"""
  _128: String

  """The URL of the 512*512 picture"""
  _512: String
}

type query_getPersons_allOf_1_additional_data {
  pagination: query_getPersons_allOf_1_additional_data_pagination
}

"""Pagination details of the list"""
type query_getPersons_allOf_1_additional_data_pagination {
  """Pagination start"""
  start: Int

  """Items shown per page"""
  limit: Int

  """Whether there are more list items in the collection than displayed"""
  more_items_in_collection: Boolean

  """Next pagination start"""
  next_start: Int
}

type query_getPersons_allOf_1_related_objects {
  organization: query_getPersons_allOf_1_related_objects_organization
  user: query_getPersons_allOf_1_related_objects_user
  picture: query_getPersons_allOf_1_related_objects_picture
}

type query_getPersons_allOf_1_related_objects_organization {
  ORGANIZATION_ID: query_getPersons_allOf_1_related_objects_organization_ORGANIZATION_ID
}

"""The ID of the organization associated with the item"""
type query_getPersons_allOf_1_related_objects_organization_ORGANIZATION_ID {
  """The ID of the organization associated with the item"""
  id: Int

  """The name of the organization associated with the item"""
  name: String

  """
  The number of people connected with the organization that is associated with the item
  """
  people_count: Int

  """
  The ID of the owner of the organization that is associated with the item
  """
  owner_id: Int

  """The address of the organization"""
  address: String

  """The BCC email of the organization associated with the item"""
  cc_email: String
}

type query_getPersons_allOf_1_related_objects_user {
  USER_ID: query_getPersons_allOf_1_related_objects_user_USER_ID
}

type query_getPersons_allOf_1_related_objects_user_USER_ID {
  """The ID of the user"""
  id: Int

  """The name of the user"""
  name: String

  """The email of the user"""
  email: String

  """Whether the user has picture or not. 0 = No picture, 1 = Has picture."""
  has_pic: Int

  """The user picture hash"""
  pic_hash: String

  """Whether the user is active or not"""
  active_flag: Boolean
  JSON: JSON
}

"""The picture that is associated with the item"""
type query_getPersons_allOf_1_related_objects_picture {
  PICTURE_ID: query_getPersons_allOf_1_related_objects_picture_PICTURE_ID
}

type query_getPersons_allOf_1_related_objects_picture_PICTURE_ID {
  """The ID of the picture associated with the item"""
  id: Int

  """The type of item the picture is related to"""
  item_type: String

  """The ID of related item"""
  item_id: Int

  """Whether the associated picture is active or not"""
  active_flag: Boolean

  """The add time of the picture"""
  add_time: String

  """The update time of the picture"""
  update_time: String

  """The ID of the user who added the picture"""
  added_by_user_id: Int
  pictures: query_getPersons_allOf_1_related_objects_picture_PICTURE_ID_allOf_1_pictures
}

type query_getPersons_allOf_1_related_objects_picture_PICTURE_ID_allOf_1_pictures {
  """The URL of the 128*128 picture"""
  _128: String

  """The URL of the 512*512 picture"""
  _512: String
}

type searchPersons {
  """If the response is successful or not"""
  success: Boolean
  data: query_searchPersons_allOf_1_data
  additional_data: query_searchPersons_allOf_1_additional_data
}

type query_searchPersons_allOf_1_data {
  """The array of found items"""
  items: [query_searchPersons_allOf_1_data_items_items]
}

type query_searchPersons_allOf_1_data_items_items {
  """Search result relevancy"""
  result_score: Float
  item: query_searchPersons_allOf_1_data_items_items_item
}

type query_searchPersons_allOf_1_data_items_items_item {
  """The ID of the person"""
  id: Int

  """The type of the item"""
  type: String

  """The name of the person"""
  name: String

  """An array of phone numbers"""
  phones: [String]

  """An array of email addresses"""
  emails: [String]

  """The visibility of the person"""
  visible_to: Int
  owner: query_searchPersons_allOf_1_data_items_items_item_owner
  organization: query_searchPersons_allOf_1_data_items_items_item_organization

  """Custom fields"""
  custom_fields: [String]

  """An array of notes"""
  notes: [String]
}

type query_searchPersons_allOf_1_data_items_items_item_owner {
  """The ID of the owner of the person"""
  id: Int
}

type query_searchPersons_allOf_1_data_items_items_item_organization {
  """The ID of the organization the person is associated with"""
  id: Int

  """The name of the organization the person is associated with"""
  name: String
}

type query_searchPersons_allOf_1_additional_data {
  pagination: query_searchPersons_allOf_1_additional_data_pagination
}

"""Pagination details of the list"""
type query_searchPersons_allOf_1_additional_data_pagination {
  """Pagination start"""
  start: Int

  """Items shown per page"""
  limit: Int

  """Whether there are more list items in the collection than displayed"""
  more_items_in_collection: Boolean

  """Next pagination start"""
  next_start: Int
}

"""
A comma-separated string array. The fields to perform the search from. Defaults to all of them.
"""
enum queryInput_searchPersons_fields {
  custom_fields
  email
  notes
  phone
  name
}

enum person_picture_const {
  person_picture
}

type getPerson {
  """If the response is successful or not"""
  success: Boolean
  data: query_getPerson_allOf_1_data
  additional_data: query_getPerson_allOf_1_additional_data
  related_objects: query_getPerson_allOf_1_related_objects
}

type query_getPerson_allOf_1_data {
  """The ID of the person"""
  id: Int

  """The ID of the company related to the person"""
  company_id: Int

  """Whether the person is active or not"""
  active_flag: Boolean

  """
  A phone number supplied as a string or an array of phone objects related to the person. The structure of the array is as follows: `[{ "value": "12345", "primary": "true", "label": "mobile" }]`. Please note that only `value` is required.
  """
  phone: [query_getPerson_allOf_1_data_allOf_0_phone_items]

  """
  An email address as a string or an array of email objects related to the person. The structure of the array is as follows: `[{ "value": "mail@example.com", "primary": "true", "label": "main" } ]`. Please note that only `value` is required.
  """
  email: [query_getPerson_allOf_1_data_allOf_0_email_items]

  """The first letter of the name of the person"""
  first_char: String

  """
  The date and time when the person was added/created. Format: YYYY-MM-DD HH:MM:SS
  """
  add_time: String

  """
  The last updated date and time of the person. Format: YYYY-MM-DD HH:MM:SS
  """
  update_time: String

  """The visibility group ID of who can see the person"""
  visible_to: String
  picture_id: query_getPerson_allOf_1_data_allOf_0_picture_id

  """The label assigned to the person"""
  label: Int

  """The name of the organization associated with the person"""
  org_name: String

  """The name of the owner associated with the person"""
  owner_name: String

  """The BCC email associated with the person"""
  cc_email: String
  owner_id: owner
  org_id: relationshipOrganizationInfoItemWithActiveFlag

  """The name of the person"""
  name: String

  """The first name of the person"""
  first_name: String

  """The last name of the person"""
  last_name: String

  """The count of email messages related to the person"""
  email_messages_count: Int

  """The count of activities related to the person"""
  activities_count: Int

  """The count of done activities related to the person"""
  done_activities_count: Int

  """The count of undone activities related to the person"""
  undone_activities_count: Int

  """The count of files related to the person"""
  files_count: Int

  """The count of notes related to the person"""
  notes_count: Int

  """The count of followers related to the person"""
  followers_count: Int

  """
  The date and time of the last incoming email associated with the person
  """
  last_incoming_mail_time: String

  """
  The date and time of the last outgoing email associated with the person
  """
  last_outgoing_mail_time: String

  """The count of open deals related with the item"""
  open_deals_count: Int

  """The count of related open deals related with the item"""
  related_open_deals_count: Int

  """The count of closed deals related with the item"""
  closed_deals_count: Int

  """The count of related closed deals related with the item"""
  related_closed_deals_count: Int

  """The count of won deals related with the item"""
  won_deals_count: Int

  """The count of related won deals related with the item"""
  related_won_deals_count: Int

  """The count of lost deals related with the item"""
  lost_deals_count: Int

  """The count of related lost deals related with the item"""
  related_lost_deals_count: Int

  """The date of the next activity associated with the deal"""
  next_activity_date: String

  """The time of the next activity associated with the deal"""
  next_activity_time: String

  """The ID of the next activity associated with the deal"""
  next_activity_id: Int

  """The ID of the last activity associated with the deal"""
  last_activity_id: Int

  """The date of the last activity associated with the deal"""
  last_activity_date: String
}

type query_getPerson_allOf_1_data_allOf_0_phone_items {
  """The phone number"""
  value: String

  """
  Boolean that indicates if phone number is primary for the person or not
  """
  primary: Boolean

  """
  The label that indicates the type of the phone number. (Possible values - work, home, mobile or other)
  """
  label: String
}

type query_getPerson_allOf_1_data_allOf_0_email_items {
  """Email"""
  value: String

  """Boolean that indicates if email is primary for the person or not"""
  primary: Boolean

  """
  The label that indicates the type of the email. (Possible values - work, home or other)
  """
  label: String
}

type query_getPerson_allOf_1_data_allOf_0_picture_id {
  """The ID of the picture associated with the item"""
  id: Int

  """The type of item the picture is related to"""
  item_type: String

  """The ID of related item"""
  item_id: Int

  """Whether the associated picture is active or not"""
  active_flag: Boolean

  """The add time of the picture"""
  add_time: String

  """The update time of the picture"""
  update_time: String

  """The ID of the user who added the picture"""
  added_by_user_id: Int
  pictures: query_getPerson_allOf_1_data_allOf_0_picture_id_allOf_1_pictures
}

type query_getPerson_allOf_1_data_allOf_0_picture_id_allOf_1_pictures {
  """The URL of the 128*128 picture"""
  _128: String

  """The URL of the 512*512 picture"""
  _512: String
}

type query_getPerson_allOf_1_additional_data {
  """Dropbox email for the person"""
  dropbox_email: String
}

type query_getPerson_allOf_1_related_objects {
  organization: query_getPerson_allOf_1_related_objects_organization
  user: query_getPerson_allOf_1_related_objects_user
  picture: query_getPerson_allOf_1_related_objects_picture
}

type query_getPerson_allOf_1_related_objects_organization {
  ORGANIZATION_ID: query_getPerson_allOf_1_related_objects_organization_ORGANIZATION_ID
}

"""The ID of the organization associated with the item"""
type query_getPerson_allOf_1_related_objects_organization_ORGANIZATION_ID {
  """The ID of the organization associated with the item"""
  id: Int

  """The name of the organization associated with the item"""
  name: String

  """
  The number of people connected with the organization that is associated with the item
  """
  people_count: Int

  """
  The ID of the owner of the organization that is associated with the item
  """
  owner_id: Int

  """The address of the organization"""
  address: String

  """The BCC email of the organization associated with the item"""
  cc_email: String
}

type query_getPerson_allOf_1_related_objects_user {
  USER_ID: query_getPerson_allOf_1_related_objects_user_USER_ID
}

type query_getPerson_allOf_1_related_objects_user_USER_ID {
  """The ID of the user"""
  id: Int

  """The name of the user"""
  name: String

  """The email of the user"""
  email: String

  """Whether the user has picture or not. 0 = No picture, 1 = Has picture."""
  has_pic: Int

  """The user picture hash"""
  pic_hash: String

  """Whether the user is active or not"""
  active_flag: Boolean
  JSON: JSON
}

"""The picture that is associated with the item"""
type query_getPerson_allOf_1_related_objects_picture {
  PICTURE_ID: query_getPerson_allOf_1_related_objects_picture_PICTURE_ID
}

type query_getPerson_allOf_1_related_objects_picture_PICTURE_ID {
  """The ID of the picture associated with the item"""
  id: Int

  """The type of item the picture is related to"""
  item_type: String

  """The ID of related item"""
  item_id: Int

  """Whether the associated picture is active or not"""
  active_flag: Boolean

  """The add time of the picture"""
  add_time: String

  """The update time of the picture"""
  update_time: String

  """The ID of the user who added the picture"""
  added_by_user_id: Int
  pictures: query_getPerson_allOf_1_related_objects_picture_PICTURE_ID_allOf_1_pictures
}

type query_getPerson_allOf_1_related_objects_picture_PICTURE_ID_allOf_1_pictures {
  """The URL of the 128*128 picture"""
  _128: String

  """The URL of the 512*512 picture"""
  _512: String
}

type query_getPersonActivities {
  """If the response is successful or not"""
  success: Boolean

  """The array of activities"""
  data: [query_getPersonActivities_allOf_1_data_items]
  additional_data: query_getPersonActivities_allOf_1_additional_data
}

type query_getPersonActivities_allOf_1_data_items {
  """The due date of the activity. Format: YYYY-MM-DD"""
  due_date: Date

  """The due time of the activity in UTC. Format: HH:MM"""
  due_time: String

  """The duration of the activity. Format: HH:MM"""
  duration: String

  """The ID of the deal this activity is associated with"""
  deal_id: Int

  """The ID of the lead in the UUID format this activity is associated with"""
  lead_id: UUID

  """The ID of the person this activity is associated with"""
  person_id: Int

  """The ID of the organization this activity is associated with"""
  org_id: Int

  """The note of the activity (HTML format)"""
  note: String

  """
  The address of the activity. Pipedrive will automatically check if the location matches a geo-location on Google maps.
  """
  location: String

  """
  Additional details about the activity that is synced to your external calendar. Unlike the note added to the activity, the description is publicly visible to any guests added to the activity.
  """
  public_description: String

  """The activity ID, generated when the activity was created"""
  id: Int

  """Whether the activity is done or not"""
  done: Boolean

  """The subject of the activity"""
  subject: String

  """
  The type of the activity. This is in correlation with the `key_string` parameter of ActivityTypes.
  """
  type: String

  """The ID of the user whom the activity is assigned to"""
  user_id: Int

  """
  List of multiple persons (participants) this activity is associated with
  """
  participants: [JSON]

  """
  Marks if the activity is set as 'Busy' or 'Free'. If the flag is set to `true`, your customers will not be able to book that time slot through any Scheduler links. The flag can also be unset. When the value of the flag is unset (`null`), the flag defaults to 'Busy' if it has a time set, and 'Free' if it is an all-day event without specified time.
  """
  busy_flag: Boolean

  """
  The attendees of the activity. This can be either your existing Pipedrive contacts or an external email address.
  """
  attendees: [JSON]

  """The user's company ID"""
  company_id: Int

  """
  If the activity references some other object, it is indicated here. For example, value `Salesphone` refers to activities created with Caller.
  """
  reference_type: String

  """Together with the `reference_type`, gives the ID of the other object"""
  reference_id: Int

  """The ID of Marketplace app, which is connected to this activity"""
  conference_meeting_client: String

  """The link to join the meeting which is associated with this activity"""
  conference_meeting_url: String

  """
  The meeting ID of the meeting provider (Zoom, MS Teams etc.) that is associated with this activity
  """
  conference_meeting_id: String

  """
  The creation date and time of the activity in UTC. Format: YYYY-MM-DD HH:MM:SS.
  """
  add_time: String

  """
  The date and time this activity was marked as done. Format: YYYY-MM-DD HH:MM:SS.
  """
  marked_as_done_time: String

  """
  The date and time of latest notifications sent about this activity to the participants or the attendees of this activity
  """
  last_notification_time: String

  """
  The ID of the user who triggered the sending of the latest notifications about this activity to the participants or the attendees of this activity
  """
  last_notification_user_id: Int

  """The ID of the language the notifications are sent in"""
  notification_language_id: Int

  """Whether the activity is active or not"""
  active_flag: Boolean

  """
  The last update date and time of the activity. Format: YYYY-MM-DD HH:MM:SS.
  """
  update_time: String

  """The ID of the user who was the last to update this activity"""
  update_user_id: Int

  """
  For the activity which syncs to Google calendar, this is the Google event ID. NB! This field is related to old Google calendar sync and will be deprecated soon.
  """
  gcal_event_id: String

  """
  The Google calendar ID that this activity syncs to. NB! This field is related to old Google calendar sync and will be deprecated soon.
  """
  google_calendar_id: String

  """
  The Google calendar API etag (version) that is used for syncing this activity. NB! This field is related to old Google calendar sync and will be deprecated soon.
  """
  google_calendar_etag: String

  """
  For activities that sync to an external calendar, this setting indicates if the activity syncs with context (what are the deals, persons, organizations this activity is related to)
  """
  calendar_sync_include_context: String

  """The timezone the activity was created in an external calendar"""
  source_timezone: String

  """
  The rule for the recurrence of the activity. Is important for activities synced into Pipedrive from an external calendar. Example: "RRULE:FREQ=WEEKLY;BYDAY=WE"
  """
  rec_rule: String

  """
  Additional rules for the recurrence of the activity, extend the `rec_rule`. Is important for activities synced into Pipedrive from an external calendar.
  """
  rec_rule_extension: String

  """
  The ID of parent activity for a recurrent activity if the current activity is an exception to recurrence rules
  """
  rec_master_activity_id: Int

  """
  The list of recurring activity instances. It is in a structure as follows: `[{due_date: "2020-06-24", due_time: "10:00:00"}]`
  """
  series: [JSON]

  """The ID of the user who created the activity"""
  created_by_user_id: Int

  """Subfield of location field. Indicates apartment/suite number."""
  location_subpremise: String

  """Subfield of location field. Indicates house number."""
  location_street_number: String

  """Subfield of location field. Indicates street name."""
  location_route: String

  """Subfield of location field. Indicates district/sublocality."""
  location_sublocality: String

  """Subfield of location field. Indicates city/town/village/locality."""
  location_locality: String

  """Subfield of location field. Indicates state/county."""
  location_admin_area_level_1: String

  """Subfield of location field. Indicates region."""
  location_admin_area_level_2: String

  """Subfield of location field. Indicates country."""
  location_country: String

  """Subfield of location field. Indicates ZIP/postal code."""
  location_postal_code: String

  """Subfield of location field. Indicates full/combined address."""
  location_formatted_address: String

  """The name of the organization this activity is associated with"""
  org_name: String

  """The name of the person this activity is associated with"""
  person_name: String

  """The name of the deal this activity is associated with"""
  deal_title: String

  """The name of the user this activity is owned by"""
  owner_name: String

  """The BCC email address of the person"""
  person_dropbox_bcc: String

  """The BCC email address of the deal"""
  deal_dropbox_bcc: String

  """
  The ID of the user to whom the activity is assigned to. Equal to `user_id`.
  """
  assigned_to_user_id: Int
  file: JSON
}

type query_getPersonActivities_allOf_1_additional_data {
  activity_distribution: query_getPersonActivities_allOf_1_additional_data_allOf_0_activity_distribution

  """Pagination start"""
  start: Int

  """Items shown per page"""
  limit: Int

  """If there are more list items in the collection than displayed or not"""
  more_items_in_collection: Boolean
}

"""
The distribution of activities related to the organization grouped by the user ID
"""
type query_getPersonActivities_allOf_1_additional_data_allOf_0_activity_distribution {
  ASSIGNED_TO_USER_ID: query_getPersonActivities_allOf_1_additional_data_allOf_0_activity_distribution_ASSIGNED_TO_USER_ID
}

"""The ID of the user"""
type query_getPersonActivities_allOf_1_additional_data_allOf_0_activity_distribution_ASSIGNED_TO_USER_ID {
  activities: query_getPersonActivities_allOf_1_additional_data_allOf_0_activity_distribution_ASSIGNED_TO_USER_ID_activities

  """The name of the user"""
  name: String

  """The overall count of activities for the user"""
  activity_count: Int

  """The percentage of activities belongs to the user"""
  share: Int
}

"""The count of activities related to the user grouped by activity type"""
type query_getPersonActivities_allOf_1_additional_data_allOf_0_activity_distribution_ASSIGNED_TO_USER_ID_activities {
  """The count of activities related to a specific type"""
  ACTIVITY_TYPE_NAME: Int
}

"""
Whether the activity is done or not. 0 = Not done, 1 = Done. If omitted, returns both Done and Not done activities.
"""
enum queryInput_getPersonActivities_done {
  _0
  _1
}

type query_getPersonDeals {
  """If the response is successful or not"""
  success: Boolean

  """The array of deals"""
  data: [query_getPersonDeals_allOf_1_data_items]
  additional_data: query_getPersonDeals_allOf_1_additional_data
  related_objects: query_getPersonDeals_allOf_1_related_objects
}

type query_getPersonDeals_allOf_1_data_items {
  """The ID of the deal"""
  id: Int
  creator_user_id: query_getPersonDeals_allOf_1_data_items_allOf_0_creator_user_id
  user_id: query_getPersonDeals_allOf_1_data_items_allOf_0_user_id
  person_id: query_getPersonDeals_allOf_1_data_items_allOf_0_person_id
  org_id: query_getPersonDeals_allOf_1_data_items_allOf_0_org_id

  """The ID of the deal stage"""
  stage_id: Int

  """The title of the deal"""
  title: String

  """The value of the deal"""
  value: Float

  """The currency associated with the deal"""
  currency: String

  """The creation date and time of the deal"""
  add_time: String

  """The last updated date and time of the deal"""
  update_time: String

  """The last updated date and time of the deal stage"""
  stage_change_time: String

  """Whether the deal is active or not"""
  active: Boolean

  """Whether the deal is deleted or not"""
  deleted: Boolean

  """The status of the deal"""
  status: String

  """The success probability percentage of the deal"""
  probability: Float

  """The date of the next activity associated with the deal"""
  next_activity_date: String

  """The time of the next activity associated with the deal"""
  next_activity_time: String

  """The ID of the next activity associated with the deal"""
  next_activity_id: Int

  """The ID of the last activity associated with the deal"""
  last_activity_id: Int

  """The date of the last activity associated with the deal"""
  last_activity_date: String

  """The reason for losing the deal"""
  lost_reason: String

  """The visibility of the deal"""
  visible_to: String

  """The date and time of closing the deal"""
  close_time: String

  """The ID of pipeline associated with the deal"""
  pipeline_id: Int

  """The date and time of changing the deal status as won"""
  won_time: String

  """The date and time of the first time changing the deal status as won"""
  first_won_time: String

  """The date and time of changing the deal status as lost"""
  lost_time: String

  """The number of products associated with the deal"""
  products_count: Int

  """The number of files associated with the deal"""
  files_count: Int

  """The number of notes associated with the deal"""
  notes_count: Int

  """The number of followers associated with the deal"""
  followers_count: Int

  """The number of emails associated with the deal"""
  email_messages_count: Int

  """The number of activities associated with the deal"""
  activities_count: Int

  """The number of completed activities associated with the deal"""
  done_activities_count: Int

  """The number of incomplete activities associated with the deal"""
  undone_activities_count: Int

  """The number of participants associated with the deal"""
  participants_count: Int

  """The expected close date of the deal"""
  expected_close_date: Date

  """The date and time of the last incoming email associated with the deal"""
  last_incoming_mail_time: String

  """The date and time of the last outgoing email associated with the deal"""
  last_outgoing_mail_time: String

  """The label assigned to the deal"""
  label: Int

  """The order number of the deal stage associated with the deal"""
  stage_order_nr: Int

  """The name of the person associated with the deal"""
  person_name: String

  """The name of the organization associated with the deal"""
  org_name: String

  """The subject of the next activity associated with the deal"""
  next_activity_subject: String

  """The type of the next activity associated with the deal"""
  next_activity_type: String

  """The duration of the next activity associated with the deal"""
  next_activity_duration: String

  """The note of the next activity associated with the deal"""
  next_activity_note: String

  """The deal value formatted with selected currency. E.g. US$500"""
  formatted_value: String

  """
  Probability times deal value. Probability can either be deal probability or if not set, then stage probability.
  """
  weighted_value: Float

  """The weighted_value formatted with selected currency. E.g. US$500"""
  formatted_weighted_value: String

  """The currency associated with the deal"""
  weighted_value_currency: String

  """The date and time of changing the deal status as rotten"""
  rotten_time: String

  """The name of the deal owner"""
  owner_name: String

  """The BCC email of the deal"""
  cc_email: String

  """If the organization that is associated with the deal is hidden or not"""
  org_hidden: Boolean

  """If the person that is associated with the deal is hidden or not"""
  person_hidden: Boolean
}

"""The creator of the deal"""
type query_getPersonDeals_allOf_1_data_items_allOf_0_creator_user_id {
  """The ID of the deal creator"""
  id: Int

  """The name of the deal creator"""
  name: String

  """The email of the deal creator"""
  email: String

  """If the creator has a picture or not"""
  has_pic: Boolean

  """The creator picture hash"""
  pic_hash: String

  """Whether the creator is active or not"""
  active_flag: Boolean

  """The ID of the deal creator"""
  value: Int
}

type query_getPersonDeals_allOf_1_data_items_allOf_0_user_id {
  """The ID of the user"""
  id: Int

  """The name of the user"""
  name: String

  """The email of the user"""
  email: String

  """If the user has a picture or not"""
  has_pic: Boolean

  """The user picture hash"""
  pic_hash: String

  """Whether the user is active or not"""
  active_flag: Boolean

  """The ID of the user"""
  value: Int
}

type query_getPersonDeals_allOf_1_data_items_allOf_0_person_id {
  """Whether the associated person is active or not"""
  active_flag: Boolean

  """The name of the person associated with the deal"""
  name: String

  """The emails of the person associated with the deal"""
  email: [query_getPersonDeals_allOf_1_data_items_allOf_0_person_id_allOf_0_email_items]

  """The phone numbers of the person associated with the deal"""
  phone: [query_getPersonDeals_allOf_1_data_items_allOf_0_person_id_allOf_0_phone_items]

  """The ID of the owner of the person that is associated with the deal"""
  owner_id: Int

  """The ID of the person associated with the deal"""
  value: Int
}

type query_getPersonDeals_allOf_1_data_items_allOf_0_person_id_allOf_0_email_items {
  """The type of the email"""
  label: String

  """The email of the associated person"""
  value: String

  """If this is the primary email or not"""
  primary: Boolean
}

type query_getPersonDeals_allOf_1_data_items_allOf_0_person_id_allOf_0_phone_items {
  """The type of the phone number"""
  label: String

  """The phone number of the person associated with the deal"""
  value: String

  """If this is the primary phone number or not"""
  primary: Boolean
}

type query_getPersonDeals_allOf_1_data_items_allOf_0_org_id {
  """The name of the organization associated with the deal"""
  name: String

  """
  The number of people connected with the organization that is associated with the deal
  """
  people_count: Int

  """
  The ID of the owner of the organization that is associated with the deal
  """
  owner_id: Int

  """The address of the organization that is associated with the deal"""
  address: String

  """Whether the associated organization is active or not"""
  active_flag: Boolean

  """The BCC email of the organization associated with the deal"""
  cc_email: String

  """The ID of the organization associated with the deal"""
  value: Int
}

"""The additional data of the list"""
type query_getPersonDeals_allOf_1_additional_data {
  """Pagination start"""
  start: Int

  """Items shown per page"""
  limit: Int

  """If there are more list items in the collection than displayed or not"""
  more_items_in_collection: Boolean
}

type query_getPersonDeals_allOf_1_related_objects {
  organization: query_getPersonDeals_allOf_1_related_objects_organization
  person: query_getPersonDeals_allOf_1_related_objects_person
  user: query_getPersonDeals_allOf_1_related_objects_user
  stage: query_getPersonDeals_allOf_1_related_objects_stage
  pipeline: query_getPersonDeals_allOf_1_related_objects_pipeline
}

type query_getPersonDeals_allOf_1_related_objects_organization {
  ORGANIZATION_ID: query_getPersonDeals_allOf_1_related_objects_organization_ORGANIZATION_ID
}

"""The ID of the organization associated with the item"""
type query_getPersonDeals_allOf_1_related_objects_organization_ORGANIZATION_ID {
  """Whether the associated organization is active or not"""
  active_flag: Boolean

  """The ID of the organization associated with the item"""
  id: Int

  """The name of the organization associated with the item"""
  name: String

  """
  The number of people connected with the organization that is associated with the item
  """
  people_count: Int

  """
  The ID of the owner of the organization that is associated with the item
  """
  owner_id: Int

  """The address of the organization"""
  address: String

  """The BCC email of the organization associated with the item"""
  cc_email: String
}

type query_getPersonDeals_allOf_1_related_objects_person {
  PERSON_ID: query_getPersonDeals_allOf_1_related_objects_person_PERSON_ID
}

"""The ID of the person associated with the item"""
type query_getPersonDeals_allOf_1_related_objects_person_PERSON_ID {
  """Whether the associated person is active or not"""
  active_flag: Boolean

  """The ID of the person associated with the item"""
  id: Int

  """The name of the person associated with the item"""
  name: String

  """The emails of the person associated with the item"""
  email: [query_getPersonDeals_allOf_1_related_objects_person_PERSON_ID_allOf_1_email_items]

  """The phone numbers of the person associated with the item"""
  phone: [query_getPersonDeals_allOf_1_related_objects_person_PERSON_ID_allOf_1_phone_items]

  """The ID of the owner of the person that is associated with the item"""
  owner_id: Int
}

type query_getPersonDeals_allOf_1_related_objects_person_PERSON_ID_allOf_1_email_items {
  """The type of the email"""
  label: String

  """The email of the associated person"""
  value: String

  """Whether this is the primary email or not"""
  primary: Boolean
}

type query_getPersonDeals_allOf_1_related_objects_person_PERSON_ID_allOf_1_phone_items {
  """The type of the phone number"""
  label: String

  """The phone number of the person associated with the item"""
  value: String

  """Whether this is the primary phone number or not"""
  primary: Boolean
}

type query_getPersonDeals_allOf_1_related_objects_user {
  USER_ID: query_getPersonDeals_allOf_1_related_objects_user_USER_ID
}

type query_getPersonDeals_allOf_1_related_objects_user_USER_ID {
  """The ID of the user"""
  id: Int

  """The name of the user"""
  name: String

  """The email of the user"""
  email: String

  """Whether the user has picture or not. 0 = No picture, 1 = Has picture."""
  has_pic: Int

  """The user picture hash"""
  pic_hash: String

  """Whether the user is active or not"""
  active_flag: Boolean
  JSON: JSON
}

type query_getPersonDeals_allOf_1_related_objects_stage {
  """The ID of the stage"""
  id: Int

  """Defines the order of the stage"""
  order_nr: Int

  """The name of the stage"""
  name: String

  """Whether the stage is active or deleted"""
  active_flag: Boolean

  """
  The success probability percentage of the deal. Used/shown when the deal weighted values are used.
  """
  deal_probability: Int

  """The ID of the pipeline to add the stage to"""
  pipeline_id: Int

  """Whether deals in this stage can become rotten"""
  rotten_flag: Boolean

  """
  The number of days the deals not updated in this stage would become rotten. Applies only if the `rotten_flag` is set.
  """
  rotten_days: Int

  """The stage creation time. Format: YYYY-MM-DD HH:MM:SS."""
  add_time: String

  """The stage update time. Format: YYYY-MM-DD HH:MM:SS."""
  update_time: String
}

type query_getPersonDeals_allOf_1_related_objects_pipeline {
  """The ID of the pipeline"""
  id: Int

  """The name of the pipeline"""
  name: String

  """The pipeline title displayed in the URL"""
  url_title: String

  """
  Defines the order of pipelines. First order (`order_nr=0`) is the default pipeline.
  """
  order_nr: Int

  """Whether this pipeline will be made inactive (hidden) or active"""
  active: Boolean

  """Whether deal probability is disabled or enabled for this pipeline"""
  deal_probability: Boolean

  """The pipeline creation time. Format: YYYY-MM-DD HH:MM:SS."""
  add_time: String

  """The pipeline update time. Format: YYYY-MM-DD HH:MM:SS."""
  update_time: String
}

"""
Only fetch deals with a specific status. If omitted, all not deleted deals are returned. If set to deleted, deals that have been deleted up to 30 days ago will be included.
"""
enum queryInput_getPersonDeals_status {
  open
  won
  lost
  deleted
  all_not_deleted
}

type query_getPersonFiles {
  """If the response is successful or not"""
  success: Boolean

  """The array of files"""
  data: [query_getPersonFiles_allOf_1_data_items]
  additional_data: query_getPersonFiles_allOf_1_additional_data
}

"""The file data"""
type query_getPersonFiles_allOf_1_data_items {
  """The ID of the file"""
  id: Int

  """The ID of the user to associate the file with"""
  user_id: Int

  """The ID of the deal to associate the file with"""
  deal_id: Int

  """The ID of the person to associate the file with"""
  person_id: Int

  """The ID of the organization to associate the file with"""
  org_id: Int

  """The ID of the product to associate the file with"""
  product_id: Int

  """The ID of the activity to associate the file with"""
  activity_id: Int

  """The ID of the lead to associate the file with"""
  lead_id: UUID

  """
  The date and time when the file was added/created. Format: YYYY-MM-DD HH:MM:SS
  """
  add_time: String

  """
  The last updated date and time of the file. Format: YYYY-MM-DD HH:MM:SS
  """
  update_time: String

  """The original name of the file"""
  file_name: String

  """The size of the file"""
  file_size: Int

  """
  Whether the user is active or not. false = Not activated, true = Activated
  """
  active_flag: Boolean

  """Whether the file was uploaded as inline or not"""
  inline_flag: Boolean

  """
  The location type to send the file to. Only googledrive is supported at the moment.
  """
  remote_location: String

  """The ID of the remote item"""
  remote_id: String

  """The ID of the inline attachment"""
  cid: String

  """The location of the cloud storage"""
  s3_bucket: String

  """The ID of the mail message to associate the file with"""
  mail_message_id: String

  """The ID of the mail template to associate the file with"""
  mail_template_id: String

  """The name of the deal associated with the dile"""
  deal_name: String

  """The name of the person associated with the file"""
  person_name: String

  """The name of the organization associated with the file"""
  org_name: String

  """The name of the product associated with the file"""
  product_name: String

  """The name of the lead associated with the file"""
  lead_name: String

  """The URL of the download file"""
  url: String

  """The visible name of the file"""
  name: String

  """The description of the file"""
  description: String
}

"""The additional data of the list"""
type query_getPersonFiles_allOf_1_additional_data {
  """Pagination start"""
  start: Int

  """Items shown per page"""
  limit: Int

  """If there are more list items in the collection than displayed or not"""
  more_items_in_collection: Boolean
}

type getAssociatedPersonUpdates {
  """If the response is successful or not"""
  success: Boolean
  data: [query_getPersonUpdates_allOf_1_data_items]
  additional_data: query_getPersonUpdates_allOf_1_additional_data
  related_objects: query_getPersonUpdates_allOf_1_related_objects
}

type query_getPersonUpdates_allOf_1_data_items {
  """
  The type of the person update. (Possible object types - personChange, note, activity, file)
  """
  object: String

  """The creation date and time of the update"""
  timestamp: String
  data: JSON
}

"""The additional data of the list"""
type query_getPersonUpdates_allOf_1_additional_data {
  """Pagination start"""
  start: Int

  """Items shown per page"""
  limit: Int

  """If there are more list items in the collection than displayed or not"""
  more_items_in_collection: Boolean
}

type query_getPersonUpdates_allOf_1_related_objects {
  deal: query_getPersonUpdates_allOf_1_related_objects_deal
  organization: query_getPersonUpdates_allOf_1_related_objects_organization
  user: query_getPersonUpdates_allOf_1_related_objects_user
  person: query_getPersonUpdates_allOf_1_related_objects_person
}

type query_getPersonUpdates_allOf_1_related_objects_deal {
  DEAL_ID: query_getPersonUpdates_allOf_1_related_objects_deal_DEAL_ID
}

"""The ID of the deal which is associated with the item"""
type query_getPersonUpdates_allOf_1_related_objects_deal_DEAL_ID {
  """The ID of the deal associated with the item"""
  id: Int

  """The title of the deal associated with the item"""
  title: String

  """The status of the deal associated with the item"""
  status: String

  """The value of the deal that is associated with the item"""
  value: Float

  """The currency of the deal value"""
  currency: String

  """The ID of the stage the deal is currently at"""
  stage_id: Int

  """The ID of the pipeline the deal is in"""
  pipeline_id: Int
}

type query_getPersonUpdates_allOf_1_related_objects_organization {
  ORGANIZATION_ID: query_getPersonUpdates_allOf_1_related_objects_organization_ORGANIZATION_ID
}

"""The ID of the organization associated with the item"""
type query_getPersonUpdates_allOf_1_related_objects_organization_ORGANIZATION_ID {
  """The ID of the organization associated with the item"""
  id: Int

  """The name of the organization associated with the item"""
  name: String

  """
  The number of people connected with the organization that is associated with the item
  """
  people_count: Int

  """
  The ID of the owner of the organization that is associated with the item
  """
  owner_id: Int

  """The address of the organization"""
  address: String

  """The BCC email of the organization associated with the item"""
  cc_email: String
}

type query_getPersonUpdates_allOf_1_related_objects_user {
  USER_ID: query_getPersonUpdates_allOf_1_related_objects_user_USER_ID
}

type query_getPersonUpdates_allOf_1_related_objects_user_USER_ID {
  """The ID of the user"""
  id: Int

  """The name of the user"""
  name: String

  """The email of the user"""
  email: String

  """Whether the user has picture or not. 0 = No picture, 1 = Has picture."""
  has_pic: Int

  """The user picture hash"""
  pic_hash: String

  """Whether the user is active or not"""
  active_flag: Boolean
  JSON: JSON
}

type query_getPersonUpdates_allOf_1_related_objects_person {
  PERSON_ID: query_getPersonUpdates_allOf_1_related_objects_person_PERSON_ID
}

"""The ID of the person associated with the item"""
type query_getPersonUpdates_allOf_1_related_objects_person_PERSON_ID {
  """Whether the associated person is active or not"""
  active_flag: Boolean

  """The ID of the person associated with the item"""
  id: Int

  """The name of the person associated with the item"""
  name: String

  """The emails of the person associated with the item"""
  email: [query_getPersonUpdates_allOf_1_related_objects_person_PERSON_ID_allOf_1_email_items]

  """The phone numbers of the person associated with the item"""
  phone: [query_getPersonUpdates_allOf_1_related_objects_person_PERSON_ID_allOf_1_phone_items]

  """The ID of the owner of the person that is associated with the item"""
  owner_id: Int
}

type query_getPersonUpdates_allOf_1_related_objects_person_PERSON_ID_allOf_1_email_items {
  """The type of the email"""
  label: String

  """The email of the associated person"""
  value: String

  """Whether this is the primary email or not"""
  primary: Boolean
}

type query_getPersonUpdates_allOf_1_related_objects_person_PERSON_ID_allOf_1_phone_items {
  """The type of the phone number"""
  label: String

  """The phone number of the person associated with the item"""
  value: String

  """Whether this is the primary phone number or not"""
  primary: Boolean
}

type query_getPersonFollowers {
  """If the response is successful or not"""
  success: Boolean

  """The list of followers"""
  data: [query_getPersonFollowers_allOf_1_data_items]
  additional_data: query_getPersonFollowers_allOf_1_additional_data
}

type query_getPersonFollowers_allOf_1_data_items {
  """The ID of the user"""
  user_id: Int

  """The ID of the user follower"""
  id: Int

  """The ID of the deal which the follower was added to"""
  deal_id: Int

  """The date and time when the follower was added to the person"""
  add_time: String
}

"""The additional data of the list"""
type query_getPersonFollowers_allOf_1_additional_data {
  """Pagination start"""
  start: Int

  """Items shown per page"""
  limit: Int

  """If there are more list items in the collection than displayed or not"""
  more_items_in_collection: Boolean
}

type query_getPersonMailMessages {
  """If the response is successful or not"""
  success: Boolean

  """The array of mail messages"""
  data: [query_getPersonMailMessages_allOf_1_data_items]
  additional_data: query_getPersonMailMessages_allOf_1_additional_data
}

type query_getPersonMailMessages_allOf_1_data_items {
  """The type of the data item"""
  object: String

  """The date and time when the item was created"""
  timestamp: String
  data: query_getPersonMailMessages_allOf_1_data_items_data
}

type query_getPersonMailMessages_allOf_1_data_items_data {
  """ID of the mail message."""
  id: Int

  """The array of mail message sender (object)"""
  from: [query_getPersonMailMessages_allOf_1_data_items_data_allOf_0_from_items]

  """The array of mail message receiver (object)"""
  to: [query_getPersonMailMessages_allOf_1_data_items_data_allOf_0_to_items]

  """The array of mail message copies (object)"""
  cc: [query_getPersonMailMessages_allOf_1_data_items_data_allOf_0_cc_items]

  """The array of mail message blind copies (object)"""
  bcc: [query_getPersonMailMessages_allOf_1_data_items_data_allOf_0_bcc_items]

  """The mail message body URL"""
  body_url: String

  """The connection account ID"""
  account_id: String

  """ID of the user whom mail message will be assigned to"""
  user_id: Int

  """ID of the mail message thread"""
  mail_thread_id: Int

  """The subject of mail message"""
  subject: String

  """The snippet of mail message. Snippet length is up to 225 characters."""
  snippet: String
  mail_tracking_status: query_getPersonMailMessages_allOf_1_data_items_data_allOf_0_mail_tracking_status
  mail_link_tracking_enabled_flag: numberBooleanDefault093
  read_flag: numberBooleanDefault094

  """
  If the mail message has a draft status then the value is the mail message object as JSON formatted string, otherwise `null`.
  """
  draft: String
  draft_flag: numberBooleanDefault095
  synced_flag: numberBooleanDefault096
  deleted_flag: numberBooleanDefault097
  has_body_flag: numberBooleanDefault098
  sent_flag: numberBooleanDefault099
  sent_from_pipedrive_flag: numberBooleanDefault0100
  smart_bcc_flag: numberBooleanDefault0101

  """Creation or receival time of the mail message"""
  message_time: DateTime

  """The insertion into the database time of the mail message"""
  add_time: DateTime

  """The updating time in the database of the mail message"""
  update_time: DateTime
  has_attachments_flag: numberBooleanDefault0102
  has_inline_attachments_flag: numberBooleanDefault0103
  has_real_attachments_flag: numberBooleanDefault0104

  """The Mail Message ID assigned by the sync provider"""
  nylas_id: String

  """The name of the S3 bucket"""
  s3_bucket: String

  """The path of the S3 bucket"""
  s3_bucket_path: String

  """If the Mail Message has been deleted on the provider side or not"""
  external_deleted_flag: Boolean

  """The Mail Message ID assigned by the mail user agent"""
  mua_message_id: String

  """The ID of the mail template"""
  template_id: Int

  """The add date and time of the Mail Message"""
  timestamp: String

  """The type of the data item"""
  item_type: String

  """The ID of the company"""
  company_id: Int
}

type query_getPersonMailMessages_allOf_1_data_items_data_allOf_0_from_items {
  """ID of the mail participant"""
  id: Int

  """Mail address of the mail participant"""
  email_address: String

  """Name of the mail participant"""
  name: String

  """ID of the linked person to the mail message"""
  linked_person_id: Int

  """Name of the linked person to the mail message"""
  linked_person_name: String

  """ID of the mail message participant"""
  mail_message_party_id: Int
}

type query_getPersonMailMessages_allOf_1_data_items_data_allOf_0_to_items {
  """ID of the mail participant"""
  id: Int

  """Mail address of the mail participant"""
  email_address: String

  """Name of the mail participant"""
  name: String

  """ID of the linked person to the mail message"""
  linked_person_id: Int

  """Name of the linked person to the mail message"""
  linked_person_name: String

  """ID of the mail message participant"""
  mail_message_party_id: Int
}

type query_getPersonMailMessages_allOf_1_data_items_data_allOf_0_cc_items {
  """ID of the mail participant"""
  id: Int

  """Mail address of the mail participant"""
  email_address: String

  """Name of the mail participant"""
  name: String

  """ID of the linked person to the mail message"""
  linked_person_id: Int

  """Name of the linked person to the mail message"""
  linked_person_name: String

  """ID of the mail message participant"""
  mail_message_party_id: Int
}

type query_getPersonMailMessages_allOf_1_data_items_data_allOf_0_bcc_items {
  """ID of the mail participant"""
  id: Int

  """Mail address of the mail participant"""
  email_address: String

  """Name of the mail participant"""
  name: String

  """ID of the linked person to the mail message"""
  linked_person_id: Int

  """Name of the linked person to the mail message"""
  linked_person_name: String

  """ID of the mail message participant"""
  mail_message_party_id: Int
}

"""
The status of tracking mail message. Value is `null` if tracking is not enabled.
"""
enum query_getPersonMailMessages_allOf_1_data_items_data_allOf_0_mail_tracking_status {
  opened
  not_opened
}

enum numberBooleanDefault093 {
  _0
  _1
}

enum numberBooleanDefault094 {
  _0
  _1
}

enum numberBooleanDefault095 {
  _0
  _1
}

enum numberBooleanDefault096 {
  _0
  _1
}

enum numberBooleanDefault097 {
  _0
  _1
}

enum numberBooleanDefault098 {
  _0
  _1
}

enum numberBooleanDefault099 {
  _0
  _1
}

enum numberBooleanDefault0100 {
  _0
  _1
}

enum numberBooleanDefault0101 {
  _0
  _1
}

enum numberBooleanDefault0102 {
  _0
  _1
}

enum numberBooleanDefault0103 {
  _0
  _1
}

enum numberBooleanDefault0104 {
  _0
  _1
}

"""The additional data of the list"""
type query_getPersonMailMessages_allOf_1_additional_data {
  """Pagination start"""
  start: Int

  """Items shown per page"""
  limit: Int

  """If there are more list items in the collection than displayed or not"""
  more_items_in_collection: Boolean
}

type query_getPersonUsers {
  """If the response is successful or not"""
  success: Boolean

  """The list of permitted user IDs"""
  data: [Float]
}

type getPersonProducts {
  """If the response is successful or not"""
  success: Boolean

  """The array of deal products"""
  data: [query_getPersonProducts_allOf_1_data_items]
  additional_data: query_getPersonProducts_allOf_1_additional_data
}

type query_getPersonProducts_allOf_1_data_items {
  DEAL_ID: query_getPersonProducts_allOf_1_data_items_DEAL_ID
}

type query_getPersonProducts_allOf_1_data_items_DEAL_ID {
  deal: query_getPersonProducts_allOf_1_data_items_DEAL_ID_deal
  product: query_getPersonProducts_allOf_1_data_items_DEAL_ID_product
}

type query_getPersonProducts_allOf_1_data_items_DEAL_ID_deal {
  """The ID of the deal"""
  id: Int

  """The ID of the company"""
  company_id: Int

  """The ID of the deal creator"""
  creator_user_id: Int

  """The ID of the user"""
  user_id: Int

  """The ID of the person associated with the deal"""
  person_id: Int

  """The ID of the organization associated with the deal"""
  org_id: Int

  """The ID of the deal stage"""
  stage_id: Int

  """The title of the deal"""
  title: String

  """The value of the deal"""
  value: Float

  """The currency associated with the deal"""
  currency: String

  """The creation date and time of the deal"""
  add_time: String

  """The first creation date and time of the deal"""
  first_add_time: String

  """The last updated date and time of the deal"""
  update_time: String

  """The last updated date and time of the deal stage"""
  stage_change_time: String

  """Whether the deal is active or not"""
  active: Boolean

  """Whether the deal is deleted or not"""
  deleted: Boolean

  """The status of the deal"""
  status: String

  """The success probability percentage of the deal"""
  probability: Float

  """The date of the next activity associated with the deal"""
  next_activity_date: String

  """The time of the next activity associated with the deal"""
  next_activity_time: String

  """The ID of the next activity associated with the deal"""
  next_activity_id: Int

  """The ID of the last activity associated with the deal"""
  last_activity_id: Int

  """The date of the last activity associated with the deal"""
  last_activity_date: String

  """The reason for losing the deal"""
  lost_reason: String

  """The visibility of the deal"""
  visible_to: String

  """The date and time of closing the deal"""
  close_time: String

  """The ID of pipeline associated with the deal"""
  pipeline_id: Int

  """The date and time of changing the deal status as won"""
  won_time: String

  """The date and time of the first time changing the deal status as won"""
  first_won_time: String

  """The date and time of changing the deal status as lost"""
  lost_time: String

  """The number of products associated with the deal"""
  products_count: Int

  """The number of files associated with the deal"""
  files_count: Int

  """The number of notes associated with the deal"""
  notes_count: Int

  """The number of followers associated with the deal"""
  followers_count: Int

  """The number of emails associated with the deal"""
  email_messages_count: Int

  """The number of activities associated with the deal"""
  activities_count: Int

  """The number of completed activities associated with the deal"""
  done_activities_count: Int

  """The number of incomplete activities associated with the deal"""
  undone_activities_count: Int

  """The number of participants associated with the deal"""
  participants_count: Int

  """The expected close date of the deal"""
  expected_close_date: Date

  """The date and time of the last incoming email associated with the deal"""
  last_incoming_mail_time: String

  """The date and time of the last outgoing email associated with the deal"""
  last_outgoing_mail_time: String

  """The label assigned to the deal"""
  label: String
}

type query_getPersonProducts_allOf_1_data_items_DEAL_ID_product {
  """The ID of the product"""
  id: Int

  """The ID of the company"""
  company_id: Int

  """The name of the product"""
  name: String

  """The product code"""
  code: String

  """The description of the product"""
  description: String

  """The unit in which this product is sold"""
  unit: String

  """The tax percentage"""
  tax: Float

  """The category of the product"""
  category: String
  active_flag: query_getPersonProducts_allOf_1_data_items_DEAL_ID_product_active_flag
  selectable: query_getPersonProducts_allOf_1_data_items_DEAL_ID_product_selectable

  """The first letter of the product name"""
  first_char: String
  visible_to: query_getPersonProducts_allOf_1_data_items_DEAL_ID_product_visible_to

  """
  The ID of the user who will be marked as the owner of this product. When omitted, the authorized user ID will be used.
  """
  owner_id: Int

  """The count of files"""
  files_count: Int

  """The date and time when the product was added to the deal"""
  add_time: String

  """The date and time when the product was updated to the deal"""
  update_time: String

  """The ID of the deal"""
  deal_id: Int
}

"""Whether this product will be made active or not"""
enum query_getPersonProducts_allOf_1_data_items_DEAL_ID_product_active_flag {
  _0
  _1
}

"""Whether this product can be selected in deals or not"""
enum query_getPersonProducts_allOf_1_data_items_DEAL_ID_product_selectable {
  _0
  _1
}

enum query_getPersonProducts_allOf_1_data_items_DEAL_ID_product_visible_to {
  _1
  _3
  _5
  _7
}

type query_getPersonProducts_allOf_1_additional_data {
  pagination: query_getPersonProducts_allOf_1_additional_data_pagination
}

"""Pagination details of the list"""
type query_getPersonProducts_allOf_1_additional_data_pagination {
  """Pagination start"""
  start: Int

  """Items shown per page"""
  limit: Int

  """Whether there are more list items in the collection than displayed"""
  more_items_in_collection: Boolean

  """Next pagination start"""
  next_start: Int
}

type query_getPersonFields {
  """If the response is successful or not"""
  success: Boolean
  data: [query_getPersonFields_allOf_1_data_items]
  additional_data: query_getPersonFields_allOf_1_additional_data
}

type query_getPersonFields_allOf_1_data_items {
  """The ID of the field. Value is `null` in case of subfields."""
  id: Int

  """
  The key of the field. For custom fields this is generated upon creation.
  """
  key: String

  """The name of the field"""
  name: String

  """The order number of the field"""
  order_nr: Int
  field_type: query_getPersonFields_allOf_1_data_items_field_type

  """The creation time of the field"""
  add_time: String

  """The update time of the field"""
  update_time: String

  """
  The ID of the user who created or most recently updated the field, only applicable for custom fields
  """
  last_updated_by_user_id: Int

  """The active flag of the field"""
  active_flag: Boolean

  """The edit flag of the field"""
  edit_flag: Boolean

  """Not used"""
  index_visible_flag: Boolean

  """Not used"""
  details_visible_flag: Boolean

  """Not used"""
  add_visible_flag: Boolean

  """Not used"""
  important_flag: Boolean

  """Whether or not the field of an item can be edited in bulk"""
  bulk_edit_allowed: Boolean

  """Whether or not items can be searched by this field"""
  searchable_flag: Boolean

  """Whether or not items can be filtered by this field"""
  filtering_allowed: Boolean

  """Whether or not items can be sorted by this field"""
  sortable_flag: Boolean

  """Whether or not the field is mandatory"""
  mandatory_flag: Boolean

  """
  The options of the field. When there are no options, `null` is returned.
  """
  options: [JSON]

  """
  The deleted options of the field. Only present when there is at least 1 deleted option.
  """
  options_deleted: [JSON]

  """
  Whether or not the field is a subfield of another field. Only present if field is subfield.
  """
  is_subfield: Boolean

  """The subfields of the field. Only present when the field has subfields."""
  subfields: [JSON]
}

"""
The type of the field<table><tr><th>Value</th><th>Description</th></tr><tr><td>`address`</td><td>Address field (has multiple subfields, autocompleted by Google Maps)</td></tr><tr><td>`date`</td><td>Date (format YYYY-MM-DD)</td></tr><tr><td>`daterange`</td><td>Date-range field (has a start date and end date value, both YYYY-MM-DD)</td></tr><tr><td>`double`</td><td>Numeric value</td></tr><tr><td>`enum`</td><td>Options field with a single possible chosen option</td></tr><tr></tr><tr><td>`monetary`</td><td>Monetary field (has a numeric value and a currency value)</td></tr><tr><td>`org`</td><td>Organization field (contains an organization ID which is stored on the same account)</td></tr><tr><td>`people`</td><td>Person field (contains a person ID which is stored on the same account)</td></tr><tr><td>`phone`</td><td>Phone field (up to 255 numbers and/or characters)</td></tr><tr><td>`set`</td><td>Options field with a possibility of having multiple chosen options</td></tr><tr><td>`text`</td><td>Long text (up to 65k characters)</td></tr><tr><td>`time`</td><td>Time field (format HH:MM:SS)</td></tr><tr><td>`timerange`</td><td>Time-range field (has a start time and end time value, both HH:MM:SS)</td></tr><tr><td>`user`</td><td>User field (contains a user ID of another Pipedrive user)</td></tr><tr><td>`varchar`</td><td>Text (up to 255 characters)</td></tr><tr><td>`varchar_auto`</td><td>Autocomplete text (up to 255 characters)</td></tr><tr><td>`visible_to`</td><td>System field that keeps item's visibility setting</td></tr></table>
"""
enum query_getPersonFields_allOf_1_data_items_field_type {
  address
  date
  daterange
  double
  enum
  monetary
  org
  people
  phone
  set
  text
  time
  timerange
  user
  varchar
  varchar_auto
  visible_to
}

"""The additional data of the list"""
type query_getPersonFields_allOf_1_additional_data {
  """Pagination start"""
  start: Int

  """Items shown per page"""
  limit: Int

  """If there are more list items in the collection than displayed or not"""
  more_items_in_collection: Boolean
}

type query_getPersonField {
  """If the response is successful or not"""
  success: Boolean
  data: query_getPersonField_allOf_1_data
}

type query_getPersonField_allOf_1_data {
  """The ID of the field. Value is `null` in case of subfields."""
  id: Int

  """
  The key of the field. For custom fields this is generated upon creation.
  """
  key: String

  """The name of the field"""
  name: String

  """The order number of the field"""
  order_nr: Int
  field_type: query_getPersonField_allOf_1_data_field_type

  """The creation time of the field"""
  add_time: String

  """The update time of the field"""
  update_time: String

  """
  The ID of the user who created or most recently updated the field, only applicable for custom fields
  """
  last_updated_by_user_id: Int

  """The active flag of the field"""
  active_flag: Boolean

  """The edit flag of the field"""
  edit_flag: Boolean

  """Not used"""
  index_visible_flag: Boolean

  """Not used"""
  details_visible_flag: Boolean

  """Not used"""
  add_visible_flag: Boolean

  """Not used"""
  important_flag: Boolean

  """Whether or not the field of an item can be edited in bulk"""
  bulk_edit_allowed: Boolean

  """Whether or not items can be searched by this field"""
  searchable_flag: Boolean

  """Whether or not items can be filtered by this field"""
  filtering_allowed: Boolean

  """Whether or not items can be sorted by this field"""
  sortable_flag: Boolean

  """Whether or not the field is mandatory"""
  mandatory_flag: Boolean

  """
  The options of the field. When there are no options, `null` is returned.
  """
  options: [JSON]

  """
  The deleted options of the field. Only present when there is at least 1 deleted option.
  """
  options_deleted: [JSON]

  """
  Whether or not the field is a subfield of another field. Only present if field is subfield.
  """
  is_subfield: Boolean

  """The subfields of the field. Only present when the field has subfields."""
  subfields: [JSON]
}

"""
The type of the field<table><tr><th>Value</th><th>Description</th></tr><tr><td>`address`</td><td>Address field (has multiple subfields, autocompleted by Google Maps)</td></tr><tr><td>`date`</td><td>Date (format YYYY-MM-DD)</td></tr><tr><td>`daterange`</td><td>Date-range field (has a start date and end date value, both YYYY-MM-DD)</td></tr><tr><td>`double`</td><td>Numeric value</td></tr><tr><td>`enum`</td><td>Options field with a single possible chosen option</td></tr><tr></tr><tr><td>`monetary`</td><td>Monetary field (has a numeric value and a currency value)</td></tr><tr><td>`org`</td><td>Organization field (contains an organization ID which is stored on the same account)</td></tr><tr><td>`people`</td><td>Person field (contains a person ID which is stored on the same account)</td></tr><tr><td>`phone`</td><td>Phone field (up to 255 numbers and/or characters)</td></tr><tr><td>`set`</td><td>Options field with a possibility of having multiple chosen options</td></tr><tr><td>`text`</td><td>Long text (up to 65k characters)</td></tr><tr><td>`time`</td><td>Time field (format HH:MM:SS)</td></tr><tr><td>`timerange`</td><td>Time-range field (has a start time and end time value, both HH:MM:SS)</td></tr><tr><td>`user`</td><td>User field (contains a user ID of another Pipedrive user)</td></tr><tr><td>`varchar`</td><td>Text (up to 255 characters)</td></tr><tr><td>`varchar_auto`</td><td>Autocomplete text (up to 255 characters)</td></tr><tr><td>`visible_to`</td><td>System field that keeps item's visibility setting</td></tr></table>
"""
enum query_getPersonField_allOf_1_data_field_type {
  address
  date
  daterange
  double
  enum
  monetary
  org
  people
  phone
  set
  text
  time
  timerange
  user
  varchar
  varchar_auto
  visible_to
}

type getPipelines {
  """If the response is successful or not"""
  success: Boolean

  """Pipelines array"""
  data: [basePipelineWithSelectedFlag2]
}

type basePipelineWithSelectedFlag2 {
  """The ID of the pipeline"""
  id: Int

  """The name of the pipeline"""
  name: String

  """The pipeline title displayed in the URL"""
  url_title: String

  """
  Defines the order of pipelines. First order (`order_nr=0`) is the default pipeline.
  """
  order_nr: Int

  """Whether this pipeline will be made inactive (hidden) or active"""
  active: Boolean

  """Whether deal probability is disabled or enabled for this pipeline"""
  deal_probability: Boolean

  """The pipeline creation time. Format: YYYY-MM-DD HH:MM:SS."""
  add_time: String

  """The pipeline update time. Format: YYYY-MM-DD HH:MM:SS."""
  update_time: String

  """A boolean that shows if the pipeline is selected from a filter or not"""
  selected: Boolean
}

type getPipeline {
  """If the response is successful or not"""
  success: Boolean
  data: pipelineDetails
}

"""The pipeline object"""
type pipelineDetails {
  """The ID of the pipeline"""
  id: Int

  """The name of the pipeline"""
  name: String

  """The pipeline title displayed in the URL"""
  url_title: String

  """
  Defines the order of pipelines. First order (`order_nr=0`) is the default pipeline.
  """
  order_nr: Int

  """Whether this pipeline will be made inactive (hidden) or active"""
  active: Boolean

  """Whether deal probability is disabled or enabled for this pipeline"""
  deal_probability: Boolean

  """The pipeline creation time. Format: YYYY-MM-DD HH:MM:SS."""
  add_time: String

  """The pipeline update time. Format: YYYY-MM-DD HH:MM:SS."""
  update_time: String

  """A boolean that shows if the pipeline is selected from a filter or not"""
  selected: Boolean
  deals_summary: query_getPipeline_allOf_1_data_allOf_1_deals_summary
}

"""Deals summary"""
type query_getPipeline_allOf_1_data_allOf_1_deals_summary {
  per_stages: query_getPipeline_allOf_1_data_allOf_1_deals_summary_per_stages
  per_currency: query_getPipeline_allOf_1_data_allOf_1_deals_summary_per_currency

  """Deals count"""
  total_count: Int
  per_currency_full: query_getPipeline_allOf_1_data_allOf_1_deals_summary_per_currency_full
}

"""The stage objects containing deals currency information"""
type query_getPipeline_allOf_1_data_allOf_1_deals_summary_per_stages {
  STAGE_ID: query_getPipeline_allOf_1_data_allOf_1_deals_summary_per_stages_STAGE_ID
}

"""
The currency summaries per stage. This parameter is dynamic and changes according to `stage_id` value.
"""
type query_getPipeline_allOf_1_data_allOf_1_deals_summary_per_stages_STAGE_ID {
  CURRENCY_ID: query_getPipeline_allOf_1_data_allOf_1_deals_summary_per_stages_STAGE_ID_CURRENCY_ID
}

"""
The currency summary. This parameter is dynamic and changes according to `currency_id` value.
"""
type query_getPipeline_allOf_1_data_allOf_1_deals_summary_per_stages_STAGE_ID_CURRENCY_ID {
  """Deals count per currency"""
  count: Int

  """Deals value per currency"""
  value: Int

  """Deals value formatted per currency"""
  value_formatted: String

  """Deals weighted value per currency"""
  weighted_value: Int

  """Deals weighted value formatted per currency"""
  weighted_value_formatted: String
}

"""The currency count summary"""
type query_getPipeline_allOf_1_data_allOf_1_deals_summary_per_currency {
  """
  Deals count per currency. This parameter is dynamic and changes according to `currency_id` value.
  """
  CURRENCY_ID: Int
}

"""Full currency summaries"""
type query_getPipeline_allOf_1_data_allOf_1_deals_summary_per_currency_full {
  CURRENCY_ID: query_getPipeline_allOf_1_data_allOf_1_deals_summary_per_currency_full_CURRENCY_ID
}

"""
The currency summary. This parameter is dynamic and changes according to `currency_id` value.
"""
type query_getPipeline_allOf_1_data_allOf_1_deals_summary_per_currency_full_CURRENCY_ID {
  """Deals count per currency"""
  count: Int

  """Deals value per currency"""
  value: Int
}

type getPipelineConversionStatistics {
  """If the response is successful or not"""
  success: Boolean
  data: query_getPipelineConversionStatistics_allOf_1_data
}

"""The pipeline object"""
type query_getPipelineConversionStatistics_allOf_1_data {
  """The stage conversions"""
  stage_conversions: [query_getPipelineConversionStatistics_allOf_1_data_stage_conversions_items]

  """The won conversion"""
  won_conversion: Int

  """The lost conversion"""
  lost_conversion: Int
}

type query_getPipelineConversionStatistics_allOf_1_data_stage_conversions_items {
  """The stage ID from where conversion starts"""
  from_stage_id: Int

  """The stage ID to where conversion ends"""
  to_stage_id: Int

  """The conversion rate"""
  conversion_rate: Int
}

type getStageDeals {
  """If the request was successful or not"""
  success: Boolean

  """The array of deals"""
  data: [query_getPipelineDeals_data_items]
  additional_data: query_getPipelineDeals_additional_data
}

type query_getPipelineDeals_data_items {
  """The ID of the deal"""
  id: Int

  """The ID of the deal creator"""
  creator_user_id: Int

  """The ID of the user"""
  user_id: Int

  """The ID of the person associated with the deal"""
  person_id: Int

  """The ID of the organization associated with the deal"""
  org_id: Int

  """The ID of the deal stage"""
  stage_id: Int

  """The title of the deal"""
  title: String

  """The value of the deal"""
  value: Float

  """The currency associated with the deal"""
  currency: String

  """The creation date and time of the deal"""
  add_time: String

  """The last updated date and time of the deal"""
  update_time: String

  """The last updated date and time of the deal stage"""
  stage_change_time: String

  """Whether the deal is active or not"""
  active: Boolean

  """Whether the deal is deleted or not"""
  deleted: Boolean

  """The status of the deal"""
  status: String

  """The success probability percentage of the deal"""
  probability: Float

  """The date of the next activity associated with the deal"""
  next_activity_date: String

  """The time of the next activity associated with the deal"""
  next_activity_time: String

  """The ID of the next activity associated with the deal"""
  next_activity_id: Int

  """The ID of the last activity associated with the deal"""
  last_activity_id: Int

  """The date of the last activity associated with the deal"""
  last_activity_date: String

  """The reason for losing the deal"""
  lost_reason: String

  """The visibility of the deal"""
  visible_to: String

  """The date and time of closing the deal"""
  close_time: String

  """The ID of pipeline associated with the deal"""
  pipeline_id: Int

  """The date and time of changing the deal status as won"""
  won_time: String

  """The date and time of the first time changing the deal status as won"""
  first_won_time: String

  """The date and time of changing the deal status as lost"""
  lost_time: String

  """The number of products associated with the deal"""
  products_count: Int

  """The number of files associated with the deal"""
  files_count: Int

  """The number of notes associated with the deal"""
  notes_count: Int

  """The number of followers associated with the deal"""
  followers_count: Int

  """The number of emails associated with the deal"""
  email_messages_count: Int

  """The number of activities associated with the deal"""
  activities_count: Int

  """The number of completed activities associated with the deal"""
  done_activities_count: Int

  """The number of incomplete activities associated with the deal"""
  undone_activities_count: Int

  """The number of participants associated with the deal"""
  participants_count: Int

  """The expected close date of the deal"""
  expected_close_date: Date

  """The date and time of the last incoming email associated with the deal"""
  last_incoming_mail_time: String

  """The date and time of the last outgoing email associated with the deal"""
  last_outgoing_mail_time: String

  """The label assigned to the deal"""
  label: Int

  """The order number of the deal stage associated with the deal"""
  stage_order_nr: Int

  """The name of the person associated with the deal"""
  person_name: String

  """The name of the organization associated with the deal"""
  org_name: String

  """The subject of the next activity associated with the deal"""
  next_activity_subject: String

  """The type of the next activity associated with the deal"""
  next_activity_type: String

  """The duration of the next activity associated with the deal"""
  next_activity_duration: String

  """The note of the next activity associated with the deal"""
  next_activity_note: String

  """The deal value formatted with selected currency. E.g. US$500"""
  formatted_value: String

  """
  Probability times deal value. Probability can either be deal probability or if not set, then stage probability.
  """
  weighted_value: Float

  """The weighted_value formatted with selected currency. E.g. US$500"""
  formatted_weighted_value: String

  """The currency associated with the deal"""
  weighted_value_currency: String

  """The date and time of changing the deal status as rotten"""
  rotten_time: String

  """The name of the deal owner"""
  owner_name: String

  """The BCC email of the deal"""
  cc_email: String

  """If the organization that is associated with the deal is hidden or not"""
  org_hidden: Boolean

  """If the person that is associated with the deal is hidden or not"""
  person_hidden: Boolean
}

"""The additional data of the list"""
type query_getPipelineDeals_additional_data {
  """Pagination start"""
  start: Int

  """Items shown per page"""
  limit: Int

  """If there are more list items in the collection than displayed or not"""
  more_items_in_collection: Boolean
}

"""
If supplied, `filter_id` and `user_id` will not be considered – instead, deals owned by everyone will be returned
"""
enum queryInput_getPipelineDeals_everyone {
  _0
  _1
}

"""
Whether to include a summary of the pipeline in the `additional_data` or not
"""
enum queryInput_getPipelineDeals_get_summary {
  _0
  _1
}

type getPipelineMovementStatistics {
  """If the response is successful or not"""
  success: Boolean
  data: query_getPipelineMovementStatistics_allOf_1_data
}

"""The pipeline object"""
type query_getPipelineMovementStatistics_allOf_1_data {
  movements_between_stages: query_getPipelineMovementStatistics_allOf_1_data_movements_between_stages
  new_deals: query_getPipelineMovementStatistics_allOf_1_data_new_deals
  deals_left_open: query_getPipelineMovementStatistics_allOf_1_data_deals_left_open
  won_deals: query_getPipelineMovementStatistics_allOf_1_data_won_deals
  lost_deals: query_getPipelineMovementStatistics_allOf_1_data_lost_deals
  average_age_in_days: query_getPipelineMovementStatistics_allOf_1_data_average_age_in_days
}

"""Movements between stages"""
type query_getPipelineMovementStatistics_allOf_1_data_movements_between_stages {
  """The count of the deals that have been moved between stages"""
  count: Int
}

"""Deals summary"""
type query_getPipelineMovementStatistics_allOf_1_data_new_deals {
  """The count of the deals"""
  count: Int

  """The IDs of the deals that have been moved"""
  deals_ids: [Int]
  values: query_getPipelineMovementStatistics_allOf_1_data_new_deals_values
  formatted_values: query_getPipelineMovementStatistics_allOf_1_data_new_deals_formatted_values
}

"""The values of the deals"""
type query_getPipelineMovementStatistics_allOf_1_data_new_deals_values {
  """The value of the deals"""
  CURRENCY_ID: Int
}

"""The formatted values of the deals"""
type query_getPipelineMovementStatistics_allOf_1_data_new_deals_formatted_values {
  """The formatted values of the deals"""
  CURRENCY_ID: String
}

"""Deals summary"""
type query_getPipelineMovementStatistics_allOf_1_data_deals_left_open {
  """The count of the deals"""
  count: Int

  """The IDs of the deals that have been moved"""
  deals_ids: [Int]
  values: query_getPipelineMovementStatistics_allOf_1_data_deals_left_open_values
  formatted_values: query_getPipelineMovementStatistics_allOf_1_data_deals_left_open_formatted_values
}

"""The values of the deals"""
type query_getPipelineMovementStatistics_allOf_1_data_deals_left_open_values {
  """The value of the deals"""
  CURRENCY_ID: Int
}

"""The formatted values of the deals"""
type query_getPipelineMovementStatistics_allOf_1_data_deals_left_open_formatted_values {
  """The formatted values of the deals"""
  CURRENCY_ID: String
}

"""Deals summary"""
type query_getPipelineMovementStatistics_allOf_1_data_won_deals {
  """The count of the deals"""
  count: Int

  """The IDs of the deals that have been moved"""
  deals_ids: [Int]
  values: query_getPipelineMovementStatistics_allOf_1_data_won_deals_values
  formatted_values: query_getPipelineMovementStatistics_allOf_1_data_won_deals_formatted_values
}

"""The values of the deals"""
type query_getPipelineMovementStatistics_allOf_1_data_won_deals_values {
  """The value of the deals"""
  CURRENCY_ID: Int
}

"""The formatted values of the deals"""
type query_getPipelineMovementStatistics_allOf_1_data_won_deals_formatted_values {
  """The formatted values of the deals"""
  CURRENCY_ID: String
}

"""Deals summary"""
type query_getPipelineMovementStatistics_allOf_1_data_lost_deals {
  """The count of the deals"""
  count: Int

  """The IDs of the deals that have been moved"""
  deals_ids: [Int]
  values: query_getPipelineMovementStatistics_allOf_1_data_lost_deals_values
  formatted_values: query_getPipelineMovementStatistics_allOf_1_data_lost_deals_formatted_values
}

"""The values of the deals"""
type query_getPipelineMovementStatistics_allOf_1_data_lost_deals_values {
  """The value of the deals"""
  CURRENCY_ID: Int
}

"""The formatted values of the deals"""
type query_getPipelineMovementStatistics_allOf_1_data_lost_deals_formatted_values {
  """The formatted values of the deals"""
  CURRENCY_ID: String
}

"""The moved deals average age in days"""
type query_getPipelineMovementStatistics_allOf_1_data_average_age_in_days {
  """The moved deals average age across all stages"""
  across_all_stages: Int

  """The moved deals average age by stages"""
  by_stages: [query_getPipelineMovementStatistics_allOf_1_data_average_age_in_days_by_stages_items]
}

"""The moved deals average age by the stage"""
type query_getPipelineMovementStatistics_allOf_1_data_average_age_in_days_by_stages_items {
  """The stage ID"""
  stage_id: Int

  """The average deals age in specific stage"""
  value: Int
}

type getProducts {
  """If the response is successful or not"""
  success: Boolean

  """Array containing data for all products"""
  data: [query_getProducts_data_items]
  additional_data: query_getProducts_additional_data
  related_objects: query_getProducts_related_objects
}

type query_getProducts_data_items {
  """If the response is successful or not"""
  success: Boolean
  data: query_getProducts_data_items_data
  related_objects: query_getProducts_data_items_related_objects
}

type query_getProducts_data_items_data {
  """The ID of the product"""
  id: Float

  """The name of the product"""
  name: String

  """The product code"""
  code: String

  """The unit in which this product is sold"""
  unit: String

  """The ax percentage"""
  tax: Float
  active_flag: numberBooleanDefault1
  selectable: query_getProducts_data_items_data_allOf_0_selectable
  visible_to: query_getProducts_data_items_data_allOf_0_visible_to
  owner_id: JSON

  """
  Array of objects, each containing: currency (string), price (number), cost (number, optional), overhead_cost (number, optional)
  """
  prices: [JSON]
}

"""Whether this product is selected in deals or not"""
enum query_getProducts_data_items_data_allOf_0_selectable {
  _0
  _1
}

enum query_getProducts_data_items_data_allOf_0_visible_to {
  _1
  _3
  _5
  _7
}

type query_getProducts_data_items_related_objects {
  user: query_getProducts_data_items_related_objects_user
  deal: query_getProducts_data_items_related_objects_deal
  person: query_getProducts_data_items_related_objects_person
  organization: query_getProducts_data_items_related_objects_organization
}

type query_getProducts_data_items_related_objects_user {
  USER_ID: query_getProducts_data_items_related_objects_user_USER_ID
}

type query_getProducts_data_items_related_objects_user_USER_ID {
  """The ID of the user"""
  id: Int

  """The name of the user"""
  name: String

  """The email of the user"""
  email: String

  """Whether the user has picture or not. 0 = No picture, 1 = Has picture."""
  has_pic: Int

  """The user picture hash"""
  pic_hash: String

  """Whether the user is active or not"""
  active_flag: Boolean
  JSON: JSON
}

type query_getProducts_data_items_related_objects_deal {
  DEAL_ID: query_getProducts_data_items_related_objects_deal_DEAL_ID
}

"""The ID of the deal which is associated with the item"""
type query_getProducts_data_items_related_objects_deal_DEAL_ID {
  """The ID of the deal associated with the item"""
  id: Int

  """The title of the deal associated with the item"""
  title: String

  """The status of the deal associated with the item"""
  status: String

  """The value of the deal that is associated with the item"""
  value: Float

  """The currency of the deal value"""
  currency: String

  """The ID of the stage the deal is currently at"""
  stage_id: Int

  """The ID of the pipeline the deal is in"""
  pipeline_id: Int
}

type query_getProducts_data_items_related_objects_person {
  PERSON_ID: query_getProducts_data_items_related_objects_person_PERSON_ID
}

type query_getProducts_data_items_related_objects_person_PERSON_ID {
  """The ID of the person associated with the item"""
  id: Int

  """The name of the person associated with the item"""
  name: String

  """The emails of the person associated with the item"""
  email: [query_getProducts_data_items_related_objects_person_PERSON_ID_email_items]

  """The phone numbers of the person associated with the item"""
  phone: [query_getProducts_data_items_related_objects_person_PERSON_ID_phone_items]

  """The ID of the owner of the person that is associated with the item"""
  owner_id: Int
}

type query_getProducts_data_items_related_objects_person_PERSON_ID_email_items {
  """The type of the email"""
  label: String

  """The email of the associated person"""
  value: String

  """Whether this is the primary email or not"""
  primary: Boolean
}

type query_getProducts_data_items_related_objects_person_PERSON_ID_phone_items {
  """The type of the phone number"""
  label: String

  """The phone number of the person associated with the item"""
  value: String

  """Whether this is the primary phone number or not"""
  primary: Boolean
}

type query_getProducts_data_items_related_objects_organization {
  ORGANIZATION_ID: query_getProducts_data_items_related_objects_organization_ORGANIZATION_ID
}

"""The ID of the organization associated with the item"""
type query_getProducts_data_items_related_objects_organization_ORGANIZATION_ID {
  """The ID of the organization associated with the item"""
  id: Int

  """The name of the organization associated with the item"""
  name: String

  """
  The number of people connected with the organization that is associated with the item
  """
  people_count: Int

  """
  The ID of the owner of the organization that is associated with the item
  """
  owner_id: Int

  """The address of the organization"""
  address: String

  """The BCC email of the organization associated with the item"""
  cc_email: String
}

"""The additional data of the list"""
type query_getProducts_additional_data {
  """Pagination start"""
  start: Int

  """Items shown per page"""
  limit: Int

  """If there are more list items in the collection than displayed or not"""
  more_items_in_collection: Boolean
}

type query_getProducts_related_objects {
  user: query_getProducts_related_objects_user
  deal: query_getProducts_related_objects_deal
  person: query_getProducts_related_objects_person
  organization: query_getProducts_related_objects_organization
}

type query_getProducts_related_objects_user {
  USER_ID: query_getProducts_related_objects_user_USER_ID
}

type query_getProducts_related_objects_user_USER_ID {
  """The ID of the user"""
  id: Int

  """The name of the user"""
  name: String

  """The email of the user"""
  email: String

  """Whether the user has picture or not. 0 = No picture, 1 = Has picture."""
  has_pic: Int

  """The user picture hash"""
  pic_hash: String

  """Whether the user is active or not"""
  active_flag: Boolean
  JSON: JSON
}

type query_getProducts_related_objects_deal {
  DEAL_ID: query_getProducts_related_objects_deal_DEAL_ID
}

"""The ID of the deal which is associated with the item"""
type query_getProducts_related_objects_deal_DEAL_ID {
  """The ID of the deal associated with the item"""
  id: Int

  """The title of the deal associated with the item"""
  title: String

  """The status of the deal associated with the item"""
  status: String

  """The value of the deal that is associated with the item"""
  value: Float

  """The currency of the deal value"""
  currency: String

  """The ID of the stage the deal is currently at"""
  stage_id: Int

  """The ID of the pipeline the deal is in"""
  pipeline_id: Int
}

type query_getProducts_related_objects_person {
  PERSON_ID: query_getProducts_related_objects_person_PERSON_ID
}

type query_getProducts_related_objects_person_PERSON_ID {
  """The ID of the person associated with the item"""
  id: Int

  """The name of the person associated with the item"""
  name: String

  """The emails of the person associated with the item"""
  email: [query_getProducts_related_objects_person_PERSON_ID_email_items]

  """The phone numbers of the person associated with the item"""
  phone: [query_getProducts_related_objects_person_PERSON_ID_phone_items]

  """The ID of the owner of the person that is associated with the item"""
  owner_id: Int
}

type query_getProducts_related_objects_person_PERSON_ID_email_items {
  """The type of the email"""
  label: String

  """The email of the associated person"""
  value: String

  """Whether this is the primary email or not"""
  primary: Boolean
}

type query_getProducts_related_objects_person_PERSON_ID_phone_items {
  """The type of the phone number"""
  label: String

  """The phone number of the person associated with the item"""
  value: String

  """Whether this is the primary phone number or not"""
  primary: Boolean
}

type query_getProducts_related_objects_organization {
  ORGANIZATION_ID: query_getProducts_related_objects_organization_ORGANIZATION_ID
}

"""The ID of the organization associated with the item"""
type query_getProducts_related_objects_organization_ORGANIZATION_ID {
  """The ID of the organization associated with the item"""
  id: Int

  """The name of the organization associated with the item"""
  name: String

  """
  The number of people connected with the organization that is associated with the item
  """
  people_count: Int

  """
  The ID of the owner of the organization that is associated with the item
  """
  owner_id: Int

  """The address of the organization"""
  address: String

  """The BCC email of the organization associated with the item"""
  cc_email: String
}

type searchProducts {
  """If the response is successful or not"""
  success: Boolean
  data: query_searchProducts_allOf_1_data
  additional_data: query_searchProducts_allOf_1_additional_data
}

type query_searchProducts_allOf_1_data {
  """The array of found items"""
  items: [query_searchProducts_allOf_1_data_items_items]
}

type query_searchProducts_allOf_1_data_items_items {
  """Search result relevancy"""
  result_score: Float
  item: query_searchProducts_allOf_1_data_items_items_item
}

type query_searchProducts_allOf_1_data_items_items_item {
  """The ID of the product"""
  id: Int

  """The type of the item"""
  type: String

  """The name of the product"""
  name: String

  """The code of the product"""
  code: Int

  """The visibility of the product"""
  visible_to: Int
  owner: query_searchProducts_allOf_1_data_items_items_item_owner

  """The custom fields"""
  custom_fields: [String]
}

type query_searchProducts_allOf_1_data_items_items_item_owner {
  """The ID of the owner of the product"""
  id: Int
}

type query_searchProducts_allOf_1_additional_data {
  pagination: query_searchProducts_allOf_1_additional_data_pagination
}

"""Pagination details of the list"""
type query_searchProducts_allOf_1_additional_data_pagination {
  """Pagination start"""
  start: Int

  """Items shown per page"""
  limit: Int

  """Whether there are more list items in the collection than displayed"""
  more_items_in_collection: Boolean

  """Next pagination start"""
  next_start: Int
}

"""
A comma-separated string array. The fields to perform the search from. Defaults to all of them.
"""
enum queryInput_searchProducts_fields {
  code
  custom_fields
  name
}

enum product_price_const {
  product_price
}

type query_getProduct {
  """If the response is successful or not"""
  success: Boolean
  data: query_getProduct_data
  related_objects: query_getProduct_related_objects
}

type query_getProduct_data {
  """The ID of the product"""
  id: Float

  """The name of the product"""
  name: String

  """The product code"""
  code: String

  """The unit in which this product is sold"""
  unit: String

  """The ax percentage"""
  tax: Float
  active_flag: numberBooleanDefault1
  selectable: query_getProduct_data_allOf_0_selectable
  visible_to: query_getProduct_data_allOf_0_visible_to
  owner_id: JSON

  """
  Array of objects, each containing: currency (string), price (number), cost (number, optional), overhead_cost (number, optional)
  """
  prices: [JSON]
}

"""Whether this product is selected in deals or not"""
enum query_getProduct_data_allOf_0_selectable {
  _0
  _1
}

enum query_getProduct_data_allOf_0_visible_to {
  _1
  _3
  _5
  _7
}

type query_getProduct_related_objects {
  user: query_getProduct_related_objects_user
  deal: query_getProduct_related_objects_deal
  person: query_getProduct_related_objects_person
  organization: query_getProduct_related_objects_organization
}

type query_getProduct_related_objects_user {
  USER_ID: query_getProduct_related_objects_user_USER_ID
}

type query_getProduct_related_objects_user_USER_ID {
  """The ID of the user"""
  id: Int

  """The name of the user"""
  name: String

  """The email of the user"""
  email: String

  """Whether the user has picture or not. 0 = No picture, 1 = Has picture."""
  has_pic: Int

  """The user picture hash"""
  pic_hash: String

  """Whether the user is active or not"""
  active_flag: Boolean
  JSON: JSON
}

type query_getProduct_related_objects_deal {
  DEAL_ID: query_getProduct_related_objects_deal_DEAL_ID
}

"""The ID of the deal which is associated with the item"""
type query_getProduct_related_objects_deal_DEAL_ID {
  """The ID of the deal associated with the item"""
  id: Int

  """The title of the deal associated with the item"""
  title: String

  """The status of the deal associated with the item"""
  status: String

  """The value of the deal that is associated with the item"""
  value: Float

  """The currency of the deal value"""
  currency: String

  """The ID of the stage the deal is currently at"""
  stage_id: Int

  """The ID of the pipeline the deal is in"""
  pipeline_id: Int
}

type query_getProduct_related_objects_person {
  PERSON_ID: query_getProduct_related_objects_person_PERSON_ID
}

type query_getProduct_related_objects_person_PERSON_ID {
  """The ID of the person associated with the item"""
  id: Int

  """The name of the person associated with the item"""
  name: String

  """The emails of the person associated with the item"""
  email: [query_getProduct_related_objects_person_PERSON_ID_email_items]

  """The phone numbers of the person associated with the item"""
  phone: [query_getProduct_related_objects_person_PERSON_ID_phone_items]

  """The ID of the owner of the person that is associated with the item"""
  owner_id: Int
}

type query_getProduct_related_objects_person_PERSON_ID_email_items {
  """The type of the email"""
  label: String

  """The email of the associated person"""
  value: String

  """Whether this is the primary email or not"""
  primary: Boolean
}

type query_getProduct_related_objects_person_PERSON_ID_phone_items {
  """The type of the phone number"""
  label: String

  """The phone number of the person associated with the item"""
  value: String

  """Whether this is the primary phone number or not"""
  primary: Boolean
}

type query_getProduct_related_objects_organization {
  ORGANIZATION_ID: query_getProduct_related_objects_organization_ORGANIZATION_ID
}

"""The ID of the organization associated with the item"""
type query_getProduct_related_objects_organization_ORGANIZATION_ID {
  """The ID of the organization associated with the item"""
  id: Int

  """The name of the organization associated with the item"""
  name: String

  """
  The number of people connected with the organization that is associated with the item
  """
  people_count: Int

  """
  The ID of the owner of the organization that is associated with the item
  """
  owner_id: Int

  """The address of the organization"""
  address: String

  """The BCC email of the organization associated with the item"""
  cc_email: String
}

type query_getProductDeals {
  """If the response is successful or not"""
  success: Boolean

  """The array of deals"""
  data: [query_getProductDeals_allOf_1_data_items]
  additional_data: query_getProductDeals_allOf_1_additional_data
  related_objects: query_getProductDeals_allOf_1_related_objects
}

type query_getProductDeals_allOf_1_data_items {
  """The ID of the deal"""
  id: Int
  creator_user_id: query_getProductDeals_allOf_1_data_items_allOf_0_creator_user_id
  user_id: query_getProductDeals_allOf_1_data_items_allOf_0_user_id
  person_id: query_getProductDeals_allOf_1_data_items_allOf_0_person_id
  org_id: query_getProductDeals_allOf_1_data_items_allOf_0_org_id

  """The ID of the deal stage"""
  stage_id: Int

  """The title of the deal"""
  title: String

  """The value of the deal"""
  value: Float

  """The currency associated with the deal"""
  currency: String

  """The creation date and time of the deal"""
  add_time: String

  """The last updated date and time of the deal"""
  update_time: String

  """The last updated date and time of the deal stage"""
  stage_change_time: String

  """Whether the deal is active or not"""
  active: Boolean

  """Whether the deal is deleted or not"""
  deleted: Boolean

  """The status of the deal"""
  status: String

  """The success probability percentage of the deal"""
  probability: Float

  """The date of the next activity associated with the deal"""
  next_activity_date: String

  """The time of the next activity associated with the deal"""
  next_activity_time: String

  """The ID of the next activity associated with the deal"""
  next_activity_id: Int

  """The ID of the last activity associated with the deal"""
  last_activity_id: Int

  """The date of the last activity associated with the deal"""
  last_activity_date: String

  """The reason for losing the deal"""
  lost_reason: String

  """The visibility of the deal"""
  visible_to: String

  """The date and time of closing the deal"""
  close_time: String

  """The ID of pipeline associated with the deal"""
  pipeline_id: Int

  """The date and time of changing the deal status as won"""
  won_time: String

  """The date and time of the first time changing the deal status as won"""
  first_won_time: String

  """The date and time of changing the deal status as lost"""
  lost_time: String

  """The number of products associated with the deal"""
  products_count: Int

  """The number of files associated with the deal"""
  files_count: Int

  """The number of notes associated with the deal"""
  notes_count: Int

  """The number of followers associated with the deal"""
  followers_count: Int

  """The number of emails associated with the deal"""
  email_messages_count: Int

  """The number of activities associated with the deal"""
  activities_count: Int

  """The number of completed activities associated with the deal"""
  done_activities_count: Int

  """The number of incomplete activities associated with the deal"""
  undone_activities_count: Int

  """The number of participants associated with the deal"""
  participants_count: Int

  """The expected close date of the deal"""
  expected_close_date: Date

  """The date and time of the last incoming email associated with the deal"""
  last_incoming_mail_time: String

  """The date and time of the last outgoing email associated with the deal"""
  last_outgoing_mail_time: String

  """The label assigned to the deal"""
  label: Int

  """The order number of the deal stage associated with the deal"""
  stage_order_nr: Int

  """The name of the person associated with the deal"""
  person_name: String

  """The name of the organization associated with the deal"""
  org_name: String

  """The subject of the next activity associated with the deal"""
  next_activity_subject: String

  """The type of the next activity associated with the deal"""
  next_activity_type: String

  """The duration of the next activity associated with the deal"""
  next_activity_duration: String

  """The note of the next activity associated with the deal"""
  next_activity_note: String

  """The deal value formatted with selected currency. E.g. US$500"""
  formatted_value: String

  """
  Probability times deal value. Probability can either be deal probability or if not set, then stage probability.
  """
  weighted_value: Float

  """The weighted_value formatted with selected currency. E.g. US$500"""
  formatted_weighted_value: String

  """The currency associated with the deal"""
  weighted_value_currency: String

  """The date and time of changing the deal status as rotten"""
  rotten_time: String

  """The name of the deal owner"""
  owner_name: String

  """The BCC email of the deal"""
  cc_email: String

  """If the organization that is associated with the deal is hidden or not"""
  org_hidden: Boolean

  """If the person that is associated with the deal is hidden or not"""
  person_hidden: Boolean
}

"""The creator of the deal"""
type query_getProductDeals_allOf_1_data_items_allOf_0_creator_user_id {
  """The ID of the deal creator"""
  id: Int

  """The name of the deal creator"""
  name: String

  """The email of the deal creator"""
  email: String

  """If the creator has a picture or not"""
  has_pic: Boolean

  """The creator picture hash"""
  pic_hash: String

  """Whether the creator is active or not"""
  active_flag: Boolean

  """The ID of the deal creator"""
  value: Int
}

type query_getProductDeals_allOf_1_data_items_allOf_0_user_id {
  """The ID of the user"""
  id: Int

  """The name of the user"""
  name: String

  """The email of the user"""
  email: String

  """If the user has a picture or not"""
  has_pic: Boolean

  """The user picture hash"""
  pic_hash: String

  """Whether the user is active or not"""
  active_flag: Boolean

  """The ID of the user"""
  value: Int
}

type query_getProductDeals_allOf_1_data_items_allOf_0_person_id {
  """Whether the associated person is active or not"""
  active_flag: Boolean

  """The name of the person associated with the deal"""
  name: String

  """The emails of the person associated with the deal"""
  email: [query_getProductDeals_allOf_1_data_items_allOf_0_person_id_allOf_0_email_items]

  """The phone numbers of the person associated with the deal"""
  phone: [query_getProductDeals_allOf_1_data_items_allOf_0_person_id_allOf_0_phone_items]

  """The ID of the owner of the person that is associated with the deal"""
  owner_id: Int

  """The ID of the person associated with the deal"""
  value: Int
}

type query_getProductDeals_allOf_1_data_items_allOf_0_person_id_allOf_0_email_items {
  """The type of the email"""
  label: String

  """The email of the associated person"""
  value: String

  """If this is the primary email or not"""
  primary: Boolean
}

type query_getProductDeals_allOf_1_data_items_allOf_0_person_id_allOf_0_phone_items {
  """The type of the phone number"""
  label: String

  """The phone number of the person associated with the deal"""
  value: String

  """If this is the primary phone number or not"""
  primary: Boolean
}

type query_getProductDeals_allOf_1_data_items_allOf_0_org_id {
  """The name of the organization associated with the deal"""
  name: String

  """
  The number of people connected with the organization that is associated with the deal
  """
  people_count: Int

  """
  The ID of the owner of the organization that is associated with the deal
  """
  owner_id: Int

  """The address of the organization that is associated with the deal"""
  address: String

  """Whether the associated organization is active or not"""
  active_flag: Boolean

  """The BCC email of the organization associated with the deal"""
  cc_email: String

  """The ID of the organization associated with the deal"""
  value: Int
}

"""The additional data of the list"""
type query_getProductDeals_allOf_1_additional_data {
  """Pagination start"""
  start: Int

  """Items shown per page"""
  limit: Int

  """If there are more list items in the collection than displayed or not"""
  more_items_in_collection: Boolean
}

type query_getProductDeals_allOf_1_related_objects {
  organization: query_getProductDeals_allOf_1_related_objects_organization
  person: query_getProductDeals_allOf_1_related_objects_person
  user: query_getProductDeals_allOf_1_related_objects_user
  stage: query_getProductDeals_allOf_1_related_objects_stage
  pipeline: query_getProductDeals_allOf_1_related_objects_pipeline
}

type query_getProductDeals_allOf_1_related_objects_organization {
  ORGANIZATION_ID: query_getProductDeals_allOf_1_related_objects_organization_ORGANIZATION_ID
}

"""The ID of the organization associated with the item"""
type query_getProductDeals_allOf_1_related_objects_organization_ORGANIZATION_ID {
  """Whether the associated organization is active or not"""
  active_flag: Boolean

  """The ID of the organization associated with the item"""
  id: Int

  """The name of the organization associated with the item"""
  name: String

  """
  The number of people connected with the organization that is associated with the item
  """
  people_count: Int

  """
  The ID of the owner of the organization that is associated with the item
  """
  owner_id: Int

  """The address of the organization"""
  address: String

  """The BCC email of the organization associated with the item"""
  cc_email: String
}

type query_getProductDeals_allOf_1_related_objects_person {
  PERSON_ID: query_getProductDeals_allOf_1_related_objects_person_PERSON_ID
}

"""The ID of the person associated with the item"""
type query_getProductDeals_allOf_1_related_objects_person_PERSON_ID {
  """Whether the associated person is active or not"""
  active_flag: Boolean

  """The ID of the person associated with the item"""
  id: Int

  """The name of the person associated with the item"""
  name: String

  """The emails of the person associated with the item"""
  email: [query_getProductDeals_allOf_1_related_objects_person_PERSON_ID_allOf_1_email_items]

  """The phone numbers of the person associated with the item"""
  phone: [query_getProductDeals_allOf_1_related_objects_person_PERSON_ID_allOf_1_phone_items]

  """The ID of the owner of the person that is associated with the item"""
  owner_id: Int
}

type query_getProductDeals_allOf_1_related_objects_person_PERSON_ID_allOf_1_email_items {
  """The type of the email"""
  label: String

  """The email of the associated person"""
  value: String

  """Whether this is the primary email or not"""
  primary: Boolean
}

type query_getProductDeals_allOf_1_related_objects_person_PERSON_ID_allOf_1_phone_items {
  """The type of the phone number"""
  label: String

  """The phone number of the person associated with the item"""
  value: String

  """Whether this is the primary phone number or not"""
  primary: Boolean
}

type query_getProductDeals_allOf_1_related_objects_user {
  USER_ID: query_getProductDeals_allOf_1_related_objects_user_USER_ID
}

type query_getProductDeals_allOf_1_related_objects_user_USER_ID {
  """The ID of the user"""
  id: Int

  """The name of the user"""
  name: String

  """The email of the user"""
  email: String

  """Whether the user has picture or not. 0 = No picture, 1 = Has picture."""
  has_pic: Int

  """The user picture hash"""
  pic_hash: String

  """Whether the user is active or not"""
  active_flag: Boolean
  JSON: JSON
}

type query_getProductDeals_allOf_1_related_objects_stage {
  """The ID of the stage"""
  id: Int

  """Defines the order of the stage"""
  order_nr: Int

  """The name of the stage"""
  name: String

  """Whether the stage is active or deleted"""
  active_flag: Boolean

  """
  The success probability percentage of the deal. Used/shown when the deal weighted values are used.
  """
  deal_probability: Int

  """The ID of the pipeline to add the stage to"""
  pipeline_id: Int

  """Whether deals in this stage can become rotten"""
  rotten_flag: Boolean

  """
  The number of days the deals not updated in this stage would become rotten. Applies only if the `rotten_flag` is set.
  """
  rotten_days: Int

  """The stage creation time. Format: YYYY-MM-DD HH:MM:SS."""
  add_time: String

  """The stage update time. Format: YYYY-MM-DD HH:MM:SS."""
  update_time: String
}

type query_getProductDeals_allOf_1_related_objects_pipeline {
  """The ID of the pipeline"""
  id: Int

  """The name of the pipeline"""
  name: String

  """The pipeline title displayed in the URL"""
  url_title: String

  """
  Defines the order of pipelines. First order (`order_nr=0`) is the default pipeline.
  """
  order_nr: Int

  """Whether this pipeline will be made inactive (hidden) or active"""
  active: Boolean

  """Whether deal probability is disabled or enabled for this pipeline"""
  deal_probability: Boolean

  """The pipeline creation time. Format: YYYY-MM-DD HH:MM:SS."""
  add_time: String

  """The pipeline update time. Format: YYYY-MM-DD HH:MM:SS."""
  update_time: String
}

"""
Only fetch deals with a specific status. If omitted, all not deleted deals are returned. If set to deleted, deals that have been deleted up to 30 days ago will be included.
"""
enum queryInput_getProductDeals_status {
  open
  won
  lost
  deleted
  all_not_deleted
}

type query_getProductFiles {
  """If the response is successful or not"""
  success: Boolean

  """The array of files"""
  data: [query_getProductFiles_allOf_1_data_items]
  additional_data: query_getProductFiles_allOf_1_additional_data
}

"""The file data"""
type query_getProductFiles_allOf_1_data_items {
  """The ID of the file"""
  id: Int

  """The ID of the product associated with the file"""
  product_id: Int

  """
  The UTC date time when the file was uploaded. Format: YYYY-MM-DD HH:MM:SS
  """
  add_time: String

  """
  The UTC date time when the file was last updated. Format: YYYY-MM-DD HH:MM:SS
  """
  update_time: String

  """The original name of the file"""
  file_name: String

  """The size of the file in bytes"""
  file_size: Int

  """Whether the user is active or not."""
  active_flag: Boolean

  """Whether the file was uploaded as inline or not"""
  inline_flag: Boolean

  """
  The location type to send the file to. Only googledrive is supported at the moment.
  """
  remote_location: String

  """The ID of the remote item"""
  remote_id: String

  """The location of the cloud storage"""
  s3_bucket: String

  """The name of the product associated with the file"""
  product_name: String

  """The URL to download the file"""
  url: String

  """The visible name of the file"""
  name: String

  """The description of the file"""
  description: String
}

"""The additional data of the list"""
type query_getProductFiles_allOf_1_additional_data {
  """Pagination start"""
  start: Int

  """Items shown per page"""
  limit: Int

  """If there are more list items in the collection than displayed or not"""
  more_items_in_collection: Boolean
}

type getProductFollowersResponseSuccess {
  """If the response is successful or not"""
  success: Boolean

  """The list of followers"""
  data: [query_getProductFollowers_allOf_1_data_items]
  additional_data: query_getProductFollowers_allOf_1_additional_data
}

type query_getProductFollowers_allOf_1_data_items {
  """The ID of the user"""
  user_id: Int

  """The ID of the user follower"""
  id: Int

  """The ID of the product"""
  product_id: Int

  """The date and time when the follower was added to the person"""
  add_time: String
}

"""The additional data of the list"""
type query_getProductFollowers_allOf_1_additional_data {
  """Pagination start"""
  start: Int

  """Items shown per page"""
  limit: Int

  """If there are more list items in the collection than displayed or not"""
  more_items_in_collection: Boolean
}

type query_getProductUsers {
  """If the response is successful or not"""
  success: Boolean

  """The list of user IDs"""
  data: [Int]
}

type getProductFields {
  """If the response is successful or not"""
  success: Boolean

  """Array containing data for all product fields"""
  data: [productField3]
  additional_data: JSON
}

type productField3 {
  """The name of the field"""
  name: String!

  """
  When `field_type` is either `set` or `enum`, possible options must be supplied as a JSON-encoded sequential array, for example:</br>`[{"label":"red"}, {"label":"blue"}, {"label":"lilac"}]`
  """
  options: [JSON]
  field_type: query_getProductFields_data_items_allOf_0_field_type!

  """The ID of the product field"""
  id: Int

  """The key of the product field"""
  key: String

  """The position (index) of the product field in the detail view"""
  order_nr: Int

  """The product field creation time. Format: YYYY-MM-DD HH:MM:SS"""
  add_time: String

  """The product field last update time. Format: YYYY-MM-DD HH:MM:SS"""
  update_time: String

  """The ID of the last user to update the product field"""
  last_updated_by_user_id: Int

  """Whether or not the product field is currently active"""
  active_flag: Boolean

  """Whether or not the product field name and metadata is editable"""
  edit_flag: Boolean

  """Whether or not the product field is visible in the Add Product Modal"""
  add_visible_flag: Boolean

  """Whether or not the product field is marked as important"""
  important_flag: Boolean

  """Whether or not the product field data can be edited"""
  bulk_edit_allowed: Boolean

  """Whether or not the product field is searchable"""
  searchable_flag: Boolean

  """
  Whether or not the product field value can be used when filtering searches
  """
  filtering_allowed: Boolean

  """Whether or not the product field is sortable"""
  sortable_flag: Boolean

  """Whether or not the product field is mandatory when creating products"""
  mandatory_flag: Boolean
}

"""
The type of the field<table><tr><th>Value</th><th>Description</th></tr><tr><td>`varchar`</td><td>Text (up to 255 characters)</td><tr><td>`varchar_auto`</td><td>Autocomplete text (up to 255 characters)</td><tr><td>`text`</td><td>Long text (up to 65k characters)</td><tr><td>`double`</td><td>Numeric value</td><tr><td>`monetary`</td><td>Monetary field (has a numeric value and a currency value)</td><tr><td>`date`</td><td>Date (format YYYY-MM-DD)</td><tr><td>`set`</td><td>Options field with a possibility of having multiple chosen options</td><tr><td>`enum`</td><td>Options field with a single possible chosen option</td><tr><td>`user`</td><td>User field (contains a user ID of another Pipedrive user)</td><tr><td>`org`</td><td>Organization field (contains an organization ID which is stored on the same account)</td><tr><td>`people`</td><td>Person field (contains a product ID which is stored on the same account)</td><tr><td>`phone`</td><td>Phone field (up to 255 numbers and/or characters)</td><tr><td>`time`</td><td>Time field (format HH:MM:SS)</td><tr><td>`timerange`</td><td>Time-range field (has a start time and end time value, both HH:MM:SS)</td><tr><td>`daterange`</td><td>Date-range field (has a start date and end date value, both YYYY-MM-DD)</td><tr><td>`address`</td><td>Address field (autocompleted by Google Maps)</dd></table>
"""
enum query_getProductFields_data_items_allOf_0_field_type {
  varchar
  varchar_auto
  text
  double
  monetary
  date
  set
  enum
  user
  org
  people
  phone
  time
  timerange
  daterange
  address
}

union getProductField_response = query_getProductField_oneOf_0 | failResponse

type query_getProductField_oneOf_0 {
  """If the response is successful or not"""
  success: Boolean
  data: productField4
}

type productField4 {
  """The name of the field"""
  name: String!

  """
  When `field_type` is either `set` or `enum`, possible options must be supplied as a JSON-encoded sequential array, for example:</br>`[{"label":"red"}, {"label":"blue"}, {"label":"lilac"}]`
  """
  options: [JSON]
  field_type: query_getProductField_oneOf_0_data_allOf_0_field_type!

  """The ID of the product field"""
  id: Int

  """The key of the product field"""
  key: String

  """The position (index) of the product field in the detail view"""
  order_nr: Int

  """The product field creation time. Format: YYYY-MM-DD HH:MM:SS"""
  add_time: String

  """The product field last update time. Format: YYYY-MM-DD HH:MM:SS"""
  update_time: String

  """The ID of the last user to update the product field"""
  last_updated_by_user_id: Int

  """Whether or not the product field is currently active"""
  active_flag: Boolean

  """Whether or not the product field name and metadata is editable"""
  edit_flag: Boolean

  """Whether or not the product field is visible in the Add Product Modal"""
  add_visible_flag: Boolean

  """Whether or not the product field is marked as important"""
  important_flag: Boolean

  """Whether or not the product field data can be edited"""
  bulk_edit_allowed: Boolean

  """Whether or not the product field is searchable"""
  searchable_flag: Boolean

  """
  Whether or not the product field value can be used when filtering searches
  """
  filtering_allowed: Boolean

  """Whether or not the product field is sortable"""
  sortable_flag: Boolean

  """Whether or not the product field is mandatory when creating products"""
  mandatory_flag: Boolean
}

"""
The type of the field<table><tr><th>Value</th><th>Description</th></tr><tr><td>`varchar`</td><td>Text (up to 255 characters)</td><tr><td>`varchar_auto`</td><td>Autocomplete text (up to 255 characters)</td><tr><td>`text`</td><td>Long text (up to 65k characters)</td><tr><td>`double`</td><td>Numeric value</td><tr><td>`monetary`</td><td>Monetary field (has a numeric value and a currency value)</td><tr><td>`date`</td><td>Date (format YYYY-MM-DD)</td><tr><td>`set`</td><td>Options field with a possibility of having multiple chosen options</td><tr><td>`enum`</td><td>Options field with a single possible chosen option</td><tr><td>`user`</td><td>User field (contains a user ID of another Pipedrive user)</td><tr><td>`org`</td><td>Organization field (contains an organization ID which is stored on the same account)</td><tr><td>`people`</td><td>Person field (contains a product ID which is stored on the same account)</td><tr><td>`phone`</td><td>Phone field (up to 255 numbers and/or characters)</td><tr><td>`time`</td><td>Time field (format HH:MM:SS)</td><tr><td>`timerange`</td><td>Time-range field (has a start time and end time value, both HH:MM:SS)</td><tr><td>`daterange`</td><td>Date-range field (has a start date and end date value, both YYYY-MM-DD)</td><tr><td>`address`</td><td>Address field (autocompleted by Google Maps)</dd></table>
"""
enum query_getProductField_oneOf_0_data_allOf_0_field_type {
  varchar
  varchar_auto
  text
  double
  monetary
  date
  set
  enum
  user
  org
  people
  phone
  time
  timerange
  daterange
  address
}

type getRecents {
  """If the response is successful or not"""
  success: Boolean
  data: [query_getRecents_data_items]
  additional_data: query_getRecents_additional_data
}

type query_getRecents_data_items {
  item: JSON
  id: Int
  data: JSON
}

type query_getRecents_additional_data {
  """The timestamp in UTC. Format: YYYY-MM-DD HH:MM:SS"""
  since_timestamp: String

  """The timestamp in UTC. Format: YYYY-MM-DD HH:MM:SS"""
  last_timestamp_on_page: String
  pagination: query_getRecents_additional_data_pagination
}

"""The additional data of the list"""
type query_getRecents_additional_data_pagination {
  """Pagination start"""
  start: Int

  """Items shown per page"""
  limit: Int

  """If there are more list items in the collection than displayed or not"""
  more_items_in_collection: Boolean
}

"""Multiple selection of item types to include in the query (optional)"""
enum queryInput_getRecents_items {
  activity
  activityType
  deal
  file
  filter
  note
  person
  organization
  pipeline
  product
  stage
  user
}

type getRoles {
  """If the response is successful or not"""
  success: Boolean

  """The array of roles"""
  data: [fullRole]
  additional_data: query_getRoles_allOf_1_additional_data
}

type fullRole {
  """The ID of the parent role"""
  parent_role_id: Int

  """The name of the role"""
  name: String

  """The ID of the role"""
  id: Int

  """Whether the role is active or not"""
  active_flag: Boolean

  """The number of users assigned to this role"""
  assignment_count: String

  """The number of sub-roles"""
  sub_role_count: String

  """The level of role in the role hierarchy"""
  level: Int
}

"""The additional data in the role list"""
type query_getRoles_allOf_1_additional_data {
  pagination: query_getRoles_allOf_1_additional_data_pagination
}

"""The pagination details in the role list"""
type query_getRoles_allOf_1_additional_data_pagination {
  """Pagination start"""
  start: Int

  """Items shown per page"""
  limit: Int

  """Whether there are more list items in the collection than displayed"""
  more_items_in_collection: Boolean
}

type getRole {
  """If the response is successful or not"""
  success: Boolean

  """The details of the sub-role"""
  data: query_getRole_allOf_1_data
  additional_data: query_getRole_allOf_1_additional_data
}

"""The details of the sub-role"""
type query_getRole_allOf_1_data {
  """The ID of the parent role"""
  parent_role_id: Int

  """The name of the role"""
  name: String

  """The ID of the role"""
  id: Int

  """Whether the role is active or not"""
  active_flag: Boolean

  """The number of users assigned to this role"""
  assignment_count: String

  """The number of sub-roles"""
  sub_role_count: String
}

"""The additional data in the role"""
type query_getRole_allOf_1_additional_data {
  settings: query_getRole_allOf_1_additional_data_settings
}

"""The settings for the role"""
type query_getRole_allOf_1_additional_data_settings {
  """The default visibility level of the deals for the role"""
  deal_default_visibility: Float

  """The default visibility level of the leads for the role"""
  lead_default_visibility: Float

  """The default visibility level of the organizations for the role"""
  org_default_visibility: Float

  """The default visibility level of the people for the role"""
  person_default_visibility: Float

  """The default visibility level of the products for the role"""
  product_default_visibility: Float

  """The access level of the deals for the role (only for default role)"""
  deal_access_level: Float

  """
  The access level of the organizations for the role (only for default role)
  """
  org_access_level: Float

  """The access level of the people for the role (only for default role)"""
  person_access_level: Float

  """The access level of the products for the role (only for default role)"""
  product_access_level: Float
}

type getUserRoleAssignments {
  """If the response is successful or not"""
  success: Boolean

  """The role assignments"""
  data: [roleAssignment]
  additional_data: query_getRoleAssignments_allOf_1_additional_data
}

"""The assignment data of the role"""
type roleAssignment {
  """The ID of the parent role"""
  parent_role_id: Int

  """The name of the role"""
  name: String

  """The user ID"""
  user_id: Int

  """The role ID"""
  role_id: Int

  """Whether the role is active or not"""
  active_flag: Boolean

  """The assignment type"""
  type: String
}

"""The additional data in the role list"""
type query_getRoleAssignments_allOf_1_additional_data {
  pagination: query_getRoleAssignments_allOf_1_additional_data_pagination
}

"""The pagination details in the role list"""
type query_getRoleAssignments_allOf_1_additional_data_pagination {
  """Pagination start"""
  start: Int

  """Items shown per page"""
  limit: Int

  """Whether there are more list items in the collection than displayed"""
  more_items_in_collection: Boolean
}

type getRoleSettings {
  """If the response is successful or not"""
  success: Boolean
  data: query_getRoleSettings_allOf_1_data
}

"""The settings for the role"""
type query_getRoleSettings_allOf_1_data {
  """The default visibility level of the deals for the role"""
  deal_default_visibility: Float

  """The default visibility level of the leads for the role"""
  lead_default_visibility: Float

  """The default visibility level of the organizations for the role"""
  org_default_visibility: Float

  """The default visibility level of the people for the role"""
  person_default_visibility: Float

  """The default visibility level of the products for the role"""
  product_default_visibility: Float

  """The access level of the deals for the role (only for default role)"""
  deal_access_level: Float

  """
  The access level of the organizations for the role (only for default role)
  """
  org_access_level: Float

  """The access level of the people for the role (only for default role)"""
  person_access_level: Float

  """The access level of the products for the role (only for default role)"""
  product_access_level: Float
}

type getStages {
  """If the request was successful or not"""
  success: Boolean

  """The array of stages"""
  data: [query_getStages_data_items]
}

type query_getStages_data_items {
  """The ID of the stage"""
  id: Int

  """Defines the order of the stage"""
  order_nr: Int

  """The name of the stage"""
  name: String

  """Whether the stage is active or deleted"""
  active_flag: Boolean

  """
  The success probability percentage of the deal. Used/shown when the deal weighted values are used.
  """
  deal_probability: Int

  """The ID of the pipeline to add the stage to"""
  pipeline_id: Int

  """Whether deals in this stage can become rotten"""
  rotten_flag: Boolean

  """
  The number of days the deals not updated in this stage would become rotten. Applies only if the `rotten_flag` is set.
  """
  rotten_days: Int

  """The stage creation time. Format: YYYY-MM-DD HH:MM:SS."""
  add_time: String

  """The stage update time. Format: YYYY-MM-DD HH:MM:SS."""
  update_time: String

  """The name of the pipeline"""
  pipeline_name: String

  """
  The pipeline deal probability. When `true`, overrides the stage probability.
  """
  pipeline_deal_probability: Boolean
}

type getStage {
  """If the request was successful or not"""
  success: Boolean
  data: query_getStage_data
}

"""The stage object"""
type query_getStage_data {
  """The ID of the stage"""
  id: Int

  """Defines the order of the stage"""
  order_nr: Int

  """The name of the stage"""
  name: String

  """Whether the stage is active or deleted"""
  active_flag: Boolean

  """
  The success probability percentage of the deal. Used/shown when the deal weighted values are used.
  """
  deal_probability: Int

  """The ID of the pipeline to add the stage to"""
  pipeline_id: Int

  """Whether deals in this stage can become rotten"""
  rotten_flag: Boolean

  """
  The number of days the deals not updated in this stage would become rotten. Applies only if the `rotten_flag` is set.
  """
  rotten_days: Int

  """The stage creation time. Format: YYYY-MM-DD HH:MM:SS."""
  add_time: String

  """The stage update time. Format: YYYY-MM-DD HH:MM:SS."""
  update_time: String
  deals_summary: query_getStage_data_allOf_1_deals_summary
}

"""Deals summary"""
type query_getStage_data_allOf_1_deals_summary {
  per_stages: query_getStage_data_allOf_1_deals_summary_per_stages
  per_currency: query_getStage_data_allOf_1_deals_summary_per_currency

  """Deals count"""
  total_count: Int
  per_currency_full: query_getStage_data_allOf_1_deals_summary_per_currency_full
}

"""The stage objects containing deals currency information"""
type query_getStage_data_allOf_1_deals_summary_per_stages {
  STAGE_ID: query_getStage_data_allOf_1_deals_summary_per_stages_STAGE_ID
}

"""
The currency summaries per stage. This parameter is dynamic and changes according to `stage_id` value.
"""
type query_getStage_data_allOf_1_deals_summary_per_stages_STAGE_ID {
  CURRENCY_ID: query_getStage_data_allOf_1_deals_summary_per_stages_STAGE_ID_CURRENCY_ID
}

"""
The currency summary. This parameter is dynamic and changes according to `currency_id` value.
"""
type query_getStage_data_allOf_1_deals_summary_per_stages_STAGE_ID_CURRENCY_ID {
  """Deals count per currency"""
  count: Int

  """Deals value per currency"""
  value: Int

  """Deals value formatted per currency"""
  value_formatted: String

  """Deals weighted value per currency"""
  weighted_value: Int

  """Deals weighted value formatted per currency"""
  weighted_value_formatted: String
}

"""The currency count summary"""
type query_getStage_data_allOf_1_deals_summary_per_currency {
  """
  Deals count per currency. This parameter is dynamic and changes according to `currency_id` value.
  """
  CURRENCY_ID: Int
}

"""Full currency summaries"""
type query_getStage_data_allOf_1_deals_summary_per_currency_full {
  CURRENCY_ID: query_getStage_data_allOf_1_deals_summary_per_currency_full_CURRENCY_ID
}

"""
The currency summary. This parameter is dynamic and changes according to `currency_id` value.
"""
type query_getStage_data_allOf_1_deals_summary_per_currency_full_CURRENCY_ID {
  """Deals count per currency"""
  count: Int

  """Deals value per currency"""
  value: Int
}

"""
If `everyone=1` is provided, deals summary will return deals owned by every user
"""
enum queryInput_getStage_everyone {
  _0
  _1
}

type query_getStageDeals {
  """If the request was successful or not"""
  success: Boolean

  """The array of deals"""
  data: [query_getStageDeals_data_items]
  additional_data: query_getStageDeals_additional_data
}

type query_getStageDeals_data_items {
  """The ID of the deal"""
  id: Int

  """The ID of the deal creator"""
  creator_user_id: Int

  """The ID of the user"""
  user_id: Int

  """The ID of the person associated with the deal"""
  person_id: Int

  """The ID of the organization associated with the deal"""
  org_id: Int

  """The ID of the deal stage"""
  stage_id: Int

  """The title of the deal"""
  title: String

  """The value of the deal"""
  value: Float

  """The currency associated with the deal"""
  currency: String

  """The creation date and time of the deal"""
  add_time: String

  """The last updated date and time of the deal"""
  update_time: String

  """The last updated date and time of the deal stage"""
  stage_change_time: String

  """Whether the deal is active or not"""
  active: Boolean

  """Whether the deal is deleted or not"""
  deleted: Boolean

  """The status of the deal"""
  status: String

  """The success probability percentage of the deal"""
  probability: Float

  """The date of the next activity associated with the deal"""
  next_activity_date: String

  """The time of the next activity associated with the deal"""
  next_activity_time: String

  """The ID of the next activity associated with the deal"""
  next_activity_id: Int

  """The ID of the last activity associated with the deal"""
  last_activity_id: Int

  """The date of the last activity associated with the deal"""
  last_activity_date: String

  """The reason for losing the deal"""
  lost_reason: String

  """The visibility of the deal"""
  visible_to: String

  """The date and time of closing the deal"""
  close_time: String

  """The ID of pipeline associated with the deal"""
  pipeline_id: Int

  """The date and time of changing the deal status as won"""
  won_time: String

  """The date and time of the first time changing the deal status as won"""
  first_won_time: String

  """The date and time of changing the deal status as lost"""
  lost_time: String

  """The number of products associated with the deal"""
  products_count: Int

  """The number of files associated with the deal"""
  files_count: Int

  """The number of notes associated with the deal"""
  notes_count: Int

  """The number of followers associated with the deal"""
  followers_count: Int

  """The number of emails associated with the deal"""
  email_messages_count: Int

  """The number of activities associated with the deal"""
  activities_count: Int

  """The number of completed activities associated with the deal"""
  done_activities_count: Int

  """The number of incomplete activities associated with the deal"""
  undone_activities_count: Int

  """The number of participants associated with the deal"""
  participants_count: Int

  """The expected close date of the deal"""
  expected_close_date: Date

  """The date and time of the last incoming email associated with the deal"""
  last_incoming_mail_time: String

  """The date and time of the last outgoing email associated with the deal"""
  last_outgoing_mail_time: String

  """The label assigned to the deal"""
  label: Int

  """The order number of the deal stage associated with the deal"""
  stage_order_nr: Int

  """The name of the person associated with the deal"""
  person_name: String

  """The name of the organization associated with the deal"""
  org_name: String

  """The subject of the next activity associated with the deal"""
  next_activity_subject: String

  """The type of the next activity associated with the deal"""
  next_activity_type: String

  """The duration of the next activity associated with the deal"""
  next_activity_duration: String

  """The note of the next activity associated with the deal"""
  next_activity_note: String

  """The deal value formatted with selected currency. E.g. US$500"""
  formatted_value: String

  """
  Probability times deal value. Probability can either be deal probability or if not set, then stage probability.
  """
  weighted_value: Float

  """The weighted_value formatted with selected currency. E.g. US$500"""
  formatted_weighted_value: String

  """The currency associated with the deal"""
  weighted_value_currency: String

  """The date and time of changing the deal status as rotten"""
  rotten_time: String

  """The name of the deal owner"""
  owner_name: String

  """The BCC email of the deal"""
  cc_email: String

  """If the organization that is associated with the deal is hidden or not"""
  org_hidden: Boolean

  """If the person that is associated with the deal is hidden or not"""
  person_hidden: Boolean
}

"""The additional data of the list"""
type query_getStageDeals_additional_data {
  """Pagination start"""
  start: Int

  """Items shown per page"""
  limit: Int

  """If there are more list items in the collection than displayed or not"""
  more_items_in_collection: Boolean
}

"""
If supplied, `filter_id` and `user_id` will not be considered – instead, deals owned by everyone will be returned
"""
enum queryInput_getStageDeals_everyone {
  _0
  _1
}

type query_getSubscription {
  """If the response is successful or not"""
  success: Boolean
  data: query_getSubscription_allOf_1_data
}

type query_getSubscription_allOf_1_data {
  """The ID of the subscription"""
  id: Int

  """The ID of the user who created the subscription"""
  user_id: Int

  """The ID of the deal this subscription is associated with"""
  deal_id: Int

  """The description of the recurring subscription"""
  description: String

  """The subscription status"""
  is_active: Boolean

  """Shows how many payments a recurring subscription has"""
  cycles_count: Int

  """The amount of each payment"""
  cycle_amount: Int

  """
  Indicates that the recurring subscription will last until it is manually canceled or deleted
  """
  infinite: Boolean

  """The currency of the subscription"""
  currency: String

  """The interval between payments"""
  cadence_type: String

  """The start date of the recurring subscription"""
  start_date: Date

  """The end date of the subscription"""
  end_date: Date

  """The total value of all payments"""
  lifetime_value: Float

  """The final status of the subscription"""
  final_status: String

  """The creation time of the subscription"""
  add_time: String

  """The update time of the subscription"""
  update_time: String
}

type query_findSubscriptionByDeal {
  """If the response is successful or not"""
  success: Boolean
  data: query_findSubscriptionByDeal_allOf_1_data
}

type query_findSubscriptionByDeal_allOf_1_data {
  """The ID of the subscription"""
  id: Int

  """The ID of the user who created the subscription"""
  user_id: Int

  """The ID of the deal this subscription is associated with"""
  deal_id: Int

  """The description of the recurring subscription"""
  description: String

  """The subscription status"""
  is_active: Boolean

  """Shows how many payments a recurring subscription has"""
  cycles_count: Int

  """The amount of each payment"""
  cycle_amount: Int

  """
  Indicates that the recurring subscription will last until it is manually canceled or deleted
  """
  infinite: Boolean

  """The currency of the subscription"""
  currency: String

  """The interval between payments"""
  cadence_type: String

  """The start date of the recurring subscription"""
  start_date: Date

  """The end date of the subscription"""
  end_date: Date

  """The total value of all payments"""
  lifetime_value: Float

  """The final status of the subscription"""
  final_status: String

  """The creation time of the subscription"""
  add_time: String

  """The update time of the subscription"""
  update_time: String
}

type payment {
  """If the response is successful or not"""
  success: Boolean
  data: [query_getSubscriptionPayments_allOf_1_data_items]
}

type query_getSubscriptionPayments_allOf_1_data_items {
  """The ID of the payment"""
  id: Int

  """The ID of the subscription this payment is associated with"""
  subscription_id: Int

  """The ID of the deal this payment is associated with"""
  deal_id: Int

  """The payment status"""
  is_active: Boolean

  """The payment amount"""
  amount: Float

  """The currency of the payment"""
  currency: String

  """
  The difference between the amount of the current payment and the previous payment. The value can be either positive or negative.
  """
  change_amount: Float

  """The date when payment occurs"""
  due_at: Date
  revenue_movement_type: query_getSubscriptionPayments_allOf_1_data_items_revenue_movement_type
  payment_type: query_getSubscriptionPayments_allOf_1_data_items_payment_type

  """The description of the payment"""
  description: String

  """The creation time of the payment"""
  add_time: String

  """The update time of the payment"""
  update_time: String
}

"""
Represents the movement of revenue in comparison with the previous payment. Possible values are: `New` - first payment of the subscription. `Recurring` - no movement. `Expansion` - current payment amount > previous payment amount. `Contraction` - current payment amount < previous payment amount. `Churn` - last payment of the subscription.
"""
enum query_getSubscriptionPayments_allOf_1_data_items_revenue_movement_type {
  new
  recurring
  expansion
  contraction
  none
  churn
}

"""
The type of the payment. Possible values are: `Recurring` - payments occur over fixed intervals of time, `Additional` - extra payment not the recurring payment of the recurring subscription, `Installment` - payment of the installment subscription.
"""
enum query_getSubscriptionPayments_allOf_1_data_items_payment_type {
  recurring
  additional
  installment
}

type users {
  """If the response is successful or not"""
  success: Boolean
  data: [query_getUsers_allOf_1_data_items]
}

type query_getUsers_allOf_1_data_items {
  """The user ID"""
  id: Int

  """The user name"""
  name: String

  """The user default currency"""
  default_currency: String

  """The user locale"""
  locale: String

  """The user language ID"""
  lang: Int

  """The user email"""
  email: String

  """The user phone"""
  phone: String

  """Boolean that indicates whether the user is activated"""
  activated: Boolean

  """The last login date and time of the user. Format: YYYY-MM-DD HH:MM:SS"""
  last_login: String

  """The creation date and time of the user. Format: YYYY-MM-DD HH:MM:SS"""
  created: String

  """
  The last modification date and time of the user. Format: YYYY-MM-DD HH:MM:SS
  """
  modified: String

  """Boolean that indicates whether the user has created a company"""
  has_created_company: Boolean
  access: [query_getUsers_allOf_1_data_items_access_items]

  """Boolean that indicates whether the user is activated"""
  active_flag: Boolean

  """The user timezone name"""
  timezone_name: String

  """The user timezone offset"""
  timezone_offset: String

  """The ID of the user role"""
  role_id: Int

  """The user icon URL"""
  icon_url: String

  """
  Boolean that indicates if the requested user is the same which is logged in (in this case, always true)
  """
  is_you: Boolean
}

type query_getUsers_allOf_1_data_items_access_items {
  app: query_getUsers_allOf_1_data_items_access_items_app
  admin: Boolean
  permission_set_id: String
}

enum query_getUsers_allOf_1_data_items_access_items_app {
  sales
  projects
  campaigns
  global
  account_settings
}

type query_findUsersByName {
  """If the response is successful or not"""
  success: Boolean
  data: [query_findUsersByName_allOf_1_data_items]
}

type query_findUsersByName_allOf_1_data_items {
  """The user ID"""
  id: Int

  """The user name"""
  name: String

  """The user default currency"""
  default_currency: String

  """The user locale"""
  locale: String

  """The user language ID"""
  lang: Int

  """The user email"""
  email: String

  """The user phone"""
  phone: String

  """Boolean that indicates whether the user is activated"""
  activated: Boolean

  """The last login date and time of the user. Format: YYYY-MM-DD HH:MM:SS"""
  last_login: String

  """The creation date and time of the user. Format: YYYY-MM-DD HH:MM:SS"""
  created: String

  """
  The last modification date and time of the user. Format: YYYY-MM-DD HH:MM:SS
  """
  modified: String

  """Boolean that indicates whether the user has created a company"""
  has_created_company: Boolean
  access: [query_findUsersByName_allOf_1_data_items_access_items]

  """Boolean that indicates whether the user is activated"""
  active_flag: Boolean

  """The user timezone name"""
  timezone_name: String

  """The user timezone offset"""
  timezone_offset: String

  """The ID of the user role"""
  role_id: Int

  """The user icon URL"""
  icon_url: String

  """
  Boolean that indicates if the requested user is the same which is logged in (in this case, always true)
  """
  is_you: Boolean
}

type query_findUsersByName_allOf_1_data_items_access_items {
  app: query_findUsersByName_allOf_1_data_items_access_items_app
  admin: Boolean
  permission_set_id: String
}

enum query_findUsersByName_allOf_1_data_items_access_items_app {
  sales
  projects
  campaigns
  global
  account_settings
}

"""
When enabled, the term will only be matched against email addresses of users. Default: `false`
"""
enum queryInput_findUsersByName_search_by_email {
  _0
  _1
}

union getCurrentUser_response = getCurrentUser | unathorizedResponse

type getCurrentUser {
  """If the response is successful or not"""
  success: Boolean
  data: query_getCurrentUser_oneOf_0_allOf_1_data
}

type query_getCurrentUser_oneOf_0_allOf_1_data {
  """The user ID"""
  id: Int

  """The user name"""
  name: String

  """The user default currency"""
  default_currency: String

  """The user locale"""
  locale: String

  """The user language ID"""
  lang: Int

  """The user email"""
  email: String

  """The user phone"""
  phone: String

  """Boolean that indicates whether the user is activated"""
  activated: Boolean

  """The last login date and time of the user. Format: YYYY-MM-DD HH:MM:SS"""
  last_login: String

  """The creation date and time of the user. Format: YYYY-MM-DD HH:MM:SS"""
  created: String

  """
  The last modification date and time of the user. Format: YYYY-MM-DD HH:MM:SS
  """
  modified: String

  """Boolean that indicates whether the user has created a company"""
  has_created_company: Boolean
  access: [query_getCurrentUser_oneOf_0_allOf_1_data_allOf_0_access_items]

  """Boolean that indicates whether the user is activated"""
  active_flag: Boolean

  """The user timezone name"""
  timezone_name: String

  """The user timezone offset"""
  timezone_offset: String

  """The ID of the user role"""
  role_id: Int

  """The user icon URL"""
  icon_url: String

  """
  Boolean that indicates if the requested user is the same which is logged in (in this case, always true)
  """
  is_you: Boolean

  """The user company ID"""
  company_id: Int

  """The user company name"""
  company_name: String

  """The user company domain"""
  company_domain: String

  """The user company country"""
  company_country: String

  """The user company industry"""
  company_industry: String
  language: query_getCurrentUser_oneOf_0_allOf_1_data_allOf_1_language
}

type query_getCurrentUser_oneOf_0_allOf_1_data_allOf_0_access_items {
  app: query_getCurrentUser_oneOf_0_allOf_1_data_allOf_0_access_items_app
  admin: Boolean
  permission_set_id: String
}

enum query_getCurrentUser_oneOf_0_allOf_1_data_allOf_0_access_items_app {
  sales
  projects
  campaigns
  global
  account_settings
}

"""The user language details"""
type query_getCurrentUser_oneOf_0_allOf_1_data_allOf_1_language {
  """The language code. E.g. en"""
  language_code: String

  """The country code. E.g. US"""
  country_code: String
}

type unathorizedResponse {
  """If the response is successful or not"""
  success: Boolean

  """The error message"""
  error: String

  """The response error code"""
  errorCode: Int
}

union getUser_response = query_getUser_oneOf_0 | failResponse

type query_getUser_oneOf_0 {
  """If the response is successful or not"""
  success: Boolean
  data: query_getUser_oneOf_0_allOf_1_data
}

type query_getUser_oneOf_0_allOf_1_data {
  """The user ID"""
  id: Int

  """The user name"""
  name: String

  """The user default currency"""
  default_currency: String

  """The user locale"""
  locale: String

  """The user language ID"""
  lang: Int

  """The user email"""
  email: String

  """The user phone"""
  phone: String

  """Boolean that indicates whether the user is activated"""
  activated: Boolean

  """The last login date and time of the user. Format: YYYY-MM-DD HH:MM:SS"""
  last_login: String

  """The creation date and time of the user. Format: YYYY-MM-DD HH:MM:SS"""
  created: String

  """
  The last modification date and time of the user. Format: YYYY-MM-DD HH:MM:SS
  """
  modified: String

  """Boolean that indicates whether the user has created a company"""
  has_created_company: Boolean
  access: [query_getUser_oneOf_0_allOf_1_data_access_items]

  """Boolean that indicates whether the user is activated"""
  active_flag: Boolean

  """The user timezone name"""
  timezone_name: String

  """The user timezone offset"""
  timezone_offset: String

  """The ID of the user role"""
  role_id: Int

  """The user icon URL"""
  icon_url: String

  """
  Boolean that indicates if the requested user is the same which is logged in (in this case, always true)
  """
  is_you: Boolean
}

type query_getUser_oneOf_0_allOf_1_data_access_items {
  app: query_getUser_oneOf_0_allOf_1_data_access_items_app
  admin: Boolean
  permission_set_id: String
}

enum query_getUser_oneOf_0_allOf_1_data_access_items_app {
  sales
  projects
  campaigns
  global
  account_settings
}

union getUserFollowers_response = query_getUserFollowers_oneOf_0 | failResponse

type query_getUserFollowers_oneOf_0 {
  """If the response is successful or not"""
  success: Boolean

  """The list of user IDs"""
  data: [Int]
}

type getUserPermissions {
  """If the response is successful or not"""
  success: Boolean
  data: query_getUserPermissions_allOf_1_data
}

type query_getUserPermissions_allOf_1_data {
  """If the user can add custom fields"""
  can_add_custom_fields: Boolean

  """If the user can add products"""
  can_add_products: Boolean

  """If the user can add prospects as leads"""
  can_add_prospects_as_leads: Boolean

  """If the user can bulk edit items"""
  can_bulk_edit_items: Boolean

  """If the user can change visibility of items"""
  can_change_visibility_of_items: Boolean

  """If the user can convert deals to leads"""
  can_convert_deals_to_leads: Boolean

  """If the user can create workflows"""
  can_create_own_workflow: Boolean

  """If the user can delete activities"""
  can_delete_activities: Boolean

  """If the user can delete custom fields"""
  can_delete_custom_fields: Boolean

  """If the user can delete deals"""
  can_delete_deals: Boolean

  """If the user can edit custom fields"""
  can_edit_custom_fields: Boolean

  """If the user can edit deals' closed date"""
  can_edit_deals_closed_date: Boolean

  """If the user can edit products"""
  can_edit_products: Boolean

  """If the user can edit shared filters"""
  can_edit_shared_filters: Boolean

  """If the user can export data from item lists"""
  can_export_data_from_lists: Boolean

  """If the user can follow other users"""
  can_follow_other_users: Boolean

  """If the user can merge deals"""
  can_merge_deals: Boolean

  """If the user can merge organizations"""
  can_merge_organizations: Boolean

  """If the user can merge people"""
  can_merge_people: Boolean

  """If the user can modify labels"""
  can_modify_labels: Boolean

  """If the user can see company-wide statistics"""
  can_see_company_wide_statistics: Boolean

  """If the user can see the summary on the deals page"""
  can_see_deals_list_summary: Boolean

  """If the user can see the names of hidden items"""
  can_see_hidden_items_names: Boolean

  """If the user can see other users"""
  can_see_other_users: Boolean

  """If the user can see other users' statistics"""
  can_see_other_users_statistics: Boolean

  """If the user can see security dashboard"""
  can_see_security_dashboard: Boolean

  """If the user can share filters"""
  can_share_filters: Boolean

  """If the user can share insights"""
  can_share_insights: Boolean

  """If the user can use API"""
  can_use_api: Boolean

  """If the user can use email tracking"""
  can_use_email_tracking: Boolean

  """If the user can use import"""
  can_use_import: Boolean
}

type query_getUserRoleAssignments {
  """If the response is successful or not"""
  success: Boolean

  """The role assignments"""
  data: [query_getUserRoleAssignments_allOf_1_data_items]
  additional_data: query_getUserRoleAssignments_allOf_1_additional_data
}

"""The assignment data of the role"""
type query_getUserRoleAssignments_allOf_1_data_items {
  """The ID of the parent role"""
  parent_role_id: Int

  """The name of the role"""
  name: String

  """The user ID"""
  user_id: Int

  """The role ID"""
  role_id: Int

  """Whether the role is active or not"""
  active_flag: Boolean

  """The assignment type"""
  type: String
}

"""The additional data in the role list"""
type query_getUserRoleAssignments_allOf_1_additional_data {
  pagination: query_getUserRoleAssignments_allOf_1_additional_data_pagination
}

"""The pagination details in the role list"""
type query_getUserRoleAssignments_allOf_1_additional_data_pagination {
  """Pagination start"""
  start: Int

  """Items shown per page"""
  limit: Int

  """Whether there are more list items in the collection than displayed"""
  more_items_in_collection: Boolean
}

type query_getUserRoleSettings {
  """If the response is successful or not"""
  success: Boolean
  data: query_getUserRoleSettings_allOf_1_data
}

"""The settings for the role"""
type query_getUserRoleSettings_allOf_1_data {
  """The default visibility level of the deals for the role"""
  deal_default_visibility: Float

  """The default visibility level of the leads for the role"""
  lead_default_visibility: Float

  """The default visibility level of the organizations for the role"""
  org_default_visibility: Float

  """The default visibility level of the people for the role"""
  person_default_visibility: Float

  """The default visibility level of the products for the role"""
  product_default_visibility: Float

  """The access level of the deals for the role (only for default role)"""
  deal_access_level: Float

  """
  The access level of the organizations for the role (only for default role)
  """
  org_access_level: Float

  """The access level of the people for the role (only for default role)"""
  person_access_level: Float

  """The access level of the products for the role (only for default role)"""
  product_access_level: Float
}

union getUserConnections_response = userConnections | unathorizedResponse

type userConnections {
  """If the response is successful or not"""
  success: Boolean
  data: query_getUserConnections_oneOf_0_allOf_1_data
}

"""The object of UserConnections"""
type query_getUserConnections_oneOf_0_allOf_1_data {
  """The third party ID or false in case the ID is not found"""
  google: String
}

union getUserSettings_response = getUserSettings | unathorizedResponse

type getUserSettings {
  """If the response is successful or not"""
  success: Boolean
  data: query_getUserSettings_oneOf_0_allOf_1_data
}

type query_getUserSettings_oneOf_0_allOf_1_data {
  """
  If the vendors are allowed to install custom Marketplace apps with functionality and content in the Pipedrive UI or not
  """
  marketplace_allow_custom_install_url: Boolean

  """
  If the vendors are allowed to extend their Marketplace apps with functionality and content in the Pipedrive UI or not
  """
  marketplace_app_extensions_vendor: Boolean

  """If the vendors are allowed to be part of the Marketplace team or not"""
  marketplace_team: Boolean

  """The number of results shown in list by default"""
  list_limit: Float

  """Whether beta app is enabled"""
  beta_app: Boolean

  """Prevent salesphone call to override"""
  prevent_salesphone_callto_override: Boolean

  """The destination of file upload"""
  file_upload_destination: String

  """The call to link syntax"""
  callto_link_syntax: String

  """
  Whether the expected close date of the deal is filled automatically or not
  """
  autofill_deal_expected_close_date: Boolean

  """Allow the vendors to duplicate a person"""
  person_duplicate_condition: String
}

union getWebhooks_response = getWebhooks | unathorizedResponse

type getWebhooks {
  """If the response is successful or not"""
  success: Boolean

  """The status of the response"""
  status: String

  """The array of Webhooks"""
  data: [query_getWebhooks_oneOf_0_allOf_1_data_items]
}

type query_getWebhooks_oneOf_0_allOf_1_data_items {
  """The ID of the Webhook"""
  id: Int

  """The ID of the company related to the Webhook"""
  company_id: Int

  """The ID of the user who owns the Webhook"""
  owner_id: Int

  """The ID of the user related to the Webhook"""
  user_id: Int

  """The Webhook action"""
  event_action: String

  """The Webhook object"""
  event_object: String

  """The subscription URL of the Webhook"""
  subscription_url: String
  is_active: numberBooleanDefault13

  """The date when the Webhook was added"""
  add_time: DateTime

  """The date when the Webhook was removed (if removed)"""
  remove_time: DateTime
  type: query_getWebhooks_oneOf_0_allOf_1_data_items_type

  """The username of the `subscription_url` of the Webhook"""
  http_auth_user: String

  """The password of the `subscription_url` of the Webhook"""
  http_auth_password: String
  additional_data: JSON

  """The removal reason of the Webhook (if removed)"""
  remove_reason: String

  """The last delivery time of the Webhook"""
  last_delivery_time: DateTime

  """The last delivery HTTP status of the Webhook"""
  last_http_status: Int

  """The ID of the admin of the Webhook"""
  admin_id: Int
}

enum numberBooleanDefault13 {
  _0
  _1
}

"""The type of the Webhook"""
enum query_getWebhooks_oneOf_0_allOf_1_data_items_type {
  general
  app
}

type Mutation {
  """
  Marks multiple activities as deleted. After 30 days, the activities will be permanently deleted.
  """
  deleteActivities(
    """The comma-separated IDs of activities that will be deleted"""
    ids: String!
  ): deleteActivities

  """
  Adds a new activity. Includes `more_activities_scheduled_in_context` property in response's `additional_data` which indicates whether there are more undone activities scheduled with the same deal, person or organization (depending on the supplied data). For more information, see the tutorial for <a href="https://pipedrive.readme.io/docs/adding-an-activity" target="_blank" rel="noopener noreferrer">adding an activity</a>.
  """
  addActivity(input: addActivityRequest_Input): addActivity

  """
  Marks an activity as deleted. After 30 days, the activity will be permanently deleted.
  """
  deleteActivity(
    """The ID of the activity"""
    id: Int!
  ): deleteActivity

  """
  Updates an activity. Includes `more_activities_scheduled_in_context` property in response's `additional_data` which indicates whether there are more undone activities scheduled with the same deal, person or organization (depending on the supplied data).
  """
  updateActivity(
    """The ID of the activity"""
    id: Int!
    input: updateActivityRequest_Input
  ): updateActivity

  """Marks multiple activity types as deleted."""
  deleteActivityTypes(
    """The comma-separated activity type IDs"""
    ids: String!
  ): deleteActivityTypes

  """Adds a new activity type."""
  addActivityType(input: addActivityTypeRequest_Input): createUpdateDeleteActivityType

  """Marks an activity type as deleted."""
  deleteActivityType(
    """The ID of the activity type"""
    id: Int!
  ): mutation_deleteActivityType

  """Updates an activity type."""
  updateActivityType(
    """The ID of the activity type"""
    id: Int!
    input: updateActivityTypeRequest_Input
  ): mutation_updateActivityType

  """Adds a new call log."""
  addCallLog(input: mutationInput_addCallLog_input_Input): addCallLog_response

  """
  Deletes a call log. If there is an audio recording attached to it, it will also be deleted. The related activity will not be removed by this request. If you want to remove the related activities, please use the endpoint which is specific for activities.
  """
  deleteCallLog(
    """The ID received when you create the call log"""
    id: String!
  ): deleteCallLog_response

  """
  Adds an audio recording to the call log. That audio can be played by those who have access to the call log object.
  """
  addCallLogAudioFile(
    """The ID received when you create the call log"""
    id: String!
    input: addCallLogAudioFileRequest_Input
  ): addCallLogAudioFile_response

  """
  Adds a new messaging channel, only admins are able to register new channels. It will use the getConversations endpoint to fetch conversations, participants and messages afterward. To use the endpoint, you need to have **Messengers integration** OAuth scope enabled and the Messaging manifest ready for the [Messaging app extension](https://pipedrive.readme.io/docs/messaging-app-extension).
  """
  addChannel(input: addChannel_request_Input): addChannel_response

  """
  Deletes an existing messenger’s channel and all related entities (conversations and messages). To use the endpoint, you need to have **Messengers integration** OAuth scope enabled and the Messaging manifest ready for the [Messaging app extension](https://pipedrive.readme.io/docs/messaging-app-extension).
  """
  deleteChannel(
    """The ID of the channel provided by the integration"""
    id: String!
  ): deleteChannel_response

  """
  Adds a message to a conversation. To use the endpoint, you need to have **Messengers integration** OAuth scope enabled and the Messaging manifest ready for the [Messaging app extension](https://pipedrive.readme.io/docs/messaging-app-extension).
  """
  receiveMessage(input: receiveMessage_request_Input): receiveMessage_response

  """
  Deletes an existing conversation. To use the endpoint, you need to have **Messengers integration** OAuth scope enabled and the Messaging manifest ready for the [Messaging app extension](https://pipedrive.readme.io/docs/messaging-app-extension).
  """
  deleteConversation(
    """The ID of the channel provided by the integration"""
    channel_id: String!

    """The ID of the conversation provided by the integration"""
    conversation_id: String!
  ): deleteConversation_response

  """
  Adds a new deal. Note that you can supply additional custom fields along with the request that are not described here. These custom fields are different for each Pipedrive account and can be recognized by long hashes as keys. To determine which custom fields exists, fetch the dealFields and look for `key` values. For more information, see the tutorial for <a href="https://pipedrive.readme.io/docs/creating-a-deal" target="_blank" rel="noopener noreferrer">adding a deal</a>.
  """
  addDeal(input: addDealRequest_Input): deal

  """
  Marks multiple deals as deleted. After 30 days, the deals will be permanently deleted.
  """
  deleteDeals(
    """The comma-separated IDs that will be deleted"""
    ids: String!
  ): deleteDeals

  """
  Marks a deal as deleted. After 30 days, the deal will be permanently deleted.
  """
  deleteDeal(
    """The ID of the deal"""
    id: Int!
  ): deleteDeal

  """
  Updates the properties of a deal. For more information, see the tutorial for <a href="https://pipedrive.readme.io/docs/updating-a-deal" target="_blank" rel="noopener noreferrer">updating a deal</a>.
  """
  updateDeal(
    """The ID of the deal"""
    id: Int!
    input: updateDealRequest_Input
  ): mutation_updateDeal

  """Duplicates a deal."""
  duplicateDeal(
    """The ID of the deal"""
    id: Int!
  ): duplicateDeal

  """Adds a follower to a deal."""
  addDealFollower(
    """The ID of the deal"""
    id: Int!
    input: addDealFollowerRequest_Input
  ): addDealFollower

  """Deletes a follower from a deal."""
  deleteDealFollower(
    """The ID of the deal"""
    id: Int!

    """The ID of the follower"""
    follower_id: Int!
  ): deleteDealFollower

  """
  Merges a deal with another deal. For more information, see the tutorial for <a href="https://pipedrive.readme.io/docs/merging-two-deals" target="_blank" rel="noopener noreferrer">merging two deals</a>.
  """
  mergeDeals(
    """The ID of the deal"""
    id: Int!
    input: mergeDealsRequest_Input
  ): mergeDeals

  """Adds a participant to a deal."""
  addDealParticipant(
    """The ID of the deal"""
    id: Int!
    input: addDealParticipantRequest_Input
  ): addDealParticipant

  """Deletes a participant from a deal."""
  deleteDealParticipant(
    """The ID of the deal"""
    id: Int!

    """The ID of the participant of the deal"""
    deal_participant_id: Int!
  ): deleteDealParticipant

  """Adds a product to a deal, creating a new item called a deal-product."""
  addDealProduct(
    """The ID of the deal"""
    id: Int!
    input: addDealProductRequest_Input
  ): getAddProductAttachement

  """Updates the details of the product that has been attached to a deal."""
  updateDealProduct(
    """The ID of the deal"""
    id: Int!

    """
    The ID of the deal-product (the ID of the product attached to the deal)
    """
    product_attachment_id: Int!
    input: UpdateDealProductRequest_Input
  ): getProductAttachement

  """
  Deletes a product attachment from a deal, using the `product_attachment_id`.
  """
  deleteDealProduct(
    """The ID of the deal"""
    id: Int!

    """The product attachment ID"""
    product_attachment_id: Int!
  ): deleteDealProduct

  """
  Adds a new deal field. For more information, see the tutorial for <a href="https://pipedrive.readme.io/docs/adding-a-new-custom-field" target="_blank" rel="noopener noreferrer">adding a new custom field</a>.
  """
  addDealField(input: createFieldRequest_Input): field

  """Marks multiple deal fields as deleted."""
  deleteDealFields(
    """The comma-separated field IDs to delete"""
    ids: String!
  ): deleteFields

  """
  Marks a field as deleted. For more information, see the tutorial for <a href="https://pipedrive.readme.io/docs/deleting-a-custom-field" target="_blank" rel="noopener noreferrer">deleting a custom field</a>.
  """
  deleteDealField(
    """The ID of the field"""
    id: Int!
  ): deleteField

  """
  Updates a deal field. For more information, see the tutorial for <a href=" https://pipedrive.readme.io/docs/updating-custom-field-value " target="_blank" rel="noopener noreferrer">updating custom fields' values</a>.
  """
  updateDealField(
    """The ID of the field"""
    id: Int!
    input: updateFieldRequest_Input
  ): mutation_updateDealField

  """
  Lets you upload a file and associate it with a deal, person, organization, activity, product or lead. For more information, see the tutorial for <a href="https://pipedrive.readme.io/docs/adding-a-file" target="_blank" rel="noopener noreferrer">adding a file</a>.
  """
  addFile(input: addFileRequest_Input): addFile

  """
  Creates a new empty file in the remote location (`googledrive`) that will be linked to the item you supply. For more information, see the tutorial for <a href="https://pipedrive.readme.io/docs/adding-a-remote-file" target="_blank" rel="noopener noreferrer">adding a remote file</a>.
  """
  addFileAndLinkIt(input: addFileAndLinkItRequest_Input): addFileAndLinkIt

  """
  Links an existing remote file (`googledrive`) to the item you supply. For more information, see the tutorial for <a href="https://pipedrive.readme.io/docs/adding-a-remote-file" target="_blank" rel="noopener noreferrer">adding a remote file</a>.
  """
  linkFileToItem(input: linkFileToItemRequest_Input): linkFileToItem

  """
  Marks a file as deleted. After 30 days, the file will be permanently deleted.
  """
  deleteFile(
    """The ID of the file"""
    id: Int!
  ): deleteFile

  """Updates the properties of a file."""
  updateFile(
    """The ID of the file"""
    id: Int!
    input: updateFileRequest_Input
  ): updateFile

  """Marks multiple filters as deleted."""
  deleteFilters(
    """The comma-separated filter IDs to delete"""
    ids: String!
  ): deleteFilters

  """
  Adds a new filter, returns the ID upon success. Note that in the conditions JSON object only one first-level condition group is supported, and it must be glued with 'AND', and only two second level condition groups are supported of which one must be glued with 'AND' and the second with 'OR'. Other combinations do not work (yet) but the syntax supports introducing them in future. For more information, see the tutorial for <a href="https://pipedrive.readme.io/docs/adding-a-filter" target="_blank" rel="noopener noreferrer">adding a filter</a>.
  """
  addFilter(input: addFilterRequest_Input): postFilter

  """Marks a filter as deleted."""
  deleteFilter(
    """The ID of the filter"""
    id: Int!
  ): deleteFilter

  """Updates an existing filter."""
  updateFilter(
    """The ID of the filter"""
    id: Int!
    input: updateFilterRequest_Input
  ): mutation_updateFilter

  """
  Adds a new goal. Along with adding a new goal, a report is created to track the progress of your goal.
  """
  addGoal(input: addGoalRequest_Input): addOrUpdateGoal

  """Updates an existing goal."""
  updateGoal(
    """The ID of the goal"""
    id: String!
    input: basicGoalRequest_Input
  ): mutation_updateGoal

  """Marks a goal as deleted."""
  deleteGoal(
    """The ID of the goal"""
    id: String!
  ): deleteGoal

  """
  Creates a lead. A lead always has to be linked to a person or an organization or both. All leads created through the Pipedrive API will have a lead source `API` assigned. Here's the tutorial for <a href="https://pipedrive.readme.io/docs/adding-a-lead" target="_blank" rel="noopener noreferrer">adding a lead</a>. If a lead contains custom fields, the fields' values will be included in the response in the same format as with the `Deals` endpoints. If a custom field's value hasn't been set for the lead, it won't appear in the response. Please note that leads do not have a separate set of custom fields, instead they inherit the custom fields' structure from deals. See an example given in the <a href="https://pipedrive.readme.io/docs/updating-custom-field-value" target="_blank" rel="noopener noreferrer">updating custom fields' values tutorial</a>.
  """
  addLead(input: addLeadRequest_Input): oneLead

  """
  Updates one or more properties of a lead. Only properties included in the request will be updated. Send `null` to unset a property (applicable for example for `value`, `person_id` or `organization_id`). If a lead contains custom fields, the fields' values will be included in the response in the same format as with the `Deals` endpoints. If a custom field's value hasn't been set for the lead, it won't appear in the response. Please note that leads do not have a separate set of custom fields, instead they inherit the custom fields’ structure from deals. See an example given in the <a href="https://pipedrive.readme.io/docs/updating-custom-field-value" target="_blank" rel="noopener noreferrer">updating custom fields’ values tutorial</a>.
  """
  updateLead(
    """The ID of the lead"""
    id: UUID!
    input: updateLeadRequest_Input
  ): updateLead_response

  """Deletes a specific lead."""
  deleteLead(
    """The ID of the lead"""
    id: UUID!
  ): deleteLead_response

  """Creates a lead label."""
  addLeadLabel(input: addLeadLabelRequest_Input): addOrUpdateLeadLabel

  "Updates one or more properties of a lead label. Only properties included in the request will be updated.\n"
  updateLeadLabel(
    """The ID of the lead label"""
    id: UUID!
    input: updateLeadLabelRequest_Input
  ): updateLeadLabel_response

  """Deletes a specific lead label."""
  deleteLeadLabel(
    """The ID of the lead label"""
    id: UUID!
  ): deleteLeadLabel_response

  """Adds a new team to the company and returns the created object."""
  addTeam(input: mutationInput_addTeam_input_Input): addTeam_response

  """Updates an existing team and returns the updated object."""
  updateTeam(
    """The ID of the team"""
    id: Int!
    input: mutationInput_updateTeam_input_Input
  ): updateTeam_response

  """Adds users to an existing team."""
  addTeamUser(
    """The ID of the team"""
    id: Int!
    input: addTeamUserRequest_Input
  ): addTeamUser_response

  """Deletes users from an existing team."""
  deleteTeamUser(
    """The ID of the team"""
    id: Int!
    input: deleteTeamUserRequest_Input
  ): deleteTeamUser_response

  """Marks a mail thread as deleted."""
  deleteMailThread(
    """The ID of the mail thread"""
    id: Int!
  ): deleteMailThread

  """Updates the properties of a mail thread."""
  updateMailThreadDetails(
    """The ID of the mail thread"""
    id: Int!
    input: updateMailThreadDetailsRequest_Input
  ): updateMailThreadDetails

  """Adds a new note."""
  addNote(input: addNote_request_Input): oneNote

  """Deletes a specific note."""
  deleteNote(
    """The ID of the note"""
    id: Int!
  ): deleteNote

  """Updates a note."""
  updateNote(
    """The ID of the note"""
    id: Int!
    input: noteRequest_Input
  ): mutation_updateNote

  """Adds a new comment to a note."""
  addNoteComment(
    """The ID of the note"""
    id: Int!
    input: CommentPostPutObject_Input
  ): oneComment

  """Updates a comment related to a note."""
  updateCommentForNote(
    """The ID of the note"""
    id: Int!

    """The ID of the comment"""
    commentId: UUID!
    input: CommentPostPutObject_Input
  ): mutation_updateCommentForNote

  """Deletes a comment."""
  deleteComment(
    """The ID of the note"""
    id: Int!

    """The ID of the comment"""
    commentId: UUID!
  ): deleteComment

  """
  Marks multiple organizations as deleted. After 30 days, the organizations will be permanently deleted.
  """
  deleteOrganizations(
    """The comma-separated IDs that will be deleted"""
    ids: String!
  ): deleteOrganizations

  """
  Adds a new organization. Note that you can supply additional custom fields along with the request that are not described here. These custom fields are different for each Pipedrive account and can be recognized by long hashes as keys. To determine which custom fields exists, fetch the organizationFields and look for `key` values. For more information, see the tutorial for <a href="https://pipedrive.readme.io/docs/adding-an-organization" target="_blank" rel="noopener noreferrer">adding an organization</a>.
  """
  addOrganization(input: addOrganizationRequest_Input): addOrganization

  """
  Marks an organization as deleted. After 30 days, the organization will be permanently deleted.
  """
  deleteOrganization(
    """The ID of the organization"""
    id: Int!
  ): deleteOrganization

  """Updates the properties of an organization."""
  updateOrganization(
    """The ID of the organization"""
    id: Int!
    input: updateOrganizationRequest_Input
  ): updateOrganization

  """Adds a follower to an organization."""
  addOrganizationFollower(
    """The ID of the organization"""
    id: Int!
    input: addOrganizationFollowerRequest_Input
  ): addOrganizationFollower

  """
  Deletes a follower from an organization. You can retrieve the `follower_id` from the <a href="https://developers.pipedrive.com/docs/api/v1/Organizations#getOrganizationFollowers">List followers of an organization</a> endpoint.
  """
  deleteOrganizationFollower(
    """The ID of the organization"""
    id: Int!

    """The ID of the follower"""
    follower_id: Int!
  ): deleteOrganizationFollower

  """
  Merges an organization with another organization. For more information, see the tutorial for <a href="https://pipedrive.readme.io/docs/merging-two-organizations" target="_blank" rel="noopener noreferrer">merging two organizations</a>.
  """
  mergeOrganizations(
    """The ID of the organization"""
    id: Int!
    input: mergeOrganizationsRequest_Input
  ): mergeOrganizations

  """
  Adds a new organization field. For more information, see the tutorial for <a href="https://pipedrive.readme.io/docs/adding-a-new-custom-field" target="_blank" rel="noopener noreferrer">adding a new custom field</a>.
  """
  addOrganizationField(input: mutationInput_addOrganizationField_input_Input): mutation_addOrganizationField

  """Marks multiple fields as deleted."""
  deleteOrganizationFields(
    """The comma-separated field IDs to delete"""
    ids: String!
  ): mutation_deleteOrganizationFields

  """
  Marks a field as deleted. For more information, see the tutorial for <a href="https://pipedrive.readme.io/docs/deleting-a-custom-field" target="_blank" rel="noopener noreferrer">deleting a custom field</a>.
  """
  deleteOrganizationField(
    """The ID of the field"""
    id: Int!
  ): mutation_deleteOrganizationField

  """
  Updates an organization field. For more information, see the tutorial for <a href=" https://pipedrive.readme.io/docs/updating-custom-field-value " target="_blank" rel="noopener noreferrer">updating custom fields' values</a>.
  """
  updateOrganizationField(
    """The ID of the field"""
    id: Int!
    input: mutationInput_updateOrganizationField_input_Input
  ): mutation_updateOrganizationField

  """Creates and returns an organization relationship."""
  addOrganizationRelationship(input: addOrganizationRelationshipRequest_Input): addOrganizationRelationship

  """Deletes an organization relationship and returns the deleted ID."""
  deleteOrganizationRelationship(
    """The ID of the organization relationship"""
    id: Int!
  ): deleteOrganizationRelationship

  """Updates and returns an organization relationship."""
  updateOrganizationRelationship(
    """The ID of the organization relationship"""
    id: Int!
    input: organizationRelationship_Input
  ): updateOrganizationRelationship

  """
  Marks multiple persons as deleted. After 30 days, the persons will be permanently deleted.
  """
  deletePersons(
    """The comma-separated IDs that will be deleted"""
    ids: String!
  ): deletePersons

  """
  Adds a new person. Note that you can supply additional custom fields along with the request that are not described here. These custom fields are different for each Pipedrive account and can be recognized by long hashes as keys. To determine which custom fields exists, fetch the personFields and look for `key` values.<br>If a company uses the [Campaigns product](https://pipedrive.readme.io/docs/campaigns-in-pipedrive-api), then this endpoint will also accept and return the `data.marketing_status` field.
  """
  addPerson(input: addPersonRequest_Input): addPerson

  """
  Marks a person as deleted. After 30 days, the person will be permanently deleted.
  """
  deletePerson(
    """The ID of the person"""
    id: Int!
  ): deletePerson

  """
  Updates the properties of a person. For more information, see the tutorial for <a href="https://pipedrive.readme.io/docs/updating-a-person" target="_blank" rel="noopener noreferrer">updating a person</a>.<br>If a company uses the [Campaigns product](https://pipedrive.readme.io/docs/campaigns-in-pipedrive-api), then this endpoint will also accept and return the `data.marketing_status` field.
  """
  updatePerson(
    """The ID of the person"""
    id: Int!
    input: updatePersonRequest_Input
  ): updatePerson

  """Adds a follower to a person."""
  addPersonFollower(
    """The ID of the person"""
    id: Int!
    input: addPersonFollowerRequest_Input
  ): addPersonFollower

  """Deletes a follower from a person."""
  deletePersonFollower(
    """The ID of the person"""
    id: Int!

    """The ID of the follower"""
    follower_id: Int!
  ): mutation_deletePersonFollower

  """
  Merges a person with another person. For more information, see the tutorial for <a href="https://pipedrive.readme.io/docs/merging-two-persons" target="_blank" rel="noopener noreferrer">merging two persons</a>.
  """
  mergePersons(
    """The ID of the person"""
    id: Int!
    input: mergePersonsRequest_Input
  ): mergePersons

  """Deletes a person’s picture."""
  deletePersonPicture(
    """The ID of the person"""
    id: Int!
  ): mutation_deletePersonPicture

  """
  Adds a picture to a person. If a picture is already set, the old picture will be replaced. Added image (or the cropping parameters supplied with the request) should have an equal width and height and should be at least 128 pixels. GIF, JPG and PNG are accepted. All added images will be resized to 128 and 512 pixel wide squares.
  """
  addPersonPicture(
    """The ID of the person"""
    id: Int!
    input: addPersonPictureRequest_Input
  ): addPersonPicture

  """
  Adds a new person field. For more information, see the tutorial for <a href="https://pipedrive.readme.io/docs/adding-a-new-custom-field" target="_blank" rel="noopener noreferrer">adding a new custom field</a>.
  """
  addPersonField(input: mutationInput_addPersonField_input_Input): mutation_addPersonField

  """Marks multiple fields as deleted."""
  deletePersonFields(
    """The comma-separated field IDs to delete"""
    ids: String!
  ): mutation_deletePersonFields

  """
  Marks a field as deleted. For more information, see the tutorial for <a href="https://pipedrive.readme.io/docs/deleting-a-custom-field" target="_blank" rel="noopener noreferrer">deleting a custom field</a>.
  """
  deletePersonField(
    """The ID of the field"""
    id: Int!
  ): mutation_deletePersonField

  """
  Updates a person field. For more information, see the tutorial for <a href=" https://pipedrive.readme.io/docs/updating-custom-field-value " target="_blank" rel="noopener noreferrer">updating custom fields' values</a>.
  """
  updatePersonField(
    """The ID of the field"""
    id: Int!
    input: mutationInput_updatePersonField_input_Input
  ): mutation_updatePersonField

  """Adds a new pipeline."""
  addPipeline(input: pipelineRequest_Input): addPipeline

  """Marks a pipeline as deleted."""
  deletePipeline(
    """The ID of the pipeline"""
    id: Int!
  ): deletePipeline

  """Updates the properties of a pipeline."""
  updatePipeline(
    """The ID of the pipeline"""
    id: Int!
    input: mutationInput_updatePipeline_input_Input
  ): updatePipeline

  """
  Adds a new product to the Products inventory. For more information, see the tutorial for <a href="https://pipedrive.readme.io/docs/adding-a-product" target="_blank" rel="noopener noreferrer">adding a product</a>.
  """
  addProduct(input: addProductRequest_Input): getproduct

  """
  Marks a product as deleted. After 30 days, the product will be permanently deleted.
  """
  deleteProduct(
    """The ID of the product"""
    id: Int!
  ): deleteProduct

  """Updates product data."""
  updateProduct(
    """The ID of the product"""
    id: Int!
    input: mutationInput_updateProduct_input_Input
  ): updateProduct

  """Adds a follower to a product."""
  addProductFollower(
    """The ID of the product"""
    id: Int!
    input: addProductFollowerRequest_Input
  ): newFollower

  """Deletes a follower from a product."""
  deleteProductFollower(
    """The ID of the product"""
    id: Int!

    """The ID of the relationship between the follower and the product"""
    follower_id: Int!
  ): deleteProductFollower

  """Marks multiple fields as deleted."""
  deleteProductFields(
    """The comma-separated field IDs to delete"""
    ids: String!
  ): deleteProductFields

  """
  Adds a new product field. For more information, see the tutorial for <a href="https://pipedrive.readme.io/docs/adding-a-new-custom-field" target="_blank" rel="noopener noreferrer">adding a new custom field</a>.
  """
  addProductField(input: addProductField_request_Input): getProductField

  """
  Marks a product field as deleted. For more information, see the tutorial for <a href="https://pipedrive.readme.io/docs/deleting-a-custom-field" target="_blank" rel="noopener noreferrer">deleting a custom field</a>.
  """
  deleteProductField(
    """The ID of the product field"""
    id: Int!
  ): deleteProductField_response

  """
  Updates a product field. For more information, see the tutorial for <a href=" https://pipedrive.readme.io/docs/updating-custom-field-value " target="_blank" rel="noopener noreferrer">updating custom fields' values</a>.
  """
  updateProductField(
    """The ID of the product field"""
    id: Int!
    input: UpdateProductField_Input
  ): mutation_updateProductField

  """Adds a new role."""
  addRole(input: addRoleRequest_Input): addRole

  """Marks a role as deleted."""
  deleteRole(
    """The ID of the role"""
    id: Int!
  ): deleteRole

  """Updates the parent role and/or the name of a specific role."""
  updateRole(
    """The ID of the role"""
    id: Int!
    input: baseRoleRequest_Input
  ): updateRole

  """Removes the assigned user from a role and adds to the default role."""
  deleteRoleAssignment(
    """The ID of the role"""
    id: Int!
    input: deleteRoleAssignmentRequest_Input
  ): deleteRoleAssignment

  """Assigns a user to a role."""
  addRoleAssignment(
    """The ID of the role"""
    id: Int!
    input: addRoleAssignmentRequest_Input
  ): addRoleAssignment

  """Adds or updates the visibility setting for a role."""
  addOrUpdateRoleSetting(
    """The ID of the role"""
    id: Int!
    input: addOrUpdateRoleSettingRequest_Input
  ): addOrUpdateRoleSetting

  """Marks multiple stages as deleted."""
  deleteStages(
    """The comma-separated stage IDs to delete"""
    ids: String!
  ): deleteStages

  """Adds a new stage, returns the ID upon success."""
  addStage(input: addStageRequest_Input): stage

  """Marks a stage as deleted."""
  deleteStage(
    """The ID of the stage"""
    id: Int!
  ): deleteStage

  """Updates the properties of a stage."""
  updateStage(
    """The ID of the stage"""
    id: Int!
    input: updateStageRequest_Input
  ): mutation_updateStage

  """Marks an installment or a recurring subscription as deleted."""
  deleteSubscription(
    """The ID of the subscription"""
    id: Int!
  ): subscriptionsId

  """Adds a new recurring subscription."""
  addRecurringSubscription(input: addRecurringSubscriptionRequest_Input): mutation_addRecurringSubscription

  """Adds a new installment subscription."""
  addSubscriptionInstallment(input: addSubscriptionInstallmentRequest_Input): mutation_addSubscriptionInstallment

  """Updates a recurring subscription."""
  updateRecurringSubscription(
    """The ID of the subscription"""
    id: Int!
    input: updateRecurringSubscriptionRequest_Input
  ): mutation_updateRecurringSubscription

  """Updates an installment subscription."""
  updateSubscriptionInstallment(
    """The ID of the subscription"""
    id: Int!
    input: updateSubscriptionInstallmentRequest_Input
  ): mutation_updateSubscriptionInstallment

  """Cancels a recurring subscription."""
  cancelRecurringSubscription(
    """The ID of the subscription"""
    id: Int!
    input: cancelRecurringSubscriptionRequest_Input
  ): mutation_cancelRecurringSubscription

  """Adds a new user to the company, returns the ID upon success."""
  addUser(input: addUserRequest_Input): addUser_response

  """
  Updates the properties of a user. Currently, only `active_flag` can be updated.
  """
  updateUser(
    """The ID of the user"""
    id: Int!
    input: updateUserRequest_Input
  ): updateUser_response

  """
  Creates a new Webhook and returns its details. Note that specifying an event which triggers the Webhook combines 2 parameters - `event_action` and `event_object`. E.g., use `*.*` for getting notifications about all events, `added.deal` for any newly added deals, `deleted.persons` for any deleted persons, etc. See <a href="https://pipedrive.readme.io/docs/guide-for-webhooks?ref=api_reference" target="_blank" rel="noopener noreferrer">the guide for Webhooks</a> for more details.
  """
  addWebhook(input: addWebhookRequest_Input): addWebhook_response

  """Deletes the specified Webhook."""
  deleteWebhook(
    """The ID of the Webhook to delete"""
    id: Int!
  ): deleteWebhook_response
}

type deleteActivities {
  success: Boolean
  data: mutation_deleteActivities_data
}

type mutation_deleteActivities_data {
  """An array of the IDs of activities that were deleted"""
  id: [Int]
}

type addActivity {
  success: Boolean
  data: activityResponseObject
  additional_data: mutation_addActivity_additional_data
  related_objects: mutation_addActivity_related_objects
}

type activityResponseObject {
  """The due date of the activity. Format: YYYY-MM-DD"""
  due_date: Date

  """The due time of the activity in UTC. Format: HH:MM"""
  due_time: String

  """The duration of the activity. Format: HH:MM"""
  duration: String

  """The ID of the deal this activity is associated with"""
  deal_id: Int

  """The ID of the lead in the UUID format this activity is associated with"""
  lead_id: UUID

  """The ID of the person this activity is associated with"""
  person_id: Int

  """The ID of the organization this activity is associated with"""
  org_id: Int

  """The note of the activity (HTML format)"""
  note: String

  """
  The address of the activity. Pipedrive will automatically check if the location matches a geo-location on Google maps.
  """
  location: String

  """
  Additional details about the activity that is synced to your external calendar. Unlike the note added to the activity, the description is publicly visible to any guests added to the activity.
  """
  public_description: String

  """The activity ID, generated when the activity was created"""
  id: Int

  """Whether the activity is done or not"""
  done: Boolean

  """The subject of the activity"""
  subject: String

  """
  The type of the activity. This is in correlation with the `key_string` parameter of ActivityTypes.
  """
  type: String

  """The ID of the user whom the activity is assigned to"""
  user_id: Int

  """
  List of multiple persons (participants) this activity is associated with
  """
  participants: [JSON]

  """
  Marks if the activity is set as 'Busy' or 'Free'. If the flag is set to `true`, your customers will not be able to book that time slot through any Scheduler links. The flag can also be unset. When the value of the flag is unset (`null`), the flag defaults to 'Busy' if it has a time set, and 'Free' if it is an all-day event without specified time.
  """
  busy_flag: Boolean

  """
  The attendees of the activity. This can be either your existing Pipedrive contacts or an external email address.
  """
  attendees: [JSON]

  """The user's company ID"""
  company_id: Int

  """
  If the activity references some other object, it is indicated here. For example, value `Salesphone` refers to activities created with Caller.
  """
  reference_type: String

  """Together with the `reference_type`, gives the ID of the other object"""
  reference_id: Int

  """The ID of Marketplace app, which is connected to this activity"""
  conference_meeting_client: String

  """The link to join the meeting which is associated with this activity"""
  conference_meeting_url: String

  """
  The meeting ID of the meeting provider (Zoom, MS Teams etc.) that is associated with this activity
  """
  conference_meeting_id: String

  """
  The creation date and time of the activity in UTC. Format: YYYY-MM-DD HH:MM:SS.
  """
  add_time: String

  """
  The date and time this activity was marked as done. Format: YYYY-MM-DD HH:MM:SS.
  """
  marked_as_done_time: String

  """
  The date and time of latest notifications sent about this activity to the participants or the attendees of this activity
  """
  last_notification_time: String

  """
  The ID of the user who triggered the sending of the latest notifications about this activity to the participants or the attendees of this activity
  """
  last_notification_user_id: Int

  """The ID of the language the notifications are sent in"""
  notification_language_id: Int

  """Whether the activity is active or not"""
  active_flag: Boolean

  """
  The last update date and time of the activity. Format: YYYY-MM-DD HH:MM:SS.
  """
  update_time: String

  """The ID of the user who was the last to update this activity"""
  update_user_id: Int

  """
  For the activity which syncs to Google calendar, this is the Google event ID. NB! This field is related to old Google calendar sync and will be deprecated soon.
  """
  gcal_event_id: String

  """
  The Google calendar ID that this activity syncs to. NB! This field is related to old Google calendar sync and will be deprecated soon.
  """
  google_calendar_id: String

  """
  The Google calendar API etag (version) that is used for syncing this activity. NB! This field is related to old Google calendar sync and will be deprecated soon.
  """
  google_calendar_etag: String

  """
  For activities that sync to an external calendar, this setting indicates if the activity syncs with context (what are the deals, persons, organizations this activity is related to)
  """
  calendar_sync_include_context: String

  """The timezone the activity was created in an external calendar"""
  source_timezone: String

  """
  The rule for the recurrence of the activity. Is important for activities synced into Pipedrive from an external calendar. Example: "RRULE:FREQ=WEEKLY;BYDAY=WE"
  """
  rec_rule: String

  """
  Additional rules for the recurrence of the activity, extend the `rec_rule`. Is important for activities synced into Pipedrive from an external calendar.
  """
  rec_rule_extension: String

  """
  The ID of parent activity for a recurrent activity if the current activity is an exception to recurrence rules
  """
  rec_master_activity_id: Int

  """
  The list of recurring activity instances. It is in a structure as follows: `[{due_date: "2020-06-24", due_time: "10:00:00"}]`
  """
  series: [JSON]

  """The ID of the user who created the activity"""
  created_by_user_id: Int

  """Subfield of location field. Indicates apartment/suite number."""
  location_subpremise: String

  """Subfield of location field. Indicates house number."""
  location_street_number: String

  """Subfield of location field. Indicates street name."""
  location_route: String

  """Subfield of location field. Indicates district/sublocality."""
  location_sublocality: String

  """Subfield of location field. Indicates city/town/village/locality."""
  location_locality: String

  """Subfield of location field. Indicates state/county."""
  location_admin_area_level_1: String

  """Subfield of location field. Indicates region."""
  location_admin_area_level_2: String

  """Subfield of location field. Indicates country."""
  location_country: String

  """Subfield of location field. Indicates ZIP/postal code."""
  location_postal_code: String

  """Subfield of location field. Indicates full/combined address."""
  location_formatted_address: String

  """The name of the organization this activity is associated with"""
  org_name: String

  """The name of the person this activity is associated with"""
  person_name: String

  """The name of the deal this activity is associated with"""
  deal_title: String

  """The name of the user this activity is owned by"""
  owner_name: String

  """The BCC email address of the person"""
  person_dropbox_bcc: String

  """The BCC email address of the deal"""
  deal_dropbox_bcc: String

  """
  The ID of the user to whom the activity is assigned to. Equal to `user_id`.
  """
  assigned_to_user_id: Int
  file: JSON
}

type mutation_addActivity_additional_data {
  """This field will be deprecated"""
  updates_story_id: Int
}

type mutation_addActivity_related_objects {
  user: mutation_addActivity_related_objects_user
  deal: mutation_addActivity_related_objects_deal
  person: mutation_addActivity_related_objects_person
  organization: mutation_addActivity_related_objects_organization
}

type mutation_addActivity_related_objects_user {
  USER_ID: userDataWithId
}

type userDataWithId {
  """The ID of the user"""
  id: Int

  """The name of the user"""
  name: String

  """The email of the user"""
  email: String

  """Whether the user has picture or not. 0 = No picture, 1 = Has picture."""
  has_pic: Int

  """The user picture hash"""
  pic_hash: String

  """Whether the user is active or not"""
  active_flag: Boolean
  JSON: JSON
}

type mutation_addActivity_related_objects_deal {
  DEAL_ID: mutation_addActivity_related_objects_deal_DEAL_ID
}

"""The ID of the deal which is associated with the item"""
type mutation_addActivity_related_objects_deal_DEAL_ID {
  """The ID of the deal associated with the item"""
  id: Int

  """The title of the deal associated with the item"""
  title: String

  """The status of the deal associated with the item"""
  status: String

  """The value of the deal that is associated with the item"""
  value: Float

  """The currency of the deal value"""
  currency: String

  """The ID of the stage the deal is currently at"""
  stage_id: Int

  """The ID of the pipeline the deal is in"""
  pipeline_id: Int
}

type mutation_addActivity_related_objects_person {
  PERSON_ID: mutation_addActivity_related_objects_person_PERSON_ID
}

"""The ID of the person associated with the item"""
type mutation_addActivity_related_objects_person_PERSON_ID {
  """Whether the associated person is active or not"""
  active_flag: Boolean

  """The ID of the person associated with the item"""
  id: Int

  """The name of the person associated with the item"""
  name: String

  """The emails of the person associated with the item"""
  email: [mutation_addActivity_related_objects_person_PERSON_ID_allOf_1_email_items]

  """The phone numbers of the person associated with the item"""
  phone: [mutation_addActivity_related_objects_person_PERSON_ID_allOf_1_phone_items]

  """The ID of the owner of the person that is associated with the item"""
  owner_id: Int
}

type mutation_addActivity_related_objects_person_PERSON_ID_allOf_1_email_items {
  """The type of the email"""
  label: String

  """The email of the associated person"""
  value: String

  """Whether this is the primary email or not"""
  primary: Boolean
}

type mutation_addActivity_related_objects_person_PERSON_ID_allOf_1_phone_items {
  """The type of the phone number"""
  label: String

  """The phone number of the person associated with the item"""
  value: String

  """Whether this is the primary phone number or not"""
  primary: Boolean
}

type mutation_addActivity_related_objects_organization {
  ORGANIZATION_ID: mutation_addActivity_related_objects_organization_ORGANIZATION_ID
}

"""The ID of the organization associated with the item"""
type mutation_addActivity_related_objects_organization_ORGANIZATION_ID {
  """Whether the associated organization is active or not"""
  active_flag: Boolean

  """The ID of the organization associated with the item"""
  id: Int

  """The name of the organization associated with the item"""
  name: String

  """
  The number of people connected with the organization that is associated with the item
  """
  people_count: Int

  """
  The ID of the owner of the organization that is associated with the item
  """
  owner_id: Int

  """The address of the organization"""
  address: String

  """The BCC email of the organization associated with the item"""
  cc_email: String
}

input addActivityRequest_Input {
  """The due date of the activity. Format: YYYY-MM-DD"""
  due_date: Date

  """The due time of the activity in UTC. Format: HH:MM"""
  due_time: String

  """The duration of the activity. Format: HH:MM"""
  duration: String

  """The ID of the deal this activity is associated with"""
  deal_id: Int

  """The ID of the lead this activity is associated with"""
  lead_id: String

  """The ID of the person this activity is associated with"""
  person_id: Int

  """The ID of the organization this activity is associated with"""
  org_id: Int

  """The note of the activity (HTML format)"""
  note: String

  """
  The address of the activity. Pipedrive will automatically check if the location matches a geo-location on Google maps.
  """
  location: String

  """
  Additional details about the activity that is synced to your external calendar. Unlike the note added to the activity, the description is publicly visible to any guests added to the activity.
  """
  public_description: String

  """
  The subject of the activity. When value for subject is not set, it will be given a default value `Call`.
  """
  subject: String

  """
  The type of the activity. This is in correlation with the `key_string` parameter of ActivityTypes. When value for type is not set, it will be given a default value `Call`.
  """
  type: String

  """
  The ID of the user whom the activity is assigned to. If omitted, the activity is assigned to the authorized user.
  """
  user_id: Int

  """
  List of multiple persons (participants) this activity is associated with. If omitted, single participant from `person_id` field is used. It requires a structure as follows: `[{"person_id":1,"primary_flag":true}]`
  """
  participants: [JSON]

  """
  Set the activity as 'Busy' or 'Free'. If the flag is set to `true`, your customers will not be able to book that time slot through any Scheduler links. The flag can also be unset by never setting it or overriding it with `null`. When the value of the flag is unset (`null`), the flag defaults to 'Busy' if it has a time set, and 'Free' if it is an all-day event without specified time.
  """
  busy_flag: Boolean

  """
  The attendees of the activity. This can be either your existing Pipedrive contacts or an external email address. It requires a structure as follows: `[{"email_address":"mail@example.org"}]` or `[{"person_id":1, "email_address":"mail@example.org"}]`
  """
  attendees: [JSON]
  done: numberBoolean3
}

enum numberBoolean3 {
  _0
  _1
}

type deleteActivity {
  success: Boolean
  data: mutation_deleteActivity_data
}

type mutation_deleteActivity_data {
  """The ID of the activity that was deleted"""
  id: Int
}

type updateActivity {
  success: Boolean
  data: mutation_updateActivity_data
  related_objects: mutation_updateActivity_related_objects
}

type mutation_updateActivity_data {
  """The due date of the activity. Format: YYYY-MM-DD"""
  due_date: Date

  """The due time of the activity in UTC. Format: HH:MM"""
  due_time: String

  """The duration of the activity. Format: HH:MM"""
  duration: String

  """The ID of the deal this activity is associated with"""
  deal_id: Int

  """The ID of the lead in the UUID format this activity is associated with"""
  lead_id: UUID

  """The ID of the person this activity is associated with"""
  person_id: Int

  """The ID of the organization this activity is associated with"""
  org_id: Int

  """The note of the activity (HTML format)"""
  note: String

  """
  The address of the activity. Pipedrive will automatically check if the location matches a geo-location on Google maps.
  """
  location: String

  """
  Additional details about the activity that is synced to your external calendar. Unlike the note added to the activity, the description is publicly visible to any guests added to the activity.
  """
  public_description: String

  """The activity ID, generated when the activity was created"""
  id: Int

  """Whether the activity is done or not"""
  done: Boolean

  """The subject of the activity"""
  subject: String

  """
  The type of the activity. This is in correlation with the `key_string` parameter of ActivityTypes.
  """
  type: String

  """The ID of the user whom the activity is assigned to"""
  user_id: Int

  """
  List of multiple persons (participants) this activity is associated with
  """
  participants: [JSON]

  """
  Marks if the activity is set as 'Busy' or 'Free'. If the flag is set to `true`, your customers will not be able to book that time slot through any Scheduler links. The flag can also be unset. When the value of the flag is unset (`null`), the flag defaults to 'Busy' if it has a time set, and 'Free' if it is an all-day event without specified time.
  """
  busy_flag: Boolean

  """
  The attendees of the activity. This can be either your existing Pipedrive contacts or an external email address.
  """
  attendees: [JSON]

  """The user's company ID"""
  company_id: Int

  """
  If the activity references some other object, it is indicated here. For example, value `Salesphone` refers to activities created with Caller.
  """
  reference_type: String

  """Together with the `reference_type`, gives the ID of the other object"""
  reference_id: Int

  """The ID of Marketplace app, which is connected to this activity"""
  conference_meeting_client: String

  """The link to join the meeting which is associated with this activity"""
  conference_meeting_url: String

  """
  The meeting ID of the meeting provider (Zoom, MS Teams etc.) that is associated with this activity
  """
  conference_meeting_id: String

  """
  The creation date and time of the activity in UTC. Format: YYYY-MM-DD HH:MM:SS.
  """
  add_time: String

  """
  The date and time this activity was marked as done. Format: YYYY-MM-DD HH:MM:SS.
  """
  marked_as_done_time: String

  """
  The date and time of latest notifications sent about this activity to the participants or the attendees of this activity
  """
  last_notification_time: String

  """
  The ID of the user who triggered the sending of the latest notifications about this activity to the participants or the attendees of this activity
  """
  last_notification_user_id: Int

  """The ID of the language the notifications are sent in"""
  notification_language_id: Int

  """Whether the activity is active or not"""
  active_flag: Boolean

  """
  The last update date and time of the activity. Format: YYYY-MM-DD HH:MM:SS.
  """
  update_time: String

  """The ID of the user who was the last to update this activity"""
  update_user_id: Int

  """
  For the activity which syncs to Google calendar, this is the Google event ID. NB! This field is related to old Google calendar sync and will be deprecated soon.
  """
  gcal_event_id: String

  """
  The Google calendar ID that this activity syncs to. NB! This field is related to old Google calendar sync and will be deprecated soon.
  """
  google_calendar_id: String

  """
  The Google calendar API etag (version) that is used for syncing this activity. NB! This field is related to old Google calendar sync and will be deprecated soon.
  """
  google_calendar_etag: String

  """
  For activities that sync to an external calendar, this setting indicates if the activity syncs with context (what are the deals, persons, organizations this activity is related to)
  """
  calendar_sync_include_context: String

  """The timezone the activity was created in an external calendar"""
  source_timezone: String

  """
  The rule for the recurrence of the activity. Is important for activities synced into Pipedrive from an external calendar. Example: "RRULE:FREQ=WEEKLY;BYDAY=WE"
  """
  rec_rule: String

  """
  Additional rules for the recurrence of the activity, extend the `rec_rule`. Is important for activities synced into Pipedrive from an external calendar.
  """
  rec_rule_extension: String

  """
  The ID of parent activity for a recurrent activity if the current activity is an exception to recurrence rules
  """
  rec_master_activity_id: Int

  """
  The list of recurring activity instances. It is in a structure as follows: `[{due_date: "2020-06-24", due_time: "10:00:00"}]`
  """
  series: [JSON]

  """The ID of the user who created the activity"""
  created_by_user_id: Int

  """Subfield of location field. Indicates apartment/suite number."""
  location_subpremise: String

  """Subfield of location field. Indicates house number."""
  location_street_number: String

  """Subfield of location field. Indicates street name."""
  location_route: String

  """Subfield of location field. Indicates district/sublocality."""
  location_sublocality: String

  """Subfield of location field. Indicates city/town/village/locality."""
  location_locality: String

  """Subfield of location field. Indicates state/county."""
  location_admin_area_level_1: String

  """Subfield of location field. Indicates region."""
  location_admin_area_level_2: String

  """Subfield of location field. Indicates country."""
  location_country: String

  """Subfield of location field. Indicates ZIP/postal code."""
  location_postal_code: String

  """Subfield of location field. Indicates full/combined address."""
  location_formatted_address: String

  """The name of the organization this activity is associated with"""
  org_name: String

  """The name of the person this activity is associated with"""
  person_name: String

  """The name of the deal this activity is associated with"""
  deal_title: String

  """The name of the user this activity is owned by"""
  owner_name: String

  """The BCC email address of the person"""
  person_dropbox_bcc: String

  """The BCC email address of the deal"""
  deal_dropbox_bcc: String

  """
  The ID of the user to whom the activity is assigned to. Equal to `user_id`.
  """
  assigned_to_user_id: Int
  file: JSON
}

type mutation_updateActivity_related_objects {
  user: mutation_updateActivity_related_objects_user
  deal: mutation_updateActivity_related_objects_deal
  person: mutation_updateActivity_related_objects_person
  organization: mutation_updateActivity_related_objects_organization
}

type mutation_updateActivity_related_objects_user {
  USER_ID: mutation_updateActivity_related_objects_user_USER_ID
}

type mutation_updateActivity_related_objects_user_USER_ID {
  """The ID of the user"""
  id: Int

  """The name of the user"""
  name: String

  """The email of the user"""
  email: String

  """Whether the user has picture or not. 0 = No picture, 1 = Has picture."""
  has_pic: Int

  """The user picture hash"""
  pic_hash: String

  """Whether the user is active or not"""
  active_flag: Boolean
  JSON: JSON
}

type mutation_updateActivity_related_objects_deal {
  DEAL_ID: mutation_updateActivity_related_objects_deal_DEAL_ID
}

"""The ID of the deal which is associated with the item"""
type mutation_updateActivity_related_objects_deal_DEAL_ID {
  """The ID of the deal associated with the item"""
  id: Int

  """The title of the deal associated with the item"""
  title: String

  """The status of the deal associated with the item"""
  status: String

  """The value of the deal that is associated with the item"""
  value: Float

  """The currency of the deal value"""
  currency: String

  """The ID of the stage the deal is currently at"""
  stage_id: Int

  """The ID of the pipeline the deal is in"""
  pipeline_id: Int
}

type mutation_updateActivity_related_objects_person {
  PERSON_ID: mutation_updateActivity_related_objects_person_PERSON_ID
}

"""The ID of the person associated with the item"""
type mutation_updateActivity_related_objects_person_PERSON_ID {
  """Whether the associated person is active or not"""
  active_flag: Boolean

  """The ID of the person associated with the item"""
  id: Int

  """The name of the person associated with the item"""
  name: String

  """The emails of the person associated with the item"""
  email: [mutation_updateActivity_related_objects_person_PERSON_ID_allOf_1_email_items]

  """The phone numbers of the person associated with the item"""
  phone: [mutation_updateActivity_related_objects_person_PERSON_ID_allOf_1_phone_items]

  """The ID of the owner of the person that is associated with the item"""
  owner_id: Int
}

type mutation_updateActivity_related_objects_person_PERSON_ID_allOf_1_email_items {
  """The type of the email"""
  label: String

  """The email of the associated person"""
  value: String

  """Whether this is the primary email or not"""
  primary: Boolean
}

type mutation_updateActivity_related_objects_person_PERSON_ID_allOf_1_phone_items {
  """The type of the phone number"""
  label: String

  """The phone number of the person associated with the item"""
  value: String

  """Whether this is the primary phone number or not"""
  primary: Boolean
}

type mutation_updateActivity_related_objects_organization {
  ORGANIZATION_ID: mutation_updateActivity_related_objects_organization_ORGANIZATION_ID
}

"""The ID of the organization associated with the item"""
type mutation_updateActivity_related_objects_organization_ORGANIZATION_ID {
  """Whether the associated organization is active or not"""
  active_flag: Boolean

  """The ID of the organization associated with the item"""
  id: Int

  """The name of the organization associated with the item"""
  name: String

  """
  The number of people connected with the organization that is associated with the item
  """
  people_count: Int

  """
  The ID of the owner of the organization that is associated with the item
  """
  owner_id: Int

  """The address of the organization"""
  address: String

  """The BCC email of the organization associated with the item"""
  cc_email: String
}

input updateActivityRequest_Input {
  """The due date of the activity. Format: YYYY-MM-DD"""
  due_date: Date

  """The due time of the activity in UTC. Format: HH:MM"""
  due_time: String

  """The duration of the activity. Format: HH:MM"""
  duration: String

  """The ID of the deal this activity is associated with"""
  deal_id: Int

  """The ID of the lead this activity is associated with"""
  lead_id: String

  """The ID of the person this activity is associated with"""
  person_id: Int

  """The ID of the organization this activity is associated with"""
  org_id: Int

  """The note of the activity (HTML format)"""
  note: String

  """
  The address of the activity. Pipedrive will automatically check if the location matches a geo-location on Google maps.
  """
  location: String

  """
  Additional details about the activity that is synced to your external calendar. Unlike the note added to the activity, the description is publicly visible to any guests added to the activity.
  """
  public_description: String

  """The subject of the activity"""
  subject: String

  """
  The type of the activity. This is in correlation with the `key_string` parameter of ActivityTypes.
  """
  type: String

  """The ID of the user whom the activity is assigned to"""
  user_id: Int

  """
  List of multiple persons (participants) this activity is associated with. It requires a structure as follows: `[{"person_id":1,"primary_flag":true}]`
  """
  participants: [JSON]

  """
  Set the activity as 'Busy' or 'Free'. If the flag is set to `true`, your customers will not be able to book that time slot through any Scheduler links. The flag can also be unset by never setting it or overriding it with `null`. When the value of the flag is unset (`null`), the flag defaults to 'Busy' if it has a time set, and 'Free' if it is an all-day event without specified time.
  """
  busy_flag: Boolean

  """
  The attendees of the activity. This can be either your existing Pipedrive contacts or an external email address. It requires a structure as follows: `[{"email_address":"mail@example.org"}]` or `[{"person_id":1, "email_address":"mail@example.org"}]`
  """
  attendees: [JSON]
  done: numberBoolean4
}

enum numberBoolean4 {
  _0
  _1
}

type deleteActivityTypes {
  """If the response is successful or not"""
  success: Boolean
  data: mutation_deleteActivityTypes_allOf_1_data
}

type mutation_deleteActivityTypes_allOf_1_data {
  """The IDs of the deleted activity types"""
  id: [Int]
}

type createUpdateDeleteActivityType {
  """If the response is successful or not"""
  success: Boolean
  data: mutation_addActivityType_allOf_1_data
}

type mutation_addActivityType_allOf_1_data {
  """The ID of the activity type"""
  id: Int

  """The name of the activity type"""
  name: String
  icon_key: mutation_addActivityType_allOf_1_data_icon_key

  """
  A designated color for the activity type in 6-character HEX format (e.g. `FFFFFF` for white, `000000` for black)
  """
  color: String

  """
  An order number for the activity type. Order numbers should be used to order the types in the activity type selections.
  """
  order_nr: Int

  """
  A string that is generated by the API based on the given name of the activity type upon creation
  """
  key_string: String

  """The active flag of the activity type"""
  active_flag: Boolean

  """Whether the activity type is a custom one or not"""
  is_custom_flag: Boolean

  """The creation time of the activity type"""
  add_time: String

  """The update time of the activity type"""
  update_time: String
}

"""Icon graphic to use for representing this activity type"""
enum mutation_addActivityType_allOf_1_data_icon_key {
  task
  email
  meeting
  deadline
  call
  lunch
  calendar
  downarrow
  document
  smartphone
  camera
  scissors
  cogs
  bubble
  uparrow
  checkbox
  signpost
  shuffle
  addressbook
  linegraph
  picture
  car
  world
  search
  clip
  sound
  brush
  key
  padlock
  pricetag
  suitcase
  finish
  plane
  loop
  wifi
  truck
  cart
  bulb
  bell
  presentation
}

input addActivityTypeRequest_Input {
  """The name of the activity type"""
  name: String!
  icon_key: mutationInput_addActivityType_input_icon_key!

  """
  A designated color for the activity type in 6-character HEX format (e.g. `FFFFFF` for white, `000000` for black)
  """
  color: String
}

"""Icon graphic to use for representing this activity type"""
enum mutationInput_addActivityType_input_icon_key {
  task
  email
  meeting
  deadline
  call
  lunch
  calendar
  downarrow
  document
  smartphone
  camera
  scissors
  cogs
  bubble
  uparrow
  checkbox
  signpost
  shuffle
  addressbook
  linegraph
  picture
  car
  world
  search
  clip
  sound
  brush
  key
  padlock
  pricetag
  suitcase
  finish
  plane
  loop
  wifi
  truck
  cart
  bulb
  bell
  presentation
}

type mutation_deleteActivityType {
  """If the response is successful or not"""
  success: Boolean
  data: mutation_deleteActivityType_allOf_1_data
}

type mutation_deleteActivityType_allOf_1_data {
  """The ID of the activity type"""
  id: Int

  """The name of the activity type"""
  name: String
  icon_key: mutation_deleteActivityType_allOf_1_data_icon_key

  """
  A designated color for the activity type in 6-character HEX format (e.g. `FFFFFF` for white, `000000` for black)
  """
  color: String

  """
  An order number for the activity type. Order numbers should be used to order the types in the activity type selections.
  """
  order_nr: Int

  """
  A string that is generated by the API based on the given name of the activity type upon creation
  """
  key_string: String

  """The active flag of the activity type"""
  active_flag: Boolean

  """Whether the activity type is a custom one or not"""
  is_custom_flag: Boolean

  """The creation time of the activity type"""
  add_time: String

  """The update time of the activity type"""
  update_time: String
}

"""Icon graphic to use for representing this activity type"""
enum mutation_deleteActivityType_allOf_1_data_icon_key {
  task
  email
  meeting
  deadline
  call
  lunch
  calendar
  downarrow
  document
  smartphone
  camera
  scissors
  cogs
  bubble
  uparrow
  checkbox
  signpost
  shuffle
  addressbook
  linegraph
  picture
  car
  world
  search
  clip
  sound
  brush
  key
  padlock
  pricetag
  suitcase
  finish
  plane
  loop
  wifi
  truck
  cart
  bulb
  bell
  presentation
}

type mutation_updateActivityType {
  """If the response is successful or not"""
  success: Boolean
  data: mutation_updateActivityType_allOf_1_data
}

type mutation_updateActivityType_allOf_1_data {
  """The ID of the activity type"""
  id: Int

  """The name of the activity type"""
  name: String
  icon_key: mutation_updateActivityType_allOf_1_data_icon_key

  """
  A designated color for the activity type in 6-character HEX format (e.g. `FFFFFF` for white, `000000` for black)
  """
  color: String

  """
  An order number for the activity type. Order numbers should be used to order the types in the activity type selections.
  """
  order_nr: Int

  """
  A string that is generated by the API based on the given name of the activity type upon creation
  """
  key_string: String

  """The active flag of the activity type"""
  active_flag: Boolean

  """Whether the activity type is a custom one or not"""
  is_custom_flag: Boolean

  """The creation time of the activity type"""
  add_time: String

  """The update time of the activity type"""
  update_time: String
}

"""Icon graphic to use for representing this activity type"""
enum mutation_updateActivityType_allOf_1_data_icon_key {
  task
  email
  meeting
  deadline
  call
  lunch
  calendar
  downarrow
  document
  smartphone
  camera
  scissors
  cogs
  bubble
  uparrow
  checkbox
  signpost
  shuffle
  addressbook
  linegraph
  picture
  car
  world
  search
  clip
  sound
  brush
  key
  padlock
  pricetag
  suitcase
  finish
  plane
  loop
  wifi
  truck
  cart
  bulb
  bell
  presentation
}

input updateActivityTypeRequest_Input {
  """The name of the activity type"""
  name: String
  icon_key: mutationInput_updateActivityType_input_icon_key

  """
  A designated color for the activity type in 6-character HEX format (e.g. `FFFFFF` for white, `000000` for black)
  """
  color: String

  """
  An order number for this activity type. Order numbers should be used to order the types in the activity type selections.
  """
  order_nr: Int
}

"""Icon graphic to use for representing this activity type"""
enum mutationInput_updateActivityType_input_icon_key {
  task
  email
  meeting
  deadline
  call
  lunch
  calendar
  downarrow
  document
  smartphone
  camera
  scissors
  cogs
  bubble
  uparrow
  checkbox
  signpost
  shuffle
  addressbook
  linegraph
  picture
  car
  world
  search
  clip
  sound
  brush
  key
  padlock
  pricetag
  suitcase
  finish
  plane
  loop
  wifi
  truck
  cart
  bulb
  bell
  presentation
}

union addCallLog_response = addCallLog | callLogResponse400 | callLogResponse403 | callLogResponse404 | callLogResponse500

type addCallLog {
  """If the response is successful or not"""
  success: Boolean
  data: responseCallLogObject
}

type responseCallLogObject {
  """
  The ID of the owner of the call log. Please note that a user without account settings access cannot create call logs for other users.
  """
  user_id: Int

  """
  If specified, this activity will be converted into a call log, with the information provided. When this field is used, you don't need to specify `deal_id`, `person_id` or `org_id`, as they will be ignored in favor of the values already available in the activity. The `activity_id` must refer to a `call` type activity.
  """
  activity_id: Int

  """The name of the activity this call is attached to"""
  subject: String

  """The duration of the call in seconds"""
  duration: String
  outcome: mutation_addCallLog_oneOf_0_allOf_1_data_allOf_0_outcome!

  """The number that made the call"""
  from_phone_number: String

  """The number called"""
  to_phone_number: String!

  """
  The date and time of the start of the call in UTC. Format: YYYY-MM-DD HH:MM:SS.
  """
  start_time: DateTime!

  """
  The date and time of the end of the call in UTC. Format: YYYY-MM-DD HH:MM:SS.
  """
  end_time: DateTime!

  """The ID of the person this call is associated with"""
  person_id: Int

  """The ID of the organization this call is associated with"""
  org_id: Int

  """The ID of the deal this call is associated with"""
  deal_id: Int

  """The note for the call log in HTML format"""
  note: String

  """The call log ID, generated when the call log was created"""
  id: String

  """
  If the call log has an audio recording attached, the value should be true
  """
  has_recording: Boolean

  """The company ID of the owner of the call log"""
  company_id: Int
}

"""Describes the outcome of the call"""
enum mutation_addCallLog_oneOf_0_allOf_1_data_allOf_0_outcome {
  connected
  no_answer
  left_message
  left_voicemail
  wrong_number
  busy
}

type callLogResponse400 {
  success: Boolean

  """The description of the error"""
  error: String

  """A message describing how to solve the problem"""
  error_info: String
  data: JSON
  additional_data: JSON
}

type callLogResponse403 {
  success: Boolean

  """The description of the error"""
  error: String

  """A message describing how to solve the problem"""
  error_info: String
  data: JSON
  additional_data: JSON
}

type callLogResponse404 {
  success: Boolean

  """The description of the error"""
  error: String

  """A message describing how to solve the problem"""
  error_info: String
  data: JSON
  additional_data: JSON
}

type callLogResponse500 {
  success: Boolean

  """The description of the error"""
  error: String

  """A message describing how to solve the problem"""
  error_info: String
  data: JSON
  additional_data: JSON
}

input mutationInput_addCallLog_input_Input {
  """
  The ID of the owner of the call log. Please note that a user without account settings access cannot create call logs for other users.
  """
  user_id: Int

  """
  If specified, this activity will be converted into a call log, with the information provided. When this field is used, you don't need to specify `deal_id`, `person_id` or `org_id`, as they will be ignored in favor of the values already available in the activity. The `activity_id` must refer to a `call` type activity.
  """
  activity_id: Int

  """The name of the activity this call is attached to"""
  subject: String

  """The duration of the call in seconds"""
  duration: String
  outcome: mutationInput_addCallLog_input_outcome!

  """The number that made the call"""
  from_phone_number: String

  """The number called"""
  to_phone_number: String!

  """
  The date and time of the start of the call in UTC. Format: YYYY-MM-DD HH:MM:SS.
  """
  start_time: DateTime!

  """
  The date and time of the end of the call in UTC. Format: YYYY-MM-DD HH:MM:SS.
  """
  end_time: DateTime!

  """The ID of the person this call is associated with"""
  person_id: Int

  """The ID of the organization this call is associated with"""
  org_id: Int

  """The ID of the deal this call is associated with"""
  deal_id: Int

  """The note for the call log in HTML format"""
  note: String
}

"""Describes the outcome of the call"""
enum mutationInput_addCallLog_input_outcome {
  connected
  no_answer
  left_message
  left_voicemail
  wrong_number
  busy
}

union deleteCallLog_response = deleteCallLog | mutation_deleteCallLog_oneOf_1 | mutation_deleteCallLog_oneOf_2 | callLogResponse410 | mutation_deleteCallLog_oneOf_4

type deleteCallLog {
  """If the response is successful or not"""
  success: Boolean
}

type mutation_deleteCallLog_oneOf_1 {
  success: Boolean

  """The description of the error"""
  error: String

  """A message describing how to solve the problem"""
  error_info: String
  data: JSON
  additional_data: JSON
}

type mutation_deleteCallLog_oneOf_2 {
  success: Boolean

  """The description of the error"""
  error: String

  """A message describing how to solve the problem"""
  error_info: String
  data: JSON
  additional_data: JSON
}

type callLogResponse410 {
  success: Boolean

  """The description of the error"""
  error: String

  """A message describing how to solve the problem"""
  error_info: String
  data: JSON
  additional_data: JSON
}

type mutation_deleteCallLog_oneOf_4 {
  success: Boolean

  """The description of the error"""
  error: String

  """A message describing how to solve the problem"""
  error_info: String
  data: JSON
  additional_data: JSON
}

union addCallLogAudioFile_response = addCallLogAudioFile | mutation_addCallLogAudioFile_oneOf_1 | callLogResponse409 | mutation_addCallLogAudioFile_oneOf_3

type addCallLogAudioFile {
  """If the response is successful or not"""
  success: Boolean
}

type mutation_addCallLogAudioFile_oneOf_1 {
  success: Boolean

  """The description of the error"""
  error: String

  """A message describing how to solve the problem"""
  error_info: String
  data: JSON
  additional_data: JSON
}

type callLogResponse409 {
  success: Boolean

  """The description of the error"""
  error: String

  """A message describing how to solve the problem"""
  error_info: String
  data: JSON
  additional_data: JSON
}

type mutation_addCallLogAudioFile_oneOf_3 {
  success: Boolean

  """The description of the error"""
  error: String

  """A message describing how to solve the problem"""
  error_info: String
  data: JSON
  additional_data: JSON
}

input addCallLogAudioFileRequest_Input {
  """Audio file supported by the HTML5 specification"""
  file: File!
}

"""The `File` scalar type represents a file upload."""
scalar File

union addChannel_response = addChannel_200_response | addChannel_400_response | addChannel_403_response

type addChannel_200_response {
  success: Boolean
  data: mutation_addChannel_oneOf_0_data
}

type mutation_addChannel_oneOf_0_data {
  """
  The unique channel ID used internally in omnichannel-api and the frontend of the extension
  """
  id: String

  """The name of the channel"""
  name: String

  """The URL for an icon that represents your channel"""
  avatar_url: URL

  """The channel ID you specified while creating the channel"""
  provider_channel_id: String

  """The client_id of your app in Pipedrive marketplace"""
  marketplace_client_id: String

  """The ID of the user's company in Pipedrive"""
  pd_company_id: Int

  """The ID of the user in Pipedrive"""
  pd_user_id: Int

  """The date and time when your channel was created in the API"""
  created_at: DateTime
  provider_type: mutation_addChannel_oneOf_0_data_provider_type

  """Value of the template_support sent to this endpoint"""
  template_support: Boolean
}

"""
A field whose value conforms to the standard URL format as specified in RFC3986: https://www.ietf.org/rfc/rfc3986.txt.
"""
scalar URL

"""Value of the provider_type sent to this endpoint"""
enum mutation_addChannel_oneOf_0_data_provider_type {
  facebook
  whatsapp
  other
}

type addChannel_400_response {
  success: Boolean

  """The error description"""
  error: String
  error_info: String
  additional_data: mutation_addChannel_oneOf_1_additional_data
}

type mutation_addChannel_oneOf_1_additional_data {
  """An error code sent by the API"""
  code: String
}

type addChannel_403_response {
  success: Boolean

  """The error description"""
  error: String
  error_info: String
  additional_data: mutation_addChannel_oneOf_2_additional_data
}

type mutation_addChannel_oneOf_2_additional_data {
  """An error code sent by the API"""
  code: String
}

input addChannel_request_Input {
  """The name of the channel"""
  name: String!

  """The channel ID"""
  provider_channel_id: String!

  """The URL for an icon that represents your channel"""
  avatar_url: String

  """
  If true, enables templates logic on UI. Requires getTemplates endpoint implemented. Find out more [here](https://pipedrive.readme.io/docs/implementing-messaging-app-extension).
  """
  template_support: Boolean
  provider_type: mutationInput_addChannel_input_provider_type = other
}

"""It controls the icons (like the icon next to the conversation)"""
enum mutationInput_addChannel_input_provider_type {
  facebook
  whatsapp
  other
}

union deleteChannel_response = deleteChannel_200_response | deleteChannel_400_response

type deleteChannel_200_response {
  success: Boolean
}

type deleteChannel_400_response {
  success: Boolean

  """The error description"""
  error: String
  error_info: String
  additional_data: mutation_deleteChannel_oneOf_1_additional_data
}

type mutation_deleteChannel_oneOf_1_additional_data {
  """An error code sent by the API"""
  code: String
}

union receiveMessage_response = receiveMessage_200_response | receiveMessage_400_response

type receiveMessage_200_response {
  """If the request was successful or not"""
  success: Boolean
  data: mutation_receiveMessage_oneOf_0_data
}

type mutation_receiveMessage_oneOf_0_data {
  """The ID of the message"""
  id: String!

  """The channel ID as in the provider"""
  channel_id: String!

  """The ID of the provider's user that sent the message"""
  sender_id: String!

  """The ID of the conversation"""
  conversation_id: String!

  """The body of the message"""
  message: String!
  status: mutation_receiveMessage_oneOf_0_data_status!

  """
  The date and time when the message was created in the provider, in UTC. Format: YYYY-MM-DD HH:MM
  """
  created_at: DateTime!

  """
  The date and time when the message can no longer receive a reply, in UTC. Format: YYYY-MM-DD HH:MM
  """
  reply_by: DateTime

  """A URL that can open the conversation in the provider's side"""
  conversation_link: String

  """The list of attachments available in the message"""
  attachments: [mutation_receiveMessage_oneOf_0_data_attachments_items]
}

"""The status of the message"""
enum mutation_receiveMessage_oneOf_0_data_status {
  sent
  delivered
  read
  failed
}

type mutation_receiveMessage_oneOf_0_data_attachments_items {
  """The ID of the attachment"""
  id: String!

  """The mime-type of the attachment"""
  type: String!

  """The name of the attachment"""
  name: String

  """The size of the attachment"""
  size: Float

  """A URL to the file"""
  url: String!

  """A URL to a preview picture of the file"""
  preview_url: String

  """
  If true, it will use the getMessageById endpoint for fetching updated attachment's urls. Find out more [here](https://pipedrive.readme.io/docs/implementing-messaging-app-extension)
  """
  link_expires: Boolean
}

type receiveMessage_400_response {
  success: Boolean

  """The error description"""
  error: String
  error_info: String
  additional_data: mutation_receiveMessage_oneOf_1_additional_data
}

type mutation_receiveMessage_oneOf_1_additional_data {
  """An error code sent by the API"""
  code: String
}

input receiveMessage_request_Input {
  """The ID of the message"""
  id: String!

  """The channel ID as in the provider"""
  channel_id: String!

  """The ID of the provider's user that sent the message"""
  sender_id: String!

  """The ID of the conversation"""
  conversation_id: String!

  """The body of the message"""
  message: String!
  status: mutationInput_receiveMessage_input_status!

  """
  The date and time when the message was created in the provider, in UTC. Format: YYYY-MM-DD HH:MM
  """
  created_at: DateTime!

  """
  The date and time when the message can no longer receive a reply, in UTC. Format: YYYY-MM-DD HH:MM
  """
  reply_by: DateTime

  """A URL that can open the conversation in the provider's side"""
  conversation_link: String

  """The list of attachments available in the message"""
  attachments: [mutationInput_receiveMessage_input_attachments_items_Input]
}

"""The status of the message"""
enum mutationInput_receiveMessage_input_status {
  sent
  delivered
  read
  failed
}

input mutationInput_receiveMessage_input_attachments_items_Input {
  """The ID of the attachment"""
  id: String!

  """The mime-type of the attachment"""
  type: String!

  """The name of the attachment"""
  name: String

  """The size of the attachment"""
  size: Float

  """A URL to the file"""
  url: String!

  """A URL to a preview picture of the file"""
  preview_url: String

  """
  If true, it will use the getMessageById endpoint for fetching updated attachment's urls. Find out more [here](https://pipedrive.readme.io/docs/implementing-messaging-app-extension)
  """
  link_expires: Boolean
}

union deleteConversation_response = deleteConversation_200_response | deleteConversation_403_response | deleteConversation_404_response

type deleteConversation_200_response {
  success: Boolean
}

type deleteConversation_403_response {
  success: Boolean

  """The error description"""
  error: String
  error_info: String
  additional_data: mutation_deleteConversation_oneOf_1_additional_data
}

type mutation_deleteConversation_oneOf_1_additional_data {
  """An error code sent by the API"""
  code: String
}

type deleteConversation_404_response {
  success: Boolean

  """The error description"""
  error: String
  error_info: String
  additional_data: mutation_deleteConversation_oneOf_2_additional_data
}

type mutation_deleteConversation_oneOf_2_additional_data {
  """An error code sent by the API"""
  code: String
}

type deal {
  """If the response is successful or not"""
  success: Boolean
  data: dealNonStrict
  related_objects: mutation_addDeal_related_objects
}

type dealNonStrict {
  """The ID of the deal"""
  id: Int
  creator_user_id: mutation_addDeal_data_allOf_0_creator_user_id
  user_id: dealUserDataWithId
  person_id: dealPersonDataWithId
  org_id: dealOrganizationDataWithId

  """The ID of the deal stage"""
  stage_id: Int

  """The title of the deal"""
  title: String

  """The value of the deal"""
  value: Float

  """The currency associated with the deal"""
  currency: String

  """The creation date and time of the deal"""
  add_time: String

  """The last updated date and time of the deal"""
  update_time: String

  """The last updated date and time of the deal stage"""
  stage_change_time: String

  """Whether the deal is active or not"""
  active: Boolean

  """Whether the deal is deleted or not"""
  deleted: Boolean

  """The status of the deal"""
  status: String

  """The success probability percentage of the deal"""
  probability: Float

  """The date of the next activity associated with the deal"""
  next_activity_date: String

  """The time of the next activity associated with the deal"""
  next_activity_time: String

  """The ID of the next activity associated with the deal"""
  next_activity_id: Int

  """The ID of the last activity associated with the deal"""
  last_activity_id: Int

  """The date of the last activity associated with the deal"""
  last_activity_date: String

  """The reason for losing the deal"""
  lost_reason: String

  """The visibility of the deal"""
  visible_to: String

  """The date and time of closing the deal"""
  close_time: String

  """The ID of pipeline associated with the deal"""
  pipeline_id: Int

  """The date and time of changing the deal status as won"""
  won_time: String

  """The date and time of the first time changing the deal status as won"""
  first_won_time: String

  """The date and time of changing the deal status as lost"""
  lost_time: String

  """The number of products associated with the deal"""
  products_count: Int

  """The number of files associated with the deal"""
  files_count: Int

  """The number of notes associated with the deal"""
  notes_count: Int

  """The number of followers associated with the deal"""
  followers_count: Int

  """The number of emails associated with the deal"""
  email_messages_count: Int

  """The number of activities associated with the deal"""
  activities_count: Int

  """The number of completed activities associated with the deal"""
  done_activities_count: Int

  """The number of incomplete activities associated with the deal"""
  undone_activities_count: Int

  """The number of participants associated with the deal"""
  participants_count: Int

  """The expected close date of the deal"""
  expected_close_date: Date

  """The date and time of the last incoming email associated with the deal"""
  last_incoming_mail_time: String

  """The date and time of the last outgoing email associated with the deal"""
  last_outgoing_mail_time: String

  """The label assigned to the deal"""
  label: Int

  """The order number of the deal stage associated with the deal"""
  stage_order_nr: Int

  """The name of the person associated with the deal"""
  person_name: String

  """The name of the organization associated with the deal"""
  org_name: String

  """The subject of the next activity associated with the deal"""
  next_activity_subject: String

  """The type of the next activity associated with the deal"""
  next_activity_type: String

  """The duration of the next activity associated with the deal"""
  next_activity_duration: String

  """The note of the next activity associated with the deal"""
  next_activity_note: String

  """The deal value formatted with selected currency. E.g. US$500"""
  formatted_value: String

  """
  Probability times deal value. Probability can either be deal probability or if not set, then stage probability.
  """
  weighted_value: Float

  """The weighted_value formatted with selected currency. E.g. US$500"""
  formatted_weighted_value: String

  """The currency associated with the deal"""
  weighted_value_currency: String

  """The date and time of changing the deal status as rotten"""
  rotten_time: String

  """The name of the deal owner"""
  owner_name: String

  """The BCC email of the deal"""
  cc_email: String

  """If the organization that is associated with the deal is hidden or not"""
  org_hidden: Boolean

  """If the person that is associated with the deal is hidden or not"""
  person_hidden: Boolean
}

"""The creator of the deal"""
type mutation_addDeal_data_allOf_0_creator_user_id {
  """The ID of the deal creator"""
  id: Int

  """The name of the deal creator"""
  name: String

  """The email of the deal creator"""
  email: String

  """If the creator has a picture or not"""
  has_pic: Boolean

  """The creator picture hash"""
  pic_hash: String

  """Whether the creator is active or not"""
  active_flag: Boolean

  """The ID of the deal creator"""
  value: Int
}

type dealUserDataWithId {
  """The ID of the user"""
  id: Int

  """The name of the user"""
  name: String

  """The email of the user"""
  email: String

  """If the user has a picture or not"""
  has_pic: Boolean

  """The user picture hash"""
  pic_hash: String

  """Whether the user is active or not"""
  active_flag: Boolean

  """The ID of the user"""
  value: Int
}

type dealPersonDataWithId {
  """Whether the associated person is active or not"""
  active_flag: Boolean

  """The name of the person associated with the deal"""
  name: String

  """The emails of the person associated with the deal"""
  email: [mutation_addDeal_data_allOf_0_person_id_allOf_0_email_items]

  """The phone numbers of the person associated with the deal"""
  phone: [mutation_addDeal_data_allOf_0_person_id_allOf_0_phone_items]

  """The ID of the owner of the person that is associated with the deal"""
  owner_id: Int

  """The ID of the person associated with the deal"""
  value: Int
}

type mutation_addDeal_data_allOf_0_person_id_allOf_0_email_items {
  """The type of the email"""
  label: String

  """The email of the associated person"""
  value: String

  """If this is the primary email or not"""
  primary: Boolean
}

type mutation_addDeal_data_allOf_0_person_id_allOf_0_phone_items {
  """The type of the phone number"""
  label: String

  """The phone number of the person associated with the deal"""
  value: String

  """If this is the primary phone number or not"""
  primary: Boolean
}

type dealOrganizationDataWithId {
  """The name of the organization associated with the deal"""
  name: String

  """
  The number of people connected with the organization that is associated with the deal
  """
  people_count: Int

  """
  The ID of the owner of the organization that is associated with the deal
  """
  owner_id: Int

  """The address of the organization that is associated with the deal"""
  address: String

  """Whether the associated organization is active or not"""
  active_flag: Boolean

  """The BCC email of the organization associated with the deal"""
  cc_email: String

  """The ID of the organization associated with the deal"""
  value: Int
}

type mutation_addDeal_related_objects {
  user: mutation_addDeal_related_objects_user
  organization: mutation_addDeal_related_objects_organization
  person: mutation_addDeal_related_objects_person
}

"""The user who is associated with the deal"""
type mutation_addDeal_related_objects_user {
  """The ID of the user"""
  id: Int

  """The name of the user"""
  name: String

  """The email of the user"""
  email: String

  """If the user has a picture or not"""
  has_pic: Boolean

  """The user picture hash"""
  pic_hash: String

  """Whether the user is active or not"""
  active_flag: Boolean
}

"""The organization which is associated with the deal"""
type mutation_addDeal_related_objects_organization {
  """The name of the organization associated with the deal"""
  name: String

  """
  The number of people connected with the organization that is associated with the deal
  """
  people_count: Int

  """
  The ID of the owner of the organization that is associated with the deal
  """
  owner_id: Int

  """The address of the organization that is associated with the deal"""
  address: String

  """Whether the associated organization is active or not"""
  active_flag: Boolean

  """The BCC email of the organization associated with the deal"""
  cc_email: String
}

"""The person who is associated with the deal"""
type mutation_addDeal_related_objects_person {
  """Whether the associated person is active or not"""
  active_flag: Boolean

  """The name of the person associated with the deal"""
  name: String

  """The emails of the person associated with the deal"""
  email: [mutation_addDeal_related_objects_person_email_items]

  """The phone numbers of the person associated with the deal"""
  phone: [mutation_addDeal_related_objects_person_phone_items]

  """The ID of the owner of the person that is associated with the deal"""
  owner_id: Int
}

type mutation_addDeal_related_objects_person_email_items {
  """The type of the email"""
  label: String

  """The email of the associated person"""
  value: String

  """If this is the primary email or not"""
  primary: Boolean
}

type mutation_addDeal_related_objects_person_phone_items {
  """The type of the phone number"""
  label: String

  """The phone number of the person associated with the deal"""
  value: String

  """If this is the primary phone number or not"""
  primary: Boolean
}

input addDealRequest_Input {
  """The title of the deal"""
  title: String!

  """The value of the deal. If omitted, value will be set to 0."""
  value: String

  """
  The currency of the deal. Accepts a 3-character currency code. If omitted, currency will be set to the default currency of the authorized user.
  """
  currency: String

  """
  The ID of the user which will be the owner of the created deal. If not provided, the user making the request will be used.
  """
  user_id: Int

  """
  The ID of a person which this deal will be linked to. If the person does not exist yet, it needs to be created first. This property is required unless `org_id` is specified.
  """
  person_id: Int

  """
  The ID of an organization which this deal will be linked to. If the organization does not exist yet, it needs to be created first. This property is required unless `person_id` is specified.
  """
  org_id: Int

  """
  The ID of the pipeline this deal will be added to. By default, the deal will be added to the first stage of the specified pipeline. Please note that `pipeline_id` and `stage_id` should not be used together as `pipeline_id` will be ignored.
  """
  pipeline_id: Int

  """
  The ID of the stage this deal will be added to. Please note that a pipeline will be assigned automatically based on the `stage_id`. If omitted, the deal will be placed in the first stage of the default pipeline.
  """
  stage_id: Int
  status: mutationInput_addDeal_input_allOf_1_status

  """The expected close date of the deal. In ISO 8601 format: YYYY-MM-DD."""
  expected_close_date: Date

  """
  The success probability percentage of the deal. Used/shown only when `deal_probability` for the pipeline of the deal is enabled.
  """
  probability: Float

  """
  The optional message about why the deal was lost (to be used when status = lost)
  """
  lost_reason: String
  visible_to: mutationInput_addDeal_input_allOf_1_visible_to

  """
  The optional creation date & time of the deal in UTC. Requires admin user API token. Format: YYYY-MM-DD HH:MM:SS
  """
  add_time: String
}

"""
open = Open, won = Won, lost = Lost, deleted = Deleted. If omitted, status will be set to open.
"""
enum mutationInput_addDeal_input_allOf_1_status {
  open
  won
  lost
  deleted
}

enum mutationInput_addDeal_input_allOf_1_visible_to {
  _1
  _3
  _5
  _7
}

type deleteDeals {
  """If the response is successful or not"""
  success: Boolean
  data: mutation_deleteDeals_data
}

type mutation_deleteDeals_data {
  """The list of deleted deals IDs"""
  id: [Int]
}

type deleteDeal {
  """If the request was successful or not"""
  success: Boolean
  data: mutation_deleteDeal_data
}

type mutation_deleteDeal_data {
  """The ID of the deal that was deleted"""
  id: Int
}

type mutation_updateDeal {
  """If the response is successful or not"""
  success: Boolean
  data: dealNonStrict2
  related_objects: mutation_updateDeal_related_objects
}

type dealNonStrict2 {
  """The ID of the deal"""
  id: Int
  creator_user_id: mutation_updateDeal_data_allOf_0_creator_user_id
  user_id: mutation_updateDeal_data_allOf_0_user_id
  person_id: mutation_updateDeal_data_allOf_0_person_id
  org_id: mutation_updateDeal_data_allOf_0_org_id

  """The ID of the deal stage"""
  stage_id: Int

  """The title of the deal"""
  title: String

  """The value of the deal"""
  value: Float

  """The currency associated with the deal"""
  currency: String

  """The creation date and time of the deal"""
  add_time: String

  """The last updated date and time of the deal"""
  update_time: String

  """The last updated date and time of the deal stage"""
  stage_change_time: String

  """Whether the deal is active or not"""
  active: Boolean

  """Whether the deal is deleted or not"""
  deleted: Boolean

  """The status of the deal"""
  status: String

  """The success probability percentage of the deal"""
  probability: Float

  """The date of the next activity associated with the deal"""
  next_activity_date: String

  """The time of the next activity associated with the deal"""
  next_activity_time: String

  """The ID of the next activity associated with the deal"""
  next_activity_id: Int

  """The ID of the last activity associated with the deal"""
  last_activity_id: Int

  """The date of the last activity associated with the deal"""
  last_activity_date: String

  """The reason for losing the deal"""
  lost_reason: String

  """The visibility of the deal"""
  visible_to: String

  """The date and time of closing the deal"""
  close_time: String

  """The ID of pipeline associated with the deal"""
  pipeline_id: Int

  """The date and time of changing the deal status as won"""
  won_time: String

  """The date and time of the first time changing the deal status as won"""
  first_won_time: String

  """The date and time of changing the deal status as lost"""
  lost_time: String

  """The number of products associated with the deal"""
  products_count: Int

  """The number of files associated with the deal"""
  files_count: Int

  """The number of notes associated with the deal"""
  notes_count: Int

  """The number of followers associated with the deal"""
  followers_count: Int

  """The number of emails associated with the deal"""
  email_messages_count: Int

  """The number of activities associated with the deal"""
  activities_count: Int

  """The number of completed activities associated with the deal"""
  done_activities_count: Int

  """The number of incomplete activities associated with the deal"""
  undone_activities_count: Int

  """The number of participants associated with the deal"""
  participants_count: Int

  """The expected close date of the deal"""
  expected_close_date: Date

  """The date and time of the last incoming email associated with the deal"""
  last_incoming_mail_time: String

  """The date and time of the last outgoing email associated with the deal"""
  last_outgoing_mail_time: String

  """The label assigned to the deal"""
  label: Int

  """The order number of the deal stage associated with the deal"""
  stage_order_nr: Int

  """The name of the person associated with the deal"""
  person_name: String

  """The name of the organization associated with the deal"""
  org_name: String

  """The subject of the next activity associated with the deal"""
  next_activity_subject: String

  """The type of the next activity associated with the deal"""
  next_activity_type: String

  """The duration of the next activity associated with the deal"""
  next_activity_duration: String

  """The note of the next activity associated with the deal"""
  next_activity_note: String

  """The deal value formatted with selected currency. E.g. US$500"""
  formatted_value: String

  """
  Probability times deal value. Probability can either be deal probability or if not set, then stage probability.
  """
  weighted_value: Float

  """The weighted_value formatted with selected currency. E.g. US$500"""
  formatted_weighted_value: String

  """The currency associated with the deal"""
  weighted_value_currency: String

  """The date and time of changing the deal status as rotten"""
  rotten_time: String

  """The name of the deal owner"""
  owner_name: String

  """The BCC email of the deal"""
  cc_email: String

  """If the organization that is associated with the deal is hidden or not"""
  org_hidden: Boolean

  """If the person that is associated with the deal is hidden or not"""
  person_hidden: Boolean
}

"""The creator of the deal"""
type mutation_updateDeal_data_allOf_0_creator_user_id {
  """The ID of the deal creator"""
  id: Int

  """The name of the deal creator"""
  name: String

  """The email of the deal creator"""
  email: String

  """If the creator has a picture or not"""
  has_pic: Boolean

  """The creator picture hash"""
  pic_hash: String

  """Whether the creator is active or not"""
  active_flag: Boolean

  """The ID of the deal creator"""
  value: Int
}

type mutation_updateDeal_data_allOf_0_user_id {
  """The ID of the user"""
  id: Int

  """The name of the user"""
  name: String

  """The email of the user"""
  email: String

  """If the user has a picture or not"""
  has_pic: Boolean

  """The user picture hash"""
  pic_hash: String

  """Whether the user is active or not"""
  active_flag: Boolean

  """The ID of the user"""
  value: Int
}

type mutation_updateDeal_data_allOf_0_person_id {
  """Whether the associated person is active or not"""
  active_flag: Boolean

  """The name of the person associated with the deal"""
  name: String

  """The emails of the person associated with the deal"""
  email: [mutation_updateDeal_data_allOf_0_person_id_allOf_0_email_items]

  """The phone numbers of the person associated with the deal"""
  phone: [mutation_updateDeal_data_allOf_0_person_id_allOf_0_phone_items]

  """The ID of the owner of the person that is associated with the deal"""
  owner_id: Int

  """The ID of the person associated with the deal"""
  value: Int
}

type mutation_updateDeal_data_allOf_0_person_id_allOf_0_email_items {
  """The type of the email"""
  label: String

  """The email of the associated person"""
  value: String

  """If this is the primary email or not"""
  primary: Boolean
}

type mutation_updateDeal_data_allOf_0_person_id_allOf_0_phone_items {
  """The type of the phone number"""
  label: String

  """The phone number of the person associated with the deal"""
  value: String

  """If this is the primary phone number or not"""
  primary: Boolean
}

type mutation_updateDeal_data_allOf_0_org_id {
  """The name of the organization associated with the deal"""
  name: String

  """
  The number of people connected with the organization that is associated with the deal
  """
  people_count: Int

  """
  The ID of the owner of the organization that is associated with the deal
  """
  owner_id: Int

  """The address of the organization that is associated with the deal"""
  address: String

  """Whether the associated organization is active or not"""
  active_flag: Boolean

  """The BCC email of the organization associated with the deal"""
  cc_email: String

  """The ID of the organization associated with the deal"""
  value: Int
}

type mutation_updateDeal_related_objects {
  user: mutation_updateDeal_related_objects_user
  organization: mutation_updateDeal_related_objects_organization
  person: mutation_updateDeal_related_objects_person
}

"""The user who is associated with the deal"""
type mutation_updateDeal_related_objects_user {
  """The ID of the user"""
  id: Int

  """The name of the user"""
  name: String

  """The email of the user"""
  email: String

  """If the user has a picture or not"""
  has_pic: Boolean

  """The user picture hash"""
  pic_hash: String

  """Whether the user is active or not"""
  active_flag: Boolean
}

"""The organization which is associated with the deal"""
type mutation_updateDeal_related_objects_organization {
  """The name of the organization associated with the deal"""
  name: String

  """
  The number of people connected with the organization that is associated with the deal
  """
  people_count: Int

  """
  The ID of the owner of the organization that is associated with the deal
  """
  owner_id: Int

  """The address of the organization that is associated with the deal"""
  address: String

  """Whether the associated organization is active or not"""
  active_flag: Boolean

  """The BCC email of the organization associated with the deal"""
  cc_email: String
}

"""The person who is associated with the deal"""
type mutation_updateDeal_related_objects_person {
  """Whether the associated person is active or not"""
  active_flag: Boolean

  """The name of the person associated with the deal"""
  name: String

  """The emails of the person associated with the deal"""
  email: [mutation_updateDeal_related_objects_person_email_items]

  """The phone numbers of the person associated with the deal"""
  phone: [mutation_updateDeal_related_objects_person_phone_items]

  """The ID of the owner of the person that is associated with the deal"""
  owner_id: Int
}

type mutation_updateDeal_related_objects_person_email_items {
  """The type of the email"""
  label: String

  """The email of the associated person"""
  value: String

  """If this is the primary email or not"""
  primary: Boolean
}

type mutation_updateDeal_related_objects_person_phone_items {
  """The type of the phone number"""
  label: String

  """The phone number of the person associated with the deal"""
  value: String

  """If this is the primary phone number or not"""
  primary: Boolean
}

input updateDealRequest_Input {
  """The title of the deal"""
  title: String

  """The value of the deal. If omitted, value will be set to 0."""
  value: String

  """
  The currency of the deal. Accepts a 3-character currency code. If omitted, currency will be set to the default currency of the authorized user.
  """
  currency: String

  """
  The ID of the user which will be the owner of the created deal. If not provided, the user making the request will be used.
  """
  user_id: Int

  """
  The ID of a person which this deal will be linked to. If the person does not exist yet, it needs to be created first. This property is required unless `org_id` is specified.
  """
  person_id: Int

  """
  The ID of an organization which this deal will be linked to. If the organization does not exist yet, it needs to be created first. This property is required unless `person_id` is specified.
  """
  org_id: Int

  """
  The ID of the pipeline this deal will be added to. By default, the deal will be added to the first stage of the specified pipeline. Please note that `pipeline_id` and `stage_id` should not be used together as `pipeline_id` will be ignored.
  """
  pipeline_id: Int

  """
  The ID of the stage this deal will be added to. Please note that a pipeline will be assigned automatically based on the `stage_id`. If omitted, the deal will be placed in the first stage of the default pipeline.
  """
  stage_id: Int
  status: mutationInput_updateDeal_input_allOf_1_status

  """The expected close date of the deal. In ISO 8601 format: YYYY-MM-DD."""
  expected_close_date: Date

  """
  The success probability percentage of the deal. Used/shown only when `deal_probability` for the pipeline of the deal is enabled.
  """
  probability: Float

  """
  The optional message about why the deal was lost (to be used when status = lost)
  """
  lost_reason: String
  visible_to: mutationInput_updateDeal_input_allOf_1_visible_to
}

"""
open = Open, won = Won, lost = Lost, deleted = Deleted. If omitted, status will be set to open.
"""
enum mutationInput_updateDeal_input_allOf_1_status {
  open
  won
  lost
  deleted
}

enum mutationInput_updateDeal_input_allOf_1_visible_to {
  _1
  _3
  _5
  _7
}

type duplicateDeal {
  """If the response is successful or not"""
  success: Boolean
  data: dealStrict
}

type dealStrict {
  """The ID of the deal"""
  id: Int

  """The ID of the deal creator"""
  creator_user_id: Int

  """The ID of the user"""
  user_id: Int

  """The ID of the person associated with the deal"""
  person_id: Int

  """The ID of the organization associated with the deal"""
  org_id: Int

  """The ID of the deal stage"""
  stage_id: Int

  """The title of the deal"""
  title: String

  """The value of the deal"""
  value: Float

  """The currency associated with the deal"""
  currency: String

  """The creation date and time of the deal"""
  add_time: String

  """The last updated date and time of the deal"""
  update_time: String

  """The last updated date and time of the deal stage"""
  stage_change_time: String

  """Whether the deal is active or not"""
  active: Boolean

  """Whether the deal is deleted or not"""
  deleted: Boolean

  """The status of the deal"""
  status: String

  """The success probability percentage of the deal"""
  probability: Float

  """The date of the next activity associated with the deal"""
  next_activity_date: String

  """The time of the next activity associated with the deal"""
  next_activity_time: String

  """The ID of the next activity associated with the deal"""
  next_activity_id: Int

  """The ID of the last activity associated with the deal"""
  last_activity_id: Int

  """The date of the last activity associated with the deal"""
  last_activity_date: String

  """The reason for losing the deal"""
  lost_reason: String

  """The visibility of the deal"""
  visible_to: String

  """The date and time of closing the deal"""
  close_time: String

  """The ID of pipeline associated with the deal"""
  pipeline_id: Int

  """The date and time of changing the deal status as won"""
  won_time: String

  """The date and time of the first time changing the deal status as won"""
  first_won_time: String

  """The date and time of changing the deal status as lost"""
  lost_time: String

  """The number of products associated with the deal"""
  products_count: Int

  """The number of files associated with the deal"""
  files_count: Int

  """The number of notes associated with the deal"""
  notes_count: Int

  """The number of followers associated with the deal"""
  followers_count: Int

  """The number of emails associated with the deal"""
  email_messages_count: Int

  """The number of activities associated with the deal"""
  activities_count: Int

  """The number of completed activities associated with the deal"""
  done_activities_count: Int

  """The number of incomplete activities associated with the deal"""
  undone_activities_count: Int

  """The number of participants associated with the deal"""
  participants_count: Int

  """The expected close date of the deal"""
  expected_close_date: Date

  """The date and time of the last incoming email associated with the deal"""
  last_incoming_mail_time: String

  """The date and time of the last outgoing email associated with the deal"""
  last_outgoing_mail_time: String

  """The label assigned to the deal"""
  label: Int

  """The order number of the deal stage associated with the deal"""
  stage_order_nr: Int

  """The name of the person associated with the deal"""
  person_name: String

  """The name of the organization associated with the deal"""
  org_name: String

  """The subject of the next activity associated with the deal"""
  next_activity_subject: String

  """The type of the next activity associated with the deal"""
  next_activity_type: String

  """The duration of the next activity associated with the deal"""
  next_activity_duration: String

  """The note of the next activity associated with the deal"""
  next_activity_note: String

  """The deal value formatted with selected currency. E.g. US$500"""
  formatted_value: String

  """
  Probability times deal value. Probability can either be deal probability or if not set, then stage probability.
  """
  weighted_value: Float

  """The weighted_value formatted with selected currency. E.g. US$500"""
  formatted_weighted_value: String

  """The currency associated with the deal"""
  weighted_value_currency: String

  """The date and time of changing the deal status as rotten"""
  rotten_time: String

  """The name of the deal owner"""
  owner_name: String

  """The BCC email of the deal"""
  cc_email: String

  """If the organization that is associated with the deal is hidden or not"""
  org_hidden: Boolean

  """If the person that is associated with the deal is hidden or not"""
  person_hidden: Boolean
}

type addDealFollower {
  """If the response is successful or not"""
  success: Boolean
  data: mutation_addDealFollower_data
}

type mutation_addDealFollower_data {
  """The user ID who added the follower"""
  user_id: Int

  """The follower ID"""
  id: Int

  """The ID of the deal which the follower was added to"""
  deal_id: Int

  """The date and time when the deal follower was added"""
  add_time: String
}

input addDealFollowerRequest_Input {
  """The ID of the user"""
  user_id: Int!
}

type deleteDealFollower {
  """If the request was successful or not"""
  success: Boolean
  data: mutation_deleteDealFollower_data
}

type mutation_deleteDealFollower_data {
  """The ID of the deal follower that was deleted"""
  id: Int
}

type mergeDeals {
  """If the response is successful or not"""
  success: Boolean
  data: mutation_mergeDeals_data
}

type mutation_mergeDeals_data {
  """The ID of the deal"""
  id: Int

  """The ID of the deal creator"""
  creator_user_id: Int

  """The ID of the user"""
  user_id: Int

  """The ID of the person associated with the deal"""
  person_id: Int

  """The ID of the organization associated with the deal"""
  org_id: Int

  """The ID of the deal stage"""
  stage_id: Int

  """The title of the deal"""
  title: String

  """The value of the deal"""
  value: Float

  """The currency associated with the deal"""
  currency: String

  """The creation date and time of the deal"""
  add_time: String

  """The last updated date and time of the deal"""
  update_time: String

  """The last updated date and time of the deal stage"""
  stage_change_time: String

  """Whether the deal is active or not"""
  active: Boolean

  """Whether the deal is deleted or not"""
  deleted: Boolean

  """The status of the deal"""
  status: String

  """The success probability percentage of the deal"""
  probability: Float

  """The date of the next activity associated with the deal"""
  next_activity_date: String

  """The time of the next activity associated with the deal"""
  next_activity_time: String

  """The ID of the next activity associated with the deal"""
  next_activity_id: Int

  """The ID of the last activity associated with the deal"""
  last_activity_id: Int

  """The date of the last activity associated with the deal"""
  last_activity_date: String

  """The reason for losing the deal"""
  lost_reason: String

  """The visibility of the deal"""
  visible_to: String

  """The date and time of closing the deal"""
  close_time: String

  """The ID of pipeline associated with the deal"""
  pipeline_id: Int

  """The date and time of changing the deal status as won"""
  won_time: String

  """The date and time of the first time changing the deal status as won"""
  first_won_time: String

  """The date and time of changing the deal status as lost"""
  lost_time: String

  """The number of products associated with the deal"""
  products_count: Int

  """The number of files associated with the deal"""
  files_count: Int

  """The number of notes associated with the deal"""
  notes_count: Int

  """The number of followers associated with the deal"""
  followers_count: Int

  """The number of emails associated with the deal"""
  email_messages_count: Int

  """The number of activities associated with the deal"""
  activities_count: Int

  """The number of completed activities associated with the deal"""
  done_activities_count: Int

  """The number of incomplete activities associated with the deal"""
  undone_activities_count: Int

  """The number of participants associated with the deal"""
  participants_count: Int

  """The expected close date of the deal"""
  expected_close_date: Date

  """The date and time of the last incoming email associated with the deal"""
  last_incoming_mail_time: String

  """The date and time of the last outgoing email associated with the deal"""
  last_outgoing_mail_time: String

  """The label assigned to the deal"""
  label: Int

  """The order number of the deal stage associated with the deal"""
  stage_order_nr: Int

  """The name of the person associated with the deal"""
  person_name: String

  """The name of the organization associated with the deal"""
  org_name: String

  """The subject of the next activity associated with the deal"""
  next_activity_subject: String

  """The type of the next activity associated with the deal"""
  next_activity_type: String

  """The duration of the next activity associated with the deal"""
  next_activity_duration: String

  """The note of the next activity associated with the deal"""
  next_activity_note: String

  """The deal value formatted with selected currency. E.g. US$500"""
  formatted_value: String

  """
  Probability times deal value. Probability can either be deal probability or if not set, then stage probability.
  """
  weighted_value: Float

  """The weighted_value formatted with selected currency. E.g. US$500"""
  formatted_weighted_value: String

  """The currency associated with the deal"""
  weighted_value_currency: String

  """The date and time of changing the deal status as rotten"""
  rotten_time: String

  """The name of the deal owner"""
  owner_name: String

  """The BCC email of the deal"""
  cc_email: String

  """If the organization that is associated with the deal is hidden or not"""
  org_hidden: Boolean

  """If the person that is associated with the deal is hidden or not"""
  person_hidden: Boolean

  """The deal ID of the deal which the original deal was merged with"""
  merge_what_id: Int
}

input mergeDealsRequest_Input {
  """The ID of the deal that the deal will be merged with"""
  merge_with_id: Int!
}

type addDealParticipant {
  """If the request was successful or not"""
  success: Boolean
  data: personItem
  related_objects: mutation_addDealParticipant_related_objects
}

type personItem {
  """The ID of the person"""
  id: Int

  """The ID of the company related to the person"""
  company_id: Int

  """Whether the person is active or not"""
  active_flag: Boolean

  """
  A phone number supplied as a string or an array of phone objects related to the person. The structure of the array is as follows: `[{ "value": "12345", "primary": "true", "label": "mobile" }]`. Please note that only `value` is required.
  """
  phone: [mutation_addDealParticipant_data_allOf_0_phone_items]

  """
  An email address as a string or an array of email objects related to the person. The structure of the array is as follows: `[{ "value": "mail@example.com", "primary": "true", "label": "main" } ]`. Please note that only `value` is required.
  """
  email: [mutation_addDealParticipant_data_allOf_0_email_items]

  """The first letter of the name of the person"""
  first_char: String

  """
  The date and time when the person was added/created. Format: YYYY-MM-DD HH:MM:SS
  """
  add_time: String

  """
  The last updated date and time of the person. Format: YYYY-MM-DD HH:MM:SS
  """
  update_time: String

  """The visibility group ID of who can see the person"""
  visible_to: String
  picture_id: mutation_addDealParticipant_data_allOf_0_picture_id

  """The label assigned to the person"""
  label: Int

  """The name of the organization associated with the person"""
  org_name: String

  """The name of the owner associated with the person"""
  owner_name: String

  """The BCC email associated with the person"""
  cc_email: String
  owner_id: owner
  org_id: relationshipOrganizationInfoItemWithActiveFlag

  """The name of the person"""
  name: String

  """The first name of the person"""
  first_name: String

  """The last name of the person"""
  last_name: String

  """The count of email messages related to the person"""
  email_messages_count: Int

  """The count of activities related to the person"""
  activities_count: Int

  """The count of done activities related to the person"""
  done_activities_count: Int

  """The count of undone activities related to the person"""
  undone_activities_count: Int

  """The count of files related to the person"""
  files_count: Int

  """The count of notes related to the person"""
  notes_count: Int

  """The count of followers related to the person"""
  followers_count: Int

  """
  The date and time of the last incoming email associated with the person
  """
  last_incoming_mail_time: String

  """
  The date and time of the last outgoing email associated with the person
  """
  last_outgoing_mail_time: String

  """The count of open deals related with the item"""
  open_deals_count: Int

  """The count of related open deals related with the item"""
  related_open_deals_count: Int

  """The count of closed deals related with the item"""
  closed_deals_count: Int

  """The count of related closed deals related with the item"""
  related_closed_deals_count: Int

  """The count of won deals related with the item"""
  won_deals_count: Int

  """The count of related won deals related with the item"""
  related_won_deals_count: Int

  """The count of lost deals related with the item"""
  lost_deals_count: Int

  """The count of related lost deals related with the item"""
  related_lost_deals_count: Int

  """The date of the next activity associated with the deal"""
  next_activity_date: String

  """The time of the next activity associated with the deal"""
  next_activity_time: String

  """The ID of the next activity associated with the deal"""
  next_activity_id: Int

  """The ID of the last activity associated with the deal"""
  last_activity_id: Int

  """The date of the last activity associated with the deal"""
  last_activity_date: String
}

type mutation_addDealParticipant_data_allOf_0_phone_items {
  """The phone number"""
  value: String

  """
  Boolean that indicates if phone number is primary for the person or not
  """
  primary: Boolean

  """
  The label that indicates the type of the phone number. (Possible values - work, home, mobile or other)
  """
  label: String
}

type mutation_addDealParticipant_data_allOf_0_email_items {
  """Email"""
  value: String

  """Boolean that indicates if email is primary for the person or not"""
  primary: Boolean

  """
  The label that indicates the type of the email. (Possible values - work, home or other)
  """
  label: String
}

type mutation_addDealParticipant_data_allOf_0_picture_id {
  """The ID of the picture associated with the item"""
  id: Int

  """The type of item the picture is related to"""
  item_type: String

  """The ID of related item"""
  item_id: Int

  """Whether the associated picture is active or not"""
  active_flag: Boolean

  """The add time of the picture"""
  add_time: String

  """The update time of the picture"""
  update_time: String

  """The ID of the user who added the picture"""
  added_by_user_id: Int
  pictures: mutation_addDealParticipant_data_allOf_0_picture_id_allOf_1_pictures
}

type mutation_addDealParticipant_data_allOf_0_picture_id_allOf_1_pictures {
  """The URL of the 128*128 picture"""
  _128: String

  """The URL of the 512*512 picture"""
  _512: String
}

type mutation_addDealParticipant_related_objects {
  user: mutation_addDealParticipant_related_objects_user
  organization: mutation_addDealParticipant_related_objects_organization
  person: mutation_addDealParticipant_related_objects_person
}

"""The user who is associated with the deal"""
type mutation_addDealParticipant_related_objects_user {
  """The ID of the user"""
  id: Int

  """The name of the user"""
  name: String

  """The email of the user"""
  email: String

  """If the user has a picture or not"""
  has_pic: Boolean

  """The user picture hash"""
  pic_hash: String

  """Whether the user is active or not"""
  active_flag: Boolean
}

"""The organization which is associated with the deal"""
type mutation_addDealParticipant_related_objects_organization {
  """The name of the organization associated with the deal"""
  name: String

  """
  The number of people connected with the organization that is associated with the deal
  """
  people_count: Int

  """
  The ID of the owner of the organization that is associated with the deal
  """
  owner_id: Int

  """The address of the organization that is associated with the deal"""
  address: String

  """Whether the associated organization is active or not"""
  active_flag: Boolean

  """The BCC email of the organization associated with the deal"""
  cc_email: String
}

"""The person who is associated with the deal"""
type mutation_addDealParticipant_related_objects_person {
  """Whether the associated person is active or not"""
  active_flag: Boolean

  """The name of the person associated with the deal"""
  name: String

  """The emails of the person associated with the deal"""
  email: [mutation_addDealParticipant_related_objects_person_email_items]

  """The phone numbers of the person associated with the deal"""
  phone: [mutation_addDealParticipant_related_objects_person_phone_items]

  """The ID of the owner of the person that is associated with the deal"""
  owner_id: Int
}

type mutation_addDealParticipant_related_objects_person_email_items {
  """The type of the email"""
  label: String

  """The email of the associated person"""
  value: String

  """If this is the primary email or not"""
  primary: Boolean
}

type mutation_addDealParticipant_related_objects_person_phone_items {
  """The type of the phone number"""
  label: String

  """The phone number of the person associated with the deal"""
  value: String

  """If this is the primary phone number or not"""
  primary: Boolean
}

input addDealParticipantRequest_Input {
  """The ID of the person"""
  person_id: Int!
}

type deleteDealParticipant {
  """If the request was successful or not"""
  success: Boolean
  data: mutation_deleteDealParticipant_data
}

type mutation_deleteDealParticipant_data {
  """The ID of the deal participant that was deleted"""
  id: Int
}

type getAddProductAttachement {
  """If the response is successful or not"""
  success: Boolean
  data: mutation_addDealProduct_data
}

type mutation_addDealProduct_data {
  """The ID of the product"""
  product_id: Int

  """The price at which this product will be added to the deal"""
  item_price: Float!

  """
  Quantity – e.g. how many items of this product will be added to the deal
  """
  quantity: Int!

  """The discount %. If omitted, will be set to 0."""
  discount_percentage: Float

  """The duration of the product. If omitted, will be set to 1."""
  duration: Float

  """The type of the duration. (For example hourly, daily, etc.)"""
  duration_unit: String

  """
  The ID of the product variation to use. When omitted, no variation will be used.
  """
  product_variation_id: Int

  """A textual comment associated with this product-deal attachment"""
  comments: String

  """The product tax"""
  tax: Float

  """
  The ID of the deal-product (the ID of the product attached to the deal)
  """
  id: Int

  """The ID of the company"""
  company_id: Int

  """The ID of the deal"""
  deal_id: Int

  """The product sum without the discount"""
  sum_no_discount: Float

  """The sum of all the products attached to the deal"""
  sum: Float

  """The currency associated with the deal product"""
  currency: String

  """The date and time when the product was added to the deal"""
  add_time: String

  """The date and time when the deal product was last edited"""
  last_edit: String

  """Whether the product is active or not"""
  active_flag: Boolean

  """The product name"""
  name: String

  """
  The ID of the deal-product (the ID of the product attached to the deal)
  """
  product_attachment_id: Int
}

input addDealProductRequest_Input {
  """The ID of the product to use"""
  product_id: Int!

  """The price at which this product will be added to the deal"""
  item_price: Float!

  """
  Quantity – e.g. how many items of this product will be added to the deal
  """
  quantity: Int!

  """The discount %. If omitted, will be set to 0."""
  discount_percentage: Float

  """The duration of the product. If omitted, will be set to 1."""
  duration: Float = 1
  duration_unit: dealProductUnitDuration3

  """
  The ID of the product variation to use. When omitted, no variation will be used.
  """
  product_variation_id: Int

  """A textual comment associated with this product-deal attachment"""
  comments: String

  """The tax percentage"""
  tax: Float
}

enum dealProductUnitDuration3 {
  hourly
  daily
  weekly
  monthly
  yearly
}

type getProductAttachement {
  """If the response is successful or not"""
  success: Boolean
  data: mutation_updateDealProduct_data
}

type mutation_updateDealProduct_data {
  """The ID of the product"""
  product_id: Int

  """The price at which this product will be added to the deal"""
  item_price: Float!

  """
  Quantity – e.g. how many items of this product will be added to the deal
  """
  quantity: Int!

  """The discount %. If omitted, will be set to 0."""
  discount_percentage: Float

  """The duration of the product. If omitted, will be set to 1."""
  duration: Float

  """The type of the duration. (For example hourly, daily, etc.)"""
  duration_unit: String

  """
  The ID of the product variation to use. When omitted, no variation will be used.
  """
  product_variation_id: Int

  """A textual comment associated with this product-deal attachment"""
  comments: String

  """The product tax"""
  tax: Float

  """
  The ID of the deal-product (the ID of the product attached to the deal)
  """
  id: Int

  """The ID of the company"""
  company_id: Int

  """The ID of the deal"""
  deal_id: Int

  """The product sum without the discount"""
  sum_no_discount: Float

  """The sum of all the products attached to the deal"""
  sum: Float

  """The currency associated with the deal product"""
  currency: String

  """The date and time when the product was added to the deal"""
  add_time: String

  """The date and time when the deal product was last edited"""
  last_edit: String

  """Whether the product is active or not"""
  active_flag: Boolean

  """The product name"""
  name: String
}

input UpdateDealProductRequest_Input {
  """The ID of the product to use"""
  product_id: Int!

  """The price at which this product will be added to the deal"""
  item_price: Float

  """How many items of this product will be added to the deal"""
  quantity: Int

  """The discount %. If omitted, will be set to 0."""
  discount_percentage: Float

  """The duration of the product"""
  duration: Float = 1
  duration_unit: dealProductUnitDuration4

  """
  The ID of the product variation to use. When omitted, no variation will be used.
  """
  product_variation_id: Int

  """A textual comment associated with this product-deal attachment"""
  comments: String

  """The tax percentage"""
  tax: Float
}

enum dealProductUnitDuration4 {
  hourly
  daily
  weekly
  monthly
  yearly
}

type deleteDealProduct {
  """If the request was successful or not"""
  success: Boolean
  data: mutation_deleteDealProduct_data
}

type mutation_deleteDealProduct_data {
  """The ID of an attached product that was deleted from the deal"""
  id: Int
}

type field {
  """If the response is successful or not"""
  success: Boolean
  data: mutation_addDealField_allOf_1_data
}

type mutation_addDealField_allOf_1_data {
  """The ID of the field. Value is `null` in case of subfields."""
  id: Int

  """
  The key of the field. For custom fields this is generated upon creation.
  """
  key: String

  """The name of the field"""
  name: String

  """The order number of the field"""
  order_nr: Int
  field_type: mutation_addDealField_allOf_1_data_field_type

  """The creation time of the field"""
  add_time: String

  """The update time of the field"""
  update_time: String

  """
  The ID of the user who created or most recently updated the field, only applicable for custom fields
  """
  last_updated_by_user_id: Int

  """The active flag of the field"""
  active_flag: Boolean

  """The edit flag of the field"""
  edit_flag: Boolean

  """Not used"""
  index_visible_flag: Boolean

  """Not used"""
  details_visible_flag: Boolean

  """Not used"""
  add_visible_flag: Boolean

  """Not used"""
  important_flag: Boolean

  """Whether or not the field of an item can be edited in bulk"""
  bulk_edit_allowed: Boolean

  """Whether or not items can be searched by this field"""
  searchable_flag: Boolean

  """Whether or not items can be filtered by this field"""
  filtering_allowed: Boolean

  """Whether or not items can be sorted by this field"""
  sortable_flag: Boolean

  """Whether or not the field is mandatory"""
  mandatory_flag: Boolean

  """
  The options of the field. When there are no options, `null` is returned.
  """
  options: [JSON]

  """
  The deleted options of the field. Only present when there is at least 1 deleted option.
  """
  options_deleted: [JSON]

  """
  Whether or not the field is a subfield of another field. Only present if field is subfield.
  """
  is_subfield: Boolean

  """The subfields of the field. Only present when the field has subfields."""
  subfields: [JSON]
}

"""
The type of the field<table><tr><th>Value</th><th>Description</th></tr><tr><td>`address`</td><td>Address field (has multiple subfields, autocompleted by Google Maps)</td></tr><tr><td>`date`</td><td>Date (format YYYY-MM-DD)</td></tr><tr><td>`daterange`</td><td>Date-range field (has a start date and end date value, both YYYY-MM-DD)</td></tr><tr><td>`double`</td><td>Numeric value</td></tr><tr><td>`enum`</td><td>Options field with a single possible chosen option</td></tr><tr></tr><tr><td>`monetary`</td><td>Monetary field (has a numeric value and a currency value)</td></tr><tr><td>`org`</td><td>Organization field (contains an organization ID which is stored on the same account)</td></tr><tr><td>`people`</td><td>Person field (contains a person ID which is stored on the same account)</td></tr><tr><td>`phone`</td><td>Phone field (up to 255 numbers and/or characters)</td></tr><tr><td>`set`</td><td>Options field with a possibility of having multiple chosen options</td></tr><tr><td>`text`</td><td>Long text (up to 65k characters)</td></tr><tr><td>`time`</td><td>Time field (format HH:MM:SS)</td></tr><tr><td>`timerange`</td><td>Time-range field (has a start time and end time value, both HH:MM:SS)</td></tr><tr><td>`user`</td><td>User field (contains a user ID of another Pipedrive user)</td></tr><tr><td>`varchar`</td><td>Text (up to 255 characters)</td></tr><tr><td>`varchar_auto`</td><td>Autocomplete text (up to 255 characters)</td></tr><tr><td>`visible_to`</td><td>System field that keeps item's visibility setting</td></tr></table>
"""
enum mutation_addDealField_allOf_1_data_field_type {
  address
  date
  daterange
  double
  enum
  monetary
  org
  people
  phone
  set
  text
  time
  timerange
  user
  varchar
  varchar_auto
  visible_to
}

input createFieldRequest_Input {
  """The name of the field"""
  name: String!

  """
  When `field_type` is either set or enum, possible options must be supplied as a JSON-encoded sequential array of objects. Example: `[{"label":"New Item"}]`
  """
  options: String

  """
  Whether the field is available in the 'add new' modal or not (both in the web and mobile app)
  """
  add_visible_flag: Boolean = true
  field_type: mutationInput_addDealField_input_allOf_1_field_type!
}

"""
The type of the field<table><tr><th>Value</th><th>Description</th></tr><tr><td>`address`</td><td>Address field (has multiple subfields, autocompleted by Google Maps)</td></tr><tr><td>`date`</td><td>Date (format YYYY-MM-DD)</td></tr><tr><td>`daterange`</td><td>Date-range field (has a start date and end date value, both YYYY-MM-DD)</td></tr><tr><td>`double`</td><td>Numeric value</td></tr><tr><td>`enum`</td><td>Options field with a single possible chosen option</td></tr><tr></tr><tr><td>`monetary`</td><td>Monetary field (has a numeric value and a currency value)</td></tr><tr><td>`org`</td><td>Organization field (contains an organization ID which is stored on the same account)</td></tr><tr><td>`people`</td><td>Person field (contains a person ID which is stored on the same account)</td></tr><tr><td>`phone`</td><td>Phone field (up to 255 numbers and/or characters)</td></tr><tr><td>`set`</td><td>Options field with a possibility of having multiple chosen options</td></tr><tr><td>`text`</td><td>Long text (up to 65k characters)</td></tr><tr><td>`time`</td><td>Time field (format HH:MM:SS)</td></tr><tr><td>`timerange`</td><td>Time-range field (has a start time and end time value, both HH:MM:SS)</td></tr><tr><td>`user`</td><td>User field (contains a user ID of another Pipedrive user)</td></tr><tr><td>`varchar`</td><td>Text (up to 255 characters)</td></tr><tr><td>`varchar_auto`</td><td>Autocomplete text (up to 255 characters)</td></tr><tr><td>`visible_to`</td><td>System field that keeps item's visibility setting</td></tr></table>
"""
enum mutationInput_addDealField_input_allOf_1_field_type {
  address
  date
  daterange
  double
  enum
  monetary
  org
  people
  phone
  set
  text
  time
  timerange
  user
  varchar
  varchar_auto
  visible_to
}

type deleteFields {
  """If the response is successful or not"""
  success: Boolean
  data: mutation_deleteDealFields_allOf_1_data
}

type mutation_deleteDealFields_allOf_1_data {
  """The list of deleted field IDs"""
  id: [Int]
}

type deleteField {
  """If the response is successful or not"""
  success: Boolean
  data: mutation_deleteDealField_allOf_1_data
}

type mutation_deleteDealField_allOf_1_data {
  """The ID of the field that was deleted"""
  id: Int
}

type mutation_updateDealField {
  """If the response is successful or not"""
  success: Boolean
  data: mutation_updateDealField_allOf_1_data
}

type mutation_updateDealField_allOf_1_data {
  """The ID of the field. Value is `null` in case of subfields."""
  id: Int

  """
  The key of the field. For custom fields this is generated upon creation.
  """
  key: String

  """The name of the field"""
  name: String

  """The order number of the field"""
  order_nr: Int
  field_type: mutation_updateDealField_allOf_1_data_field_type

  """The creation time of the field"""
  add_time: String

  """The update time of the field"""
  update_time: String

  """
  The ID of the user who created or most recently updated the field, only applicable for custom fields
  """
  last_updated_by_user_id: Int

  """The active flag of the field"""
  active_flag: Boolean

  """The edit flag of the field"""
  edit_flag: Boolean

  """Not used"""
  index_visible_flag: Boolean

  """Not used"""
  details_visible_flag: Boolean

  """Not used"""
  add_visible_flag: Boolean

  """Not used"""
  important_flag: Boolean

  """Whether or not the field of an item can be edited in bulk"""
  bulk_edit_allowed: Boolean

  """Whether or not items can be searched by this field"""
  searchable_flag: Boolean

  """Whether or not items can be filtered by this field"""
  filtering_allowed: Boolean

  """Whether or not items can be sorted by this field"""
  sortable_flag: Boolean

  """Whether or not the field is mandatory"""
  mandatory_flag: Boolean

  """
  The options of the field. When there are no options, `null` is returned.
  """
  options: [JSON]

  """
  The deleted options of the field. Only present when there is at least 1 deleted option.
  """
  options_deleted: [JSON]

  """
  Whether or not the field is a subfield of another field. Only present if field is subfield.
  """
  is_subfield: Boolean

  """The subfields of the field. Only present when the field has subfields."""
  subfields: [JSON]
}

"""
The type of the field<table><tr><th>Value</th><th>Description</th></tr><tr><td>`address`</td><td>Address field (has multiple subfields, autocompleted by Google Maps)</td></tr><tr><td>`date`</td><td>Date (format YYYY-MM-DD)</td></tr><tr><td>`daterange`</td><td>Date-range field (has a start date and end date value, both YYYY-MM-DD)</td></tr><tr><td>`double`</td><td>Numeric value</td></tr><tr><td>`enum`</td><td>Options field with a single possible chosen option</td></tr><tr></tr><tr><td>`monetary`</td><td>Monetary field (has a numeric value and a currency value)</td></tr><tr><td>`org`</td><td>Organization field (contains an organization ID which is stored on the same account)</td></tr><tr><td>`people`</td><td>Person field (contains a person ID which is stored on the same account)</td></tr><tr><td>`phone`</td><td>Phone field (up to 255 numbers and/or characters)</td></tr><tr><td>`set`</td><td>Options field with a possibility of having multiple chosen options</td></tr><tr><td>`text`</td><td>Long text (up to 65k characters)</td></tr><tr><td>`time`</td><td>Time field (format HH:MM:SS)</td></tr><tr><td>`timerange`</td><td>Time-range field (has a start time and end time value, both HH:MM:SS)</td></tr><tr><td>`user`</td><td>User field (contains a user ID of another Pipedrive user)</td></tr><tr><td>`varchar`</td><td>Text (up to 255 characters)</td></tr><tr><td>`varchar_auto`</td><td>Autocomplete text (up to 255 characters)</td></tr><tr><td>`visible_to`</td><td>System field that keeps item's visibility setting</td></tr></table>
"""
enum mutation_updateDealField_allOf_1_data_field_type {
  address
  date
  daterange
  double
  enum
  monetary
  org
  people
  phone
  set
  text
  time
  timerange
  user
  varchar
  varchar_auto
  visible_to
}

input updateFieldRequest_Input {
  """The name of the field"""
  name: String

  """
  When `field_type` is either set or enum, possible options must be supplied as a JSON-encoded sequential array of objects. All active items must be supplied and already existing items must have their ID supplied. New items only require a label. Example: `[{"id":123,"label":"Existing Item"},{"label":"New Item"}]`
  """
  options: String

  """
  Whether the field is available in 'add new' modal or not (both in web and mobile app)
  """
  add_visible_flag: Boolean = true
}

type addFile {
  """If the request was successful or not"""
  success: Boolean
  data: mutation_addFile_data
}

"""The file data"""
type mutation_addFile_data {
  """The ID of the file"""
  id: Int

  """The ID of the user to associate the file with"""
  user_id: Int

  """The ID of the deal to associate the file with"""
  deal_id: Int

  """The ID of the person to associate the file with"""
  person_id: Int

  """The ID of the organization to associate the file with"""
  org_id: Int

  """The ID of the product to associate the file with"""
  product_id: Int

  """The ID of the activity to associate the file with"""
  activity_id: Int

  """The ID of the lead to associate the file with"""
  lead_id: UUID

  """
  The date and time when the file was added/created. Format: YYYY-MM-DD HH:MM:SS
  """
  add_time: String

  """
  The last updated date and time of the file. Format: YYYY-MM-DD HH:MM:SS
  """
  update_time: String

  """The original name of the file"""
  file_name: String

  """The size of the file"""
  file_size: Int

  """
  Whether the user is active or not. false = Not activated, true = Activated
  """
  active_flag: Boolean

  """Whether the file was uploaded as inline or not"""
  inline_flag: Boolean

  """
  The location type to send the file to. Only googledrive is supported at the moment.
  """
  remote_location: String

  """The ID of the remote item"""
  remote_id: String

  """The ID of the inline attachment"""
  cid: String

  """The location of the cloud storage"""
  s3_bucket: String

  """The ID of the mail message to associate the file with"""
  mail_message_id: String

  """The ID of the mail template to associate the file with"""
  mail_template_id: String

  """The name of the deal associated with the file"""
  deal_name: String

  """The name of the person associated with the file"""
  person_name: String

  """The name of the organization associated with the file"""
  org_name: String

  """The name of the product associated with the file"""
  product_name: String

  """The name of the lead associated with the file"""
  lead_name: String

  """The URL of the download file"""
  url: String

  """The visible name of the file"""
  name: String

  """The description of the file"""
  description: String
}

input addFileRequest_Input {
  """
  A single file, supplied in the multipart/form-data encoding and contained within the given boundaries
  """
  file: File!

  """The ID of the deal to associate file(s) with"""
  deal_id: Int

  """The ID of the person to associate file(s) with"""
  person_id: Int

  """The ID of the organization to associate file(s) with"""
  org_id: Int

  """The ID of the product to associate file(s) with"""
  product_id: Int

  """The ID of the activity to associate file(s) with"""
  activity_id: Int

  """The ID of the lead to associate file(s) with"""
  lead_id: UUID
}

type addFileAndLinkIt {
  """If the request was successful or not"""
  success: Boolean
  data: mutation_addFileAndLinkIt_data
}

"""The file data"""
type mutation_addFileAndLinkIt_data {
  """The ID of the file"""
  id: Int

  """The ID of the user to associate the file with"""
  user_id: Int

  """The ID of the deal to associate the file with"""
  deal_id: Int

  """The ID of the person to associate the file with"""
  person_id: Int

  """The ID of the organization to associate the file with"""
  org_id: Int

  """The ID of the product to associate the file with"""
  product_id: Int

  """The ID of the activity to associate the file with"""
  activity_id: Int

  """The ID of the lead to associate the file with"""
  lead_id: UUID

  """
  The date and time when the file was added/created. Format: YYYY-MM-DD HH:MM:SS
  """
  add_time: String

  """
  The last updated date and time of the file. Format: YYYY-MM-DD HH:MM:SS
  """
  update_time: String

  """The original name of the file"""
  file_name: String

  """The size of the file"""
  file_size: Int

  """
  Whether the user is active or not. false = Not activated, true = Activated
  """
  active_flag: Boolean

  """Whether the file was uploaded as inline or not"""
  inline_flag: Boolean

  """
  The location type to send the file to. Only googledrive is supported at the moment.
  """
  remote_location: String

  """The ID of the remote item"""
  remote_id: String

  """The ID of the inline attachment"""
  cid: String

  """The location of the cloud storage"""
  s3_bucket: String

  """The ID of the mail message to associate the file with"""
  mail_message_id: String

  """The ID of the mail template to associate the file with"""
  mail_template_id: String

  """The name of the deal associated with the file"""
  deal_name: String

  """The name of the person associated with the file"""
  person_name: String

  """The name of the organization associated with the file"""
  org_name: String

  """The name of the product associated with the file"""
  product_name: String

  """The name of the lead associated with the file"""
  lead_name: String

  """The URL of the download file"""
  url: String

  """The visible name of the file"""
  name: String

  """The description of the file"""
  description: String
}

input addFileAndLinkItRequest_Input {
  file_type: mutationInput_addFileAndLinkIt_input_file_type!

  """The title of the file"""
  title: String!
  item_type: mutationInput_addFileAndLinkIt_input_item_type!

  """The ID of the item to associate the file with"""
  item_id: Int!
  remote_location: googledrive_const!
}

"""The file type"""
enum mutationInput_addFileAndLinkIt_input_file_type {
  gdoc
  gslides
  gsheet
  gform
  gdraw
}

"""The item type"""
enum mutationInput_addFileAndLinkIt_input_item_type {
  deal
  organization
  person
}

enum googledrive_const {
  googledrive
}

type linkFileToItem {
  """If the request was successful or not"""
  success: Boolean
  data: mutation_linkFileToItem_data
}

"""The file data"""
type mutation_linkFileToItem_data {
  """The ID of the file"""
  id: Int

  """The ID of the user to associate the file with"""
  user_id: Int

  """The ID of the deal to associate the file with"""
  deal_id: Int

  """The ID of the person to associate the file with"""
  person_id: Int

  """The ID of the organization to associate the file with"""
  org_id: Int

  """The ID of the product to associate the file with"""
  product_id: Int

  """The ID of the activity to associate the file with"""
  activity_id: Int

  """The ID of the lead to associate the file with"""
  lead_id: UUID

  """
  The date and time when the file was added/created. Format: YYYY-MM-DD HH:MM:SS
  """
  add_time: String

  """
  The last updated date and time of the file. Format: YYYY-MM-DD HH:MM:SS
  """
  update_time: String

  """The original name of the file"""
  file_name: String

  """The size of the file"""
  file_size: Int

  """
  Whether the user is active or not. false = Not activated, true = Activated
  """
  active_flag: Boolean

  """Whether the file was uploaded as inline or not"""
  inline_flag: Boolean

  """
  The location type to send the file to. Only googledrive is supported at the moment.
  """
  remote_location: String

  """The ID of the remote item"""
  remote_id: String

  """The ID of the inline attachment"""
  cid: String

  """The location of the cloud storage"""
  s3_bucket: String

  """The ID of the mail message to associate the file with"""
  mail_message_id: String

  """The ID of the mail template to associate the file with"""
  mail_template_id: String

  """The name of the deal associated with the file"""
  deal_name: String

  """The name of the person associated with the file"""
  person_name: String

  """The name of the organization associated with the file"""
  org_name: String

  """The name of the product associated with the file"""
  product_name: String

  """The name of the lead associated with the file"""
  lead_name: String

  """The URL of the download file"""
  url: String

  """The visible name of the file"""
  name: String

  """The description of the file"""
  description: String
}

input linkFileToItemRequest_Input {
  item_type: mutationInput_linkFileToItem_input_item_type!

  """The ID of the item to associate the file with"""
  item_id: Int!

  """The remote item ID"""
  remote_id: String!
  remote_location: googledrive_const!
}

"""The item type"""
enum mutationInput_linkFileToItem_input_item_type {
  deal
  organization
  person
}

type deleteFile {
  """If the request was successful or not"""
  success: Boolean
  data: mutation_deleteFile_data
}

type mutation_deleteFile_data {
  """The ID of the file"""
  id: Int
}

type updateFile {
  """If the request was successful or not"""
  success: Boolean
  data: mutation_updateFile_data
}

"""The file data"""
type mutation_updateFile_data {
  """The ID of the file"""
  id: Int

  """The ID of the user to associate the file with"""
  user_id: Int

  """The ID of the deal to associate the file with"""
  deal_id: Int

  """The ID of the person to associate the file with"""
  person_id: Int

  """The ID of the organization to associate the file with"""
  org_id: Int

  """The ID of the product to associate the file with"""
  product_id: Int

  """The ID of the activity to associate the file with"""
  activity_id: Int

  """The ID of the lead to associate the file with"""
  lead_id: UUID

  """
  The date and time when the file was added/created. Format: YYYY-MM-DD HH:MM:SS
  """
  add_time: String

  """
  The last updated date and time of the file. Format: YYYY-MM-DD HH:MM:SS
  """
  update_time: String

  """The original name of the file"""
  file_name: String

  """The size of the file"""
  file_size: Int

  """
  Whether the user is active or not. false = Not activated, true = Activated
  """
  active_flag: Boolean

  """Whether the file was uploaded as inline or not"""
  inline_flag: Boolean

  """
  The location type to send the file to. Only googledrive is supported at the moment.
  """
  remote_location: String

  """The ID of the remote item"""
  remote_id: String

  """The ID of the inline attachment"""
  cid: String

  """The location of the cloud storage"""
  s3_bucket: String

  """The ID of the mail message to associate the file with"""
  mail_message_id: String

  """The ID of the mail template to associate the file with"""
  mail_template_id: String

  """The name of the deal associated with the file"""
  deal_name: String

  """The name of the person associated with the file"""
  person_name: String

  """The name of the organization associated with the file"""
  org_name: String

  """The name of the product associated with the file"""
  product_name: String

  """The name of the lead associated with the file"""
  lead_name: String

  """The URL of the download file"""
  url: String

  """The visible name of the file"""
  name: String

  """The description of the file"""
  description: String
}

input updateFileRequest_Input {
  """The visible name of the file"""
  name: String

  """The description of the file"""
  description: String
}

type deleteFilters {
  """If the response is successful or not"""
  success: Boolean
  data: mutation_deleteFilters_allOf_1_data
}

type mutation_deleteFilters_allOf_1_data {
  """The array of the IDs of the deleted filter"""
  id: [Int]
}

type postFilter {
  """If the response is successful or not"""
  success: Boolean
  data: mutation_addFilter_allOf_1_data
}

type mutation_addFilter_allOf_1_data {
  """The ID of the created filter"""
  id: Int

  """The name of the created filter"""
  name: String

  """The activity flag of the created filter"""
  active_flag: Boolean
  type: mutation_addFilter_allOf_1_data_type

  """If the created filter is temporary or not"""
  temporary_flag: Boolean

  """The user ID of the created filter"""
  user_id: Int

  """The add time of the created filter"""
  add_time: String

  """The update time of the created filter"""
  update_time: String

  """The visibility group ID of the created filter"""
  visible_to: Int

  """The custom view ID of the created filter"""
  custom_view_id: Int
  conditions: JSON
}

enum mutation_addFilter_allOf_1_data_type {
  deals
  leads
  org
  people
  products
  activity
}

input addFilterRequest_Input {
  """The name of the filter"""
  name: String!
  conditions: JSON!
  type: mutationInput_addFilter_input_type!
}

enum mutationInput_addFilter_input_type {
  deals
  leads
  org
  people
  products
  activity
}

type deleteFilter {
  """If the response is successful or not"""
  success: Boolean
  data: mutation_deleteFilter_allOf_1_data
}

type mutation_deleteFilter_allOf_1_data {
  """The ID of the deleted filter"""
  id: Int
}

type mutation_updateFilter {
  """If the response is successful or not"""
  success: Boolean
  data: mutation_updateFilter_allOf_1_data
}

type mutation_updateFilter_allOf_1_data {
  """The ID of the created filter"""
  id: Int

  """The name of the created filter"""
  name: String

  """The activity flag of the created filter"""
  active_flag: Boolean
  type: mutation_updateFilter_allOf_1_data_type

  """If the created filter is temporary or not"""
  temporary_flag: Boolean

  """The user ID of the created filter"""
  user_id: Int

  """The add time of the created filter"""
  add_time: String

  """The update time of the created filter"""
  update_time: String

  """The visibility group ID of the created filter"""
  visible_to: Int

  """The custom view ID of the created filter"""
  custom_view_id: Int
  conditions: JSON
}

enum mutation_updateFilter_allOf_1_data_type {
  deals
  leads
  org
  people
  products
  activity
}

input updateFilterRequest_Input {
  """The name of the filter"""
  name: String
  conditions: JSON!
}

type addOrUpdateGoal {
  """If the request was successful or not"""
  success: Boolean
  data: mutation_addGoal_data
}

type mutation_addGoal_data {
  goal: mutation_addGoal_data_goal
}

type mutation_addGoal_data_goal {
  """The ID of the goal"""
  id: String

  """The ID of the creator of the goal"""
  owner_id: Int

  """The title of the goal"""
  title: String
  type: mutation_addGoal_data_goal_type
  assignee: mutation_addGoal_data_goal_assignee

  """The interval of the goal"""
  interval: String
  duration: mutation_addGoal_data_goal_duration
  expected_outcome: mutation_addGoal_data_goal_expected_outcome

  """Whether the goal is currently active or not"""
  is_active: Boolean

  """The IDs of the reports that belong to the goal"""
  report_ids: [String]
}

"""The type of the goal"""
type mutation_addGoal_data_goal_type {
  """The name of the goal type"""
  name: String
  params: mutation_addGoal_data_goal_type_params
}

"""The parameters that accompany the goal type"""
type mutation_addGoal_data_goal_type_params {
  """The IDs of pipelines of the goal"""
  pipeline_id: [Int]

  """The IDs of activity types of the goal"""
  activity_type_id: [Int]
}

"""Who the goal is assigned to"""
type mutation_addGoal_data_goal_assignee {
  """The ID of the goal assignee"""
  id: Int

  """The type of the assignee"""
  type: String
}

"""The duration of the goal"""
type mutation_addGoal_data_goal_duration {
  """The start date of the goal"""
  start: String

  """The end date of the goal"""
  end: String
}

"""The expected outcome of the goal"""
type mutation_addGoal_data_goal_expected_outcome {
  """The numeric target of the goal"""
  target: Int

  """The tracking metric of the goal"""
  tracking_metric: String
}

input addGoalRequest_Input {
  """The title of the goal"""
  title: String
  assignee: JSON!
  type: JSON!
  expected_outcome: JSON!
  duration: JSON!
  interval: mutationInput_addGoal_input_interval!
}

"""The interval of the goal"""
enum mutationInput_addGoal_input_interval {
  weekly
  monthly
  quarterly
  yearly
}

type mutation_updateGoal {
  """If the request was successful or not"""
  success: Boolean
  data: mutation_updateGoal_data
}

type mutation_updateGoal_data {
  goal: mutation_updateGoal_data_goal
}

type mutation_updateGoal_data_goal {
  """The ID of the goal"""
  id: String

  """The ID of the creator of the goal"""
  owner_id: Int

  """The title of the goal"""
  title: String
  type: mutation_updateGoal_data_goal_type
  assignee: mutation_updateGoal_data_goal_assignee

  """The interval of the goal"""
  interval: String
  duration: mutation_updateGoal_data_goal_duration
  expected_outcome: mutation_updateGoal_data_goal_expected_outcome

  """Whether the goal is currently active or not"""
  is_active: Boolean

  """The IDs of the reports that belong to the goal"""
  report_ids: [String]
}

"""The type of the goal"""
type mutation_updateGoal_data_goal_type {
  """The name of the goal type"""
  name: String
  params: mutation_updateGoal_data_goal_type_params
}

"""The parameters that accompany the goal type"""
type mutation_updateGoal_data_goal_type_params {
  """The IDs of pipelines of the goal"""
  pipeline_id: [Int]

  """The IDs of activity types of the goal"""
  activity_type_id: [Int]
}

"""Who the goal is assigned to"""
type mutation_updateGoal_data_goal_assignee {
  """The ID of the goal assignee"""
  id: Int

  """The type of the assignee"""
  type: String
}

"""The duration of the goal"""
type mutation_updateGoal_data_goal_duration {
  """The start date of the goal"""
  start: String

  """The end date of the goal"""
  end: String
}

"""The expected outcome of the goal"""
type mutation_updateGoal_data_goal_expected_outcome {
  """The numeric target of the goal"""
  target: Int

  """The tracking metric of the goal"""
  tracking_metric: String
}

input basicGoalRequest_Input {
  """The title of the goal"""
  title: String
  assignee: JSON
  type: JSON
  expected_outcome: JSON
  duration: JSON
  interval: mutationInput_updateGoal_input_interval
}

"""The interval of the goal"""
enum mutationInput_updateGoal_input_interval {
  weekly
  monthly
  quarterly
  yearly
}

type deleteGoal {
  """If the request was successful or not"""
  success: Boolean
}

type oneLead {
  success: Boolean
  data: mutation_addLead_data
}

type mutation_addLead_data {
  """The unique ID of the lead in the UUID format"""
  id: UUID

  """The title of the lead"""
  title: String

  """The ID of the user who owns the lead"""
  owner_id: Int

  """The ID of the user who created the lead"""
  creator_id: Int

  """The IDs of the lead labels which are associated with the lead"""
  label_ids: [UUID]

  """The ID of a person which this lead is linked to"""
  person_id: Int

  """The ID of an organization which this lead is linked to"""
  organization_id: Int

  """
  Defines where the lead comes from. Will be `API` if the lead was created through the Public API and will be `Manually created` if the lead was created manually through the UI.
  """
  source_name: String

  """A flag indicating whether the lead is archived or not"""
  is_archived: Boolean

  """
  A flag indicating whether the lead was seen by someone in the Pipedrive UI
  """
  was_seen: Boolean
  value: mutation_addLead_data_value

  """
  The date of when the deal which will be created from the lead is expected to be closed. In ISO 8601 format: YYYY-MM-DD.
  """
  expected_close_date: Date

  """The ID of the next activity associated with the lead"""
  next_activity_id: Int

  """
  The date and time of when the lead was created. In ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.
  """
  add_time: DateTime

  """
  The date and time of when the lead was last updated. In ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.
  """
  update_time: DateTime
  visible_to: mutation_addLead_data_visible_to

  """The BCC email of the lead"""
  cc_email: String
}

"""The potential value of the lead"""
type mutation_addLead_data_value {
  amount: Float!
  currency: String!
}

enum mutation_addLead_data_visible_to {
  _1
  _3
  _5
  _7
}

input addLeadRequest_Input {
  """The name of the lead"""
  title: String!

  """
  The ID of the user which will be the owner of the created lead. If not provided, the user making the request will be used.
  """
  owner_id: Int

  """The IDs of the lead labels which will be associated with the lead"""
  label_ids: [UUID]

  """
  The ID of a person which this lead will be linked to. If the person does not exist yet, it needs to be created first. This property is required unless `organization_id` is specified.
  """
  person_id: Int

  """
  The ID of an organization which this lead will be linked to. If the organization does not exist yet, it needs to be created first. This property is required unless `person_id` is specified.
  """
  organization_id: Int
  value: mutationInput_addLead_input_value_Input

  """
  The date of when the deal which will be created from the lead is expected to be closed. In ISO 8601 format: YYYY-MM-DD.
  """
  expected_close_date: Date
  visible_to: mutationInput_addLead_input_visible_to

  """
  A flag indicating whether the lead was seen by someone in the Pipedrive UI
  """
  was_seen: Boolean
}

"""The potential value of the lead"""
input mutationInput_addLead_input_value_Input {
  amount: Float!
  currency: String!
}

enum mutationInput_addLead_input_visible_to {
  _1
  _3
  _5
  _7
}

union updateLead_response = mutation_updateLead_oneOf_0 | leadResponse404

type mutation_updateLead_oneOf_0 {
  success: Boolean
  data: mutation_updateLead_oneOf_0_data
}

type mutation_updateLead_oneOf_0_data {
  """The unique ID of the lead in the UUID format"""
  id: UUID

  """The title of the lead"""
  title: String

  """The ID of the user who owns the lead"""
  owner_id: Int

  """The ID of the user who created the lead"""
  creator_id: Int

  """The IDs of the lead labels which are associated with the lead"""
  label_ids: [UUID]

  """The ID of a person which this lead is linked to"""
  person_id: Int

  """The ID of an organization which this lead is linked to"""
  organization_id: Int

  """
  Defines where the lead comes from. Will be `API` if the lead was created through the Public API and will be `Manually created` if the lead was created manually through the UI.
  """
  source_name: String

  """A flag indicating whether the lead is archived or not"""
  is_archived: Boolean

  """
  A flag indicating whether the lead was seen by someone in the Pipedrive UI
  """
  was_seen: Boolean
  value: mutation_updateLead_oneOf_0_data_value

  """
  The date of when the deal which will be created from the lead is expected to be closed. In ISO 8601 format: YYYY-MM-DD.
  """
  expected_close_date: Date

  """The ID of the next activity associated with the lead"""
  next_activity_id: Int

  """
  The date and time of when the lead was created. In ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.
  """
  add_time: DateTime

  """
  The date and time of when the lead was last updated. In ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.
  """
  update_time: DateTime
  visible_to: mutation_updateLead_oneOf_0_data_visible_to

  """The BCC email of the lead"""
  cc_email: String
}

"""The potential value of the lead"""
type mutation_updateLead_oneOf_0_data_value {
  amount: Float!
  currency: String!
}

enum mutation_updateLead_oneOf_0_data_visible_to {
  _1
  _3
  _5
  _7
}

type leadResponse404 {
  success: Boolean

  """The description of the error"""
  error: String

  """A message describing how to solve the problem"""
  error_info: String
  data: JSON
  additional_data: JSON
}

input updateLeadRequest_Input {
  """The name of the lead"""
  title: String

  """
  The ID of the user which will be the owner of the created lead. If not provided, the user making the request will be used.
  """
  owner_id: Int

  """The IDs of the lead labels which will be associated with the lead"""
  label_ids: [UUID]

  """
  The ID of a person which this lead will be linked to. If the person does not exist yet, it needs to be created first. A lead always has to be linked to a person or organization or both.
  """
  person_id: Int

  """
  The ID of an organization which this lead will be linked to. If the organization does not exist yet, it needs to be created first. A lead always has to be linked to a person or organization or both.
  """
  organization_id: Int

  """A flag indicating whether the lead is archived or not"""
  is_archived: Boolean
  value: mutationInput_updateLead_input_value_Input

  """
  The date of when the deal which will be created from the lead is expected to be closed. In ISO 8601 format: YYYY-MM-DD.
  """
  expected_close_date: Date
  visible_to: mutationInput_updateLead_input_visible_to

  """
  A flag indicating whether the lead was seen by someone in the Pipedrive UI
  """
  was_seen: Boolean
}

"""The potential value of the lead"""
input mutationInput_updateLead_input_value_Input {
  amount: Float!
  currency: String!
}

enum mutationInput_updateLead_input_visible_to {
  _1
  _3
  _5
  _7
}

union deleteLead_response = leadId | mutation_deleteLead_oneOf_1

type leadId {
  success: Boolean
  data: mutation_deleteLead_oneOf_0_data
}

type mutation_deleteLead_oneOf_0_data {
  id: UUID
}

type mutation_deleteLead_oneOf_1 {
  success: Boolean

  """The description of the error"""
  error: String

  """A message describing how to solve the problem"""
  error_info: String
  data: JSON
  additional_data: JSON
}

type addOrUpdateLeadLabel {
  success: Boolean
  data: mutation_addLeadLabel_data
}

type mutation_addLeadLabel_data {
  """The unique ID of the lead label"""
  id: UUID

  """The name of the lead label"""
  name: String
  color: mutation_addLeadLabel_data_color

  """
  The date and time of when the lead label was created. In ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.
  """
  add_time: DateTime

  """
  The date and time of when the lead label was last updated. In ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.
  """
  update_time: DateTime
}

"""The color of the label. Only a subset of colors can be used."""
enum mutation_addLeadLabel_data_color {
  green
  blue
  red
  yellow
  purple
  gray
}

input addLeadLabelRequest_Input {
  """The name of the lead label"""
  name: String!
  color: mutationInput_addLeadLabel_input_color!
}

"""The color of the label. Only a subset of colors can be used."""
enum mutationInput_addLeadLabel_input_color {
  green
  blue
  red
  yellow
  purple
  gray
}

union updateLeadLabel_response = mutation_updateLeadLabel_oneOf_0 | mutation_updateLeadLabel_oneOf_1

type mutation_updateLeadLabel_oneOf_0 {
  success: Boolean
  data: mutation_updateLeadLabel_oneOf_0_data
}

type mutation_updateLeadLabel_oneOf_0_data {
  """The unique ID of the lead label"""
  id: UUID

  """The name of the lead label"""
  name: String
  color: mutation_updateLeadLabel_oneOf_0_data_color

  """
  The date and time of when the lead label was created. In ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.
  """
  add_time: DateTime

  """
  The date and time of when the lead label was last updated. In ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.
  """
  update_time: DateTime
}

"""The color of the label. Only a subset of colors can be used."""
enum mutation_updateLeadLabel_oneOf_0_data_color {
  green
  blue
  red
  yellow
  purple
  gray
}

type mutation_updateLeadLabel_oneOf_1 {
  success: Boolean

  """The description of the error"""
  error: String

  """A message describing how to solve the problem"""
  error_info: String
  data: JSON
  additional_data: JSON
}

input updateLeadLabelRequest_Input {
  """The name of the lead label"""
  name: String
  color: mutationInput_updateLeadLabel_input_color
}

"""The color of the label. Only a subset of colors can be used."""
enum mutationInput_updateLeadLabel_input_color {
  green
  blue
  red
  yellow
  purple
  gray
}

union deleteLeadLabel_response = mutation_deleteLeadLabel_oneOf_0 | mutation_deleteLeadLabel_oneOf_1

type mutation_deleteLeadLabel_oneOf_0 {
  success: Boolean
  data: mutation_deleteLeadLabel_oneOf_0_data
}

type mutation_deleteLeadLabel_oneOf_0_data {
  id: UUID
}

type mutation_deleteLeadLabel_oneOf_1 {
  success: Boolean

  """The description of the error"""
  error: String

  """A message describing how to solve the problem"""
  error_info: String
  data: JSON
  additional_data: JSON
}

union addTeam_response = team | failResponse

type team {
  """If the response is successful or not"""
  success: Boolean
  data: baseTeam
}

input mutationInput_addTeam_input_Input {
  """The team name"""
  name: String!

  """The team description"""
  description: String

  """The team manager ID"""
  manager_id: Int!

  """The list of user IDs"""
  users: [Int]
}

union updateTeam_response = mutation_updateTeam_oneOf_0 | failResponse

type mutation_updateTeam_oneOf_0 {
  """If the response is successful or not"""
  success: Boolean
  data: baseTeam
}

input mutationInput_updateTeam_input_Input {
  """The team name"""
  name: String

  """The team description"""
  description: String

  """The team manager ID"""
  manager_id: Int

  """The list of user IDs"""
  users: [Int]
  active_flag: numberBoolean5
  deleted_flag: numberBoolean6
}

enum numberBoolean5 {
  _0
  _1
}

enum numberBoolean6 {
  _0
  _1
}

union addTeamUser_response = userIds | failResponse

type userIds {
  """If the response is successful or not"""
  success: Boolean

  """The list of user IDs"""
  data: [Int]
}

input addTeamUserRequest_Input {
  """The list of user IDs"""
  users: [Int]!
}

union deleteTeamUser_response = mutation_deleteTeamUser_oneOf_0 | failResponse

type mutation_deleteTeamUser_oneOf_0 {
  """If the response is successful or not"""
  success: Boolean

  """The list of user IDs"""
  data: [Int]
}

input deleteTeamUserRequest_Input {
  """The list of user IDs"""
  users: [Int]!
}

type deleteMailThread {
  """If the response is successful or not"""
  success: Boolean
  data: mutation_deleteMailThread_allOf_1_data
}

type mutation_deleteMailThread_allOf_1_data {
  """The ID of the deleted mail thread"""
  id: Int
}

type updateMailThreadDetails {
  """If the response is successful or not"""
  success: Boolean

  """The mail thread object"""
  data: baseMailThread
}

"""The mail thread object"""
type baseMailThread {
  """ID of the mail thread"""
  id: Int

  """The connection account ID"""
  account_id: String

  """ID of the user whom mail message will be assigned to"""
  user_id: Int

  """The subject"""
  subject: String

  """A snippet"""
  snippet: String
  read_flag: numberBooleanDefault0

  """Mail tracking status"""
  mail_tracking_status: String
  has_attachments_flag: numberBooleanDefault02
  has_inline_attachments_flag: numberBooleanDefault03
  has_real_attachments_flag: numberBooleanDefault04
  deleted_flag: numberBooleanDefault05
  synced_flag: numberBooleanDefault06
  smart_bcc_flag: numberBooleanDefault07
  mail_link_tracking_enabled_flag: numberBooleanDefault08
  parties: mutation_updateMailThreadDetails_allOf_1_data_allOf_1_parties

  """Parties of the drafted mail thread"""
  drafts_parties: [JSON]

  """Folders in which messages from thread are being stored"""
  folders: [String]

  """Version"""
  version: Float

  """A snippet from a draft"""
  snippet_draft: String

  """A snippet from a message sent"""
  snippet_sent: String

  """An amount of messages"""
  message_count: Int
  has_draft_flag: numberBooleanDefault09
  has_sent_flag: numberBooleanDefault010
  archived_flag: numberBooleanDefault011
  shared_flag: numberBooleanDefault012
  external_deleted_flag: numberBooleanDefault013
  first_message_to_me_flag: numberBooleanDefault014

  """Last message timestamp"""
  last_message_timestamp: DateTime

  """
  The time when the mail thread has had the first message received or created
  """
  first_message_timestamp: DateTime

  """The last time when the mail thread has had a message sent"""
  last_message_sent_timestamp: DateTime

  """The last time when the mail thread has had a message received"""
  last_message_received_timestamp: DateTime

  """The time when the mail thread was inserted to database"""
  add_time: DateTime

  """The time when the mail thread was updated in database received"""
  update_time: DateTime

  """The ID of the deal"""
  deal_id: Int

  """Status of the deal"""
  deal_status: String

  """The ID of the lead"""
  lead_id: UUID
  all_messages_sent_flag: numberBooleanDefault015
}

enum numberBooleanDefault0 {
  _0
  _1
}

enum numberBooleanDefault02 {
  _0
  _1
}

enum numberBooleanDefault03 {
  _0
  _1
}

enum numberBooleanDefault04 {
  _0
  _1
}

enum numberBooleanDefault05 {
  _0
  _1
}

enum numberBooleanDefault06 {
  _0
  _1
}

enum numberBooleanDefault07 {
  _0
  _1
}

enum numberBooleanDefault08 {
  _0
  _1
}

"""Parties of the mail thread"""
type mutation_updateMailThreadDetails_allOf_1_data_allOf_1_parties {
  """Recipients of the mail thread"""
  to: [mutation_updateMailThreadDetails_allOf_1_data_allOf_1_parties_to_items]

  """Senders of the mail thread"""
  from: [mutation_updateMailThreadDetails_allOf_1_data_allOf_1_parties_from_items]
}

"""Member of a thread"""
type mutation_updateMailThreadDetails_allOf_1_data_allOf_1_parties_to_items {
  """ID of the mail thread participant"""
  id: Int

  """Name of the mail thread participant"""
  name: String

  """Whether the mail thread participant was last to send an email"""
  latest_sent: Boolean

  """Email address of the mail thread participant"""
  email_address: String

  """Message time"""
  message_time: Float

  """ID of the linked person"""
  linked_person_id: Int

  """Email of the linked person"""
  linked_person_name: String

  """ID of the mail message party"""
  mail_message_party_id: Int

  """Linked Organization ID"""
  linked_organization_id: Int
}

"""Member of a thread"""
type mutation_updateMailThreadDetails_allOf_1_data_allOf_1_parties_from_items {
  """ID of the mail thread participant"""
  id: Int

  """Name of the mail thread participant"""
  name: String

  """Whether the mail thread participant was last to send an email"""
  latest_sent: Boolean

  """Email address of the mail thread participant"""
  email_address: String

  """Message time"""
  message_time: Float

  """ID of the linked person"""
  linked_person_id: Int

  """Email of the linked person"""
  linked_person_name: String

  """ID of the mail message party"""
  mail_message_party_id: Int

  """Linked Organization ID"""
  linked_organization_id: Int
}

enum numberBooleanDefault09 {
  _0
  _1
}

enum numberBooleanDefault010 {
  _0
  _1
}

enum numberBooleanDefault011 {
  _0
  _1
}

enum numberBooleanDefault012 {
  _0
  _1
}

enum numberBooleanDefault013 {
  _0
  _1
}

enum numberBooleanDefault014 {
  _0
  _1
}

enum numberBooleanDefault015 {
  _0
  _1
}

input updateMailThreadDetailsRequest_Input {
  """The ID of the deal this thread is associated with"""
  deal_id: Int

  """The ID of the lead this thread is associated with"""
  lead_id: UUID
  shared_flag: numberBoolean7
  read_flag: numberBoolean8
  archived_flag: numberBoolean9
}

enum numberBoolean7 {
  _0
  _1
}

enum numberBoolean8 {
  _0
  _1
}

enum numberBoolean9 {
  _0
  _1
}

type oneNote {
  """If the request was successful or not"""
  success: Boolean
  data: mutation_addNote_data
}

type mutation_addNote_data {
  """The ID of the note"""
  id: Int

  """Whether the note is active or deleted"""
  active_flag: Boolean

  """The creation date and time of the note"""
  add_time: String

  """
  The content of the note in HTML format. Subject to sanitization on the back-end.
  """
  content: String
  deal: mutation_addNote_data_deal

  """The ID of the lead the note is attached to"""
  lead_id: UUID

  """The ID of the deal the note is attached to"""
  deal_id: Int

  """The ID of the user who last updated the note"""
  last_update_user_id: Int

  """The ID of the organization the note is attached to"""
  org_id: Int
  organization: mutation_addNote_data_organization
  person: mutation_addNote_data_person

  """The ID of the person the note is attached to"""
  person_id: Int

  """If true, the results are filtered by note to deal pinning state"""
  pinned_to_deal_flag: Boolean

  """
  If true, the results are filtered by note to organization pinning state
  """
  pinned_to_organization_flag: Boolean

  """If true, the results are filtered by note to person pinning state"""
  pinned_to_person_flag: Boolean

  """The last updated date and time of the note"""
  update_time: String
  user: mutation_addNote_data_user

  """The ID of the note creator"""
  user_id: Int
}

"""The deal this note is attached to"""
type mutation_addNote_data_deal {
  """The title of the deal this note is attached to"""
  title: String
}

"""The organization the note is attached to"""
type mutation_addNote_data_organization {
  """The name of the organization the note is attached to"""
  name: String
}

"""The person the note is attached to"""
type mutation_addNote_data_person {
  """The name of the person the note is attached to"""
  name: String
}

"""The user who created the note"""
type mutation_addNote_data_user {
  """The email of the note creator"""
  email: String

  """The URL of the note creator avatar picture"""
  icon_url: String

  """Whether the note is created by you or not"""
  is_you: Boolean

  """The name of the note creator"""
  name: String
}

input addNote_request_Input {
  """
  The content of the note in HTML format. Subject to sanitization on the back-end.
  """
  content: String!

  """
  The ID of the lead the note will be attached to. This property is required unless one of (`deal_id/person_id/org_id`) is specified.
  """
  lead_id: UUID

  """
  The ID of the deal the note will be attached to. This property is required unless one of (`lead_id/person_id/org_id`) is specified.
  """
  deal_id: Int

  """
  The ID of the person this note will be attached to. This property is required unless one of (`deal_id/lead_id/org_id`) is specified.
  """
  person_id: Int

  """
  The ID of the organization this note will be attached to. This property is required unless one of (`deal_id/lead_id/person_id`) is specified.
  """
  org_id: Int

  """
  The ID of the user who will be marked as the author of the note. Only an admin can change the author.
  """
  user_id: Int

  """
  The optional creation date & time of the note in UTC. Can be set in the past or in the future. Requires admin user API token. Format: YYYY-MM-DD HH:MM:SS
  """
  add_time: String
  pinned_to_lead_flag: numberBoolean10
  pinned_to_deal_flag: numberBoolean11
  pinned_to_organization_flag: numberBoolean12
  pinned_to_person_flag: numberBoolean13
}

enum numberBoolean10 {
  _0
  _1
}

enum numberBoolean11 {
  _0
  _1
}

enum numberBoolean12 {
  _0
  _1
}

enum numberBoolean13 {
  _0
  _1
}

type deleteNote {
  """If the request was successful or not"""
  success: Boolean

  """If the response is successful or not"""
  data: Boolean
}

type mutation_updateNote {
  """If the request was successful or not"""
  success: Boolean
  data: mutation_updateNote_data
}

type mutation_updateNote_data {
  """The ID of the note"""
  id: Int

  """Whether the note is active or deleted"""
  active_flag: Boolean

  """The creation date and time of the note"""
  add_time: String

  """
  The content of the note in HTML format. Subject to sanitization on the back-end.
  """
  content: String
  deal: mutation_updateNote_data_deal

  """The ID of the lead the note is attached to"""
  lead_id: UUID

  """The ID of the deal the note is attached to"""
  deal_id: Int

  """The ID of the user who last updated the note"""
  last_update_user_id: Int

  """The ID of the organization the note is attached to"""
  org_id: Int
  organization: mutation_updateNote_data_organization
  person: mutation_updateNote_data_person

  """The ID of the person the note is attached to"""
  person_id: Int

  """If true, the results are filtered by note to deal pinning state"""
  pinned_to_deal_flag: Boolean

  """
  If true, the results are filtered by note to organization pinning state
  """
  pinned_to_organization_flag: Boolean

  """If true, the results are filtered by note to person pinning state"""
  pinned_to_person_flag: Boolean

  """The last updated date and time of the note"""
  update_time: String
  user: mutation_updateNote_data_user

  """The ID of the note creator"""
  user_id: Int
}

"""The deal this note is attached to"""
type mutation_updateNote_data_deal {
  """The title of the deal this note is attached to"""
  title: String
}

"""The organization the note is attached to"""
type mutation_updateNote_data_organization {
  """The name of the organization the note is attached to"""
  name: String
}

"""The person the note is attached to"""
type mutation_updateNote_data_person {
  """The name of the person the note is attached to"""
  name: String
}

"""The user who created the note"""
type mutation_updateNote_data_user {
  """The email of the note creator"""
  email: String

  """The URL of the note creator avatar picture"""
  icon_url: String

  """Whether the note is created by you or not"""
  is_you: Boolean

  """The name of the note creator"""
  name: String
}

input noteRequest_Input {
  """
  The content of the note in HTML format. Subject to sanitization on the back-end.
  """
  content: String

  """The ID of the lead the note will be attached to"""
  lead_id: UUID

  """The ID of the deal the note will be attached to"""
  deal_id: Int

  """The ID of the person the note will be attached to"""
  person_id: Int

  """The ID of the organization the note will be attached to"""
  org_id: Int

  """
  The ID of the user who will be marked as the author of the note. Only an admin can change the author.
  """
  user_id: Int

  """
  The optional creation date & time of the note in UTC. Can be set in the past or in the future. Requires admin user API token. Format: YYYY-MM-DD HH:MM:SS
  """
  add_time: String
  pinned_to_lead_flag: numberBoolean14
  pinned_to_deal_flag: numberBoolean15
  pinned_to_organization_flag: numberBoolean16
  pinned_to_person_flag: numberBoolean17
}

enum numberBoolean14 {
  _0
  _1
}

enum numberBoolean15 {
  _0
  _1
}

enum numberBoolean16 {
  _0
  _1
}

enum numberBoolean17 {
  _0
  _1
}

type oneComment {
  """If the request was successful or not"""
  success: Boolean
  data: mutation_addNoteComment_data
}

type mutation_addNoteComment_data {
  """The ID of the note"""
  uuid: UUID

  """Whether the note is active or deleted"""
  active_flag: Boolean

  """The creation date and time of the note"""
  add_time: String

  """The creation date and time of the note"""
  update_time: String

  """
  The content of the note in HTML format. Subject to sanitization on the back-end.
  """
  content: String

  """
  The ID of the object that the comment is attached to, will be the id of the note
  """
  object_id: String

  """
  The type of object that the comment is attached to, will be "note"
  """
  object_type: String

  """The ID of the user who created the comment"""
  user_id: Int

  """The ID of the user who last updated the comment"""
  updater_id: Int

  """The ID of the company"""
  company_id: Int
}

input CommentPostPutObject_Input {
  """
  The content of the comment in HTML format. Subject to sanitization on the back-end.
  """
  content: String!
}

type mutation_updateCommentForNote {
  """If the request was successful or not"""
  success: Boolean
  data: mutation_updateCommentForNote_data
}

type mutation_updateCommentForNote_data {
  """The ID of the note"""
  uuid: UUID

  """Whether the note is active or deleted"""
  active_flag: Boolean

  """The creation date and time of the note"""
  add_time: String

  """The creation date and time of the note"""
  update_time: String

  """
  The content of the note in HTML format. Subject to sanitization on the back-end.
  """
  content: String

  """
  The ID of the object that the comment is attached to, will be the id of the note
  """
  object_id: String

  """
  The type of object that the comment is attached to, will be "note"
  """
  object_type: String

  """The ID of the user who created the comment"""
  user_id: Int

  """The ID of the user who last updated the comment"""
  updater_id: Int

  """The ID of the company"""
  company_id: Int
}

type deleteComment {
  """If the request was successful or not"""
  success: Boolean

  """If the response is successful or not"""
  data: Boolean
}

type deleteOrganizations {
  """If the request was successful or not"""
  success: Boolean
  data: mutation_deleteOrganizations_data
}

type mutation_deleteOrganizations_data {
  """The IDs of the organizations that were deleted"""
  id: [Float]
}

type addOrganization {
  """If the response is successful or not"""
  success: Boolean
  data: baseOrganizationItemWithEditNameFlag
  related_objects: mutation_addOrganization_allOf_1_related_objects
}

type baseOrganizationItemWithEditNameFlag {
  """The ID of the organization"""
  id: Int

  """The ID of the company related to the organization"""
  company_id: Int
  owner_id: mutation_addOrganization_allOf_1_data_allOf_0_allOf_0_owner_id

  """The name of the organization"""
  name: String

  """Whether the organization is active or not"""
  active_flag: Boolean
  picture_id: mutation_addOrganization_allOf_1_data_allOf_0_allOf_0_picture_id

  """The country code of the organization"""
  country_code: String

  """The first character of the organization name"""
  first_char: String

  """The creation date and time of the organization"""
  add_time: String

  """The last updated date and time of the organization"""
  update_time: String

  """The visibility group ID of who can see the organization"""
  visible_to: String

  """The ID of the label"""
  label: Int

  """The name of the organization owner"""
  owner_name: String

  """The BCC email of the organization"""
  cc_email: String

  """The count of email messages related to the organization"""
  email_messages_count: Int

  """The count of persons related to the organization"""
  people_count: Int

  """The count of activities related to the organization"""
  activities_count: Int

  """The count of done activities related to the organization"""
  done_activities_count: Int

  """The count of undone activities related to the organization"""
  undone_activities_count: Int

  """The count of files related to the organization"""
  files_count: Int

  """The count of notes related to the organization"""
  notes_count: Int

  """The count of followers related to the organization"""
  followers_count: Int

  """The full address of the organization"""
  address: String

  """The sub-premise of the organization location"""
  address_subpremise: String

  """The street number of the organization location"""
  address_street_number: String

  """The route of the organization location"""
  address_route: String

  """The sub-locality of the organization location"""
  address_sublocality: String

  """The locality of the organization location"""
  address_locality: String

  """The level 1 admin area of the organization location"""
  address_admin_area_level_1: String

  """The level 2 admin area of the organization location"""
  address_admin_area_level_2: String

  """The country of the organization location"""
  address_country: String

  """The postal code of the organization location"""
  address_postal_code: String

  """The formatted organization location"""
  address_formatted_address: String

  """The count of open deals related with the item"""
  open_deals_count: Int

  """The count of related open deals related with the item"""
  related_open_deals_count: Int

  """The count of closed deals related with the item"""
  closed_deals_count: Int

  """The count of related closed deals related with the item"""
  related_closed_deals_count: Int

  """The count of won deals related with the item"""
  won_deals_count: Int

  """The count of related won deals related with the item"""
  related_won_deals_count: Int

  """The count of lost deals related with the item"""
  lost_deals_count: Int

  """The count of related lost deals related with the item"""
  related_lost_deals_count: Int

  """The date of the next activity associated with the deal"""
  next_activity_date: String

  """The time of the next activity associated with the deal"""
  next_activity_time: String

  """The ID of the next activity associated with the deal"""
  next_activity_id: Int

  """The ID of the last activity associated with the deal"""
  last_activity_id: Int

  """The date of the last activity associated with the deal"""
  last_activity_date: String

  """
  If the company ID of the organization and company ID of the request is same or not
  """
  edit_name: Boolean
}

type mutation_addOrganization_allOf_1_data_allOf_0_allOf_0_owner_id {
  """The ID of the user"""
  id: Int

  """The name of the user"""
  name: String

  """The email of the user"""
  email: String

  """Whether the user has picture or not. 0 = No picture, 1 = Has picture."""
  has_pic: Int

  """The user picture hash"""
  pic_hash: String

  """Whether the user is active or not"""
  active_flag: Boolean

  """The ID of the owner"""
  value: Int
}

type mutation_addOrganization_allOf_1_data_allOf_0_allOf_0_picture_id {
  """The ID of the picture associated with the item"""
  value: Int

  """The type of item the picture is related to"""
  item_type: String

  """The ID of related item"""
  item_id: Int

  """Whether the associated picture is active or not"""
  active_flag: Boolean

  """The add time of the picture"""
  add_time: String

  """The update time of the picture"""
  update_time: String

  """The ID of the user who added the picture"""
  added_by_user_id: Int
  pictures: mutation_addOrganization_allOf_1_data_allOf_0_allOf_0_picture_id_allOf_1_pictures
}

type mutation_addOrganization_allOf_1_data_allOf_0_allOf_0_picture_id_allOf_1_pictures {
  """The URL of the 128*128 picture"""
  _128: String

  """The URL of the 512*512 picture"""
  _512: String
}

type mutation_addOrganization_allOf_1_related_objects {
  organization: mutation_addOrganization_allOf_1_related_objects_organization
  user: mutation_addOrganization_allOf_1_related_objects_user
  picture: mutation_addOrganization_allOf_1_related_objects_picture
}

type mutation_addOrganization_allOf_1_related_objects_organization {
  ORGANIZATION_ID: mutation_addOrganization_allOf_1_related_objects_organization_ORGANIZATION_ID
}

"""The ID of the organization associated with the item"""
type mutation_addOrganization_allOf_1_related_objects_organization_ORGANIZATION_ID {
  """The ID of the organization associated with the item"""
  id: Int

  """The name of the organization associated with the item"""
  name: String

  """
  The number of people connected with the organization that is associated with the item
  """
  people_count: Int

  """
  The ID of the owner of the organization that is associated with the item
  """
  owner_id: Int

  """The address of the organization"""
  address: String

  """The BCC email of the organization associated with the item"""
  cc_email: String
}

type mutation_addOrganization_allOf_1_related_objects_user {
  USER_ID: mutation_addOrganization_allOf_1_related_objects_user_USER_ID
}

type mutation_addOrganization_allOf_1_related_objects_user_USER_ID {
  """The ID of the user"""
  id: Int

  """The name of the user"""
  name: String

  """The email of the user"""
  email: String

  """Whether the user has picture or not. 0 = No picture, 1 = Has picture."""
  has_pic: Int

  """The user picture hash"""
  pic_hash: String

  """Whether the user is active or not"""
  active_flag: Boolean
  JSON: JSON
}

"""The picture that is associated with the item"""
type mutation_addOrganization_allOf_1_related_objects_picture {
  PICTURE_ID: mutation_addOrganization_allOf_1_related_objects_picture_PICTURE_ID
}

type mutation_addOrganization_allOf_1_related_objects_picture_PICTURE_ID {
  """The ID of the picture associated with the item"""
  id: Int

  """The type of item the picture is related to"""
  item_type: String

  """The ID of related item"""
  item_id: Int

  """Whether the associated picture is active or not"""
  active_flag: Boolean

  """The add time of the picture"""
  add_time: String

  """The update time of the picture"""
  update_time: String

  """The ID of the user who added the picture"""
  added_by_user_id: Int
  pictures: mutation_addOrganization_allOf_1_related_objects_picture_PICTURE_ID_allOf_1_pictures
}

type mutation_addOrganization_allOf_1_related_objects_picture_PICTURE_ID_allOf_1_pictures {
  """The URL of the 128*128 picture"""
  _128: String

  """The URL of the 512*512 picture"""
  _512: String
}

input addOrganizationRequest_Input {
  """The name of the organization"""
  name: String!

  """
  The optional creation date & time of the organization in UTC. Requires admin user API token. Format: YYYY-MM-DD HH:MM:SS
  """
  add_time: String

  """
  The ID of the user who will be marked as the owner of this organization. When omitted, the authorized user ID will be used.
  """
  owner_id: Int
  visible_to: mutationInput_addOrganization_input_allOf_1_visible_to
}

enum mutationInput_addOrganization_input_allOf_1_visible_to {
  _1
  _3
  _5
  _7
}

type deleteOrganization {
  """If the request was successful or not"""
  success: Boolean
  data: mutation_deleteOrganization_data
}

type mutation_deleteOrganization_data {
  """The ID of the organization that was deleted"""
  id: Int
}

type updateOrganization {
  """If the response is successful or not"""
  success: Boolean
  data: mutation_updateOrganization_allOf_1_data
  related_objects: mutation_updateOrganization_allOf_1_related_objects
}

type mutation_updateOrganization_allOf_1_data {
  """The ID of the organization"""
  id: Int

  """The ID of the company related to the organization"""
  company_id: Int
  owner_id: mutation_updateOrganization_allOf_1_data_allOf_0_owner_id

  """The name of the organization"""
  name: String

  """Whether the organization is active or not"""
  active_flag: Boolean
  picture_id: mutation_updateOrganization_allOf_1_data_allOf_0_picture_id

  """The country code of the organization"""
  country_code: String

  """The first character of the organization name"""
  first_char: String

  """The creation date and time of the organization"""
  add_time: String

  """The last updated date and time of the organization"""
  update_time: String

  """The visibility group ID of who can see the organization"""
  visible_to: String

  """The ID of the label"""
  label: Int

  """The name of the organization owner"""
  owner_name: String

  """The BCC email of the organization"""
  cc_email: String

  """The count of email messages related to the organization"""
  email_messages_count: Int

  """The count of persons related to the organization"""
  people_count: Int

  """The count of activities related to the organization"""
  activities_count: Int

  """The count of done activities related to the organization"""
  done_activities_count: Int

  """The count of undone activities related to the organization"""
  undone_activities_count: Int

  """The count of files related to the organization"""
  files_count: Int

  """The count of notes related to the organization"""
  notes_count: Int

  """The count of followers related to the organization"""
  followers_count: Int

  """The full address of the organization"""
  address: String

  """The sub-premise of the organization location"""
  address_subpremise: String

  """The street number of the organization location"""
  address_street_number: String

  """The route of the organization location"""
  address_route: String

  """The sub-locality of the organization location"""
  address_sublocality: String

  """The locality of the organization location"""
  address_locality: String

  """The level 1 admin area of the organization location"""
  address_admin_area_level_1: String

  """The level 2 admin area of the organization location"""
  address_admin_area_level_2: String

  """The country of the organization location"""
  address_country: String

  """The postal code of the organization location"""
  address_postal_code: String

  """The formatted organization location"""
  address_formatted_address: String

  """The count of open deals related with the item"""
  open_deals_count: Int

  """The count of related open deals related with the item"""
  related_open_deals_count: Int

  """The count of closed deals related with the item"""
  closed_deals_count: Int

  """The count of related closed deals related with the item"""
  related_closed_deals_count: Int

  """The count of won deals related with the item"""
  won_deals_count: Int

  """The count of related won deals related with the item"""
  related_won_deals_count: Int

  """The count of lost deals related with the item"""
  lost_deals_count: Int

  """The count of related lost deals related with the item"""
  related_lost_deals_count: Int

  """The date of the next activity associated with the deal"""
  next_activity_date: String

  """The time of the next activity associated with the deal"""
  next_activity_time: String

  """The ID of the next activity associated with the deal"""
  next_activity_id: Int

  """The ID of the last activity associated with the deal"""
  last_activity_id: Int

  """The date of the last activity associated with the deal"""
  last_activity_date: String
}

type mutation_updateOrganization_allOf_1_data_allOf_0_owner_id {
  """The ID of the user"""
  id: Int

  """The name of the user"""
  name: String

  """The email of the user"""
  email: String

  """Whether the user has picture or not. 0 = No picture, 1 = Has picture."""
  has_pic: Int

  """The user picture hash"""
  pic_hash: String

  """Whether the user is active or not"""
  active_flag: Boolean

  """The ID of the owner"""
  value: Int
}

type mutation_updateOrganization_allOf_1_data_allOf_0_picture_id {
  """The ID of the picture associated with the item"""
  value: Int

  """The type of item the picture is related to"""
  item_type: String

  """The ID of related item"""
  item_id: Int

  """Whether the associated picture is active or not"""
  active_flag: Boolean

  """The add time of the picture"""
  add_time: String

  """The update time of the picture"""
  update_time: String

  """The ID of the user who added the picture"""
  added_by_user_id: Int
  pictures: mutation_updateOrganization_allOf_1_data_allOf_0_picture_id_allOf_1_pictures
}

type mutation_updateOrganization_allOf_1_data_allOf_0_picture_id_allOf_1_pictures {
  """The URL of the 128*128 picture"""
  _128: String

  """The URL of the 512*512 picture"""
  _512: String
}

type mutation_updateOrganization_allOf_1_related_objects {
  organization: mutation_updateOrganization_allOf_1_related_objects_organization
  user: mutation_updateOrganization_allOf_1_related_objects_user
  picture: mutation_updateOrganization_allOf_1_related_objects_picture
}

type mutation_updateOrganization_allOf_1_related_objects_organization {
  ORGANIZATION_ID: mutation_updateOrganization_allOf_1_related_objects_organization_ORGANIZATION_ID
}

"""The ID of the organization associated with the item"""
type mutation_updateOrganization_allOf_1_related_objects_organization_ORGANIZATION_ID {
  """The ID of the organization associated with the item"""
  id: Int

  """The name of the organization associated with the item"""
  name: String

  """
  The number of people connected with the organization that is associated with the item
  """
  people_count: Int

  """
  The ID of the owner of the organization that is associated with the item
  """
  owner_id: Int

  """The address of the organization"""
  address: String

  """The BCC email of the organization associated with the item"""
  cc_email: String
}

type mutation_updateOrganization_allOf_1_related_objects_user {
  USER_ID: mutation_updateOrganization_allOf_1_related_objects_user_USER_ID
}

type mutation_updateOrganization_allOf_1_related_objects_user_USER_ID {
  """The ID of the user"""
  id: Int

  """The name of the user"""
  name: String

  """The email of the user"""
  email: String

  """Whether the user has picture or not. 0 = No picture, 1 = Has picture."""
  has_pic: Int

  """The user picture hash"""
  pic_hash: String

  """Whether the user is active or not"""
  active_flag: Boolean
  JSON: JSON
}

"""The picture that is associated with the item"""
type mutation_updateOrganization_allOf_1_related_objects_picture {
  PICTURE_ID: mutation_updateOrganization_allOf_1_related_objects_picture_PICTURE_ID
}

type mutation_updateOrganization_allOf_1_related_objects_picture_PICTURE_ID {
  """The ID of the picture associated with the item"""
  id: Int

  """The type of item the picture is related to"""
  item_type: String

  """The ID of related item"""
  item_id: Int

  """Whether the associated picture is active or not"""
  active_flag: Boolean

  """The add time of the picture"""
  add_time: String

  """The update time of the picture"""
  update_time: String

  """The ID of the user who added the picture"""
  added_by_user_id: Int
  pictures: mutation_updateOrganization_allOf_1_related_objects_picture_PICTURE_ID_allOf_1_pictures
}

type mutation_updateOrganization_allOf_1_related_objects_picture_PICTURE_ID_allOf_1_pictures {
  """The URL of the 128*128 picture"""
  _128: String

  """The URL of the 512*512 picture"""
  _512: String
}

input updateOrganizationRequest_Input {
  """The name of the organization"""
  name: String

  """
  The ID of the user who will be marked as the owner of this organization. When omitted, the authorized user ID will be used.
  """
  owner_id: Int
  visible_to: mutationInput_updateOrganization_input_allOf_1_visible_to
}

enum mutationInput_updateOrganization_input_allOf_1_visible_to {
  _1
  _3
  _5
  _7
}

type addOrganizationFollower {
  """If the request was successful or not"""
  success: Boolean
  data: mutation_addOrganizationFollower_data
}

type mutation_addOrganizationFollower_data {
  """The ID of the organization"""
  org_id: Int

  """The user ID of the follower related to the item"""
  user_id: Int

  """The ID of the follower"""
  id: Int

  """The date and time of adding the follower to the item"""
  add_time: DateTime
}

input addOrganizationFollowerRequest_Input {
  """The ID of the user"""
  user_id: Int!
}

type deleteOrganizationFollower {
  """If the request was successful or not"""
  success: Boolean
  data: mutation_deleteOrganizationFollower_data
}

type mutation_deleteOrganizationFollower_data {
  """The ID of the follower that was deleted from the organization"""
  id: Int
}

type mergeOrganizations {
  """If the request was successful or not"""
  success: Boolean
  data: mutation_mergeOrganizations_data
}

type mutation_mergeOrganizations_data {
  """The ID of the merged organization"""
  id: Int
}

input mergeOrganizationsRequest_Input {
  """The ID of the organization that the organization will be merged with"""
  merge_with_id: Int!
}

type mutation_addOrganizationField {
  """If the response is successful or not"""
  success: Boolean
  data: mutation_addOrganizationField_allOf_1_data
}

type mutation_addOrganizationField_allOf_1_data {
  """The ID of the field. Value is `null` in case of subfields."""
  id: Int

  """
  The key of the field. For custom fields this is generated upon creation.
  """
  key: String

  """The name of the field"""
  name: String

  """The order number of the field"""
  order_nr: Int
  field_type: mutation_addOrganizationField_allOf_1_data_field_type

  """The creation time of the field"""
  add_time: String

  """The update time of the field"""
  update_time: String

  """
  The ID of the user who created or most recently updated the field, only applicable for custom fields
  """
  last_updated_by_user_id: Int

  """The active flag of the field"""
  active_flag: Boolean

  """The edit flag of the field"""
  edit_flag: Boolean

  """Not used"""
  index_visible_flag: Boolean

  """Not used"""
  details_visible_flag: Boolean

  """Not used"""
  add_visible_flag: Boolean

  """Not used"""
  important_flag: Boolean

  """Whether or not the field of an item can be edited in bulk"""
  bulk_edit_allowed: Boolean

  """Whether or not items can be searched by this field"""
  searchable_flag: Boolean

  """Whether or not items can be filtered by this field"""
  filtering_allowed: Boolean

  """Whether or not items can be sorted by this field"""
  sortable_flag: Boolean

  """Whether or not the field is mandatory"""
  mandatory_flag: Boolean

  """
  The options of the field. When there are no options, `null` is returned.
  """
  options: [JSON]

  """
  The deleted options of the field. Only present when there is at least 1 deleted option.
  """
  options_deleted: [JSON]

  """
  Whether or not the field is a subfield of another field. Only present if field is subfield.
  """
  is_subfield: Boolean

  """The subfields of the field. Only present when the field has subfields."""
  subfields: [JSON]
}

"""
The type of the field<table><tr><th>Value</th><th>Description</th></tr><tr><td>`address`</td><td>Address field (has multiple subfields, autocompleted by Google Maps)</td></tr><tr><td>`date`</td><td>Date (format YYYY-MM-DD)</td></tr><tr><td>`daterange`</td><td>Date-range field (has a start date and end date value, both YYYY-MM-DD)</td></tr><tr><td>`double`</td><td>Numeric value</td></tr><tr><td>`enum`</td><td>Options field with a single possible chosen option</td></tr><tr></tr><tr><td>`monetary`</td><td>Monetary field (has a numeric value and a currency value)</td></tr><tr><td>`org`</td><td>Organization field (contains an organization ID which is stored on the same account)</td></tr><tr><td>`people`</td><td>Person field (contains a person ID which is stored on the same account)</td></tr><tr><td>`phone`</td><td>Phone field (up to 255 numbers and/or characters)</td></tr><tr><td>`set`</td><td>Options field with a possibility of having multiple chosen options</td></tr><tr><td>`text`</td><td>Long text (up to 65k characters)</td></tr><tr><td>`time`</td><td>Time field (format HH:MM:SS)</td></tr><tr><td>`timerange`</td><td>Time-range field (has a start time and end time value, both HH:MM:SS)</td></tr><tr><td>`user`</td><td>User field (contains a user ID of another Pipedrive user)</td></tr><tr><td>`varchar`</td><td>Text (up to 255 characters)</td></tr><tr><td>`varchar_auto`</td><td>Autocomplete text (up to 255 characters)</td></tr><tr><td>`visible_to`</td><td>System field that keeps item's visibility setting</td></tr></table>
"""
enum mutation_addOrganizationField_allOf_1_data_field_type {
  address
  date
  daterange
  double
  enum
  monetary
  org
  people
  phone
  set
  text
  time
  timerange
  user
  varchar
  varchar_auto
  visible_to
}

input mutationInput_addOrganizationField_input_Input {
  """The name of the field"""
  name: String!

  """
  When `field_type` is either set or enum, possible options must be supplied as a JSON-encoded sequential array of objects. Example: `[{"label":"New Item"}]`
  """
  options: String

  """
  Whether the field is available in the 'add new' modal or not (both in the web and mobile app)
  """
  add_visible_flag: Boolean = true
  field_type: mutationInput_addOrganizationField_input_allOf_1_field_type!
}

"""
The type of the field<table><tr><th>Value</th><th>Description</th></tr><tr><td>`address`</td><td>Address field (has multiple subfields, autocompleted by Google Maps)</td></tr><tr><td>`date`</td><td>Date (format YYYY-MM-DD)</td></tr><tr><td>`daterange`</td><td>Date-range field (has a start date and end date value, both YYYY-MM-DD)</td></tr><tr><td>`double`</td><td>Numeric value</td></tr><tr><td>`enum`</td><td>Options field with a single possible chosen option</td></tr><tr></tr><tr><td>`monetary`</td><td>Monetary field (has a numeric value and a currency value)</td></tr><tr><td>`org`</td><td>Organization field (contains an organization ID which is stored on the same account)</td></tr><tr><td>`people`</td><td>Person field (contains a person ID which is stored on the same account)</td></tr><tr><td>`phone`</td><td>Phone field (up to 255 numbers and/or characters)</td></tr><tr><td>`set`</td><td>Options field with a possibility of having multiple chosen options</td></tr><tr><td>`text`</td><td>Long text (up to 65k characters)</td></tr><tr><td>`time`</td><td>Time field (format HH:MM:SS)</td></tr><tr><td>`timerange`</td><td>Time-range field (has a start time and end time value, both HH:MM:SS)</td></tr><tr><td>`user`</td><td>User field (contains a user ID of another Pipedrive user)</td></tr><tr><td>`varchar`</td><td>Text (up to 255 characters)</td></tr><tr><td>`varchar_auto`</td><td>Autocomplete text (up to 255 characters)</td></tr><tr><td>`visible_to`</td><td>System field that keeps item's visibility setting</td></tr></table>
"""
enum mutationInput_addOrganizationField_input_allOf_1_field_type {
  address
  date
  daterange
  double
  enum
  monetary
  org
  people
  phone
  set
  text
  time
  timerange
  user
  varchar
  varchar_auto
  visible_to
}

type mutation_deleteOrganizationFields {
  """If the response is successful or not"""
  success: Boolean
  data: mutation_deleteOrganizationFields_allOf_1_data
}

type mutation_deleteOrganizationFields_allOf_1_data {
  """The list of deleted field IDs"""
  id: [Int]
}

type mutation_deleteOrganizationField {
  """If the response is successful or not"""
  success: Boolean
  data: mutation_deleteOrganizationField_allOf_1_data
}

type mutation_deleteOrganizationField_allOf_1_data {
  """The ID of the field that was deleted"""
  id: Int
}

type mutation_updateOrganizationField {
  """If the response is successful or not"""
  success: Boolean
  data: mutation_updateOrganizationField_allOf_1_data
}

type mutation_updateOrganizationField_allOf_1_data {
  """The ID of the field. Value is `null` in case of subfields."""
  id: Int

  """
  The key of the field. For custom fields this is generated upon creation.
  """
  key: String

  """The name of the field"""
  name: String

  """The order number of the field"""
  order_nr: Int
  field_type: mutation_updateOrganizationField_allOf_1_data_field_type

  """The creation time of the field"""
  add_time: String

  """The update time of the field"""
  update_time: String

  """
  The ID of the user who created or most recently updated the field, only applicable for custom fields
  """
  last_updated_by_user_id: Int

  """The active flag of the field"""
  active_flag: Boolean

  """The edit flag of the field"""
  edit_flag: Boolean

  """Not used"""
  index_visible_flag: Boolean

  """Not used"""
  details_visible_flag: Boolean

  """Not used"""
  add_visible_flag: Boolean

  """Not used"""
  important_flag: Boolean

  """Whether or not the field of an item can be edited in bulk"""
  bulk_edit_allowed: Boolean

  """Whether or not items can be searched by this field"""
  searchable_flag: Boolean

  """Whether or not items can be filtered by this field"""
  filtering_allowed: Boolean

  """Whether or not items can be sorted by this field"""
  sortable_flag: Boolean

  """Whether or not the field is mandatory"""
  mandatory_flag: Boolean

  """
  The options of the field. When there are no options, `null` is returned.
  """
  options: [JSON]

  """
  The deleted options of the field. Only present when there is at least 1 deleted option.
  """
  options_deleted: [JSON]

  """
  Whether or not the field is a subfield of another field. Only present if field is subfield.
  """
  is_subfield: Boolean

  """The subfields of the field. Only present when the field has subfields."""
  subfields: [JSON]
}

"""
The type of the field<table><tr><th>Value</th><th>Description</th></tr><tr><td>`address`</td><td>Address field (has multiple subfields, autocompleted by Google Maps)</td></tr><tr><td>`date`</td><td>Date (format YYYY-MM-DD)</td></tr><tr><td>`daterange`</td><td>Date-range field (has a start date and end date value, both YYYY-MM-DD)</td></tr><tr><td>`double`</td><td>Numeric value</td></tr><tr><td>`enum`</td><td>Options field with a single possible chosen option</td></tr><tr></tr><tr><td>`monetary`</td><td>Monetary field (has a numeric value and a currency value)</td></tr><tr><td>`org`</td><td>Organization field (contains an organization ID which is stored on the same account)</td></tr><tr><td>`people`</td><td>Person field (contains a person ID which is stored on the same account)</td></tr><tr><td>`phone`</td><td>Phone field (up to 255 numbers and/or characters)</td></tr><tr><td>`set`</td><td>Options field with a possibility of having multiple chosen options</td></tr><tr><td>`text`</td><td>Long text (up to 65k characters)</td></tr><tr><td>`time`</td><td>Time field (format HH:MM:SS)</td></tr><tr><td>`timerange`</td><td>Time-range field (has a start time and end time value, both HH:MM:SS)</td></tr><tr><td>`user`</td><td>User field (contains a user ID of another Pipedrive user)</td></tr><tr><td>`varchar`</td><td>Text (up to 255 characters)</td></tr><tr><td>`varchar_auto`</td><td>Autocomplete text (up to 255 characters)</td></tr><tr><td>`visible_to`</td><td>System field that keeps item's visibility setting</td></tr></table>
"""
enum mutation_updateOrganizationField_allOf_1_data_field_type {
  address
  date
  daterange
  double
  enum
  monetary
  org
  people
  phone
  set
  text
  time
  timerange
  user
  varchar
  varchar_auto
  visible_to
}

input mutationInput_updateOrganizationField_input_Input {
  """The name of the field"""
  name: String

  """
  When `field_type` is either set or enum, possible options must be supplied as a JSON-encoded sequential array of objects. All active items must be supplied and already existing items must have their ID supplied. New items only require a label. Example: `[{"id":123,"label":"Existing Item"},{"label":"New Item"}]`
  """
  options: String

  """
  Whether the field is available in 'add new' modal or not (both in web and mobile app)
  """
  add_visible_flag: Boolean = true
}

type addOrganizationRelationship {
  """If the response is successful or not"""
  success: Boolean
  data: mutation_addOrganizationRelationship_allOf_1_data
  related_objects: mutation_addOrganizationRelationship_allOf_1_related_objects
}

type mutation_addOrganizationRelationship_allOf_1_data {
  """The ID of the organization relationship"""
  id: Int

  """The type of the relationship"""
  type: String
  rel_owner_org_id: mutation_addOrganizationRelationship_allOf_1_data_rel_owner_org_id
  rel_linked_org_id: mutation_addOrganizationRelationship_allOf_1_data_rel_linked_org_id

  """The creation date and time of the relationship"""
  add_time: String

  """The last updated date and time of the relationship"""
  update_time: String

  """Whether the relationship is active or not"""
  active_flag: String
}

type mutation_addOrganizationRelationship_allOf_1_data_rel_owner_org_id {
  """The name of the organization associated with the item"""
  name: String

  """
  The number of people connected with the organization that is associated with the item
  """
  people_count: Int

  """
  The ID of the owner of the organization that is associated with the item
  """
  owner_id: Int

  """The address of the organization"""
  address: String

  """The BCC email of the organization associated with the item"""
  cc_email: String

  """The ID of the organization"""
  value: Int
}

type mutation_addOrganizationRelationship_allOf_1_data_rel_linked_org_id {
  """The name of the organization associated with the item"""
  name: String

  """
  The number of people connected with the organization that is associated with the item
  """
  people_count: Int

  """
  The ID of the owner of the organization that is associated with the item
  """
  owner_id: Int

  """The address of the organization"""
  address: String

  """The BCC email of the organization associated with the item"""
  cc_email: String

  """The ID of the organization"""
  value: Int
}

type mutation_addOrganizationRelationship_allOf_1_related_objects {
  organization: mutation_addOrganizationRelationship_allOf_1_related_objects_organization
}

type mutation_addOrganizationRelationship_allOf_1_related_objects_organization {
  ORGANIZATION_ID: mutation_addOrganizationRelationship_allOf_1_related_objects_organization_ORGANIZATION_ID
}

"""The ID of the organization associated with the item"""
type mutation_addOrganizationRelationship_allOf_1_related_objects_organization_ORGANIZATION_ID {
  """The ID of the organization associated with the item"""
  id: Int

  """The name of the organization associated with the item"""
  name: String

  """
  The number of people connected with the organization that is associated with the item
  """
  people_count: Int

  """
  The ID of the owner of the organization that is associated with the item
  """
  owner_id: Int

  """The address of the organization"""
  address: String

  """The BCC email of the organization associated with the item"""
  cc_email: String
}

input addOrganizationRelationshipRequest_Input {
  """The ID of the base organization for the returned calculated values"""
  org_id: Int
  type: mutationInput_addOrganizationRelationship_input_type!

  """
  The owner of the relationship. If type is `parent`, then the owner is the parent and the linked organization is the daughter.
  """
  rel_owner_org_id: Int!

  """
  The linked organization in the relationship. If type is `parent`, then the linked organization is the daughter.
  """
  rel_linked_org_id: Int!
}

"""The type of organization relationship"""
enum mutationInput_addOrganizationRelationship_input_type {
  parent
  related
}

type deleteOrganizationRelationship {
  """If the response is successful or not"""
  success: Boolean
  data: mutation_deleteOrganizationRelationship_allOf_1_data
}

type mutation_deleteOrganizationRelationship_allOf_1_data {
  """The ID of the deleted organization relationship"""
  id: Int
}

type updateOrganizationRelationship {
  """If the response is successful or not"""
  success: Boolean
  data: mutation_updateOrganizationRelationship_allOf_1_data
  related_objects: mutation_updateOrganizationRelationship_allOf_1_related_objects
}

type mutation_updateOrganizationRelationship_allOf_1_data {
  """The ID of the organization relationship"""
  id: Int

  """The type of the relationship"""
  type: String
  rel_owner_org_id: mutation_updateOrganizationRelationship_allOf_1_data_rel_owner_org_id
  rel_linked_org_id: mutation_updateOrganizationRelationship_allOf_1_data_rel_linked_org_id

  """The creation date and time of the relationship"""
  add_time: String

  """The last updated date and time of the relationship"""
  update_time: String

  """Whether the relationship is active or not"""
  active_flag: String
}

type mutation_updateOrganizationRelationship_allOf_1_data_rel_owner_org_id {
  """The name of the organization associated with the item"""
  name: String

  """
  The number of people connected with the organization that is associated with the item
  """
  people_count: Int

  """
  The ID of the owner of the organization that is associated with the item
  """
  owner_id: Int

  """The address of the organization"""
  address: String

  """The BCC email of the organization associated with the item"""
  cc_email: String

  """The ID of the organization"""
  value: Int
}

type mutation_updateOrganizationRelationship_allOf_1_data_rel_linked_org_id {
  """The name of the organization associated with the item"""
  name: String

  """
  The number of people connected with the organization that is associated with the item
  """
  people_count: Int

  """
  The ID of the owner of the organization that is associated with the item
  """
  owner_id: Int

  """The address of the organization"""
  address: String

  """The BCC email of the organization associated with the item"""
  cc_email: String

  """The ID of the organization"""
  value: Int
}

type mutation_updateOrganizationRelationship_allOf_1_related_objects {
  organization: mutation_updateOrganizationRelationship_allOf_1_related_objects_organization
}

type mutation_updateOrganizationRelationship_allOf_1_related_objects_organization {
  ORGANIZATION_ID: mutation_updateOrganizationRelationship_allOf_1_related_objects_organization_ORGANIZATION_ID
}

"""The ID of the organization associated with the item"""
type mutation_updateOrganizationRelationship_allOf_1_related_objects_organization_ORGANIZATION_ID {
  """The ID of the organization associated with the item"""
  id: Int

  """The name of the organization associated with the item"""
  name: String

  """
  The number of people connected with the organization that is associated with the item
  """
  people_count: Int

  """
  The ID of the owner of the organization that is associated with the item
  """
  owner_id: Int

  """The address of the organization"""
  address: String

  """The BCC email of the organization associated with the item"""
  cc_email: String
}

input organizationRelationship_Input {
  """The ID of the base organization for the returned calculated values"""
  org_id: Int
  type: mutationInput_updateOrganizationRelationship_input_type

  """
  The owner of this relationship. If type is `parent`, then the owner is the parent and the linked organization is the daughter.
  """
  rel_owner_org_id: Int

  """
  The linked organization in this relationship. If type is `parent`, then the linked organization is the daughter.
  """
  rel_linked_org_id: Int
}

"""The type of organization relationship"""
enum mutationInput_updateOrganizationRelationship_input_type {
  parent
  related
}

type deletePersons {
  """If the response is successful or not"""
  success: Boolean
  data: mutation_deletePersons_allOf_1_data
}

type mutation_deletePersons_allOf_1_data {
  """The list of deleted persons IDs"""
  id: [Int]
}

type addPerson {
  """If the response is successful or not"""
  success: Boolean
  data: personItem2
  related_objects: mutation_addPerson_allOf_1_related_objects
}

type personItem2 {
  """The ID of the person"""
  id: Int

  """The ID of the company related to the person"""
  company_id: Int

  """Whether the person is active or not"""
  active_flag: Boolean

  """
  A phone number supplied as a string or an array of phone objects related to the person. The structure of the array is as follows: `[{ "value": "12345", "primary": "true", "label": "mobile" }]`. Please note that only `value` is required.
  """
  phone: [mutation_addPerson_allOf_1_data_allOf_0_phone_items]

  """
  An email address as a string or an array of email objects related to the person. The structure of the array is as follows: `[{ "value": "mail@example.com", "primary": "true", "label": "main" } ]`. Please note that only `value` is required.
  """
  email: [mutation_addPerson_allOf_1_data_allOf_0_email_items]

  """The first letter of the name of the person"""
  first_char: String

  """
  The date and time when the person was added/created. Format: YYYY-MM-DD HH:MM:SS
  """
  add_time: String

  """
  The last updated date and time of the person. Format: YYYY-MM-DD HH:MM:SS
  """
  update_time: String

  """The visibility group ID of who can see the person"""
  visible_to: String
  picture_id: mutation_addPerson_allOf_1_data_allOf_0_picture_id

  """The label assigned to the person"""
  label: Int

  """The name of the organization associated with the person"""
  org_name: String

  """The name of the owner associated with the person"""
  owner_name: String

  """The BCC email associated with the person"""
  cc_email: String
  owner_id: owner
  org_id: relationshipOrganizationInfoItemWithActiveFlag

  """The name of the person"""
  name: String

  """The first name of the person"""
  first_name: String

  """The last name of the person"""
  last_name: String

  """The count of email messages related to the person"""
  email_messages_count: Int

  """The count of activities related to the person"""
  activities_count: Int

  """The count of done activities related to the person"""
  done_activities_count: Int

  """The count of undone activities related to the person"""
  undone_activities_count: Int

  """The count of files related to the person"""
  files_count: Int

  """The count of notes related to the person"""
  notes_count: Int

  """The count of followers related to the person"""
  followers_count: Int

  """
  The date and time of the last incoming email associated with the person
  """
  last_incoming_mail_time: String

  """
  The date and time of the last outgoing email associated with the person
  """
  last_outgoing_mail_time: String

  """The count of open deals related with the item"""
  open_deals_count: Int

  """The count of related open deals related with the item"""
  related_open_deals_count: Int

  """The count of closed deals related with the item"""
  closed_deals_count: Int

  """The count of related closed deals related with the item"""
  related_closed_deals_count: Int

  """The count of won deals related with the item"""
  won_deals_count: Int

  """The count of related won deals related with the item"""
  related_won_deals_count: Int

  """The count of lost deals related with the item"""
  lost_deals_count: Int

  """The count of related lost deals related with the item"""
  related_lost_deals_count: Int

  """The date of the next activity associated with the deal"""
  next_activity_date: String

  """The time of the next activity associated with the deal"""
  next_activity_time: String

  """The ID of the next activity associated with the deal"""
  next_activity_id: Int

  """The ID of the last activity associated with the deal"""
  last_activity_id: Int

  """The date of the last activity associated with the deal"""
  last_activity_date: String
}

type mutation_addPerson_allOf_1_data_allOf_0_phone_items {
  """The phone number"""
  value: String

  """
  Boolean that indicates if phone number is primary for the person or not
  """
  primary: Boolean

  """
  The label that indicates the type of the phone number. (Possible values - work, home, mobile or other)
  """
  label: String
}

type mutation_addPerson_allOf_1_data_allOf_0_email_items {
  """Email"""
  value: String

  """Boolean that indicates if email is primary for the person or not"""
  primary: Boolean

  """
  The label that indicates the type of the email. (Possible values - work, home or other)
  """
  label: String
}

type mutation_addPerson_allOf_1_data_allOf_0_picture_id {
  """The ID of the picture associated with the item"""
  id: Int

  """The type of item the picture is related to"""
  item_type: String

  """The ID of related item"""
  item_id: Int

  """Whether the associated picture is active or not"""
  active_flag: Boolean

  """The add time of the picture"""
  add_time: String

  """The update time of the picture"""
  update_time: String

  """The ID of the user who added the picture"""
  added_by_user_id: Int
  pictures: mutation_addPerson_allOf_1_data_allOf_0_picture_id_allOf_1_pictures
}

type mutation_addPerson_allOf_1_data_allOf_0_picture_id_allOf_1_pictures {
  """The URL of the 128*128 picture"""
  _128: String

  """The URL of the 512*512 picture"""
  _512: String
}

type mutation_addPerson_allOf_1_related_objects {
  user: mutation_addPerson_allOf_1_related_objects_user
}

type mutation_addPerson_allOf_1_related_objects_user {
  USER_ID: mutation_addPerson_allOf_1_related_objects_user_USER_ID
}

type mutation_addPerson_allOf_1_related_objects_user_USER_ID {
  """The ID of the user"""
  id: Int

  """The name of the user"""
  name: String

  """The email of the user"""
  email: String

  """Whether the user has picture or not. 0 = No picture, 1 = Has picture."""
  has_pic: Int

  """The user picture hash"""
  pic_hash: String

  """Whether the user is active or not"""
  active_flag: Boolean
  JSON: JSON
}

input addPersonRequest_Input {
  """The name of the person"""
  name: String!

  """
  The ID of the user who will be marked as the owner of this person. When omitted, the authorized user ID will be used.
  """
  owner_id: Int

  """The ID of the organization this person will belong to"""
  org_id: Int

  """
  An email address as a string or an array of email objects related to the person. The structure of the array is as follows: `[{ "value": "mail@example.com", "primary": "true", "label": "main" }]`. Please note that only `value` is required.
  """
  email: [mutationInput_addPerson_input_allOf_1_email_items_Input]

  """
  A phone number supplied as a string or an array of phone objects related to the person. The structure of the array is as follows: `[{ "value": "12345", "primary": "true", "label": "mobile" }]`. Please note that only `value` is required.
  """
  phone: [mutationInput_addPerson_input_allOf_1_phone_items_Input]
  visible_to: mutationInput_addPerson_input_allOf_1_visible_to
  marketing_status: mutationInput_addPerson_input_allOf_1_marketing_status

  """
  The optional creation date & time of the person in UTC. Requires admin user API token. Format: YYYY-MM-DD HH:MM:SS
  """
  add_time: String
}

input mutationInput_addPerson_input_allOf_1_email_items_Input {
  """The email"""
  value: String

  """Boolean that indicates if email is primary for the person or not"""
  primary: Boolean

  """
  The label that indicates the type of the email. (Possible values - work, home or other)
  """
  label: String
}

input mutationInput_addPerson_input_allOf_1_phone_items_Input {
  """The phone number"""
  value: String

  """
  Boolean that indicates if phone number is primary for the person or not
  """
  primary: Boolean

  """
  The label that indicates the type of the phone number. (Possible values - work, home, mobile or other)
  """
  label: String
}

enum mutationInput_addPerson_input_allOf_1_visible_to {
  _1
  _3
  _5
  _7
}

enum mutationInput_addPerson_input_allOf_1_marketing_status {
  no_consent
  unsubscribed
  subscribed
  archived
}

type deletePerson {
  """If the response is successful or not"""
  success: Boolean
  data: mutation_deletePerson_allOf_1_data
}

type mutation_deletePerson_allOf_1_data {
  """The ID of the deleted person"""
  id: Int
}

type updatePerson {
  """If the response is successful or not"""
  success: Boolean
  data: mutation_updatePerson_allOf_1_data
  related_objects: mutation_updatePerson_allOf_1_related_objects
}

type mutation_updatePerson_allOf_1_data {
  """The ID of the person"""
  id: Int

  """The ID of the company related to the person"""
  company_id: Int

  """Whether the person is active or not"""
  active_flag: Boolean

  """
  A phone number supplied as a string or an array of phone objects related to the person. The structure of the array is as follows: `[{ "value": "12345", "primary": "true", "label": "mobile" }]`. Please note that only `value` is required.
  """
  phone: [mutation_updatePerson_allOf_1_data_allOf_0_phone_items]

  """
  An email address as a string or an array of email objects related to the person. The structure of the array is as follows: `[{ "value": "mail@example.com", "primary": "true", "label": "main" } ]`. Please note that only `value` is required.
  """
  email: [mutation_updatePerson_allOf_1_data_allOf_0_email_items]

  """The first letter of the name of the person"""
  first_char: String

  """
  The date and time when the person was added/created. Format: YYYY-MM-DD HH:MM:SS
  """
  add_time: String

  """
  The last updated date and time of the person. Format: YYYY-MM-DD HH:MM:SS
  """
  update_time: String

  """The visibility group ID of who can see the person"""
  visible_to: String
  picture_id: mutation_updatePerson_allOf_1_data_allOf_0_picture_id

  """The label assigned to the person"""
  label: Int

  """The name of the organization associated with the person"""
  org_name: String

  """The name of the owner associated with the person"""
  owner_name: String

  """The BCC email associated with the person"""
  cc_email: String
  owner_id: owner
  org_id: relationshipOrganizationInfoItemWithActiveFlag

  """The name of the person"""
  name: String

  """The first name of the person"""
  first_name: String

  """The last name of the person"""
  last_name: String

  """The count of email messages related to the person"""
  email_messages_count: Int

  """The count of activities related to the person"""
  activities_count: Int

  """The count of done activities related to the person"""
  done_activities_count: Int

  """The count of undone activities related to the person"""
  undone_activities_count: Int

  """The count of files related to the person"""
  files_count: Int

  """The count of notes related to the person"""
  notes_count: Int

  """The count of followers related to the person"""
  followers_count: Int

  """
  The date and time of the last incoming email associated with the person
  """
  last_incoming_mail_time: String

  """
  The date and time of the last outgoing email associated with the person
  """
  last_outgoing_mail_time: String

  """The count of open deals related with the item"""
  open_deals_count: Int

  """The count of related open deals related with the item"""
  related_open_deals_count: Int

  """The count of closed deals related with the item"""
  closed_deals_count: Int

  """The count of related closed deals related with the item"""
  related_closed_deals_count: Int

  """The count of won deals related with the item"""
  won_deals_count: Int

  """The count of related won deals related with the item"""
  related_won_deals_count: Int

  """The count of lost deals related with the item"""
  lost_deals_count: Int

  """The count of related lost deals related with the item"""
  related_lost_deals_count: Int

  """The date of the next activity associated with the deal"""
  next_activity_date: String

  """The time of the next activity associated with the deal"""
  next_activity_time: String

  """The ID of the next activity associated with the deal"""
  next_activity_id: Int

  """The ID of the last activity associated with the deal"""
  last_activity_id: Int

  """The date of the last activity associated with the deal"""
  last_activity_date: String
}

type mutation_updatePerson_allOf_1_data_allOf_0_phone_items {
  """The phone number"""
  value: String

  """
  Boolean that indicates if phone number is primary for the person or not
  """
  primary: Boolean

  """
  The label that indicates the type of the phone number. (Possible values - work, home, mobile or other)
  """
  label: String
}

type mutation_updatePerson_allOf_1_data_allOf_0_email_items {
  """Email"""
  value: String

  """Boolean that indicates if email is primary for the person or not"""
  primary: Boolean

  """
  The label that indicates the type of the email. (Possible values - work, home or other)
  """
  label: String
}

type mutation_updatePerson_allOf_1_data_allOf_0_picture_id {
  """The ID of the picture associated with the item"""
  id: Int

  """The type of item the picture is related to"""
  item_type: String

  """The ID of related item"""
  item_id: Int

  """Whether the associated picture is active or not"""
  active_flag: Boolean

  """The add time of the picture"""
  add_time: String

  """The update time of the picture"""
  update_time: String

  """The ID of the user who added the picture"""
  added_by_user_id: Int
  pictures: mutation_updatePerson_allOf_1_data_allOf_0_picture_id_allOf_1_pictures
}

type mutation_updatePerson_allOf_1_data_allOf_0_picture_id_allOf_1_pictures {
  """The URL of the 128*128 picture"""
  _128: String

  """The URL of the 512*512 picture"""
  _512: String
}

type mutation_updatePerson_allOf_1_related_objects {
  user: mutation_updatePerson_allOf_1_related_objects_user
}

type mutation_updatePerson_allOf_1_related_objects_user {
  USER_ID: mutation_updatePerson_allOf_1_related_objects_user_USER_ID
}

type mutation_updatePerson_allOf_1_related_objects_user_USER_ID {
  """The ID of the user"""
  id: Int

  """The name of the user"""
  name: String

  """The email of the user"""
  email: String

  """Whether the user has picture or not. 0 = No picture, 1 = Has picture."""
  has_pic: Int

  """The user picture hash"""
  pic_hash: String

  """Whether the user is active or not"""
  active_flag: Boolean
  JSON: JSON
}

input updatePersonRequest_Input {
  """The name of the person"""
  name: String

  """
  The ID of the user who will be marked as the owner of this person. When omitted, the authorized user ID will be used.
  """
  owner_id: Int

  """The ID of the organization this person will belong to"""
  org_id: Int

  """
  An email address as a string or an array of email objects related to the person. The structure of the array is as follows: `[{ "value": "mail@example.com", "primary": "true", "label": "main" }]`. Please note that only `value` is required.
  """
  email: [mutationInput_updatePerson_input_allOf_1_email_items_Input]

  """
  A phone number supplied as a string or an array of phone objects related to the person. The structure of the array is as follows: `[{ "value": "12345", "primary": "true", "label": "mobile" }]`. Please note that only `value` is required.
  """
  phone: [mutationInput_updatePerson_input_allOf_1_phone_items_Input]
  visible_to: mutationInput_updatePerson_input_allOf_1_visible_to
  marketing_status: mutationInput_updatePerson_input_allOf_1_marketing_status

  """
  The optional creation date & time of the person in UTC. Requires admin user API token. Format: YYYY-MM-DD HH:MM:SS
  """
  add_time: String
}

input mutationInput_updatePerson_input_allOf_1_email_items_Input {
  """The email"""
  value: String

  """Boolean that indicates if email is primary for the person or not"""
  primary: Boolean

  """
  The label that indicates the type of the email. (Possible values - work, home or other)
  """
  label: String
}

input mutationInput_updatePerson_input_allOf_1_phone_items_Input {
  """The phone number"""
  value: String

  """
  Boolean that indicates if phone number is primary for the person or not
  """
  primary: Boolean

  """
  The label that indicates the type of the phone number. (Possible values - work, home, mobile or other)
  """
  label: String
}

enum mutationInput_updatePerson_input_allOf_1_visible_to {
  _1
  _3
  _5
  _7
}

enum mutationInput_updatePerson_input_allOf_1_marketing_status {
  no_consent
  unsubscribed
  subscribed
  archived
}

type addPersonFollower {
  """If the response is successful or not"""
  success: Boolean
  data: mutation_addPersonFollower_allOf_1_data
}

type mutation_addPersonFollower_allOf_1_data {
  """The ID of the user who was added as a follower to a person"""
  user_id: Int

  """The ID of the follower"""
  id: Int

  """The ID of the person to whom the follower was added"""
  person_id: Int

  """
  The date and time when the follower was added to a person. Format: YYYY-MM-DD HH:MM:SS
  """
  add_time: String
}

input addPersonFollowerRequest_Input {
  """The ID of the user"""
  user_id: Int!
}

type mutation_deletePersonFollower {
  """If the response is successful or not"""
  success: Boolean
  data: mutation_deletePersonFollower_allOf_1_data
}

type mutation_deletePersonFollower_allOf_1_data {
  """The ID of the deleted person"""
  id: Int
}

type mergePersons {
  """If the response is successful or not"""
  success: Boolean
  data: mergePersonItem
}

type mergePersonItem {
  """The ID of the person"""
  id: Int

  """The ID of the company related to the person"""
  company_id: Int

  """Whether the person is active or not"""
  active_flag: Boolean

  """
  A phone number supplied as a string or an array of phone objects related to the person. The structure of the array is as follows: `[{ "value": "12345", "primary": "true", "label": "mobile" }]`. Please note that only `value` is required.
  """
  phone: [mutation_mergePersons_allOf_1_data_allOf_0_phone_items]

  """
  An email address as a string or an array of email objects related to the person. The structure of the array is as follows: `[{ "value": "mail@example.com", "primary": "true", "label": "main" } ]`. Please note that only `value` is required.
  """
  email: [mutation_mergePersons_allOf_1_data_allOf_0_email_items]

  """The first letter of the name of the person"""
  first_char: String

  """
  The date and time when the person was added/created. Format: YYYY-MM-DD HH:MM:SS
  """
  add_time: String

  """
  The last updated date and time of the person. Format: YYYY-MM-DD HH:MM:SS
  """
  update_time: String

  """The visibility group ID of who can see the person"""
  visible_to: String
  picture_id: mutation_mergePersons_allOf_1_data_allOf_0_picture_id

  """The label assigned to the person"""
  label: Int

  """The name of the organization associated with the person"""
  org_name: String

  """The name of the owner associated with the person"""
  owner_name: String

  """The BCC email associated with the person"""
  cc_email: String

  """The ID of the owner related to the person"""
  owner_id: Int

  """The ID of the organization related to the person"""
  org_id: Int

  """The ID of the person with what the main person was merged"""
  merge_what_id: Int

  """The name of the person"""
  name: String

  """The first name of the person"""
  first_name: String

  """The last name of the person"""
  last_name: String

  """The count of email messages related to the person"""
  email_messages_count: Int

  """The count of activities related to the person"""
  activities_count: Int

  """The count of done activities related to the person"""
  done_activities_count: Int

  """The count of undone activities related to the person"""
  undone_activities_count: Int

  """The count of files related to the person"""
  files_count: Int

  """The count of notes related to the person"""
  notes_count: Int

  """The count of followers related to the person"""
  followers_count: Int

  """
  The date and time of the last incoming email associated with the person
  """
  last_incoming_mail_time: String

  """
  The date and time of the last outgoing email associated with the person
  """
  last_outgoing_mail_time: String

  """The count of open deals related with the item"""
  open_deals_count: Int

  """The count of related open deals related with the item"""
  related_open_deals_count: Int

  """The count of closed deals related with the item"""
  closed_deals_count: Int

  """The count of related closed deals related with the item"""
  related_closed_deals_count: Int

  """The count of won deals related with the item"""
  won_deals_count: Int

  """The count of related won deals related with the item"""
  related_won_deals_count: Int

  """The count of lost deals related with the item"""
  lost_deals_count: Int

  """The count of related lost deals related with the item"""
  related_lost_deals_count: Int

  """The date of the next activity associated with the deal"""
  next_activity_date: String

  """The time of the next activity associated with the deal"""
  next_activity_time: String

  """The ID of the next activity associated with the deal"""
  next_activity_id: Int

  """The ID of the last activity associated with the deal"""
  last_activity_id: Int

  """The date of the last activity associated with the deal"""
  last_activity_date: String

  """The count of open participant deals related with the item"""
  participant_open_deals_count: Int

  """The count of closed participant deals related with the item"""
  participant_closed_deals_count: Int
}

type mutation_mergePersons_allOf_1_data_allOf_0_phone_items {
  """The phone number"""
  value: String

  """
  Boolean that indicates if phone number is primary for the person or not
  """
  primary: Boolean

  """
  The label that indicates the type of the phone number. (Possible values - work, home, mobile or other)
  """
  label: String
}

type mutation_mergePersons_allOf_1_data_allOf_0_email_items {
  """Email"""
  value: String

  """Boolean that indicates if email is primary for the person or not"""
  primary: Boolean

  """
  The label that indicates the type of the email. (Possible values - work, home or other)
  """
  label: String
}

type mutation_mergePersons_allOf_1_data_allOf_0_picture_id {
  """The ID of the picture associated with the item"""
  id: Int

  """The type of item the picture is related to"""
  item_type: String

  """The ID of related item"""
  item_id: Int

  """Whether the associated picture is active or not"""
  active_flag: Boolean

  """The add time of the picture"""
  add_time: String

  """The update time of the picture"""
  update_time: String

  """The ID of the user who added the picture"""
  added_by_user_id: Int
  pictures: mutation_mergePersons_allOf_1_data_allOf_0_picture_id_allOf_1_pictures
}

type mutation_mergePersons_allOf_1_data_allOf_0_picture_id_allOf_1_pictures {
  """The URL of the 128*128 picture"""
  _128: String

  """The URL of the 512*512 picture"""
  _512: String
}

input mergePersonsRequest_Input {
  """
  The ID of the person that will not be overwritten. This person’s data will be prioritized in case of conflict with the other person.
  """
  merge_with_id: Int!
}

type mutation_deletePersonPicture {
  """If the response is successful or not"""
  success: Boolean
  data: mutation_deletePersonPicture_allOf_1_data
}

type mutation_deletePersonPicture_allOf_1_data {
  """The ID of the deleted person"""
  id: Int
}

type addPersonPicture {
  """If the response is successful or not"""
  success: Boolean
  data: mutation_addPersonPicture_allOf_1_data
}

"""The picture that is associated with the item"""
type mutation_addPersonPicture_allOf_1_data {
  PICTURE_ID: mutation_addPersonPicture_allOf_1_data_PICTURE_ID
}

type mutation_addPersonPicture_allOf_1_data_PICTURE_ID {
  """The ID of the picture associated with the item"""
  id: Int

  """The type of item the picture is related to"""
  item_type: String

  """The ID of related item"""
  item_id: Int

  """Whether the associated picture is active or not"""
  active_flag: Boolean

  """The add time of the picture"""
  add_time: String

  """The update time of the picture"""
  update_time: String

  """The ID of the user who added the picture"""
  added_by_user_id: Int
  pictures: mutation_addPersonPicture_allOf_1_data_PICTURE_ID_allOf_1_pictures
}

type mutation_addPersonPicture_allOf_1_data_PICTURE_ID_allOf_1_pictures {
  """The URL of the 128*128 picture"""
  _128: String

  """The URL of the 512*512 picture"""
  _512: String
}

input addPersonPictureRequest_Input {
  """One image supplied in the multipart/form-data encoding"""
  file: File!

  """X coordinate to where start cropping form (in pixels)"""
  crop_x: Int

  """Y coordinate to where start cropping form (in pixels)"""
  crop_y: Int

  """The width of the cropping area (in pixels)"""
  crop_width: Int

  """The height of the cropping area (in pixels)"""
  crop_height: Int
}

type mutation_addPersonField {
  """If the response is successful or not"""
  success: Boolean
  data: mutation_addPersonField_allOf_1_data
}

type mutation_addPersonField_allOf_1_data {
  """The ID of the field. Value is `null` in case of subfields."""
  id: Int

  """
  The key of the field. For custom fields this is generated upon creation.
  """
  key: String

  """The name of the field"""
  name: String

  """The order number of the field"""
  order_nr: Int
  field_type: mutation_addPersonField_allOf_1_data_field_type

  """The creation time of the field"""
  add_time: String

  """The update time of the field"""
  update_time: String

  """
  The ID of the user who created or most recently updated the field, only applicable for custom fields
  """
  last_updated_by_user_id: Int

  """The active flag of the field"""
  active_flag: Boolean

  """The edit flag of the field"""
  edit_flag: Boolean

  """Not used"""
  index_visible_flag: Boolean

  """Not used"""
  details_visible_flag: Boolean

  """Not used"""
  add_visible_flag: Boolean

  """Not used"""
  important_flag: Boolean

  """Whether or not the field of an item can be edited in bulk"""
  bulk_edit_allowed: Boolean

  """Whether or not items can be searched by this field"""
  searchable_flag: Boolean

  """Whether or not items can be filtered by this field"""
  filtering_allowed: Boolean

  """Whether or not items can be sorted by this field"""
  sortable_flag: Boolean

  """Whether or not the field is mandatory"""
  mandatory_flag: Boolean

  """
  The options of the field. When there are no options, `null` is returned.
  """
  options: [JSON]

  """
  The deleted options of the field. Only present when there is at least 1 deleted option.
  """
  options_deleted: [JSON]

  """
  Whether or not the field is a subfield of another field. Only present if field is subfield.
  """
  is_subfield: Boolean

  """The subfields of the field. Only present when the field has subfields."""
  subfields: [JSON]
}

"""
The type of the field<table><tr><th>Value</th><th>Description</th></tr><tr><td>`address`</td><td>Address field (has multiple subfields, autocompleted by Google Maps)</td></tr><tr><td>`date`</td><td>Date (format YYYY-MM-DD)</td></tr><tr><td>`daterange`</td><td>Date-range field (has a start date and end date value, both YYYY-MM-DD)</td></tr><tr><td>`double`</td><td>Numeric value</td></tr><tr><td>`enum`</td><td>Options field with a single possible chosen option</td></tr><tr></tr><tr><td>`monetary`</td><td>Monetary field (has a numeric value and a currency value)</td></tr><tr><td>`org`</td><td>Organization field (contains an organization ID which is stored on the same account)</td></tr><tr><td>`people`</td><td>Person field (contains a person ID which is stored on the same account)</td></tr><tr><td>`phone`</td><td>Phone field (up to 255 numbers and/or characters)</td></tr><tr><td>`set`</td><td>Options field with a possibility of having multiple chosen options</td></tr><tr><td>`text`</td><td>Long text (up to 65k characters)</td></tr><tr><td>`time`</td><td>Time field (format HH:MM:SS)</td></tr><tr><td>`timerange`</td><td>Time-range field (has a start time and end time value, both HH:MM:SS)</td></tr><tr><td>`user`</td><td>User field (contains a user ID of another Pipedrive user)</td></tr><tr><td>`varchar`</td><td>Text (up to 255 characters)</td></tr><tr><td>`varchar_auto`</td><td>Autocomplete text (up to 255 characters)</td></tr><tr><td>`visible_to`</td><td>System field that keeps item's visibility setting</td></tr></table>
"""
enum mutation_addPersonField_allOf_1_data_field_type {
  address
  date
  daterange
  double
  enum
  monetary
  org
  people
  phone
  set
  text
  time
  timerange
  user
  varchar
  varchar_auto
  visible_to
}

input mutationInput_addPersonField_input_Input {
  """The name of the field"""
  name: String!

  """
  When `field_type` is either set or enum, possible options must be supplied as a JSON-encoded sequential array of objects. Example: `[{"label":"New Item"}]`
  """
  options: String

  """
  Whether the field is available in the 'add new' modal or not (both in the web and mobile app)
  """
  add_visible_flag: Boolean = true
  field_type: mutationInput_addPersonField_input_allOf_1_field_type!
}

"""
The type of the field<table><tr><th>Value</th><th>Description</th></tr><tr><td>`address`</td><td>Address field (has multiple subfields, autocompleted by Google Maps)</td></tr><tr><td>`date`</td><td>Date (format YYYY-MM-DD)</td></tr><tr><td>`daterange`</td><td>Date-range field (has a start date and end date value, both YYYY-MM-DD)</td></tr><tr><td>`double`</td><td>Numeric value</td></tr><tr><td>`enum`</td><td>Options field with a single possible chosen option</td></tr><tr></tr><tr><td>`monetary`</td><td>Monetary field (has a numeric value and a currency value)</td></tr><tr><td>`org`</td><td>Organization field (contains an organization ID which is stored on the same account)</td></tr><tr><td>`people`</td><td>Person field (contains a person ID which is stored on the same account)</td></tr><tr><td>`phone`</td><td>Phone field (up to 255 numbers and/or characters)</td></tr><tr><td>`set`</td><td>Options field with a possibility of having multiple chosen options</td></tr><tr><td>`text`</td><td>Long text (up to 65k characters)</td></tr><tr><td>`time`</td><td>Time field (format HH:MM:SS)</td></tr><tr><td>`timerange`</td><td>Time-range field (has a start time and end time value, both HH:MM:SS)</td></tr><tr><td>`user`</td><td>User field (contains a user ID of another Pipedrive user)</td></tr><tr><td>`varchar`</td><td>Text (up to 255 characters)</td></tr><tr><td>`varchar_auto`</td><td>Autocomplete text (up to 255 characters)</td></tr><tr><td>`visible_to`</td><td>System field that keeps item's visibility setting</td></tr></table>
"""
enum mutationInput_addPersonField_input_allOf_1_field_type {
  address
  date
  daterange
  double
  enum
  monetary
  org
  people
  phone
  set
  text
  time
  timerange
  user
  varchar
  varchar_auto
  visible_to
}

type mutation_deletePersonFields {
  """If the response is successful or not"""
  success: Boolean
  data: mutation_deletePersonFields_allOf_1_data
}

type mutation_deletePersonFields_allOf_1_data {
  """The list of deleted field IDs"""
  id: [Int]
}

type mutation_deletePersonField {
  """If the response is successful or not"""
  success: Boolean
  data: mutation_deletePersonField_allOf_1_data
}

type mutation_deletePersonField_allOf_1_data {
  """The ID of the field that was deleted"""
  id: Int
}

type mutation_updatePersonField {
  """If the response is successful or not"""
  success: Boolean
  data: mutation_updatePersonField_allOf_1_data
}

type mutation_updatePersonField_allOf_1_data {
  """The ID of the field. Value is `null` in case of subfields."""
  id: Int

  """
  The key of the field. For custom fields this is generated upon creation.
  """
  key: String

  """The name of the field"""
  name: String

  """The order number of the field"""
  order_nr: Int
  field_type: mutation_updatePersonField_allOf_1_data_field_type

  """The creation time of the field"""
  add_time: String

  """The update time of the field"""
  update_time: String

  """
  The ID of the user who created or most recently updated the field, only applicable for custom fields
  """
  last_updated_by_user_id: Int

  """The active flag of the field"""
  active_flag: Boolean

  """The edit flag of the field"""
  edit_flag: Boolean

  """Not used"""
  index_visible_flag: Boolean

  """Not used"""
  details_visible_flag: Boolean

  """Not used"""
  add_visible_flag: Boolean

  """Not used"""
  important_flag: Boolean

  """Whether or not the field of an item can be edited in bulk"""
  bulk_edit_allowed: Boolean

  """Whether or not items can be searched by this field"""
  searchable_flag: Boolean

  """Whether or not items can be filtered by this field"""
  filtering_allowed: Boolean

  """Whether or not items can be sorted by this field"""
  sortable_flag: Boolean

  """Whether or not the field is mandatory"""
  mandatory_flag: Boolean

  """
  The options of the field. When there are no options, `null` is returned.
  """
  options: [JSON]

  """
  The deleted options of the field. Only present when there is at least 1 deleted option.
  """
  options_deleted: [JSON]

  """
  Whether or not the field is a subfield of another field. Only present if field is subfield.
  """
  is_subfield: Boolean

  """The subfields of the field. Only present when the field has subfields."""
  subfields: [JSON]
}

"""
The type of the field<table><tr><th>Value</th><th>Description</th></tr><tr><td>`address`</td><td>Address field (has multiple subfields, autocompleted by Google Maps)</td></tr><tr><td>`date`</td><td>Date (format YYYY-MM-DD)</td></tr><tr><td>`daterange`</td><td>Date-range field (has a start date and end date value, both YYYY-MM-DD)</td></tr><tr><td>`double`</td><td>Numeric value</td></tr><tr><td>`enum`</td><td>Options field with a single possible chosen option</td></tr><tr></tr><tr><td>`monetary`</td><td>Monetary field (has a numeric value and a currency value)</td></tr><tr><td>`org`</td><td>Organization field (contains an organization ID which is stored on the same account)</td></tr><tr><td>`people`</td><td>Person field (contains a person ID which is stored on the same account)</td></tr><tr><td>`phone`</td><td>Phone field (up to 255 numbers and/or characters)</td></tr><tr><td>`set`</td><td>Options field with a possibility of having multiple chosen options</td></tr><tr><td>`text`</td><td>Long text (up to 65k characters)</td></tr><tr><td>`time`</td><td>Time field (format HH:MM:SS)</td></tr><tr><td>`timerange`</td><td>Time-range field (has a start time and end time value, both HH:MM:SS)</td></tr><tr><td>`user`</td><td>User field (contains a user ID of another Pipedrive user)</td></tr><tr><td>`varchar`</td><td>Text (up to 255 characters)</td></tr><tr><td>`varchar_auto`</td><td>Autocomplete text (up to 255 characters)</td></tr><tr><td>`visible_to`</td><td>System field that keeps item's visibility setting</td></tr></table>
"""
enum mutation_updatePersonField_allOf_1_data_field_type {
  address
  date
  daterange
  double
  enum
  monetary
  org
  people
  phone
  set
  text
  time
  timerange
  user
  varchar
  varchar_auto
  visible_to
}

input mutationInput_updatePersonField_input_Input {
  """The name of the field"""
  name: String

  """
  When `field_type` is either set or enum, possible options must be supplied as a JSON-encoded sequential array of objects. All active items must be supplied and already existing items must have their ID supplied. New items only require a label. Example: `[{"id":123,"label":"Existing Item"},{"label":"New Item"}]`
  """
  options: String

  """
  Whether the field is available in 'add new' modal or not (both in web and mobile app)
  """
  add_visible_flag: Boolean = true
}

type addPipeline {
  """If the response is successful or not"""
  success: Boolean
  data: mutation_addPipeline_allOf_1_data
}

"""The pipeline object"""
type mutation_addPipeline_allOf_1_data {
  """The ID of the pipeline"""
  id: Int

  """The name of the pipeline"""
  name: String

  """The pipeline title displayed in the URL"""
  url_title: String

  """
  Defines the order of pipelines. First order (`order_nr=0`) is the default pipeline.
  """
  order_nr: Int

  """Whether this pipeline will be made inactive (hidden) or active"""
  active: Boolean

  """Whether deal probability is disabled or enabled for this pipeline"""
  deal_probability: Boolean

  """The pipeline creation time. Format: YYYY-MM-DD HH:MM:SS."""
  add_time: String

  """The pipeline update time. Format: YYYY-MM-DD HH:MM:SS."""
  update_time: String
}

input pipelineRequest_Input {
  """The name of the pipeline"""
  name: String!
  deal_probability: numberBoolean18

  """
  Defines the order of pipelines. First order (`order_nr=0`) is the default pipeline.
  """
  order_nr: Int
  active: numberBoolean19
}

enum numberBoolean18 {
  _0
  _1
}

enum numberBoolean19 {
  _0
  _1
}

type deletePipeline {
  """If the request was successful or not"""
  success: Boolean
  data: mutation_deletePipeline_data
}

type mutation_deletePipeline_data {
  """Deleted Pipeline ID"""
  id: Int
}

type updatePipeline {
  """If the response is successful or not"""
  success: Boolean
  data: basePipelineWithSelectedFlag
}

type basePipelineWithSelectedFlag {
  """The ID of the pipeline"""
  id: Int

  """The name of the pipeline"""
  name: String

  """The pipeline title displayed in the URL"""
  url_title: String

  """
  Defines the order of pipelines. First order (`order_nr=0`) is the default pipeline.
  """
  order_nr: Int

  """Whether this pipeline will be made inactive (hidden) or active"""
  active: Boolean

  """Whether deal probability is disabled or enabled for this pipeline"""
  deal_probability: Boolean

  """The pipeline creation time. Format: YYYY-MM-DD HH:MM:SS."""
  add_time: String

  """The pipeline update time. Format: YYYY-MM-DD HH:MM:SS."""
  update_time: String

  """A boolean that shows if the pipeline is selected from a filter or not"""
  selected: Boolean
}

input mutationInput_updatePipeline_input_Input {
  """The name of the pipeline"""
  name: String
  deal_probability: numberBoolean20

  """
  Defines the order of pipelines. First order (`order_nr=0`) is the default pipeline.
  """
  order_nr: Int
  active: numberBoolean21
}

enum numberBoolean20 {
  _0
  _1
}

enum numberBoolean21 {
  _0
  _1
}

type getproduct {
  """If the response is successful or not"""
  success: Boolean
  data: mutation_addProduct_data
  related_objects: mutation_addProduct_related_objects
}

type mutation_addProduct_data {
  """The ID of the product"""
  id: Float

  """The name of the product"""
  name: String

  """The product code"""
  code: String

  """The unit in which this product is sold"""
  unit: String

  """The ax percentage"""
  tax: Float
  active_flag: numberBooleanDefault1
  selectable: mutation_addProduct_data_allOf_0_selectable
  visible_to: mutation_addProduct_data_allOf_0_visible_to
  owner_id: JSON

  """
  Array of objects, each containing: currency (string), price (number), cost (number, optional), overhead_cost (number, optional)
  """
  prices: [JSON]
}

"""Whether this product is selected in deals or not"""
enum mutation_addProduct_data_allOf_0_selectable {
  _0
  _1
}

enum mutation_addProduct_data_allOf_0_visible_to {
  _1
  _3
  _5
  _7
}

type mutation_addProduct_related_objects {
  user: mutation_addProduct_related_objects_user
  deal: mutation_addProduct_related_objects_deal
  person: mutation_addProduct_related_objects_person
  organization: mutation_addProduct_related_objects_organization
}

type mutation_addProduct_related_objects_user {
  USER_ID: mutation_addProduct_related_objects_user_USER_ID
}

type mutation_addProduct_related_objects_user_USER_ID {
  """The ID of the user"""
  id: Int

  """The name of the user"""
  name: String

  """The email of the user"""
  email: String

  """Whether the user has picture or not. 0 = No picture, 1 = Has picture."""
  has_pic: Int

  """The user picture hash"""
  pic_hash: String

  """Whether the user is active or not"""
  active_flag: Boolean
  JSON: JSON
}

type mutation_addProduct_related_objects_deal {
  DEAL_ID: mutation_addProduct_related_objects_deal_DEAL_ID
}

"""The ID of the deal which is associated with the item"""
type mutation_addProduct_related_objects_deal_DEAL_ID {
  """The ID of the deal associated with the item"""
  id: Int

  """The title of the deal associated with the item"""
  title: String

  """The status of the deal associated with the item"""
  status: String

  """The value of the deal that is associated with the item"""
  value: Float

  """The currency of the deal value"""
  currency: String

  """The ID of the stage the deal is currently at"""
  stage_id: Int

  """The ID of the pipeline the deal is in"""
  pipeline_id: Int
}

type mutation_addProduct_related_objects_person {
  PERSON_ID: mutation_addProduct_related_objects_person_PERSON_ID
}

type mutation_addProduct_related_objects_person_PERSON_ID {
  """The ID of the person associated with the item"""
  id: Int

  """The name of the person associated with the item"""
  name: String

  """The emails of the person associated with the item"""
  email: [mutation_addProduct_related_objects_person_PERSON_ID_email_items]

  """The phone numbers of the person associated with the item"""
  phone: [mutation_addProduct_related_objects_person_PERSON_ID_phone_items]

  """The ID of the owner of the person that is associated with the item"""
  owner_id: Int
}

type mutation_addProduct_related_objects_person_PERSON_ID_email_items {
  """The type of the email"""
  label: String

  """The email of the associated person"""
  value: String

  """Whether this is the primary email or not"""
  primary: Boolean
}

type mutation_addProduct_related_objects_person_PERSON_ID_phone_items {
  """The type of the phone number"""
  label: String

  """The phone number of the person associated with the item"""
  value: String

  """Whether this is the primary phone number or not"""
  primary: Boolean
}

type mutation_addProduct_related_objects_organization {
  ORGANIZATION_ID: mutation_addProduct_related_objects_organization_ORGANIZATION_ID
}

"""The ID of the organization associated with the item"""
type mutation_addProduct_related_objects_organization_ORGANIZATION_ID {
  """The ID of the organization associated with the item"""
  id: Int

  """The name of the organization associated with the item"""
  name: String

  """
  The number of people connected with the organization that is associated with the item
  """
  people_count: Int

  """
  The ID of the owner of the organization that is associated with the item
  """
  owner_id: Int

  """The address of the organization"""
  address: String

  """The BCC email of the organization associated with the item"""
  cc_email: String
}

input addProductRequest_Input {
  """The name of the product"""
  name: String!

  """The product code"""
  code: String

  """The unit in which this product is sold"""
  unit: String

  """The tax percentage"""
  tax: Float
  active_flag: mutationInput_addProduct_input_allOf_1_active_flag = _1
  selectable: mutationInput_addProduct_input_allOf_1_selectable = _1
  visible_to: mutationInput_addProduct_input_allOf_1_visible_to

  """
  The ID of the user who will be marked as the owner of this product. When omitted, the authorized user ID will be used.
  """
  owner_id: Int

  """
  An array of objects, each containing: `currency` (string), `price` (number), `cost` (number, optional), `overhead_cost` (number, optional). Note that there can only be one price per product per currency. When `prices` is omitted altogether, a default price of 0 and a default currency based on the company's currency will be assigned.
  """
  prices: [JSON]
}

"""Whether this product will be made active or not"""
enum mutationInput_addProduct_input_allOf_1_active_flag {
  _0
  _1
}

"""Whether this product can be selected in deals or not"""
enum mutationInput_addProduct_input_allOf_1_selectable {
  _0
  _1
}

enum mutationInput_addProduct_input_allOf_1_visible_to {
  _1
  _3
  _5
  _7
}

type deleteProduct {
  """If the response is successful or not"""
  success: Boolean
  data: mutation_deleteProduct_data
}

type mutation_deleteProduct_data {
  id: Int
}

type updateProduct {
  """If the response is successful or not"""
  success: Boolean
  data: mutation_updateProduct_data
  related_objects: mutation_updateProduct_related_objects
}

type mutation_updateProduct_data {
  """The ID of the product"""
  id: Float

  """The name of the product"""
  name: String

  """The product code"""
  code: String

  """The unit in which this product is sold"""
  unit: String

  """The ax percentage"""
  tax: Float
  active_flag: numberBooleanDefault1
  selectable: mutation_updateProduct_data_allOf_0_selectable
  visible_to: mutation_updateProduct_data_allOf_0_visible_to
  owner_id: JSON
  prices: JSON
}

"""Whether this product is selected in deals or not"""
enum mutation_updateProduct_data_allOf_0_selectable {
  _0
  _1
}

enum mutation_updateProduct_data_allOf_0_visible_to {
  _1
  _3
  _5
  _7
}

type mutation_updateProduct_related_objects {
  user: mutation_updateProduct_related_objects_user
  deal: mutation_updateProduct_related_objects_deal
  person: mutation_updateProduct_related_objects_person
  organization: mutation_updateProduct_related_objects_organization
}

type mutation_updateProduct_related_objects_user {
  USER_ID: mutation_updateProduct_related_objects_user_USER_ID
}

type mutation_updateProduct_related_objects_user_USER_ID {
  """The ID of the user"""
  id: Int

  """The name of the user"""
  name: String

  """The email of the user"""
  email: String

  """Whether the user has picture or not. 0 = No picture, 1 = Has picture."""
  has_pic: Int

  """The user picture hash"""
  pic_hash: String

  """Whether the user is active or not"""
  active_flag: Boolean
  JSON: JSON
}

type mutation_updateProduct_related_objects_deal {
  DEAL_ID: mutation_updateProduct_related_objects_deal_DEAL_ID
}

"""The ID of the deal which is associated with the item"""
type mutation_updateProduct_related_objects_deal_DEAL_ID {
  """The ID of the deal associated with the item"""
  id: Int

  """The title of the deal associated with the item"""
  title: String

  """The status of the deal associated with the item"""
  status: String

  """The value of the deal that is associated with the item"""
  value: Float

  """The currency of the deal value"""
  currency: String

  """The ID of the stage the deal is currently at"""
  stage_id: Int

  """The ID of the pipeline the deal is in"""
  pipeline_id: Int
}

type mutation_updateProduct_related_objects_person {
  PERSON_ID: mutation_updateProduct_related_objects_person_PERSON_ID
}

type mutation_updateProduct_related_objects_person_PERSON_ID {
  """The ID of the person associated with the item"""
  id: Int

  """The name of the person associated with the item"""
  name: String

  """The emails of the person associated with the item"""
  email: [mutation_updateProduct_related_objects_person_PERSON_ID_email_items]

  """The phone numbers of the person associated with the item"""
  phone: [mutation_updateProduct_related_objects_person_PERSON_ID_phone_items]

  """The ID of the owner of the person that is associated with the item"""
  owner_id: Int
}

type mutation_updateProduct_related_objects_person_PERSON_ID_email_items {
  """The type of the email"""
  label: String

  """The email of the associated person"""
  value: String

  """Whether this is the primary email or not"""
  primary: Boolean
}

type mutation_updateProduct_related_objects_person_PERSON_ID_phone_items {
  """The type of the phone number"""
  label: String

  """The phone number of the person associated with the item"""
  value: String

  """Whether this is the primary phone number or not"""
  primary: Boolean
}

type mutation_updateProduct_related_objects_organization {
  ORGANIZATION_ID: mutation_updateProduct_related_objects_organization_ORGANIZATION_ID
}

"""The ID of the organization associated with the item"""
type mutation_updateProduct_related_objects_organization_ORGANIZATION_ID {
  """The ID of the organization associated with the item"""
  id: Int

  """The name of the organization associated with the item"""
  name: String

  """
  The number of people connected with the organization that is associated with the item
  """
  people_count: Int

  """
  The ID of the owner of the organization that is associated with the item
  """
  owner_id: Int

  """The address of the organization"""
  address: String

  """The BCC email of the organization associated with the item"""
  cc_email: String
}

input mutationInput_updateProduct_input_Input {
  """The name of the product"""
  name: String

  """The product code"""
  code: String

  """The unit in which this product is sold"""
  unit: String

  """The tax percentage"""
  tax: Float
  active_flag: mutationInput_updateProduct_input_allOf_1_active_flag = _1
  selectable: mutationInput_updateProduct_input_allOf_1_selectable = _1
  visible_to: mutationInput_updateProduct_input_allOf_1_visible_to

  """
  The ID of the user who will be marked as the owner of this product. When omitted, the authorized user ID will be used.
  """
  owner_id: Int

  """
  An array of objects, each containing: `currency` (string), `price` (number), `cost` (number, optional), `overhead_cost` (number, optional). Note that there can only be one price per product per currency. When `prices` is omitted altogether, a default price of 0 and a default currency based on the company's currency will be assigned.
  """
  prices: [JSON]
}

"""Whether this product will be made active or not"""
enum mutationInput_updateProduct_input_allOf_1_active_flag {
  _0
  _1
}

"""Whether this product can be selected in deals or not"""
enum mutationInput_updateProduct_input_allOf_1_selectable {
  _0
  _1
}

enum mutationInput_updateProduct_input_allOf_1_visible_to {
  _1
  _3
  _5
  _7
}

type newFollower {
  """If the response is successful or not"""
  success: Boolean
  data: mutation_addProductFollower_data
}

type mutation_addProductFollower_data {
  """The ID of the user that was added as follower"""
  user_id: Int

  """The ID of the follower"""
  id: Int

  """The ID of the product"""
  product_id: Int

  """The follower creation time. Format: YYYY-MM-DD HH:MM:SS"""
  add_time: String
}

input addProductFollowerRequest_Input {
  """The ID of the user"""
  user_id: Int!
}

type deleteProductFollower {
  """If the response is successful or not"""
  success: Boolean
  data: mutation_deleteProductFollower_data
}

type mutation_deleteProductFollower_data {
  id: Int
}

type deleteProductFields {
  """If the response is successful or not"""
  success: Boolean
  data: mutation_deleteProductFields_data
}

type mutation_deleteProductFields_data {
  """Array of all the IDs of the deleted product fields"""
  id: [Int]
}

type getProductField {
  """If the response is successful or not"""
  success: Boolean
  data: productField
}

type productField {
  """The name of the field"""
  name: String!

  """
  When `field_type` is either `set` or `enum`, possible options must be supplied as a JSON-encoded sequential array, for example:</br>`[{"label":"red"}, {"label":"blue"}, {"label":"lilac"}]`
  """
  options: [JSON]
  field_type: mutation_addProductField_data_allOf_0_field_type!

  """The ID of the product field"""
  id: Int

  """The key of the product field"""
  key: String

  """The position (index) of the product field in the detail view"""
  order_nr: Int

  """The product field creation time. Format: YYYY-MM-DD HH:MM:SS"""
  add_time: String

  """The product field last update time. Format: YYYY-MM-DD HH:MM:SS"""
  update_time: String

  """The ID of the last user to update the product field"""
  last_updated_by_user_id: Int

  """Whether or not the product field is currently active"""
  active_flag: Boolean

  """Whether or not the product field name and metadata is editable"""
  edit_flag: Boolean

  """Whether or not the product field is visible in the Add Product Modal"""
  add_visible_flag: Boolean

  """Whether or not the product field is marked as important"""
  important_flag: Boolean

  """Whether or not the product field data can be edited"""
  bulk_edit_allowed: Boolean

  """Whether or not the product field is searchable"""
  searchable_flag: Boolean

  """
  Whether or not the product field value can be used when filtering searches
  """
  filtering_allowed: Boolean

  """Whether or not the product field is sortable"""
  sortable_flag: Boolean

  """Whether or not the product field is mandatory when creating products"""
  mandatory_flag: Boolean
}

"""
The type of the field<table><tr><th>Value</th><th>Description</th></tr><tr><td>`varchar`</td><td>Text (up to 255 characters)</td><tr><td>`varchar_auto`</td><td>Autocomplete text (up to 255 characters)</td><tr><td>`text`</td><td>Long text (up to 65k characters)</td><tr><td>`double`</td><td>Numeric value</td><tr><td>`monetary`</td><td>Monetary field (has a numeric value and a currency value)</td><tr><td>`date`</td><td>Date (format YYYY-MM-DD)</td><tr><td>`set`</td><td>Options field with a possibility of having multiple chosen options</td><tr><td>`enum`</td><td>Options field with a single possible chosen option</td><tr><td>`user`</td><td>User field (contains a user ID of another Pipedrive user)</td><tr><td>`org`</td><td>Organization field (contains an organization ID which is stored on the same account)</td><tr><td>`people`</td><td>Person field (contains a product ID which is stored on the same account)</td><tr><td>`phone`</td><td>Phone field (up to 255 numbers and/or characters)</td><tr><td>`time`</td><td>Time field (format HH:MM:SS)</td><tr><td>`timerange`</td><td>Time-range field (has a start time and end time value, both HH:MM:SS)</td><tr><td>`daterange`</td><td>Date-range field (has a start date and end date value, both YYYY-MM-DD)</td><tr><td>`address`</td><td>Address field (autocompleted by Google Maps)</dd></table>
"""
enum mutation_addProductField_data_allOf_0_field_type {
  varchar
  varchar_auto
  text
  double
  monetary
  date
  set
  enum
  user
  org
  people
  phone
  time
  timerange
  daterange
  address
}

input addProductField_request_Input {
  """The name of the field"""
  name: String!

  """
  When `field_type` is either `set` or `enum`, possible options must be supplied as a JSON-encoded sequential array, for example:</br>`[{"label":"red"}, {"label":"blue"}, {"label":"lilac"}]`
  """
  options: [JSON]
  field_type: mutationInput_addProductField_input_field_type!
}

"""
The type of the field<table><tr><th>Value</th><th>Description</th></tr><tr><td>`varchar`</td><td>Text (up to 255 characters)</td><tr><td>`varchar_auto`</td><td>Autocomplete text (up to 255 characters)</td><tr><td>`text`</td><td>Long text (up to 65k characters)</td><tr><td>`double`</td><td>Numeric value</td><tr><td>`monetary`</td><td>Monetary field (has a numeric value and a currency value)</td><tr><td>`date`</td><td>Date (format YYYY-MM-DD)</td><tr><td>`set`</td><td>Options field with a possibility of having multiple chosen options</td><tr><td>`enum`</td><td>Options field with a single possible chosen option</td><tr><td>`user`</td><td>User field (contains a user ID of another Pipedrive user)</td><tr><td>`org`</td><td>Organization field (contains an organization ID which is stored on the same account)</td><tr><td>`people`</td><td>Person field (contains a product ID which is stored on the same account)</td><tr><td>`phone`</td><td>Phone field (up to 255 numbers and/or characters)</td><tr><td>`time`</td><td>Time field (format HH:MM:SS)</td><tr><td>`timerange`</td><td>Time-range field (has a start time and end time value, both HH:MM:SS)</td><tr><td>`daterange`</td><td>Date-range field (has a start date and end date value, both YYYY-MM-DD)</td><tr><td>`address`</td><td>Address field (autocompleted by Google Maps)</dd></table>
"""
enum mutationInput_addProductField_input_field_type {
  varchar
  varchar_auto
  text
  double
  monetary
  date
  set
  enum
  user
  org
  people
  phone
  time
  timerange
  daterange
  address
}

union deleteProductField_response = deleteProductField | failResponse

type deleteProductField {
  """If the response is successful or not"""
  success: Boolean
  data: mutation_deleteProductField_oneOf_0_data
}

type mutation_deleteProductField_oneOf_0_data {
  id: Int
}

type mutation_updateProductField {
  """If the response is successful or not"""
  success: Boolean
  data: productField2
}

type productField2 {
  """The name of the field"""
  name: String!

  """
  When `field_type` is either `set` or `enum`, possible options must be supplied as a JSON-encoded sequential array, for example:</br>`[{"label":"red"}, {"label":"blue"}, {"label":"lilac"}]`
  """
  options: [JSON]
  field_type: mutation_updateProductField_data_allOf_0_field_type!

  """The ID of the product field"""
  id: Int

  """The key of the product field"""
  key: String

  """The position (index) of the product field in the detail view"""
  order_nr: Int

  """The product field creation time. Format: YYYY-MM-DD HH:MM:SS"""
  add_time: String

  """The product field last update time. Format: YYYY-MM-DD HH:MM:SS"""
  update_time: String

  """The ID of the last user to update the product field"""
  last_updated_by_user_id: Int

  """Whether or not the product field is currently active"""
  active_flag: Boolean

  """Whether or not the product field name and metadata is editable"""
  edit_flag: Boolean

  """Whether or not the product field is visible in the Add Product Modal"""
  add_visible_flag: Boolean

  """Whether or not the product field is marked as important"""
  important_flag: Boolean

  """Whether or not the product field data can be edited"""
  bulk_edit_allowed: Boolean

  """Whether or not the product field is searchable"""
  searchable_flag: Boolean

  """
  Whether or not the product field value can be used when filtering searches
  """
  filtering_allowed: Boolean

  """Whether or not the product field is sortable"""
  sortable_flag: Boolean

  """Whether or not the product field is mandatory when creating products"""
  mandatory_flag: Boolean
}

"""
The type of the field<table><tr><th>Value</th><th>Description</th></tr><tr><td>`varchar`</td><td>Text (up to 255 characters)</td><tr><td>`varchar_auto`</td><td>Autocomplete text (up to 255 characters)</td><tr><td>`text`</td><td>Long text (up to 65k characters)</td><tr><td>`double`</td><td>Numeric value</td><tr><td>`monetary`</td><td>Monetary field (has a numeric value and a currency value)</td><tr><td>`date`</td><td>Date (format YYYY-MM-DD)</td><tr><td>`set`</td><td>Options field with a possibility of having multiple chosen options</td><tr><td>`enum`</td><td>Options field with a single possible chosen option</td><tr><td>`user`</td><td>User field (contains a user ID of another Pipedrive user)</td><tr><td>`org`</td><td>Organization field (contains an organization ID which is stored on the same account)</td><tr><td>`people`</td><td>Person field (contains a product ID which is stored on the same account)</td><tr><td>`phone`</td><td>Phone field (up to 255 numbers and/or characters)</td><tr><td>`time`</td><td>Time field (format HH:MM:SS)</td><tr><td>`timerange`</td><td>Time-range field (has a start time and end time value, both HH:MM:SS)</td><tr><td>`daterange`</td><td>Date-range field (has a start date and end date value, both YYYY-MM-DD)</td><tr><td>`address`</td><td>Address field (autocompleted by Google Maps)</dd></table>
"""
enum mutation_updateProductField_data_allOf_0_field_type {
  varchar
  varchar_auto
  text
  double
  monetary
  date
  set
  enum
  user
  org
  people
  phone
  time
  timerange
  daterange
  address
}

input UpdateProductField_Input {
  """The name of the field"""
  name: String

  """
  When `field_type` is either set or enum, possible options on update must be supplied as an array of objects each containing id and label, for example: [{"id":1, "label":"red"},{"id":2, "label":"blue"},{"id":3, "label":"lilac"}]
  """
  options: [JSON]
}

type addRole {
  """If the response is successful or not"""
  success: Boolean
  data: mutation_addRole_allOf_1_data
}

"""The response data"""
type mutation_addRole_allOf_1_data {
  id: Int
}

"""The details of the role"""
input addRoleRequest_Input {
  """The name of the role"""
  name: String!

  """The ID of the parent role"""
  parent_role_id: Int
}

type deleteRole {
  """If the response is successful or not"""
  success: Boolean
  data: mutation_deleteRole_allOf_1_data
}

"""The response data"""
type mutation_deleteRole_allOf_1_data {
  id: Int
}

type updateRole {
  """If the response is successful or not"""
  success: Boolean
  data: mutation_updateRole_allOf_1_data
}

"""The response data"""
type mutation_updateRole_allOf_1_data {
  id: Int
}

"""The details of the role"""
input baseRoleRequest_Input {
  """The ID of the parent role"""
  parent_role_id: Int

  """The name of the role"""
  name: String
}

type deleteRoleAssignment {
  """If the response is successful or not"""
  success: Boolean
  data: mutation_deleteRoleAssignment_allOf_1_data
}

"""The response data"""
type mutation_deleteRoleAssignment_allOf_1_data {
  id: Int
}

input deleteRoleAssignmentRequest_Input {
  """The ID of the user"""
  user_id: Int!
}

type addRoleAssignment {
  """If the response is successful or not"""
  success: Boolean
  data: mutation_addRoleAssignment_allOf_1_data
}

"""The response data"""
type mutation_addRoleAssignment_allOf_1_data {
  """The ID of the user that was added to the role"""
  user_id: Int

  """The ID of the role the user was added to"""
  role_id: Int
}

input addRoleAssignmentRequest_Input {
  """The ID of the user"""
  user_id: Int!
}

type addOrUpdateRoleSetting {
  """If the response is successful or not"""
  success: Boolean
  data: mutation_addOrUpdateRoleSetting_allOf_1_data
}

"""The response data"""
type mutation_addOrUpdateRoleSetting_allOf_1_data {
  """The ID of the role"""
  id: Int
  deal_default_visibility: mutation_addOrUpdateRoleSetting_allOf_1_data_deal_default_visibility
}

"""The setting"""
enum mutation_addOrUpdateRoleSetting_allOf_1_data_deal_default_visibility {
  _1
  _3
  _5
  _7
}

input addOrUpdateRoleSettingRequest_Input {
  setting_key: mutationInput_addOrUpdateRoleSetting_input_setting_key!
  value: mutationInput_addOrUpdateRoleSetting_input_value!
}

enum mutationInput_addOrUpdateRoleSetting_input_setting_key {
  deal_default_visibility
  lead_default_visibility
  org_default_visibility
  person_default_visibility
  product_default_visibility
}

"""
Possible values for the `default_visibility` setting depending on the subscription plan:<br> <table class='role-setting'> <caption><b>Essential / Advanced plan</b></caption> <tr><th><b>Value</b></th><th><b>Description</b></th></tr> <tr><td>`1`</td><td>Owner & Followers</td></tr> <tr><td>`3`</td><td>Entire company</td></tr> </table> <br> <table class='role-setting'> <caption><b>Professional / Enterprise plan</b></caption> <tr><th><b>Value</b></th><th><b>Description</b></th></tr> <tr><td>`1`</td><td>Owner only</td></tr> <tr><td>`3`</td><td>Owner&#39;s visibility group</td></tr> <tr><td>`5`</td><td>Owner&#39;s visibility group and sub-groups</td></tr> <tr><td>`7`</td><td>Entire company</td></tr> </table> <br> Read more about visibility groups <a href='https://support.pipedrive.com/en/article/visibility-groups'>here</a>.
"""
enum mutationInput_addOrUpdateRoleSetting_input_value {
  _1
  _3
  _5
  _7
}

type deleteStages {
  """If the request was successful or not"""
  success: Boolean
  data: mutation_deleteStages_data
}

type mutation_deleteStages_data {
  """The list of deleted stage IDs"""
  id: [Int]
}

type stage {
  """If the request was successful or not"""
  success: Boolean
  data: mutation_addStage_data
}

"""Updated stage object"""
type mutation_addStage_data {
  """The ID of the stage"""
  id: Int

  """Defines the order of the stage"""
  order_nr: Int

  """The name of the stage"""
  name: String

  """Whether the stage is active or deleted"""
  active_flag: Boolean

  """
  The success probability percentage of the deal. Used/shown when the deal weighted values are used.
  """
  deal_probability: Int

  """The ID of the pipeline to add the stage to"""
  pipeline_id: Int

  """Whether deals in this stage can become rotten"""
  rotten_flag: Boolean

  """
  The number of days the deals not updated in this stage would become rotten. Applies only if the `rotten_flag` is set.
  """
  rotten_days: Int

  """The stage creation time. Format: YYYY-MM-DD HH:MM:SS."""
  add_time: String

  """The stage update time. Format: YYYY-MM-DD HH:MM:SS."""
  update_time: String
}

input addStageRequest_Input {
  """The name of the stage"""
  name: String!

  """The ID of the pipeline to add stage to"""
  pipeline_id: Int!

  """
  The success probability percentage of the deal. Used/shown when deal weighted values are used.
  """
  deal_probability: Int

  """Whether deals in this stage can become rotten"""
  rotten_flag: Boolean

  """
  The number of days the deals not updated in this stage would become rotten. Applies only if the `rotten_flag` is set.
  """
  rotten_days: Int
}

type deleteStage {
  """If the request was successful or not"""
  success: Boolean
  data: mutation_deleteStage_data
}

type mutation_deleteStage_data {
  """Deleted stage ID"""
  id: Int
}

type mutation_updateStage {
  """If the request was successful or not"""
  success: Boolean
  data: mutation_updateStage_data
}

"""Updated stage object"""
type mutation_updateStage_data {
  """The ID of the stage"""
  id: Int

  """Defines the order of the stage"""
  order_nr: Int

  """The name of the stage"""
  name: String

  """Whether the stage is active or deleted"""
  active_flag: Boolean

  """
  The success probability percentage of the deal. Used/shown when the deal weighted values are used.
  """
  deal_probability: Int

  """The ID of the pipeline to add the stage to"""
  pipeline_id: Int

  """Whether deals in this stage can become rotten"""
  rotten_flag: Boolean

  """
  The number of days the deals not updated in this stage would become rotten. Applies only if the `rotten_flag` is set.
  """
  rotten_days: Int

  """The stage creation time. Format: YYYY-MM-DD HH:MM:SS."""
  add_time: String

  """The stage update time. Format: YYYY-MM-DD HH:MM:SS."""
  update_time: String
}

input updateStageRequest_Input {
  """The name of the stage"""
  name: String

  """The ID of the pipeline to add stage to"""
  pipeline_id: Int

  """
  The success probability percentage of the deal. Used/shown when deal weighted values are used.
  """
  deal_probability: Int

  """Whether deals in this stage can become rotten"""
  rotten_flag: Boolean

  """
  The number of days the deals not updated in this stage would become rotten. Applies only if the `rotten_flag` is set.
  """
  rotten_days: Int

  """
  An order number for this stage. Order numbers should be used to order the stages in the pipeline.
  """
  order_nr: Int
}

type subscriptionsId {
  """If the response is successful or not"""
  success: Boolean
  data: mutation_deleteSubscription_allOf_1_data
}

type mutation_deleteSubscription_allOf_1_data {
  """The ID of the subscription"""
  id: Int

  """The ID of the user who created the subscription"""
  user_id: Int

  """The ID of the deal this subscription is associated with"""
  deal_id: Int

  """The description of the recurring subscription"""
  description: String

  """The subscription status"""
  is_active: Boolean

  """Shows how many payments a recurring subscription has"""
  cycles_count: Int

  """The amount of each payment"""
  cycle_amount: Int

  """
  Indicates that the recurring subscription will last until it is manually canceled or deleted
  """
  infinite: Boolean

  """The currency of the subscription"""
  currency: String

  """The interval between payments"""
  cadence_type: String

  """The start date of the recurring subscription"""
  start_date: Date

  """The end date of the subscription"""
  end_date: Date

  """The total value of all payments"""
  lifetime_value: Float

  """The final status of the subscription"""
  final_status: String

  """The creation time of the subscription"""
  add_time: String

  """The update time of the subscription"""
  update_time: String
}

type mutation_addRecurringSubscription {
  """If the response is successful or not"""
  success: Boolean
  data: mutation_addRecurringSubscription_allOf_1_data
}

type mutation_addRecurringSubscription_allOf_1_data {
  """The ID of the subscription"""
  id: Int

  """The ID of the user who created the subscription"""
  user_id: Int

  """The ID of the deal this subscription is associated with"""
  deal_id: Int

  """The description of the recurring subscription"""
  description: String

  """The subscription status"""
  is_active: Boolean

  """Shows how many payments a recurring subscription has"""
  cycles_count: Int

  """The amount of each payment"""
  cycle_amount: Int

  """
  Indicates that the recurring subscription will last until it is manually canceled or deleted
  """
  infinite: Boolean

  """The currency of the subscription"""
  currency: String

  """The interval between payments"""
  cadence_type: String

  """The start date of the recurring subscription"""
  start_date: Date

  """The end date of the subscription"""
  end_date: Date

  """The total value of all payments"""
  lifetime_value: Float

  """The final status of the subscription"""
  final_status: String

  """The creation time of the subscription"""
  add_time: String

  """The update time of the subscription"""
  update_time: String
}

input addRecurringSubscriptionRequest_Input {
  """The ID of the deal this recurring subscription is associated with"""
  deal_id: Int!

  """
  The currency of the recurring subscription. Accepts a 3-character currency code.
  """
  currency: String!

  """The description of the recurring subscription"""
  description: String
  cadence_type: mutationInput_addRecurringSubscription_input_cadence_type!

  """
  Shows how many payments the subscription has. Note that one field must be set: `cycles_count` or `infinite`. If `cycles_count` is set, then `cycle_amount` and `start_date` are also required.
  """
  cycles_count: Int

  """The amount of each payment"""
  cycle_amount: Int!

  """The start date of the recurring subscription. Format: YYYY-MM-DD"""
  start_date: Date!

  """
  This indicates that the recurring subscription will last until it's manually canceled or deleted. Note that only one field must be set: `cycles_count` or `infinite`.
  """
  infinite: Boolean

  """
  Array of additional payments. It requires a minimum structure as follows: [{ amount:SUM, description:DESCRIPTION, due_at:PAYMENT_DATE }]. Replace SUM with a payment amount, DESCRIPTION with an explanation string, PAYMENT_DATE with a date (format YYYY-MM-DD).
  """
  payments: [JSON]

  """
  Indicates that the deal value must be set to recurring subscription's MRR value
  """
  update_deal_value: Boolean
}

"""The interval between payments"""
enum mutationInput_addRecurringSubscription_input_cadence_type {
  weekly
  monthly
  quarterly
  yearly
}

type mutation_addSubscriptionInstallment {
  """If the response is successful or not"""
  success: Boolean
  data: mutation_addSubscriptionInstallment_allOf_1_data
}

type mutation_addSubscriptionInstallment_allOf_1_data {
  """The ID of the subscription"""
  id: Int

  """The ID of the user who created the subscription"""
  user_id: Int

  """The ID of the deal this subscription is associated with"""
  deal_id: Int

  """The description of the recurring subscription"""
  description: String

  """The subscription status"""
  is_active: Boolean

  """Shows how many payments a recurring subscription has"""
  cycles_count: Int

  """The amount of each payment"""
  cycle_amount: Int

  """
  Indicates that the recurring subscription will last until it is manually canceled or deleted
  """
  infinite: Boolean

  """The currency of the subscription"""
  currency: String

  """The interval between payments"""
  cadence_type: String

  """The start date of the recurring subscription"""
  start_date: Date

  """The end date of the subscription"""
  end_date: Date

  """The total value of all payments"""
  lifetime_value: Float

  """The final status of the subscription"""
  final_status: String

  """The creation time of the subscription"""
  add_time: String

  """The update time of the subscription"""
  update_time: String
}

input addSubscriptionInstallmentRequest_Input {
  """The ID of the deal this installment subscription is associated with"""
  deal_id: Int!

  """
  The currency of the installment subscription. Accepts a 3-character currency code.
  """
  currency: String!

  """
  Array of payments. It requires a minimum structure as follows: [{ amount:SUM, description:DESCRIPTION, due_at:PAYMENT_DATE }]. Replace SUM with a payment amount, DESCRIPTION with an explanation string, PAYMENT_DATE with a date (format YYYY-MM-DD).
  """
  payments: [JSON]!

  """
  Indicates that the deal value must be set to the installment subscription's total value
  """
  update_deal_value: Boolean
}

type mutation_updateRecurringSubscription {
  """If the response is successful or not"""
  success: Boolean
  data: mutation_updateRecurringSubscription_allOf_1_data
}

type mutation_updateRecurringSubscription_allOf_1_data {
  """The ID of the subscription"""
  id: Int

  """The ID of the user who created the subscription"""
  user_id: Int

  """The ID of the deal this subscription is associated with"""
  deal_id: Int

  """The description of the recurring subscription"""
  description: String

  """The subscription status"""
  is_active: Boolean

  """Shows how many payments a recurring subscription has"""
  cycles_count: Int

  """The amount of each payment"""
  cycle_amount: Int

  """
  Indicates that the recurring subscription will last until it is manually canceled or deleted
  """
  infinite: Boolean

  """The currency of the subscription"""
  currency: String

  """The interval between payments"""
  cadence_type: String

  """The start date of the recurring subscription"""
  start_date: Date

  """The end date of the subscription"""
  end_date: Date

  """The total value of all payments"""
  lifetime_value: Float

  """The final status of the subscription"""
  final_status: String

  """The creation time of the subscription"""
  add_time: String

  """The update time of the subscription"""
  update_time: String
}

input updateRecurringSubscriptionRequest_Input {
  """The description of the recurring subscription"""
  description: String

  """The amount of each payment"""
  cycle_amount: Int

  """
  Array of additional payments. It requires a minimum structure as follows: [{ amount:SUM, description:DESCRIPTION, due_at:PAYMENT_DATE }]. Replace SUM with a payment amount, DESCRIPTION with an explanation string, PAYMENT_DATE with a date (format YYYY-MM-DD).
  """
  payments: [JSON]

  """
  Indicates that the deal value must be set to recurring subscription's MRR value
  """
  update_deal_value: Boolean

  """All payments after that date will be affected. Format: YYYY-MM-DD"""
  effective_date: Date!
}

type mutation_updateSubscriptionInstallment {
  """If the response is successful or not"""
  success: Boolean
  data: mutation_updateSubscriptionInstallment_allOf_1_data
}

type mutation_updateSubscriptionInstallment_allOf_1_data {
  """The ID of the subscription"""
  id: Int

  """The ID of the user who created the subscription"""
  user_id: Int

  """The ID of the deal this subscription is associated with"""
  deal_id: Int

  """The description of the recurring subscription"""
  description: String

  """The subscription status"""
  is_active: Boolean

  """Shows how many payments a recurring subscription has"""
  cycles_count: Int

  """The amount of each payment"""
  cycle_amount: Int

  """
  Indicates that the recurring subscription will last until it is manually canceled or deleted
  """
  infinite: Boolean

  """The currency of the subscription"""
  currency: String

  """The interval between payments"""
  cadence_type: String

  """The start date of the recurring subscription"""
  start_date: Date

  """The end date of the subscription"""
  end_date: Date

  """The total value of all payments"""
  lifetime_value: Float

  """The final status of the subscription"""
  final_status: String

  """The creation time of the subscription"""
  add_time: String

  """The update time of the subscription"""
  update_time: String
}

input updateSubscriptionInstallmentRequest_Input {
  """
  Array of payments. It requires a minimum structure as follows: [{ amount:SUM, description:DESCRIPTION, due_at:PAYMENT_DATE }]. Replace SUM with a payment amount, DESCRIPTION with a explanation string, PAYMENT_DATE with a date (format YYYY-MM-DD).
  """
  payments: [JSON]!

  """
  Indicates that the deal value must be set to installment subscription's total value
  """
  update_deal_value: Boolean
}

type mutation_cancelRecurringSubscription {
  """If the response is successful or not"""
  success: Boolean
  data: mutation_cancelRecurringSubscription_allOf_1_data
}

type mutation_cancelRecurringSubscription_allOf_1_data {
  """The ID of the subscription"""
  id: Int

  """The ID of the user who created the subscription"""
  user_id: Int

  """The ID of the deal this subscription is associated with"""
  deal_id: Int

  """The description of the recurring subscription"""
  description: String

  """The subscription status"""
  is_active: Boolean

  """Shows how many payments a recurring subscription has"""
  cycles_count: Int

  """The amount of each payment"""
  cycle_amount: Int

  """
  Indicates that the recurring subscription will last until it is manually canceled or deleted
  """
  infinite: Boolean

  """The currency of the subscription"""
  currency: String

  """The interval between payments"""
  cadence_type: String

  """The start date of the recurring subscription"""
  start_date: Date

  """The end date of the subscription"""
  end_date: Date

  """The total value of all payments"""
  lifetime_value: Float

  """The final status of the subscription"""
  final_status: String

  """The creation time of the subscription"""
  add_time: String

  """The update time of the subscription"""
  update_time: String
}

input cancelRecurringSubscriptionRequest_Input {
  """
  The subscription termination date. All payments after specified date will be deleted. Default value is the current date.
  """
  end_date: Date
}

union addUser_response = user | failResponse

type user {
  """If the response is successful or not"""
  success: Boolean
  data: mutation_addUser_oneOf_0_allOf_1_data
}

type mutation_addUser_oneOf_0_allOf_1_data {
  """The user ID"""
  id: Int

  """The user name"""
  name: String

  """The user default currency"""
  default_currency: String

  """The user locale"""
  locale: String

  """The user language ID"""
  lang: Int

  """The user email"""
  email: String

  """The user phone"""
  phone: String

  """Boolean that indicates whether the user is activated"""
  activated: Boolean

  """The last login date and time of the user. Format: YYYY-MM-DD HH:MM:SS"""
  last_login: String

  """The creation date and time of the user. Format: YYYY-MM-DD HH:MM:SS"""
  created: String

  """
  The last modification date and time of the user. Format: YYYY-MM-DD HH:MM:SS
  """
  modified: String

  """Boolean that indicates whether the user has created a company"""
  has_created_company: Boolean
  access: [mutation_addUser_oneOf_0_allOf_1_data_access_items]

  """Boolean that indicates whether the user is activated"""
  active_flag: Boolean

  """The user timezone name"""
  timezone_name: String

  """The user timezone offset"""
  timezone_offset: String

  """The ID of the user role"""
  role_id: Int

  """The user icon URL"""
  icon_url: String

  """
  Boolean that indicates if the requested user is the same which is logged in (in this case, always true)
  """
  is_you: Boolean
}

type mutation_addUser_oneOf_0_allOf_1_data_access_items {
  app: mutation_addUser_oneOf_0_allOf_1_data_access_items_app
  admin: Boolean
  permission_set_id: String
}

enum mutation_addUser_oneOf_0_allOf_1_data_access_items_app {
  sales
  projects
  campaigns
  global
  account_settings
}

input addUserRequest_Input {
  """The email of the user"""
  email: String!

  """
  The access given to the user. Each item in the array represents access to a specific app. Optionally may include either admin flag or permission set ID to specify which access to give within the app. If both are omitted, the default access for the corresponding app will be used. It requires structure as follows: `[{ app: 'sales', permission_set_id: '62cc4d7f-4038-4352-abf3-a8c1c822b631' }, { app: 'global', admin: true }, { app: 'account_settings' }]`
  """
  access: [mutationInput_addUser_input_access_items_Input] = [{app: sales}]

  """
  Whether the user is active or not. `false` = Not activated, `true` = Activated
  """
  active_flag: Boolean = true
}

input mutationInput_addUser_input_access_items_Input {
  app: mutationInput_addUser_input_access_items_app!
  admin: Boolean
  permission_set_id: String
}

enum mutationInput_addUser_input_access_items_app {
  sales
  projects
  campaigns
  global
  account_settings
}

union updateUser_response = mutation_updateUser_oneOf_0 | failResponse

type mutation_updateUser_oneOf_0 {
  """If the response is successful or not"""
  success: Boolean
  data: mutation_updateUser_oneOf_0_allOf_1_data
}

type mutation_updateUser_oneOf_0_allOf_1_data {
  """The user ID"""
  id: Int

  """The user name"""
  name: String

  """The user default currency"""
  default_currency: String

  """The user locale"""
  locale: String

  """The user language ID"""
  lang: Int

  """The user email"""
  email: String

  """The user phone"""
  phone: String

  """Boolean that indicates whether the user is activated"""
  activated: Boolean

  """The last login date and time of the user. Format: YYYY-MM-DD HH:MM:SS"""
  last_login: String

  """The creation date and time of the user. Format: YYYY-MM-DD HH:MM:SS"""
  created: String

  """
  The last modification date and time of the user. Format: YYYY-MM-DD HH:MM:SS
  """
  modified: String

  """Boolean that indicates whether the user has created a company"""
  has_created_company: Boolean
  access: [mutation_updateUser_oneOf_0_allOf_1_data_access_items]

  """Boolean that indicates whether the user is activated"""
  active_flag: Boolean

  """The user timezone name"""
  timezone_name: String

  """The user timezone offset"""
  timezone_offset: String

  """The ID of the user role"""
  role_id: Int

  """The user icon URL"""
  icon_url: String

  """
  Boolean that indicates if the requested user is the same which is logged in (in this case, always true)
  """
  is_you: Boolean
}

type mutation_updateUser_oneOf_0_allOf_1_data_access_items {
  app: mutation_updateUser_oneOf_0_allOf_1_data_access_items_app
  admin: Boolean
  permission_set_id: String
}

enum mutation_updateUser_oneOf_0_allOf_1_data_access_items_app {
  sales
  projects
  campaigns
  global
  account_settings
}

input updateUserRequest_Input {
  """
  Whether the user is active or not. `false` = Not activated, `true` = Activated
  """
  active_flag: Boolean!
}

union addWebhook_response = webhook | webhooksBadRequestResponse | unathorizedResponse

type webhook {
  """If the response is successful or not"""
  success: Boolean

  """The status of the response"""
  status: String
  data: mutation_addWebhook_oneOf_0_allOf_1_data
}

type mutation_addWebhook_oneOf_0_allOf_1_data {
  """The ID of the Webhook"""
  id: Int

  """The ID of the company related to the Webhook"""
  company_id: Int

  """The ID of the user who owns the Webhook"""
  owner_id: Int

  """The ID of the user related to the Webhook"""
  user_id: Int

  """The Webhook action"""
  event_action: String

  """The Webhook object"""
  event_object: String

  """The subscription URL of the Webhook"""
  subscription_url: String
  is_active: numberBooleanDefault12

  """The date when the Webhook was added"""
  add_time: DateTime

  """The date when the Webhook was removed (if removed)"""
  remove_time: DateTime
  type: mutation_addWebhook_oneOf_0_allOf_1_data_type

  """The username of the `subscription_url` of the Webhook"""
  http_auth_user: String

  """The password of the `subscription_url` of the Webhook"""
  http_auth_password: String
  additional_data: JSON

  """The removal reason of the Webhook (if removed)"""
  remove_reason: String

  """The last delivery time of the Webhook"""
  last_delivery_time: DateTime

  """The last delivery HTTP status of the Webhook"""
  last_http_status: Int

  """The ID of the admin of the Webhook"""
  admin_id: Int
}

enum numberBooleanDefault12 {
  _0
  _1
}

"""The type of the Webhook"""
enum mutation_addWebhook_oneOf_0_allOf_1_data_type {
  general
  app
}

type webhooksBadRequestResponse {
  """If the response is successful or not"""
  success: Boolean

  """The status of the response"""
  status: String
  errors: JSON
}

input addWebhookRequest_Input {
  """
  A full, valid, publicly accessible URL which determines where to send the notifications. Please note that you cannot use Pipedrive API endpoints as the `subscription_url` and the chosen URL must not redirect to another link.
  """
  subscription_url: String!
  event_action: mutationInput_addWebhook_input_event_action!
  event_object: mutationInput_addWebhook_input_event_object!

  """
  The ID of the user that this webhook will be authorized with. You have the option to use a different user's `user_id`. If it is not set, the current user's `user_id` will be used. As each webhook event is checked against a user’s permissions, the webhook will only be sent if the user has access to the specified object(s). If you want to receive notifications for all events, please use a top-level admin user’s `user_id`.
  """
  user_id: Int

  """
  The HTTP basic auth username of the subscription URL endpoint (if required)
  """
  http_auth_user: String

  """
  The HTTP basic auth password of the subscription URL endpoint (if required)
  """
  http_auth_password: String
  version: mutationInput_addWebhook_input_version = _1_0
}

"""
The type of action to receive notifications about. Wildcard will match all supported actions.
"""
enum mutationInput_addWebhook_input_event_action {
  added
  updated
  merged
  deleted
  _STAR_
}

"""
The type of object to receive notifications about. Wildcard will match all supported objects.
"""
enum mutationInput_addWebhook_input_event_object {
  activity
  activityType
  deal
  note
  organization
  person
  pipeline
  product
  stage
  user
  _STAR_
}

"""The webhook's version"""
enum mutationInput_addWebhook_input_version {
  _1_0
  _2_0
}

union deleteWebhook_response = mutation_deleteWebhook_oneOf_0 | unathorizedResponse | deleteWebhook_403_response | mutation_deleteWebhook_oneOf_3

type mutation_deleteWebhook_oneOf_0 {
  """If the response is successful or not"""
  success: Boolean

  """The status of the response"""
  status: String
}

type deleteWebhook_403_response {
  """If the response is successful or not"""
  success: Boolean

  """The error message"""
  message: String
}

type mutation_deleteWebhook_oneOf_3 {
  """If the response is successful or not"""
  success: Boolean

  """The status of the response"""
  status: String
  errors: JSON
}

scalar ObjMap

enum HTTPMethod {
  GET
  HEAD
  POST
  PUT
  DELETE
  CONNECT
  OPTIONS
  TRACE
  PATCH
}