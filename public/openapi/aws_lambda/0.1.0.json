{
  "openapi": "3.0.0",
  "info": {
    "version": "2015-03-31",
    "x-release": "v4",
    "title": "AWS Lambda",
    "description": "<fullname>Lambda</fullname> <p> <b>Overview</b> </p> <p>This is the <i>Lambda API Reference</i>. The Lambda Developer Guide provides additional information. For the service overview, see <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/welcome.html\">What is Lambda</a>, and for information about how the service works, see <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/lambda-introduction.html\">Lambda: How it Works</a> in the <b>Lambda Developer Guide</b>.</p>",
    "x-logo": {
      "url": "https://api.apis.guru/v2/cache/logo/https_twitter.com_awscloud_profile_image.png",
      "backgroundColor": "#FFFFFF"
    },
    "termsOfService": "https://aws.amazon.com/service-terms/",
    "contact": {
      "name": "Mike Ralphson",
      "email": "mike.ralphson@gmail.com",
      "url": "https://github.com/mermade/aws2openapi",
      "x-twitter": "PermittedSoc"
    },
    "license": {
      "name": "Apache 2.0 License",
      "url": "http://www.apache.org/licenses/"
    },
    "x-providerName": "amazonaws.com",
    "x-serviceName": "lambda",
    "x-origin": [
      {
        "contentType": "application/json",
        "url": "https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/lambda-2015-03-31.normal.json",
        "converter": {
          "url": "https://github.com/mermade/aws2openapi",
          "version": "1.0.0"
        },
        "x-apisguru-driver": "external"
      }
    ],
    "x-apiClientRegistration": {
      "url": "https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct"
    },
    "x-apisguru-categories": [
      "cloud"
    ],
    "x-preferred": true
  },
  "externalDocs": {
    "description": "Amazon Web Services documentation",
    "url": "https://docs.aws.amazon.com/lambda/"
  },
  "servers": [
    {
      "url": "https://lambda.{region}.amazonaws.com",
      "variables": {
        "region": {
          "description": "The AWS region",
          "enum": [
            "us-east-1",
            "us-east-2",
            "us-west-1",
            "us-west-2",
            "us-gov-west-1",
            "us-gov-east-1",
            "ca-central-1",
            "eu-north-1",
            "eu-west-1",
            "eu-west-2",
            "eu-west-3",
            "eu-central-1",
            "eu-south-1",
            "af-south-1",
            "ap-northeast-1",
            "ap-northeast-2",
            "ap-northeast-3",
            "ap-southeast-1",
            "ap-southeast-2",
            "ap-east-1",
            "ap-south-1",
            "sa-east-1",
            "me-south-1"
          ],
          "default": "us-east-1"
        }
      },
      "description": "The AWS Lambda multi-region endpoint"
    }
  ],
  "x-hasEquivalentPaths": true,
  "paths": {
    "/2015-03-31/functions/": {
      "get": {
        "operationId": "ListFunctions",
        "description": "<p>Returns a list of Lambda functions, with the version-specific configuration of each. Lambda returns up to 50 functions per call.</p> <p>Set <code>FunctionVersion</code> to <code>ALL</code> to include all published versions of each function in addition to the unpublished version. </p> <note> <p>The <code>ListFunctions</code> action returns a subset of the <a>FunctionConfiguration</a> fields. To get the additional fields (State, StateReasonCode, StateReason, LastUpdateStatus, LastUpdateStatusReason, LastUpdateStatusReasonCode) for a function or version, use <a>GetFunction</a>.</p> </note>",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListFunctionsResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "MasterRegion",
            "in": "query",
            "required": false,
            "description": "For Lambda@Edge functions, the Amazon Web Services Region of the master function. For example, <code>us-east-1</code> filters the list of functions to only include Lambda@Edge functions replicated from a master function in US East (N. Virginia). If specified, you must set <code>FunctionVersion</code> to <code>ALL</code>.",
            "schema": {
              "type": "string",
              "pattern": "ALL|[a-z]{2}(-gov)?-[a-z]+-\\d{1}"
            }
          },
          {
            "name": "FunctionVersion",
            "in": "query",
            "required": false,
            "description": "Set to <code>ALL</code> to include entries for all published versions of each function.",
            "schema": {
              "type": "string",
              "enum": [
                "ALL"
              ]
            }
          },
          {
            "name": "Marker",
            "in": "query",
            "required": false,
            "description": "Specify the pagination token that's returned by a previous request to retrieve the next page of results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "MaxItems",
            "in": "query",
            "required": false,
            "description": "The maximum number of functions to return in the response. Note that <code>ListFunctions</code> returns a maximum of 50 items in each response, even if you set the number higher.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 10000
            }
          }
        ]
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ]
    }
  },
  "components": {
    "parameters": {
      "X-Amz-Content-Sha256": {
        "name": "X-Amz-Content-Sha256",
        "in": "header",
        "schema": {
          "type": "string"
        },
        "required": false
      },
      "X-Amz-Date": {
        "name": "X-Amz-Date",
        "in": "header",
        "schema": {
          "type": "string"
        },
        "required": false
      },
      "X-Amz-Algorithm": {
        "name": "X-Amz-Algorithm",
        "in": "header",
        "schema": {
          "type": "string"
        },
        "required": false
      },
      "X-Amz-Credential": {
        "name": "X-Amz-Credential",
        "in": "header",
        "schema": {
          "type": "string"
        },
        "required": false
      },
      "X-Amz-Security-Token": {
        "name": "X-Amz-Security-Token",
        "in": "header",
        "schema": {
          "type": "string"
        },
        "required": false
      },
      "X-Amz-Signature": {
        "name": "X-Amz-Signature",
        "in": "header",
        "schema": {
          "type": "string"
        },
        "required": false
      },
      "X-Amz-SignedHeaders": {
        "name": "X-Amz-SignedHeaders",
        "in": "header",
        "schema": {
          "type": "string"
        },
        "required": false
      }
    },
    "schemas": {
      "ListFunctionsResponse": {
        "type": "object",
        "properties": {
          "NextMarker": {
            "type": "string",
            "description": "The pagination token that's included if more results are available."
          },
          "Functions": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "FunctionName": {
                  "type": "string",
                  "pattern": "(arn:(aws[a-zA-Z-]*)?:lambda:)?([a-z]{2}(-gov)?-[a-z]+-\\d{1}:)?(\\d{12}:)?(function:)?([a-zA-Z0-9-_]+)(:(\\$LATEST|[a-zA-Z0-9-_]+))?",
                  "minLength": 1,
                  "maxLength": 140,
                  "description": "The name of the function."
                },
                "FunctionArn": {
                  "type": "string",
                  "pattern": "arn:(aws[a-zA-Z-]*)?:lambda:[a-z]{2}(-gov)?-[a-z]+-\\d{1}:\\d{12}:function:[a-zA-Z0-9-_]+(:(\\$LATEST|[a-zA-Z0-9-_]+))?",
                  "description": "The function's Amazon Resource Name (ARN)."
                },
                "Runtime": {
                  "type": "string",
                  "enum": [
                    "nodejs",
                    "nodejs4.3",
                    "nodejs6.10",
                    "nodejs8.10",
                    "nodejs10.x",
                    "nodejs12.x",
                    "nodejs14.x",
                    "java8",
                    "java8.al2",
                    "java11",
                    "python2.7",
                    "python3.6",
                    "python3.7",
                    "python3.8",
                    "python3.9",
                    "dotnetcore1.0",
                    "dotnetcore2.0",
                    "dotnetcore2.1",
                    "dotnetcore3.1",
                    "nodejs4.3-edge",
                    "go1.x",
                    "ruby2.5",
                    "ruby2.7",
                    "provided",
                    "provided.al2"
                  ],
                  "description": "The runtime environment for the Lambda function."
                },
                "Role": {
                  "type": "string",
                  "pattern": "arn:(aws[a-zA-Z-]*)?:iam::\\d{12}:role/?[a-zA-Z_0-9+=,.@\\-_/]+",
                  "description": "The function's execution role."
                },
                "Handler": {
                  "type": "string",
                  "pattern": "[^\\s]+",
                  "maxLength": 128,
                  "description": "The function that Lambda calls to begin executing your function."
                },
                "CodeSize": {
                  "type": "integer",
                  "description": "The size of the function's deployment package, in bytes."
                },
                "Description": {
                  "type": "string",
                  "minLength": 0,
                  "maxLength": 256,
                  "description": "The function's description."

                },
                "Timeout": {
                  "type": "integer",
                  "minimum": 1,
                  "description": "The amount of time in seconds that Lambda allows a function to run before stopping it."
                },
                "MemorySize": {
                  "type": "integer",
                  "minimum": 128,
                  "maximum": 10240,
                  "description": "The amount of memory available to the function at runtime. "
                },
                "LastModified": {
                  "type": "string",
                  "description": "The date and time that the function was last updated, in <a href=\"https://www.w3.org/TR/NOTE-datetime\">ISO-8601 format</a> (YYYY-MM-DDThh:mm:ss.sTZD)."
                },
                "CodeSha256": {
                  "type": "string",
                  "description": "The SHA256 hash of the function's deployment package."
                },
                "Version": {
                  "type": "string",
                  "pattern": "(\\$LATEST|[0-9]+)",
                  "minLength": 1,
                  "maxLength": 1024,
                  "description": "The version of the Lambda function."
                },
                "VpcConfig": {
                  "type": "object",
                  "properties": {
                    "SubnetIds": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "A list of VPC subnet IDs."
                    },
                    "SecurityGroupIds": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "A list of VPC security groups IDs."
                    },
                    "VpcId": {
                      "type": "string",
                      "description": "The ID of the VPC."
                    }
                  },
                  "description": "The function's networking configuration."
                },
                "DeadLetterConfig": {
                  "type": "object",
                  "properties": {
                    "TargetArn": {
                      "type": "string",
                      "pattern": "(arn:(aws[a-zA-Z-]*)?:[a-z0-9-.]+:.*)|()",
                      "description": "The Amazon Resource Name (ARN) of an Amazon SQS queue or Amazon SNS topic."
                    }
                  },
                  "description": "The function's dead letter queue."
                },
                "Environment": {
                  "type": "object",
                  "properties": {
                    "Variables": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string",
                        "format": "password"
                      },
                      "description": "Environment variable key-value pairs."
                    },
                    "Error": {
                      "type": "object",
                      "properties": {
                        "ErrorCode": {
                          "type": "string",
                          "description": "The error code."
                        },
                        "Message": {
                          "type": "string",
                          "format": "password",
                          "description": "The error message."
                        }
                      },
                      "description": "Error messages for environment variables that couldn't be applied."
                    }
                  },
                  "description": "The function's <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-envvars.html\">environment variables</a>."
                },
                "KMSKeyArn": {
                  "type": "string",
                  "pattern": "(arn:(aws[a-zA-Z-]*)?:[a-z0-9-.]+:.*)|()",
                  "description": "The KMS key that's used to encrypt the function's environment variables. This key is only returned if you've configured a customer managed CMK."
                },
                "TracingConfig": {
                  "type": "object",
                  "properties": {
                    "Mode": {
                      "type": "string",
                      "enum": [
                        "Active",
                        "PassThrough"
                      ],
                      "description": "The tracing mode."
                    }
                  },
                  "description": "The function's X-Ray tracing configuration."
                },
                "MasterArn": {
                  "type": "string",
                  "pattern": "arn:(aws[a-zA-Z-]*)?:lambda:[a-z]{2}(-gov)?-[a-z]+-\\d{1}:\\d{12}:function:[a-zA-Z0-9-_]+(:(\\$LATEST|[a-zA-Z0-9-_]+))?",
                  "description": "For Lambda@Edge functions, the ARN of the master function"
                },
                "RevisionId": {
                  "type": "string",
                  "description": "The latest updated revision of the function or alias."
                },
                "Layers": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "Arn": {
                        "type": "string",
                        "pattern": "arn:[a-zA-Z0-9-]+:lambda:[a-zA-Z0-9-]+:\\d{12}:layer:[a-zA-Z0-9-_]+:[0-9]+",
                        "minLength": 1,
                        "maxLength": 140,
                        "description": "The Amazon Resource Name (ARN) of the function layer."
                      },
                      "CodeSize": {
                        "type": "integer",
                        "description": "The size of the layer archive in bytes."
                      },
                      "SigningProfileVersionArn": {
                        "type": "string",
                        "pattern": "arn:(aws[a-zA-Z0-9-]*):([a-zA-Z0-9\\-])+:([a-z]{2}(-gov)?-[a-z]+-\\d{1})?:(\\d{12})?:(.*)",
                        "description": "The Amazon Resource Name (ARN) for a signing profile version."
                      },
                      "SigningJobArn": {
                        "type": "string",
                        "pattern": "arn:(aws[a-zA-Z0-9-]*):([a-zA-Z0-9\\-])+:([a-z]{2}(-gov)?-[a-z]+-\\d{1})?:(\\d{12})?:(.*)",
                        "description": "The Amazon Resource Name (ARN) of a signing job."
                      }
                    }
                  },
                  "description": "The function's <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html\"> layers</a>."
                },
                "State": {
                  "type": "string",
                  "enum": [
                    "Pending",
                    "Active",
                    "Inactive",
                    "Failed"
                  ],
                  "description": "The current state of the function. When the state is <code>Inactive</code>, you can reactivate the function by invoking it."
                },
                "StateReason": {
                  "type": "string",
                  "description": "The reason for the function's current state."
                },
                "StateReasonCode": {
                  "type": "string",
                  "enum": [
                    "Idle",
                    "Creating",
                    "Restoring",
                    "EniLimitExceeded",
                    "InsufficientRolePermissions",
                    "InvalidConfiguration",
                    "InternalError",
                    "SubnetOutOfIPAddresses",
                    "InvalidSubnet",
                    "InvalidSecurityGroup",
                    "ImageDeleted",
                    "ImageAccessDenied",
                    "InvalidImage"
                  ],
                  "description": "The reason code for the function's current state. When the code is <code>Creating</code>, you can't invoke or modify the function."
                },
                "LastUpdateStatus": {
                  "type": "string",
                  "enum": [
                    "Successful",
                    "Failed",
                    "InProgress"
                  ],
                  "description": "The status of the last update that was performed on the function. This is first set to <code>Successful</code> after function creation completes."
                },
                "LastUpdateStatusReason": {
                  "type": "string",
                  "description": "The reason for the last update that was performed on the function."
                },
                "LastUpdateStatusReasonCode": {
                  "type": "string",
                  "enum": [
                    "EniLimitExceeded",
                    "InsufficientRolePermissions",
                    "InvalidConfiguration",
                    "InternalError",
                    "SubnetOutOfIPAddresses",
                    "InvalidSubnet",
                    "InvalidSecurityGroup",
                    "ImageDeleted",
                    "ImageAccessDenied",
                    "InvalidImage"
                  ],
                  "description": "The reason code for the last update that was performed on the function."
                },
                "FileSystemConfigs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "Arn",
                      "LocalMountPath"
                    ],
                    "properties": {
                      "Arn": {
                        "type": "string",
                        "pattern": "arn:aws[a-zA-Z-]*:elasticfilesystem:[a-z]{2}((-gov)|(-iso(b?)))?-[a-z]+-\\d{1}:\\d{12}:access-point/fsap-[a-f0-9]{17}",
                        "maxLength": 200,
                        "description": "The Amazon Resource Name (ARN) of the Amazon EFS access point that provides access to the file system."
                      },
                      "LocalMountPath": {
                        "type": "string",
                        "pattern": "^/mnt/[a-zA-Z0-9-_.]+$",
                        "maxLength": 160,
                        "description": "The path where the function can access the file system, starting with <code>/mnt/</code>."
                      }
                    }
                  },
                  "maxItems": 1,
                  "description": "Connection settings for an <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-filesystem.html\">Amazon EFS file system</a>."
                },
                "PackageType": {
                  "type": "string",
                  "enum": [
                    "Zip",
                    "Image"
                  ],
                  "description": "The type of deployment package. Set to <code>Image</code> for container image and set <code>Zip</code> for .zip file archive."
                },
                "ImageConfigResponse": {
                  "type": "object",
                  "properties": {
                    "ImageConfig": {
                      "type": "object",
                      "properties": {
                        "EntryPoint": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "maxItems": 1500,
                          "description": "Specifies the entry point to their application, which is typically the location of the runtime executable."
                        },
                        "Command": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "maxItems": 1500,
                          "description": "Specifies parameters that you want to pass in with ENTRYPOINT. "
                        },
                        "WorkingDirectory": {
                          "type": "string",
                          "maxLength": 1000,
                          "description": "Specifies the working directory."
                        }
                      },
                      "description": "Configuration values that override the container image Dockerfile."
                    },
                    "Error": {
                      "type": "object",
                      "properties": {
                        "ErrorCode": {
                          "type": "string",
                          "description": "Error code."
                        },
                        "Message": {
                          "type": "string",
                          "format": "password",
                          "description": "Error message."
                        }
                      },
                      "description": "Error response to GetFunctionConfiguration."
                    }
                  },
                  "description": "The function's image configuration values."
                },
                "SigningProfileVersionArn": {
                  "type": "string",
                  "pattern": "arn:(aws[a-zA-Z0-9-]*):([a-zA-Z0-9\\-])+:([a-z]{2}(-gov)?-[a-z]+-\\d{1})?:(\\d{12})?:(.*)",
                  "description": "The ARN of the signing profile version."
                },
                "SigningJobArn": {
                  "type": "string",
                  "pattern": "arn:(aws[a-zA-Z0-9-]*):([a-zA-Z0-9\\-])+:([a-z]{2}(-gov)?-[a-z]+-\\d{1})?:(\\d{12})?:(.*)",
                  "description": "The ARN of the signing job."
                }
              }
            }
          }
        }
      }
    }
  }
}