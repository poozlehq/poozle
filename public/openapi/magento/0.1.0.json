{
  "openapi": "3.0.0",
  "servers": [
    {
      "url": "https://example.com/rest/default"
    }
  ],
  "x-hasEquivalentPaths": true,
  "info": {
    "description": "Magento Commerce is the leading provider of open omnichannel innovation.",
    "title": "Magento B2B",
    "version": "2.2.10",
    "x-apisguru-categories": [
      "ecommerce"
    ],
    "x-logo": {
      "url": "https://api.apis.guru/v2/cache/logo/https_magento.com_sites_all_themes_mag_redesign_images_magento-logo.svg"
    },
    "x-origin": [
      {
        "format": "openapi",
        "url": "https://devdocs.magento.com/redoc/2.2/latest-2.2.schema.json",
        "version": "3.0"
      }
    ],
    "x-providerName": "magento.com"
  },
  "tags": [
    {
      "name": "addresses/{addressId}"
    },
    {
      "name": "amazon-billing-address/{amazonOrderReferenceId}"
    },
    {
      "name": "amazon-shipping-address/{amazonOrderReferenceId}"
    },
    {
      "name": "amazon/order-ref"
    },
    {
      "name": "analytics/link"
    },
    {
      "name": "attributeMetadata/customer"
    },
    {
      "name": "attributeMetadata/customer/attribute/{attributeCode}"
    },
    {
      "name": "attributeMetadata/customer/custom"
    },
    {
      "name": "attributeMetadata/customer/form/{formCode}"
    },
    {
      "name": "attributeMetadata/customerAddress"
    },
    {
      "name": "attributeMetadata/customerAddress/attribute/{attributeCode}"
    },
    {
      "name": "attributeMetadata/customerAddress/custom"
    },
    {
      "name": "attributeMetadata/customerAddress/form/{formCode}"
    },
    {
      "name": "bulk/{bulkUuid}/detailed-status"
    },
    {
      "name": "bulk/{bulkUuid}/operation-status/{status}"
    },
    {
      "name": "bulk/{bulkUuid}/status"
    },
    {
      "name": "bundle-products/{productSku}/children"
    },
    {
      "name": "bundle-products/{sku}/links/{id}"
    },
    {
      "name": "bundle-products/{sku}/links/{optionId}"
    },
    {
      "name": "bundle-products/{sku}/options/{optionId}"
    },
    {
      "name": "bundle-products/{sku}/options/{optionId}/children/{childSku}"
    },
    {
      "name": "bundle-products/{sku}/options/all"
    },
    {
      "name": "bundle-products/options/{optionId}"
    },
    {
      "name": "bundle-products/options/add"
    },
    {
      "name": "bundle-products/options/types"
    },
    {
      "name": "carts/"
    },
    {
      "name": "carts/{cartId}"
    },
    {
      "name": "carts/{cartId}/billing-address"
    },
    {
      "name": "carts/{cartId}/coupons"
    },
    {
      "name": "carts/{cartId}/coupons/{couponCode}"
    },
    {
      "name": "carts/{cartId}/estimate-shipping-methods"
    },
    {
      "name": "carts/{cartId}/estimate-shipping-methods-by-address-id"
    },
    {
      "name": "carts/{cartId}/gift-message"
    },
    {
      "name": "carts/{cartId}/gift-message/{itemId}"
    },
    {
      "name": "carts/{cartId}/giftCards"
    },
    {
      "name": "carts/{cartId}/giftCards/{giftCardCode}"
    },
    {
      "name": "carts/{cartId}/items"
    },
    {
      "name": "carts/{cartId}/items/{itemId}"
    },
    {
      "name": "carts/{cartId}/order"
    },
    {
      "name": "carts/{cartId}/payment-methods"
    },
    {
      "name": "carts/{cartId}/selected-payment-method"
    },
    {
      "name": "carts/{cartId}/shipping-information"
    },
    {
      "name": "carts/{cartId}/shipping-methods"
    },
    {
      "name": "carts/{cartId}/totals"
    },
    {
      "name": "carts/{cartId}/totals-information"
    },
    {
      "name": "carts/{quoteId}/giftCards"
    },
    {
      "name": "carts/{quoteId}/items"
    },
    {
      "name": "carts/guest-carts/{cartId}/checkGiftCard/{giftCardCode}"
    },
    {
      "name": "carts/guest-carts/{cartId}/giftCards"
    },
    {
      "name": "carts/guest-carts/{cartId}/giftCards/{giftCardCode}"
    },
    {
      "name": "carts/licence"
    },
    {
      "name": "carts/mine"
    },
    {
      "name": "carts/mine/balance/apply"
    },
    {
      "name": "carts/mine/balance/unapply"
    },
    {
      "name": "carts/mine/billing-address"
    },
    {
      "name": "carts/mine/checkGiftCard/{giftCardCode}"
    },
    {
      "name": "carts/mine/checkout-fields"
    },
    {
      "name": "carts/mine/collect-totals"
    },
    {
      "name": "carts/mine/collection-point/search-request"
    },
    {
      "name": "carts/mine/collection-point/search-result"
    },
    {
      "name": "carts/mine/collection-point/select"
    },
    {
      "name": "carts/mine/coupons"
    },
    {
      "name": "carts/mine/coupons/{couponCode}"
    },
    {
      "name": "carts/mine/delivery-option"
    },
    {
      "name": "carts/mine/estimate-shipping-methods"
    },
    {
      "name": "carts/mine/estimate-shipping-methods-by-address-id"
    },
    {
      "name": "carts/mine/gift-message"
    },
    {
      "name": "carts/mine/gift-message/{itemId}"
    },
    {
      "name": "carts/mine/giftCards"
    },
    {
      "name": "carts/mine/giftCards/{giftCardCode}"
    },
    {
      "name": "carts/mine/items"
    },
    {
      "name": "carts/mine/items/{itemId}"
    },
    {
      "name": "carts/mine/order"
    },
    {
      "name": "carts/mine/payment-information"
    },
    {
      "name": "carts/mine/payment-methods"
    },
    {
      "name": "carts/mine/selected-payment-method"
    },
    {
      "name": "carts/mine/set-payment-information"
    },
    {
      "name": "carts/mine/shipping-information"
    },
    {
      "name": "carts/mine/shipping-methods"
    },
    {
      "name": "carts/mine/totals"
    },
    {
      "name": "carts/mine/totals-information"
    },
    {
      "name": "carts/search"
    },
    {
      "name": "categories"
    },
    {
      "name": "categories/{categoryId}"
    },
    {
      "name": "categories/{categoryId}/move"
    },
    {
      "name": "categories/{categoryId}/products"
    },
    {
      "name": "categories/{categoryId}/products/{sku}"
    },
    {
      "name": "categories/{id}"
    },
    {
      "name": "categories/attributes"
    },
    {
      "name": "categories/attributes/{attributeCode}"
    },
    {
      "name": "categories/attributes/{attributeCode}/options"
    },
    {
      "name": "categories/list"
    },
    {
      "name": "cmsBlock"
    },
    {
      "name": "cmsBlock/{blockId}"
    },
    {
      "name": "cmsBlock/{id}"
    },
    {
      "name": "cmsBlock/search"
    },
    {
      "name": "cmsPage"
    },
    {
      "name": "cmsPage/{id}"
    },
    {
      "name": "cmsPage/{pageId}"
    },
    {
      "name": "cmsPage/search"
    },
    {
      "name": "company/"
    },
    {
      "name": "company/{companyId}"
    },
    {
      "name": "company/assignRoles"
    },
    {
      "name": "company/role/"
    },
    {
      "name": "company/role/{id}"
    },
    {
      "name": "company/role/{roleId}"
    },
    {
      "name": "company/role/{roleId}/users"
    },
    {
      "name": "companyCredits/"
    },
    {
      "name": "companyCredits/{creditId}"
    },
    {
      "name": "companyCredits/{creditId}/decreaseBalance"
    },
    {
      "name": "companyCredits/{creditId}/increaseBalance"
    },
    {
      "name": "companyCredits/{id}"
    },
    {
      "name": "companyCredits/company/{companyId}"
    },
    {
      "name": "companyCredits/history"
    },
    {
      "name": "companyCredits/history/{historyId}"
    },
    {
      "name": "configurable-products/{sku}/child"
    },
    {
      "name": "configurable-products/{sku}/children"
    },
    {
      "name": "configurable-products/{sku}/children/{childSku}"
    },
    {
      "name": "configurable-products/{sku}/options"
    },
    {
      "name": "configurable-products/{sku}/options/{id}"
    },
    {
      "name": "configurable-products/{sku}/options/all"
    },
    {
      "name": "configurable-products/variation"
    },
    {
      "name": "coupons"
    },
    {
      "name": "coupons/{couponId}"
    },
    {
      "name": "coupons/deleteByCodes"
    },
    {
      "name": "coupons/deleteByIds"
    },
    {
      "name": "coupons/generate"
    },
    {
      "name": "coupons/search"
    },
    {
      "name": "creditmemo"
    },
    {
      "name": "creditmemo/{id}"
    },
    {
      "name": "creditmemo/{id}/comments"
    },
    {
      "name": "creditmemo/{id}/emails"
    },
    {
      "name": "creditmemo/refund"
    },
    {
      "name": "creditmemos"
    },
    {
      "name": "customerGroups"
    },
    {
      "name": "customerGroups/{id}"
    },
    {
      "name": "customerGroups/{id}/permissions"
    },
    {
      "name": "customerGroups/default"
    },
    {
      "name": "customerGroups/default/{id}"
    },
    {
      "name": "customerGroups/default/{storeId}"
    },
    {
      "name": "customerGroups/search"
    },
    {
      "name": "customers"
    },
    {
      "name": "customers/{customerId}"
    },
    {
      "name": "customers/{customerId}/billingAddress"
    },
    {
      "name": "customers/{customerId}/carts"
    },
    {
      "name": "customers/{customerId}/confirm"
    },
    {
      "name": "customers/{customerId}/password/resetLinkToken/{resetPasswordLinkToken}"
    },
    {
      "name": "customers/{customerId}/permissions/readonly"
    },
    {
      "name": "customers/{customerId}/shippingAddress"
    },
    {
      "name": "customers/{email}/activate"
    },
    {
      "name": "customers/addresses/{addressId}"
    },
    {
      "name": "customers/confirm"
    },
    {
      "name": "customers/isEmailAvailable"
    },
    {
      "name": "customers/me"
    },
    {
      "name": "customers/me/activate"
    },
    {
      "name": "customers/me/billingAddress"
    },
    {
      "name": "customers/me/password"
    },
    {
      "name": "customers/me/shippingAddress"
    },
    {
      "name": "customers/password"
    },
    {
      "name": "customers/resetPassword"
    },
    {
      "name": "customers/search"
    },
    {
      "name": "customers/validate"
    },
    {
      "name": "directory/countries"
    },
    {
      "name": "directory/countries/{countryId}"
    },
    {
      "name": "directory/currency"
    },
    {
      "name": "eav/attribute-sets"
    },
    {
      "name": "eav/attribute-sets/{attributeSetId}"
    },
    {
      "name": "eav/attribute-sets/list"
    },
    {
      "name": "gift-wrappings"
    },
    {
      "name": "gift-wrappings/{id}"
    },
    {
      "name": "gift-wrappings/{wrappingId}"
    },
    {
      "name": "giftregistry/mine/estimate-shipping-methods"
    },
    {
      "name": "guest-carts"
    },
    {
      "name": "guest-carts/{cartId}"
    },
    {
      "name": "guest-carts/{cartId}/billing-address"
    },
    {
      "name": "guest-carts/{cartId}/checkout-fields"
    },
    {
      "name": "guest-carts/{cartId}/collect-totals"
    },
    {
      "name": "guest-carts/{cartId}/collection-point/search-request"
    },
    {
      "name": "guest-carts/{cartId}/collection-point/search-result"
    },
    {
      "name": "guest-carts/{cartId}/collection-point/select"
    },
    {
      "name": "guest-carts/{cartId}/coupons"
    },
    {
      "name": "guest-carts/{cartId}/coupons/{couponCode}"
    },
    {
      "name": "guest-carts/{cartId}/delivery-option"
    },
    {
      "name": "guest-carts/{cartId}/estimate-shipping-methods"
    },
    {
      "name": "guest-carts/{cartId}/gift-message"
    },
    {
      "name": "guest-carts/{cartId}/gift-message/{itemId}"
    },
    {
      "name": "guest-carts/{cartId}/items"
    },
    {
      "name": "guest-carts/{cartId}/items/{itemId}"
    },
    {
      "name": "guest-carts/{cartId}/order"
    },
    {
      "name": "guest-carts/{cartId}/payment-information"
    },
    {
      "name": "guest-carts/{cartId}/payment-methods"
    },
    {
      "name": "guest-carts/{cartId}/selected-payment-method"
    },
    {
      "name": "guest-carts/{cartId}/set-payment-information"
    },
    {
      "name": "guest-carts/{cartId}/shipping-information"
    },
    {
      "name": "guest-carts/{cartId}/shipping-methods"
    },
    {
      "name": "guest-carts/{cartId}/totals"
    },
    {
      "name": "guest-carts/{cartId}/totals-information"
    },
    {
      "name": "guest-giftregistry/{cartId}/estimate-shipping-methods"
    },
    {
      "name": "hierarchy/{id}"
    },
    {
      "name": "hierarchy/move/{id}"
    },
    {
      "name": "integration/admin/token"
    },
    {
      "name": "integration/customer/token"
    },
    {
      "name": "invoice/{invoiceId}/refund"
    },
    {
      "name": "invoices"
    },
    {
      "name": "invoices/"
    },
    {
      "name": "invoices/{id}"
    },
    {
      "name": "invoices/{id}/capture"
    },
    {
      "name": "invoices/{id}/comments"
    },
    {
      "name": "invoices/{id}/emails"
    },
    {
      "name": "invoices/{id}/void"
    },
    {
      "name": "invoices/comments"
    },
    {
      "name": "modules"
    },
    {
      "name": "negotiable-carts/{cartId}/billing-address"
    },
    {
      "name": "negotiable-carts/{cartId}/coupons"
    },
    {
      "name": "negotiable-carts/{cartId}/coupons/{couponCode}"
    },
    {
      "name": "negotiable-carts/{cartId}/estimate-shipping-methods"
    },
    {
      "name": "negotiable-carts/{cartId}/estimate-shipping-methods-by-address-id"
    },
    {
      "name": "negotiable-carts/{cartId}/giftCards"
    },
    {
      "name": "negotiable-carts/{cartId}/giftCards/{giftCardCode}"
    },
    {
      "name": "negotiable-carts/{cartId}/payment-information"
    },
    {
      "name": "negotiable-carts/{cartId}/set-payment-information"
    },
    {
      "name": "negotiable-carts/{cartId}/shipping-information"
    },
    {
      "name": "negotiable-carts/{cartId}/totals"
    },
    {
      "name": "negotiableQuote/{quoteId}"
    },
    {
      "name": "negotiableQuote/{quoteId}/comments"
    },
    {
      "name": "negotiableQuote/{quoteId}/shippingMethod"
    },
    {
      "name": "negotiableQuote/attachmentContent"
    },
    {
      "name": "negotiableQuote/decline"
    },
    {
      "name": "negotiableQuote/pricesUpdated"
    },
    {
      "name": "negotiableQuote/request"
    },
    {
      "name": "negotiableQuote/submitToCustomer"
    },
    {
      "name": "order/{orderId}/invoice"
    },
    {
      "name": "order/{orderId}/refund"
    },
    {
      "name": "order/{orderId}/ship"
    },
    {
      "name": "orders"
    },
    {
      "name": "orders/"
    },
    {
      "name": "orders/{id}"
    },
    {
      "name": "orders/{id}/cancel"
    },
    {
      "name": "orders/{id}/comments"
    },
    {
      "name": "orders/{id}/emails"
    },
    {
      "name": "orders/{id}/hold"
    },
    {
      "name": "orders/{id}/statuses"
    },
    {
      "name": "orders/{id}/unhold"
    },
    {
      "name": "orders/{parent_id}"
    },
    {
      "name": "orders/create"
    },
    {
      "name": "orders/items"
    },
    {
      "name": "orders/items/{id}"
    },
    {
      "name": "products"
    },
    {
      "name": "products-render-info"
    },
    {
      "name": "products/{productSku}/stockItems/{itemId}"
    },
    {
      "name": "products/{sku}"
    },
    {
      "name": "products/{sku}/downloadable-links"
    },
    {
      "name": "products/{sku}/downloadable-links/{id}"
    },
    {
      "name": "products/{sku}/downloadable-links/samples"
    },
    {
      "name": "products/{sku}/downloadable-links/samples/{id}"
    },
    {
      "name": "products/{sku}/group-prices/{customerGroupId}/tiers"
    },
    {
      "name": "products/{sku}/group-prices/{customerGroupId}/tiers/{qty}"
    },
    {
      "name": "products/{sku}/group-prices/{customerGroupId}/tiers/{qty}/price/{price}"
    },
    {
      "name": "products/{sku}/links"
    },
    {
      "name": "products/{sku}/links/{type}"
    },
    {
      "name": "products/{sku}/links/{type}/{linkedProductSku}"
    },
    {
      "name": "products/{sku}/media"
    },
    {
      "name": "products/{sku}/media/{entryId}"
    },
    {
      "name": "products/{sku}/options"
    },
    {
      "name": "products/{sku}/options/{optionId}"
    },
    {
      "name": "products/{sku}/websites"
    },
    {
      "name": "products/{sku}/websites/{websiteId}"
    },
    {
      "name": "products/attribute-sets"
    },
    {
      "name": "products/attribute-sets/{attributeSetId}"
    },
    {
      "name": "products/attribute-sets/{attributeSetId}/attributes"
    },
    {
      "name": "products/attribute-sets/{attributeSetId}/attributes/{attributeCode}"
    },
    {
      "name": "products/attribute-sets/{attributeSetId}/groups"
    },
    {
      "name": "products/attribute-sets/attributes"
    },
    {
      "name": "products/attribute-sets/groups"
    },
    {
      "name": "products/attribute-sets/groups/{groupId}"
    },
    {
      "name": "products/attribute-sets/groups/list"
    },
    {
      "name": "products/attribute-sets/sets/list"
    },
    {
      "name": "products/attributes"
    },
    {
      "name": "products/attributes/{attributeCode}"
    },
    {
      "name": "products/attributes/{attributeCode}/options"
    },
    {
      "name": "products/attributes/{attributeCode}/options/{optionId}"
    },
    {
      "name": "products/attributes/types"
    },
    {
      "name": "products/base-prices"
    },
    {
      "name": "products/base-prices-information"
    },
    {
      "name": "products/cost"
    },
    {
      "name": "products/cost-delete"
    },
    {
      "name": "products/cost-information"
    },
    {
      "name": "products/downloadable-links/{id}"
    },
    {
      "name": "products/downloadable-links/samples/{id}"
    },
    {
      "name": "products/links/{type}/attributes"
    },
    {
      "name": "products/links/types"
    },
    {
      "name": "products/media/types/{attributeSetName}"
    },
    {
      "name": "products/options"
    },
    {
      "name": "products/options/{optionId}"
    },
    {
      "name": "products/options/types"
    },
    {
      "name": "products/special-price"
    },
    {
      "name": "products/special-price-delete"
    },
    {
      "name": "products/special-price-information"
    },
    {
      "name": "products/tier-prices"
    },
    {
      "name": "products/tier-prices-delete"
    },
    {
      "name": "products/tier-prices-information"
    },
    {
      "name": "products/types"
    },
    {
      "name": "requisition_lists"
    },
    {
      "name": "returns"
    },
    {
      "name": "returns/{id}"
    },
    {
      "name": "returns/{id}/comments"
    },
    {
      "name": "returns/{id}/labels"
    },
    {
      "name": "returns/{id}/tracking-numbers"
    },
    {
      "name": "returns/{id}/tracking-numbers/{trackId}"
    },
    {
      "name": "returnsAttributeMetadata"
    },
    {
      "name": "returnsAttributeMetadata/{attributeCode}"
    },
    {
      "name": "returnsAttributeMetadata/custom"
    },
    {
      "name": "returnsAttributeMetadata/form/{formCode}"
    },
    {
      "name": "reward/mine/use-reward"
    },
    {
      "name": "salesRules"
    },
    {
      "name": "salesRules/{ruleId}"
    },
    {
      "name": "salesRules/search"
    },
    {
      "name": "search"
    },
    {
      "name": "sharedCatalog"
    },
    {
      "name": "sharedCatalog/"
    },
    {
      "name": "sharedCatalog/{id}"
    },
    {
      "name": "sharedCatalog/{id}/assignCategories"
    },
    {
      "name": "sharedCatalog/{id}/assignProducts"
    },
    {
      "name": "sharedCatalog/{id}/categories"
    },
    {
      "name": "sharedCatalog/{id}/products"
    },
    {
      "name": "sharedCatalog/{id}/unassignCategories"
    },
    {
      "name": "sharedCatalog/{id}/unassignProducts"
    },
    {
      "name": "sharedCatalog/{sharedCatalogId}"
    },
    {
      "name": "sharedCatalog/{sharedCatalogId}/assignCompanies"
    },
    {
      "name": "sharedCatalog/{sharedCatalogId}/companies"
    },
    {
      "name": "sharedCatalog/{sharedCatalogId}/unassignCompanies"
    },
    {
      "name": "shipment/"
    },
    {
      "name": "shipment/{id}"
    },
    {
      "name": "shipment/{id}/comments"
    },
    {
      "name": "shipment/{id}/emails"
    },
    {
      "name": "shipment/{id}/label"
    },
    {
      "name": "shipment/track"
    },
    {
      "name": "shipment/track/{id}"
    },
    {
      "name": "shipments"
    },
    {
      "name": "stockItems/{productSku}"
    },
    {
      "name": "stockItems/lowStock/"
    },
    {
      "name": "stockStatuses/{productSku}"
    },
    {
      "name": "store/storeConfigs"
    },
    {
      "name": "store/storeGroups"
    },
    {
      "name": "store/storeViews"
    },
    {
      "name": "store/websites"
    },
    {
      "name": "taxClasses"
    },
    {
      "name": "taxClasses/{classId}"
    },
    {
      "name": "taxClasses/{taxClassId}"
    },
    {
      "name": "taxClasses/search"
    },
    {
      "name": "taxRates"
    },
    {
      "name": "taxRates/{rateId}"
    },
    {
      "name": "taxRates/search"
    },
    {
      "name": "taxRules"
    },
    {
      "name": "taxRules/{ruleId}"
    },
    {
      "name": "taxRules/search"
    },
    {
      "name": "team/"
    },
    {
      "name": "team/{companyId}"
    },
    {
      "name": "team/{teamId}"
    },
    {
      "name": "temando/rma/{rmaId}/shipments"
    },
    {
      "name": "transactions"
    },
    {
      "name": "transactions/{id}"
    },
    {
      "name": "worldpay-guest-carts/{cartId}/payment-information"
    }
  ],
  "paths": {
    "/V1/addresses/{addressId}": {
      "delete": {
        "description": "Delete customer address by ID.",
        "operationId": "customerAddressRepositoryV1DeleteByIdDelete",
        "parameters": [
          {
            "in": "path",
            "name": "addressId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "true on success",
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "description": "true on success",
                  "type": "boolean"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Internal Server error"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "addresses/{addressId}",
        "tags": [
          "addresses/{addressId}"
        ]
      }
    },
    "/V1/amazon-billing-address/{amazonOrderReferenceId}": {
      "put": {
        "description": "",
        "operationId": "amazonPaymentAddressManagementV1GetBillingAddressPut",
        "parameters": [
          {
            "in": "path",
            "name": "amazonOrderReferenceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/amazonPaymentAddressManagementV1GetBillingAddressPutAmazonpaymentaddressmanagementv1getbillingaddressputbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "200 Success."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "amazon-billing-address/{amazonOrderReferenceId}",
        "tags": [
          "amazon-billing-address/{amazonOrderReferenceId}"
        ]
      }
    },
    "/V1/amazon-shipping-address/{amazonOrderReferenceId}": {
      "put": {
        "description": "",
        "operationId": "amazonPaymentAddressManagementV1GetShippingAddressPut",
        "parameters": [
          {
            "in": "path",
            "name": "amazonOrderReferenceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/amazonPaymentAddressManagementV1GetBillingAddressPutAmazonpaymentaddressmanagementv1getbillingaddressputbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "200 Success."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "amazon-shipping-address/{amazonOrderReferenceId}",
        "tags": [
          "amazon-shipping-address/{amazonOrderReferenceId}"
        ]
      }
    },
    "/V1/amazon/order-ref": {
      "delete": {
        "description": "",
        "operationId": "amazonPaymentOrderInformationManagementV1RemoveOrderReferenceDelete",
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "amazon/order-ref",
        "tags": [
          "amazon/order-ref"
        ]
      }
    },
    "/V1/analytics/link": {
      "get": {
        "description": "",
        "operationId": "analyticsLinkProviderV1GetGet",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/analytics-data-link-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/analytics-data-link-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "analytics/link",
        "tags": [
          "analytics/link"
        ]
      }
    },
    "/V1/attributeMetadata/customer": {
      "get": {
        "description": "Get all attribute metadata.",
        "operationId": "customerCustomerMetadataV1GetAllAttributesMetadataGet",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/customer-data-attribute-metadata-interface"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/customer-data-attribute-metadata-interface"
                  },
                  "type": "array"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Internal Server error"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "attributeMetadata/customer",
        "tags": [
          "attributeMetadata/customer"
        ]
      }
    },
    "/V1/attributeMetadata/customer/attribute/{attributeCode}": {
      "get": {
        "description": "Retrieve attribute metadata.",
        "operationId": "customerCustomerMetadataV1GetAttributeMetadataGet",
        "parameters": [
          {
            "in": "path",
            "name": "attributeCode",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-attribute-metadata-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-attribute-metadata-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Internal Server error"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "attributeMetadata/customer/attribute/{attributeCode}",
        "tags": [
          "attributeMetadata/customer/attribute/{attributeCode}"
        ]
      }
    },
    "/V1/attributeMetadata/customer/custom": {
      "get": {
        "description": "Get custom attributes metadata for the given data interface.",
        "operationId": "customerCustomerMetadataV1GetCustomAttributesMetadataGet",
        "parameters": [
          {
            "in": "query",
            "name": "dataInterfaceName",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/customer-data-attribute-metadata-interface"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/customer-data-attribute-metadata-interface"
                  },
                  "type": "array"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Internal Server error"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "attributeMetadata/customer/custom",
        "tags": [
          "attributeMetadata/customer/custom"
        ]
      }
    },
    "/V1/attributeMetadata/customer/form/{formCode}": {
      "get": {
        "description": "Retrieve all attributes filtered by form code",
        "operationId": "customerCustomerMetadataV1GetAttributesGet",
        "parameters": [
          {
            "in": "path",
            "name": "formCode",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/customer-data-attribute-metadata-interface"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/customer-data-attribute-metadata-interface"
                  },
                  "type": "array"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Internal Server error"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "attributeMetadata/customer/form/{formCode}",
        "tags": [
          "attributeMetadata/customer/form/{formCode}"
        ]
      }
    },
    "/V1/attributeMetadata/customerAddress": {
      "get": {
        "description": "Get all attribute metadata.",
        "operationId": "customerAddressMetadataV1GetAllAttributesMetadataGet",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/customer-data-attribute-metadata-interface"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/customer-data-attribute-metadata-interface"
                  },
                  "type": "array"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Internal Server error"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "attributeMetadata/customerAddress",
        "tags": [
          "attributeMetadata/customerAddress"
        ]
      }
    },
    "/V1/attributeMetadata/customerAddress/attribute/{attributeCode}": {
      "get": {
        "description": "Retrieve attribute metadata.",
        "operationId": "customerAddressMetadataV1GetAttributeMetadataGet",
        "parameters": [
          {
            "in": "path",
            "name": "attributeCode",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-attribute-metadata-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-attribute-metadata-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Internal Server error"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "attributeMetadata/customerAddress/attribute/{attributeCode}",
        "tags": [
          "attributeMetadata/customerAddress/attribute/{attributeCode}"
        ]
      }
    },
    "/V1/attributeMetadata/customerAddress/custom": {
      "get": {
        "description": "Get custom attributes metadata for the given data interface.",
        "operationId": "customerAddressMetadataV1GetCustomAttributesMetadataGet",
        "parameters": [
          {
            "in": "query",
            "name": "dataInterfaceName",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/customer-data-attribute-metadata-interface"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/customer-data-attribute-metadata-interface"
                  },
                  "type": "array"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Internal Server error"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "attributeMetadata/customerAddress/custom",
        "tags": [
          "attributeMetadata/customerAddress/custom"
        ]
      }
    },
    "/V1/attributeMetadata/customerAddress/form/{formCode}": {
      "get": {
        "description": "Retrieve all attributes filtered by form code",
        "operationId": "customerAddressMetadataV1GetAttributesGet",
        "parameters": [
          {
            "in": "path",
            "name": "formCode",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/customer-data-attribute-metadata-interface"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/customer-data-attribute-metadata-interface"
                  },
                  "type": "array"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Internal Server error"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "attributeMetadata/customerAddress/form/{formCode}",
        "tags": [
          "attributeMetadata/customerAddress/form/{formCode}"
        ]
      }
    },
    "/V1/bulk/{bulkUuid}/detailed-status": {
      "get": {
        "description": "Get Bulk summary data with list of operations items full data.",
        "operationId": "asynchronousOperationsBulkStatusV1GetBulkDetailedStatusGet",
        "parameters": [
          {
            "in": "path",
            "name": "bulkUuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/asynchronous-operations-data-detailed-bulk-operations-status-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/asynchronous-operations-data-detailed-bulk-operations-status-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "bulk/{bulkUuid}/detailed-status",
        "tags": [
          "bulk/{bulkUuid}/detailed-status"
        ]
      }
    },
    "/V1/bulk/{bulkUuid}/operation-status/{status}": {
      "get": {
        "description": "Get operations count by bulk uuid and status.",
        "operationId": "asynchronousOperationsBulkStatusV1GetOperationsCountByBulkIdAndStatusGet",
        "parameters": [
          {
            "in": "path",
            "name": "bulkUuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "status",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "integer"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "bulk/{bulkUuid}/operation-status/{status}",
        "tags": [
          "bulk/{bulkUuid}/operation-status/{status}"
        ]
      }
    },
    "/V1/bulk/{bulkUuid}/status": {
      "get": {
        "description": "Get Bulk summary data with list of operations items short data.",
        "operationId": "asynchronousOperationsBulkStatusV1GetBulkShortStatusGet",
        "parameters": [
          {
            "in": "path",
            "name": "bulkUuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/asynchronous-operations-data-bulk-operations-status-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/asynchronous-operations-data-bulk-operations-status-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "bulk/{bulkUuid}/status",
        "tags": [
          "bulk/{bulkUuid}/status"
        ]
      }
    },
    "/V1/bundle-products/options/add": {
      "post": {
        "description": "Add new option for bundle product",
        "operationId": "bundleProductOptionManagementV1SavePost",
        "requestBody": {
          "$ref": "#/components/requestBodies/bundleProductOptionManagementV1SavePostBundleproductoptionmanagementv1savepostbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "integer"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "bundle-products/options/add",
        "tags": [
          "bundle-products/options/add"
        ]
      }
    },
    "/V1/bundle-products/options/types": {
      "get": {
        "description": "Get all types for options for bundle products",
        "operationId": "bundleProductOptionTypeListV1GetItemsGet",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/bundle-data-option-type-interface"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/bundle-data-option-type-interface"
                  },
                  "type": "array"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "bundle-products/options/types",
        "tags": [
          "bundle-products/options/types"
        ]
      }
    },
    "/V1/bundle-products/options/{optionId}": {
      "put": {
        "description": "Add new option for bundle product",
        "operationId": "bundleProductOptionManagementV1SavePut",
        "parameters": [
          {
            "in": "path",
            "name": "optionId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/bundleProductOptionManagementV1SavePostBundleproductoptionmanagementv1savepostbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "integer"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "bundle-products/options/{optionId}",
        "tags": [
          "bundle-products/options/{optionId}"
        ]
      }
    },
    "/V1/bundle-products/{productSku}/children": {
      "get": {
        "description": "Get all children for Bundle product",
        "operationId": "bundleProductLinkManagementV1GetChildrenGet",
        "parameters": [
          {
            "in": "path",
            "name": "productSku",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "optionId",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/bundle-data-link-interface"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/bundle-data-link-interface"
                  },
                  "type": "array"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "bundle-products/{productSku}/children",
        "tags": [
          "bundle-products/{productSku}/children"
        ]
      }
    },
    "/V1/bundle-products/{sku}/links/{id}": {
      "put": {
        "description": "",
        "operationId": "bundleProductLinkManagementV1SaveChildPut",
        "parameters": [
          {
            "in": "path",
            "name": "sku",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/bundleProductLinkManagementV1SaveChildPutBundleproductlinkmanagementv1savechildputbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "bundle-products/{sku}/links/{id}",
        "tags": [
          "bundle-products/{sku}/links/{id}"
        ]
      }
    },
    "/V1/bundle-products/{sku}/links/{optionId}": {
      "post": {
        "description": "Add child product to specified Bundle option by product sku",
        "operationId": "bundleProductLinkManagementV1AddChildByProductSkuPost",
        "parameters": [
          {
            "in": "path",
            "name": "sku",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "optionId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/bundleProductLinkManagementV1SaveChildPutBundleproductlinkmanagementv1savechildputbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "integer"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "bundle-products/{sku}/links/{optionId}",
        "tags": [
          "bundle-products/{sku}/links/{optionId}"
        ]
      }
    },
    "/V1/bundle-products/{sku}/options/all": {
      "get": {
        "description": "Get all options for bundle product",
        "operationId": "bundleProductOptionRepositoryV1GetListGet",
        "parameters": [
          {
            "in": "path",
            "name": "sku",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/bundle-data-option-interface"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/bundle-data-option-interface"
                  },
                  "type": "array"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "bundle-products/{sku}/options/all",
        "tags": [
          "bundle-products/{sku}/options/all"
        ]
      }
    },
    "/V1/bundle-products/{sku}/options/{optionId}": {
      "delete": {
        "description": "Remove bundle option",
        "operationId": "bundleProductOptionRepositoryV1DeleteByIdDelete",
        "parameters": [
          {
            "in": "path",
            "name": "sku",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "optionId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "bundle-products/{sku}/options/{optionId}",
        "tags": [
          "bundle-products/{sku}/options/{optionId}"
        ]
      },
      "get": {
        "description": "Get option for bundle product",
        "operationId": "bundleProductOptionRepositoryV1GetGet",
        "parameters": [
          {
            "in": "path",
            "name": "sku",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "optionId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/bundle-data-option-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/bundle-data-option-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "bundle-products/{sku}/options/{optionId}",
        "tags": [
          "bundle-products/{sku}/options/{optionId}"
        ]
      }
    },
    "/V1/bundle-products/{sku}/options/{optionId}/children/{childSku}": {
      "delete": {
        "description": "Remove product from Bundle product option",
        "operationId": "bundleProductLinkManagementV1RemoveChildDelete",
        "parameters": [
          {
            "in": "path",
            "name": "sku",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "optionId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "childSku",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "bundle-products/{sku}/options/{optionId}/children/{childSku}",
        "tags": [
          "bundle-products/{sku}/options/{optionId}/children/{childSku}"
        ]
      }
    },
    "/V1/carts/": {
      "post": {
        "description": "Creates an empty cart and quote for a guest.",
        "operationId": "quoteCartManagementV1CreateEmptyCartPost",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Cart ID.",
                  "type": "integer"
                }
              },
              "application/xml": {
                "schema": {
                  "description": "Cart ID.",
                  "type": "integer"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "carts/",
        "tags": [
          "carts/"
        ]
      }
    },
    "/V1/carts/guest-carts/{cartId}/checkGiftCard/{giftCardCode}": {
      "get": {
        "description": "",
        "operationId": "giftCardAccountGuestGiftCardAccountManagementV1CheckGiftCardGet",
        "parameters": [
          {
            "in": "path",
            "name": "cartId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "giftCardCode",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "number"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "number"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "carts/guest-carts/{cartId}/checkGiftCard/{giftCardCode}",
        "tags": [
          "carts/guest-carts/{cartId}/checkGiftCard/{giftCardCode}"
        ]
      }
    },
    "/V1/carts/guest-carts/{cartId}/giftCards": {
      "post": {
        "description": "",
        "operationId": "giftCardAccountGuestGiftCardAccountManagementV1AddGiftCardPost",
        "parameters": [
          {
            "in": "path",
            "name": "cartId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/giftCardAccountGuestGiftCardAccountManagementV1AddGiftCardPostGiftcardaccountguestgiftcardaccountmanagementv1addgiftcardpostbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            },
            "description": "200 Success."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "carts/guest-carts/{cartId}/giftCards",
        "tags": [
          "carts/guest-carts/{cartId}/giftCards"
        ]
      }
    },
    "/V1/carts/guest-carts/{cartId}/giftCards/{giftCardCode}": {
      "delete": {
        "description": "Remove GiftCard Account entity",
        "operationId": "giftCardAccountGuestGiftCardAccountManagementV1DeleteByQuoteIdDelete",
        "parameters": [
          {
            "in": "path",
            "name": "cartId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "giftCardCode",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            },
            "description": "200 Success."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "carts/guest-carts/{cartId}/giftCards/{giftCardCode}",
        "tags": [
          "carts/guest-carts/{cartId}/giftCards/{giftCardCode}"
        ]
      }
    },
    "/V1/carts/licence": {
      "get": {
        "description": "Lists active checkout agreements.",
        "operationId": "checkoutAgreementsCheckoutAgreementsRepositoryV1GetListGet",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/checkout-agreements-data-agreement-interface"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/checkout-agreements-data-agreement-interface"
                  },
                  "type": "array"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "carts/licence",
        "tags": [
          "carts/licence"
        ]
      }
    },
    "/V1/carts/mine": {
      "get": {
        "description": "Returns information for the cart for a specified customer.",
        "operationId": "quoteCartManagementV1GetCartForCustomerGet",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/quote-data-cart-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/quote-data-cart-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "carts/mine",
        "tags": [
          "carts/mine"
        ]
      },
      "post": {
        "description": "Creates an empty cart and quote for a specified customer if customer does not have a cart yet.",
        "operationId": "quoteCartManagementV1CreateEmptyCartForCustomerPost",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "new cart ID if customer did not have a cart or ID of the existing cart otherwise.",
                  "type": "integer"
                }
              },
              "application/xml": {
                "schema": {
                  "description": "new cart ID if customer did not have a cart or ID of the existing cart otherwise.",
                  "type": "integer"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "carts/mine",
        "tags": [
          "carts/mine"
        ]
      },
      "put": {
        "description": "Save quote",
        "operationId": "quoteCartRepositoryV1SavePut",
        "requestBody": {
          "$ref": "#/components/requestBodies/quoteCartRepositoryV1SavePutQuotecartrepositoryv1saveputbody"
        },
        "responses": {
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "carts/mine",
        "tags": [
          "carts/mine"
        ]
      }
    },
    "/V1/carts/mine/balance/apply": {
      "post": {
        "description": "Apply store credit.",
        "operationId": "customerBalanceBalanceManagementFromQuoteV1ApplyPost",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "carts/mine/balance/apply",
        "tags": [
          "carts/mine/balance/apply"
        ]
      }
    },
    "/V1/carts/mine/balance/unapply": {
      "post": {
        "description": "Unapply store credit.",
        "operationId": "customerBalanceBalanceManagementFromQuoteV1UnapplyPost",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "carts/mine/balance/unapply",
        "tags": [
          "carts/mine/balance/unapply"
        ]
      }
    },
    "/V1/carts/mine/billing-address": {
      "get": {
        "description": "Returns the billing address for a specified quote.",
        "operationId": "quoteBillingAddressManagementV1GetGet",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/quote-data-address-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/quote-data-address-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "carts/mine/billing-address",
        "tags": [
          "carts/mine/billing-address"
        ]
      },
      "post": {
        "description": "Assigns a specified billing address to a specified cart.",
        "operationId": "quoteBillingAddressManagementV1AssignPost",
        "requestBody": {
          "$ref": "#/components/requestBodies/quoteBillingAddressManagementV1AssignPostQuotebillingaddressmanagementv1assignpostbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Address ID.",
                  "type": "integer"
                }
              },
              "application/xml": {
                "schema": {
                  "description": "Address ID.",
                  "type": "integer"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "carts/mine/billing-address",
        "tags": [
          "carts/mine/billing-address"
        ]
      }
    },
    "/V1/carts/mine/checkGiftCard/{giftCardCode}": {
      "get": {
        "description": "",
        "operationId": "giftCardAccountGiftCardAccountManagementV1CheckGiftCardGet",
        "parameters": [
          {
            "in": "path",
            "name": "giftCardCode",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "number"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "number"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "carts/mine/checkGiftCard/{giftCardCode}",
        "tags": [
          "carts/mine/checkGiftCard/{giftCardCode}"
        ]
      }
    },
    "/V1/carts/mine/checkout-fields": {
      "post": {
        "description": "",
        "operationId": "temandoShippingQuoteCartCheckoutFieldManagementV1SaveCheckoutFieldsPost",
        "requestBody": {
          "$ref": "#/components/requestBodies/temandoShippingQuoteCartCheckoutFieldManagementV1SaveCheckoutFieldsPostTemandoshippingquotecartcheckoutfieldmanagementv1savecheckoutfieldspostbody"
        },
        "responses": {
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "carts/mine/checkout-fields",
        "tags": [
          "carts/mine/checkout-fields"
        ]
      }
    },
    "/V1/carts/mine/collect-totals": {
      "put": {
        "description": "Set shipping/billing methods and additional data for cart and collect totals.",
        "operationId": "quoteCartTotalManagementV1CollectTotalsPut",
        "requestBody": {
          "$ref": "#/components/requestBodies/quoteCartTotalManagementV1CollectTotalsPutQuotecarttotalmanagementv1collecttotalsputbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/quote-data-totals-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/quote-data-totals-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "carts/mine/collect-totals",
        "tags": [
          "carts/mine/collect-totals"
        ]
      }
    },
    "/V1/carts/mine/collection-point/search-request": {
      "delete": {
        "description": "",
        "operationId": "temandoShippingCollectionPointCartCollectionPointManagementV1DeleteSearchRequestDelete",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Internal Server error"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "carts/mine/collection-point/search-request",
        "tags": [
          "carts/mine/collection-point/search-request"
        ]
      },
      "put": {
        "description": "",
        "operationId": "temandoShippingCollectionPointCartCollectionPointManagementV1SaveSearchRequestPut",
        "requestBody": {
          "$ref": "#/components/requestBodies/temandoShippingCollectionPointCartCollectionPointManagementV1SaveSearchRequestPutTemandoshippingcollectionpointcartcollectionpointmanagementv1savesearchrequestputbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/temando-shipping-data-collection-point-search-request-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/temando-shipping-data-collection-point-search-request-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Internal Server error"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "carts/mine/collection-point/search-request",
        "tags": [
          "carts/mine/collection-point/search-request"
        ]
      }
    },
    "/V1/carts/mine/collection-point/search-result": {
      "get": {
        "description": "",
        "operationId": "temandoShippingCollectionPointCartCollectionPointManagementV1GetCollectionPointsGet",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/temando-shipping-data-collection-point-quote-collection-point-interface"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/temando-shipping-data-collection-point-quote-collection-point-interface"
                  },
                  "type": "array"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "carts/mine/collection-point/search-result",
        "tags": [
          "carts/mine/collection-point/search-result"
        ]
      }
    },
    "/V1/carts/mine/collection-point/select": {
      "post": {
        "description": "",
        "operationId": "temandoShippingCollectionPointCartCollectionPointManagementV1SelectCollectionPointPost",
        "requestBody": {
          "$ref": "#/components/requestBodies/temandoShippingCollectionPointCartCollectionPointManagementV1SelectCollectionPointPostTemandoshippingcollectionpointcartcollectionpointmanagementv1selectcollectionpointpostbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Internal Server error"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "carts/mine/collection-point/select",
        "tags": [
          "carts/mine/collection-point/select"
        ]
      }
    },
    "/V1/carts/mine/coupons": {
      "delete": {
        "description": "Deletes a coupon from a specified cart.",
        "operationId": "quoteCouponManagementV1RemoveDelete",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "carts/mine/coupons",
        "tags": [
          "carts/mine/coupons"
        ]
      },
      "get": {
        "description": "Returns information for a coupon in a specified cart.",
        "operationId": "quoteCouponManagementV1GetGet",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "The coupon code data.",
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "description": "The coupon code data.",
                  "type": "string"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "carts/mine/coupons",
        "tags": [
          "carts/mine/coupons"
        ]
      }
    },
    "/V1/carts/mine/coupons/{couponCode}": {
      "put": {
        "description": "Adds a coupon by code to a specified cart.",
        "operationId": "quoteCouponManagementV1SetPut",
        "parameters": [
          {
            "description": "The coupon code data.",
            "in": "path",
            "name": "couponCode",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "carts/mine/coupons/{couponCode}",
        "tags": [
          "carts/mine/coupons/{couponCode}"
        ]
      }
    },
    "/V1/carts/mine/delivery-option": {
      "post": {
        "description": "Handle selected delivery option.",
        "operationId": "temandoShippingQuoteCartDeliveryOptionManagementV1SavePost",
        "requestBody": {
          "$ref": "#/components/requestBodies/temandoShippingQuoteCartDeliveryOptionManagementV1SavePostTemandoshippingquotecartdeliveryoptionmanagementv1savepostbody"
        },
        "responses": {
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Internal Server error"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "carts/mine/delivery-option",
        "tags": [
          "carts/mine/delivery-option"
        ]
      }
    },
    "/V1/carts/mine/estimate-shipping-methods": {
      "post": {
        "description": "Estimate shipping by address and return list of available shipping methods",
        "operationId": "quoteShipmentEstimationV1EstimateByExtendedAddressPost",
        "requestBody": {
          "$ref": "#/components/requestBodies/quoteShipmentEstimationV1EstimateByExtendedAddressPostQuoteshipmentestimationv1estimatebyextendedaddresspostbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "An array of shipping methods",
                  "items": {
                    "$ref": "#/components/schemas/quote-data-shipping-method-interface"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "description": "An array of shipping methods",
                  "items": {
                    "$ref": "#/components/schemas/quote-data-shipping-method-interface"
                  },
                  "type": "array"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "carts/mine/estimate-shipping-methods",
        "tags": [
          "carts/mine/estimate-shipping-methods"
        ]
      }
    },
    "/V1/carts/mine/estimate-shipping-methods-by-address-id": {
      "post": {
        "description": "Estimate shipping",
        "operationId": "quoteShippingMethodManagementV1EstimateByAddressIdPost",
        "requestBody": {
          "$ref": "#/components/requestBodies/quoteShippingMethodManagementV1EstimateByAddressIdPostQuoteshippingmethodmanagementv1estimatebyaddressidpostbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "An array of shipping methods.",
                  "items": {
                    "$ref": "#/components/schemas/quote-data-shipping-method-interface"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "description": "An array of shipping methods.",
                  "items": {
                    "$ref": "#/components/schemas/quote-data-shipping-method-interface"
                  },
                  "type": "array"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "carts/mine/estimate-shipping-methods-by-address-id",
        "tags": [
          "carts/mine/estimate-shipping-methods-by-address-id"
        ]
      }
    },
    "/V1/carts/mine/gift-message": {
      "get": {
        "description": "Return the gift message for a specified order.",
        "operationId": "giftMessageCartRepositoryV1GetGet",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/gift-message-data-message-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/gift-message-data-message-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "carts/mine/gift-message",
        "tags": [
          "carts/mine/gift-message"
        ]
      },
      "post": {
        "description": "Set the gift message for an entire order.",
        "operationId": "giftMessageCartRepositoryV1SavePost",
        "requestBody": {
          "$ref": "#/components/requestBodies/giftMessageCartRepositoryV1SavePostGiftmessagecartrepositoryv1savepostbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "carts/mine/gift-message",
        "tags": [
          "carts/mine/gift-message"
        ]
      }
    },
    "/V1/carts/mine/gift-message/{itemId}": {
      "get": {
        "description": "Return the gift message for a specified item in a specified shopping cart.",
        "operationId": "giftMessageItemRepositoryV1GetGet",
        "parameters": [
          {
            "description": "The item ID.",
            "in": "path",
            "name": "itemId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/gift-message-data-message-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/gift-message-data-message-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "carts/mine/gift-message/{itemId}",
        "tags": [
          "carts/mine/gift-message/{itemId}"
        ]
      },
      "post": {
        "description": "Set the gift message for a specified item in a specified shopping cart.",
        "operationId": "giftMessageItemRepositoryV1SavePost",
        "parameters": [
          {
            "description": "The item ID.",
            "in": "path",
            "name": "itemId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/giftMessageCartRepositoryV1SavePostGiftmessagecartrepositoryv1savepostbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "carts/mine/gift-message/{itemId}",
        "tags": [
          "carts/mine/gift-message/{itemId}"
        ]
      }
    },
    "/V1/carts/mine/giftCards": {
      "post": {
        "description": "",
        "operationId": "giftCardAccountGiftCardAccountManagementV1SaveByQuoteIdPost",
        "requestBody": {
          "$ref": "#/components/requestBodies/giftCardAccountGuestGiftCardAccountManagementV1AddGiftCardPostGiftcardaccountguestgiftcardaccountmanagementv1addgiftcardpostbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "carts/mine/giftCards",
        "tags": [
          "carts/mine/giftCards"
        ]
      }
    },
    "/V1/carts/mine/giftCards/{giftCardCode}": {
      "delete": {
        "description": "Remove GiftCard Account entity",
        "operationId": "giftCardAccountGiftCardAccountManagementV1DeleteByQuoteIdDelete",
        "parameters": [
          {
            "in": "path",
            "name": "giftCardCode",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "carts/mine/giftCards/{giftCardCode}",
        "tags": [
          "carts/mine/giftCards/{giftCardCode}"
        ]
      }
    },
    "/V1/carts/mine/items": {
      "get": {
        "description": "Lists items that are assigned to a specified cart.",
        "operationId": "quoteCartItemRepositoryV1GetListGet",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Array of items.",
                  "items": {
                    "$ref": "#/components/schemas/quote-data-cart-item-interface"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "description": "Array of items.",
                  "items": {
                    "$ref": "#/components/schemas/quote-data-cart-item-interface"
                  },
                  "type": "array"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "carts/mine/items",
        "tags": [
          "carts/mine/items"
        ]
      },
      "post": {
        "description": "Add/update the specified cart item.",
        "operationId": "quoteCartItemRepositoryV1SavePost",
        "requestBody": {
          "$ref": "#/components/requestBodies/quoteCartItemRepositoryV1SavePostQuotecartitemrepositoryv1savepostbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/quote-data-cart-item-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/quote-data-cart-item-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "carts/mine/items",
        "tags": [
          "carts/mine/items"
        ]
      }
    },
    "/V1/carts/mine/items/{itemId}": {
      "delete": {
        "description": "Removes the specified item from the specified cart.",
        "operationId": "quoteCartItemRepositoryV1DeleteByIdDelete",
        "parameters": [
          {
            "description": "The item ID of the item to be removed.",
            "in": "path",
            "name": "itemId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "carts/mine/items/{itemId}",
        "tags": [
          "carts/mine/items/{itemId}"
        ]
      },
      "put": {
        "description": "Add/update the specified cart item.",
        "operationId": "quoteCartItemRepositoryV1SavePut",
        "parameters": [
          {
            "in": "path",
            "name": "itemId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/quoteCartItemRepositoryV1SavePostQuotecartitemrepositoryv1savepostbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/quote-data-cart-item-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/quote-data-cart-item-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "carts/mine/items/{itemId}",
        "tags": [
          "carts/mine/items/{itemId}"
        ]
      }
    },
    "/V1/carts/mine/order": {
      "put": {
        "description": "Places an order for a specified cart.",
        "operationId": "quoteCartManagementV1PlaceOrderPut",
        "requestBody": {
          "$ref": "#/components/requestBodies/quoteCartManagementV1PlaceOrderPutQuotecartmanagementv1placeorderputbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Order ID.",
                  "type": "integer"
                }
              },
              "application/xml": {
                "schema": {
                  "description": "Order ID.",
                  "type": "integer"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "carts/mine/order",
        "tags": [
          "carts/mine/order"
        ]
      }
    },
    "/V1/carts/mine/payment-information": {
      "get": {
        "description": "Get payment information",
        "operationId": "checkoutPaymentInformationManagementV1GetPaymentInformationGet",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/checkout-data-payment-details-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/checkout-data-payment-details-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "carts/mine/payment-information",
        "tags": [
          "carts/mine/payment-information"
        ]
      },
      "post": {
        "description": "Set payment information and place order for a specified cart.",
        "operationId": "checkoutPaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPost",
        "requestBody": {
          "$ref": "#/components/requestBodies/checkoutPaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostCheckoutpaymentinformationmanagementv1savepaymentinformationandplaceorderpostbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Order ID.",
                  "type": "integer"
                }
              },
              "application/xml": {
                "schema": {
                  "description": "Order ID.",
                  "type": "integer"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "carts/mine/payment-information",
        "tags": [
          "carts/mine/payment-information"
        ]
      }
    },
    "/V1/carts/mine/payment-methods": {
      "get": {
        "description": "Lists available payment methods for a specified shopping cart. This call returns an array of objects, but detailed information about each object’s attributes might not be included.  See https://devdocs.magento.com/codelinks/attributes.html#PaymentMethodManagementInterface to determine which call to use to get detailed information about all attributes for an object.",
        "operationId": "quotePaymentMethodManagementV1GetListGet",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Array of payment methods.",
                  "items": {
                    "$ref": "#/components/schemas/quote-data-payment-method-interface"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "description": "Array of payment methods.",
                  "items": {
                    "$ref": "#/components/schemas/quote-data-payment-method-interface"
                  },
                  "type": "array"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "carts/mine/payment-methods",
        "tags": [
          "carts/mine/payment-methods"
        ]
      }
    },
    "/V1/carts/mine/selected-payment-method": {
      "get": {
        "description": "Returns the payment method for a specified shopping cart.",
        "operationId": "quotePaymentMethodManagementV1GetGet",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/quote-data-payment-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/quote-data-payment-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "carts/mine/selected-payment-method",
        "tags": [
          "carts/mine/selected-payment-method"
        ]
      },
      "put": {
        "description": "Adds a specified payment method to a specified shopping cart.",
        "operationId": "quotePaymentMethodManagementV1SetPut",
        "requestBody": {
          "$ref": "#/components/requestBodies/quotePaymentMethodManagementV1SetPutQuotepaymentmethodmanagementv1setputbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "redirect url or error message.",
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "description": "redirect url or error message.",
                  "type": "string"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "carts/mine/selected-payment-method",
        "tags": [
          "carts/mine/selected-payment-method"
        ]
      }
    },
    "/V1/carts/mine/set-payment-information": {
      "post": {
        "description": "Set payment information for a specified cart.",
        "operationId": "checkoutPaymentInformationManagementV1SavePaymentInformationPost",
        "requestBody": {
          "$ref": "#/components/requestBodies/checkoutPaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostCheckoutpaymentinformationmanagementv1savepaymentinformationandplaceorderpostbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Order ID.",
                  "type": "integer"
                }
              },
              "application/xml": {
                "schema": {
                  "description": "Order ID.",
                  "type": "integer"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "carts/mine/set-payment-information",
        "tags": [
          "carts/mine/set-payment-information"
        ]
      }
    },
    "/V1/carts/mine/shipping-information": {
      "post": {
        "description": "",
        "operationId": "checkoutShippingInformationManagementV1SaveAddressInformationPost",
        "requestBody": {
          "$ref": "#/components/requestBodies/checkoutShippingInformationManagementV1SaveAddressInformationPostCheckoutshippinginformationmanagementv1saveaddressinformationpostbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/checkout-data-payment-details-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/checkout-data-payment-details-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "carts/mine/shipping-information",
        "tags": [
          "carts/mine/shipping-information"
        ]
      }
    },
    "/V1/carts/mine/shipping-methods": {
      "get": {
        "description": "Lists applicable shipping methods for a specified quote.",
        "operationId": "quoteShippingMethodManagementV1GetListGet",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "An array of shipping methods.",
                  "items": {
                    "$ref": "#/components/schemas/quote-data-shipping-method-interface"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "description": "An array of shipping methods.",
                  "items": {
                    "$ref": "#/components/schemas/quote-data-shipping-method-interface"
                  },
                  "type": "array"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "carts/mine/shipping-methods",
        "tags": [
          "carts/mine/shipping-methods"
        ]
      }
    },
    "/V1/carts/mine/totals": {
      "get": {
        "description": "Returns quote totals data for a specified cart.",
        "operationId": "quoteCartTotalRepositoryV1GetGet",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/quote-data-totals-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/quote-data-totals-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "carts/mine/totals",
        "tags": [
          "carts/mine/totals"
        ]
      }
    },
    "/V1/carts/mine/totals-information": {
      "post": {
        "description": "Calculate quote totals based on address and shipping method.",
        "operationId": "checkoutTotalsInformationManagementV1CalculatePost",
        "requestBody": {
          "$ref": "#/components/requestBodies/checkoutTotalsInformationManagementV1CalculatePostCheckouttotalsinformationmanagementv1calculatepostbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/quote-data-totals-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/quote-data-totals-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "carts/mine/totals-information",
        "tags": [
          "carts/mine/totals-information"
        ]
      }
    },
    "/V1/carts/search": {
      "get": {
        "description": "Enables administrative users to list carts that match specified search criteria. This call returns an array of objects, but detailed information about each object’s attributes might not be included.  See https://devdocs.magento.com/codelinks/attributes.html#CartRepositoryInterface to determine which call to use to get detailed information about all attributes for an object.",
        "operationId": "quoteCartRepositoryV1GetListGet",
        "parameters": [
          {
            "description": "Field",
            "in": "query",
            "name": "searchCriteria[filterGroups][0][filters][0][field]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Value",
            "in": "query",
            "name": "searchCriteria[filterGroups][0][filters][0][value]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Condition type",
            "in": "query",
            "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sorting field.",
            "in": "query",
            "name": "searchCriteria[sortOrders][0][field]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sorting direction.",
            "in": "query",
            "name": "searchCriteria[sortOrders][0][direction]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Page size.",
            "in": "query",
            "name": "searchCriteria[pageSize]",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Current page.",
            "in": "query",
            "name": "searchCriteria[currentPage]",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/quote-data-cart-search-results-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/quote-data-cart-search-results-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "carts/search",
        "tags": [
          "carts/search"
        ]
      }
    },
    "/V1/carts/{cartId}": {
      "get": {
        "description": "Enables an administrative user to return information for a specified cart.",
        "operationId": "quoteCartRepositoryV1GetGet",
        "parameters": [
          {
            "in": "path",
            "name": "cartId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/quote-data-cart-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/quote-data-cart-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "carts/{cartId}",
        "tags": [
          "carts/{cartId}"
        ]
      },
      "put": {
        "description": "Assigns a specified customer to a specified shopping cart.",
        "operationId": "quoteCartManagementV1AssignCustomerPut",
        "parameters": [
          {
            "description": "The cart ID.",
            "in": "path",
            "name": "cartId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/quoteCartManagementV1AssignCustomerPutQuotecartmanagementv1assigncustomerputbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "carts/{cartId}",
        "tags": [
          "carts/{cartId}"
        ]
      }
    },
    "/V1/carts/{cartId}/billing-address": {
      "get": {
        "description": "Returns the billing address for a specified quote.",
        "parameters": [
          {
            "description": "The cart ID.",
            "in": "path",
            "name": "cartId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/quote-data-address-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/quote-data-address-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "carts/{cartId}/billing-address",
        "tags": [
          "carts/{cartId}/billing-address"
        ]
      },
      "post": {
        "description": "Assigns a specified billing address to a specified cart.",
        "parameters": [
          {
            "description": "The cart ID.",
            "in": "path",
            "name": "cartId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/quoteBillingAddressManagementV1AssignPostQuotebillingaddressmanagementv1assignpostbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Address ID.",
                  "type": "integer"
                }
              },
              "application/xml": {
                "schema": {
                  "description": "Address ID.",
                  "type": "integer"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "carts/{cartId}/billing-address",
        "tags": [
          "carts/{cartId}/billing-address"
        ]
      }
    },
    "/V1/carts/{cartId}/coupons": {
      "delete": {
        "description": "Deletes a coupon from a specified cart.",
        "parameters": [
          {
            "description": "The cart ID.",
            "in": "path",
            "name": "cartId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "carts/{cartId}/coupons",
        "tags": [
          "carts/{cartId}/coupons"
        ]
      },
      "get": {
        "description": "Returns information for a coupon in a specified cart.",
        "parameters": [
          {
            "description": "The cart ID.",
            "in": "path",
            "name": "cartId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "The coupon code data.",
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "description": "The coupon code data.",
                  "type": "string"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "carts/{cartId}/coupons",
        "tags": [
          "carts/{cartId}/coupons"
        ]
      }
    },
    "/V1/carts/{cartId}/coupons/{couponCode}": {
      "put": {
        "description": "Adds a coupon by code to a specified cart.",
        "parameters": [
          {
            "description": "The cart ID.",
            "in": "path",
            "name": "cartId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The coupon code data.",
            "in": "path",
            "name": "couponCode",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "carts/{cartId}/coupons/{couponCode}",
        "tags": [
          "carts/{cartId}/coupons/{couponCode}"
        ]
      }
    },
    "/V1/carts/{cartId}/estimate-shipping-methods": {
      "post": {
        "description": "Estimate shipping by address and return list of available shipping methods",
        "parameters": [
          {
            "in": "path",
            "name": "cartId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/quoteShipmentEstimationV1EstimateByExtendedAddressPostQuoteshipmentestimationv1estimatebyextendedaddresspostbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "An array of shipping methods",
                  "items": {
                    "$ref": "#/components/schemas/quote-data-shipping-method-interface"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "description": "An array of shipping methods",
                  "items": {
                    "$ref": "#/components/schemas/quote-data-shipping-method-interface"
                  },
                  "type": "array"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "carts/{cartId}/estimate-shipping-methods",
        "tags": [
          "carts/{cartId}/estimate-shipping-methods"
        ]
      }
    },
    "/V1/carts/{cartId}/estimate-shipping-methods-by-address-id": {
      "post": {
        "description": "Estimate shipping",
        "parameters": [
          {
            "description": "The shopping cart ID.",
            "in": "path",
            "name": "cartId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/quoteShippingMethodManagementV1EstimateByAddressIdPostQuoteshippingmethodmanagementv1estimatebyaddressidpostbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "An array of shipping methods.",
                  "items": {
                    "$ref": "#/components/schemas/quote-data-shipping-method-interface"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "description": "An array of shipping methods.",
                  "items": {
                    "$ref": "#/components/schemas/quote-data-shipping-method-interface"
                  },
                  "type": "array"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "carts/{cartId}/estimate-shipping-methods-by-address-id",
        "tags": [
          "carts/{cartId}/estimate-shipping-methods-by-address-id"
        ]
      }
    },
    "/V1/carts/{cartId}/gift-message": {
      "get": {
        "description": "Return the gift message for a specified order.",
        "parameters": [
          {
            "description": "The shopping cart ID.",
            "in": "path",
            "name": "cartId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/gift-message-data-message-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/gift-message-data-message-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "carts/{cartId}/gift-message",
        "tags": [
          "carts/{cartId}/gift-message"
        ]
      },
      "post": {
        "description": "Set the gift message for an entire order.",
        "parameters": [
          {
            "description": "The cart ID.",
            "in": "path",
            "name": "cartId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/giftMessageCartRepositoryV1SavePostGiftmessagecartrepositoryv1savepostbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "carts/{cartId}/gift-message",
        "tags": [
          "carts/{cartId}/gift-message"
        ]
      }
    },
    "/V1/carts/{cartId}/gift-message/{itemId}": {
      "get": {
        "description": "Return the gift message for a specified item in a specified shopping cart.",
        "parameters": [
          {
            "description": "The shopping cart ID.",
            "in": "path",
            "name": "cartId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The item ID.",
            "in": "path",
            "name": "itemId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/gift-message-data-message-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/gift-message-data-message-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "carts/{cartId}/gift-message/{itemId}",
        "tags": [
          "carts/{cartId}/gift-message/{itemId}"
        ]
      },
      "post": {
        "description": "Set the gift message for a specified item in a specified shopping cart.",
        "parameters": [
          {
            "description": "The cart ID.",
            "in": "path",
            "name": "cartId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The item ID.",
            "in": "path",
            "name": "itemId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/giftMessageCartRepositoryV1SavePostGiftmessagecartrepositoryv1savepostbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "carts/{cartId}/gift-message/{itemId}",
        "tags": [
          "carts/{cartId}/gift-message/{itemId}"
        ]
      }
    },
    "/V1/carts/{cartId}/giftCards": {
      "put": {
        "description": "",
        "operationId": "giftCardAccountGiftCardAccountManagementV1SaveByQuoteIdPut",
        "parameters": [
          {
            "in": "path",
            "name": "cartId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/giftCardAccountGuestGiftCardAccountManagementV1AddGiftCardPostGiftcardaccountguestgiftcardaccountmanagementv1addgiftcardpostbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "carts/{cartId}/giftCards",
        "tags": [
          "carts/{cartId}/giftCards"
        ]
      }
    },
    "/V1/carts/{cartId}/giftCards/{giftCardCode}": {
      "delete": {
        "description": "Remove GiftCard Account entity",
        "parameters": [
          {
            "in": "path",
            "name": "cartId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "giftCardCode",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "carts/{cartId}/giftCards/{giftCardCode}",
        "tags": [
          "carts/{cartId}/giftCards/{giftCardCode}"
        ]
      }
    },
    "/V1/carts/{cartId}/items": {
      "get": {
        "description": "Lists items that are assigned to a specified cart.",
        "parameters": [
          {
            "description": "The cart ID.",
            "in": "path",
            "name": "cartId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Array of items.",
                  "items": {
                    "$ref": "#/components/schemas/quote-data-cart-item-interface"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "description": "Array of items.",
                  "items": {
                    "$ref": "#/components/schemas/quote-data-cart-item-interface"
                  },
                  "type": "array"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "carts/{cartId}/items",
        "tags": [
          "carts/{cartId}/items"
        ]
      }
    },
    "/V1/carts/{cartId}/items/{itemId}": {
      "delete": {
        "description": "Removes the specified item from the specified cart.",
        "parameters": [
          {
            "description": "The cart ID.",
            "in": "path",
            "name": "cartId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The item ID of the item to be removed.",
            "in": "path",
            "name": "itemId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "carts/{cartId}/items/{itemId}",
        "tags": [
          "carts/{cartId}/items/{itemId}"
        ]
      },
      "put": {
        "description": "Add/update the specified cart item.",
        "parameters": [
          {
            "in": "path",
            "name": "cartId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "itemId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/quoteCartItemRepositoryV1SavePostQuotecartitemrepositoryv1savepostbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/quote-data-cart-item-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/quote-data-cart-item-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "carts/{cartId}/items/{itemId}",
        "tags": [
          "carts/{cartId}/items/{itemId}"
        ]
      }
    },
    "/V1/carts/{cartId}/order": {
      "put": {
        "description": "Places an order for a specified cart.",
        "parameters": [
          {
            "description": "The cart ID.",
            "in": "path",
            "name": "cartId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/quoteCartManagementV1PlaceOrderPutQuotecartmanagementv1placeorderputbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Order ID.",
                  "type": "integer"
                }
              },
              "application/xml": {
                "schema": {
                  "description": "Order ID.",
                  "type": "integer"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "carts/{cartId}/order",
        "tags": [
          "carts/{cartId}/order"
        ]
      }
    },
    "/V1/carts/{cartId}/payment-methods": {
      "get": {
        "description": "Lists available payment methods for a specified shopping cart. This call returns an array of objects, but detailed information about each object’s attributes might not be included.  See https://devdocs.magento.com/codelinks/attributes.html#PaymentMethodManagementInterface to determine which call to use to get detailed information about all attributes for an object.",
        "parameters": [
          {
            "description": "The cart ID.",
            "in": "path",
            "name": "cartId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Array of payment methods.",
                  "items": {
                    "$ref": "#/components/schemas/quote-data-payment-method-interface"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "description": "Array of payment methods.",
                  "items": {
                    "$ref": "#/components/schemas/quote-data-payment-method-interface"
                  },
                  "type": "array"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "carts/{cartId}/payment-methods",
        "tags": [
          "carts/{cartId}/payment-methods"
        ]
      }
    },
    "/V1/carts/{cartId}/selected-payment-method": {
      "get": {
        "description": "Returns the payment method for a specified shopping cart.",
        "parameters": [
          {
            "description": "The cart ID.",
            "in": "path",
            "name": "cartId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/quote-data-payment-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/quote-data-payment-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "carts/{cartId}/selected-payment-method",
        "tags": [
          "carts/{cartId}/selected-payment-method"
        ]
      },
      "put": {
        "description": "Adds a specified payment method to a specified shopping cart.",
        "parameters": [
          {
            "description": "The cart ID.",
            "in": "path",
            "name": "cartId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/quotePaymentMethodManagementV1SetPutQuotepaymentmethodmanagementv1setputbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "redirect url or error message.",
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "description": "redirect url or error message.",
                  "type": "string"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "carts/{cartId}/selected-payment-method",
        "tags": [
          "carts/{cartId}/selected-payment-method"
        ]
      }
    },
    "/V1/carts/{cartId}/shipping-information": {
      "post": {
        "description": "",
        "parameters": [
          {
            "in": "path",
            "name": "cartId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/checkoutShippingInformationManagementV1SaveAddressInformationPostCheckoutshippinginformationmanagementv1saveaddressinformationpostbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/checkout-data-payment-details-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/checkout-data-payment-details-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "carts/{cartId}/shipping-information",
        "tags": [
          "carts/{cartId}/shipping-information"
        ]
      }
    },
    "/V1/carts/{cartId}/shipping-methods": {
      "get": {
        "description": "Lists applicable shipping methods for a specified quote.",
        "parameters": [
          {
            "description": "The shopping cart ID.",
            "in": "path",
            "name": "cartId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "An array of shipping methods.",
                  "items": {
                    "$ref": "#/components/schemas/quote-data-shipping-method-interface"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "description": "An array of shipping methods.",
                  "items": {
                    "$ref": "#/components/schemas/quote-data-shipping-method-interface"
                  },
                  "type": "array"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "carts/{cartId}/shipping-methods",
        "tags": [
          "carts/{cartId}/shipping-methods"
        ]
      }
    },
    "/V1/carts/{cartId}/totals": {
      "get": {
        "description": "Returns quote totals data for a specified cart.",
        "parameters": [
          {
            "description": "The cart ID.",
            "in": "path",
            "name": "cartId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/quote-data-totals-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/quote-data-totals-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "carts/{cartId}/totals",
        "tags": [
          "carts/{cartId}/totals"
        ]
      }
    },
    "/V1/carts/{cartId}/totals-information": {
      "post": {
        "description": "Calculate quote totals based on address and shipping method.",
        "parameters": [
          {
            "in": "path",
            "name": "cartId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/checkoutTotalsInformationManagementV1CalculatePostCheckouttotalsinformationmanagementv1calculatepostbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/quote-data-totals-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/quote-data-totals-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "carts/{cartId}/totals-information",
        "tags": [
          "carts/{cartId}/totals-information"
        ]
      }
    },
    "/V1/carts/{quoteId}/giftCards": {
      "get": {
        "description": "Return GiftCard Account cards",
        "operationId": "giftCardAccountGiftCardAccountManagementV1GetListByQuoteIdGet",
        "parameters": [
          {
            "in": "path",
            "name": "quoteId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/gift-card-account-data-gift-card-account-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/gift-card-account-data-gift-card-account-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "carts/{quoteId}/giftCards",
        "tags": [
          "carts/{quoteId}/giftCards"
        ]
      }
    },
    "/V1/carts/{quoteId}/items": {
      "post": {
        "description": "Add/update the specified cart item.",
        "parameters": [
          {
            "in": "path",
            "name": "quoteId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/quoteCartItemRepositoryV1SavePostQuotecartitemrepositoryv1savepostbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/quote-data-cart-item-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/quote-data-cart-item-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "carts/{quoteId}/items",
        "tags": [
          "carts/{quoteId}/items"
        ]
      }
    },
    "/V1/categories": {
      "get": {
        "description": "Retrieve list of categories",
        "operationId": "catalogCategoryManagementV1GetTreeGet",
        "parameters": [
          {
            "in": "query",
            "name": "rootCategoryId",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "depth",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/catalog-data-category-tree-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/catalog-data-category-tree-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "categories",
        "tags": [
          "categories"
        ]
      },
      "post": {
        "description": "Create category service",
        "operationId": "catalogCategoryRepositoryV1SavePost",
        "requestBody": {
          "$ref": "#/components/requestBodies/catalogCategoryRepositoryV1SavePostCatalogcategoryrepositoryv1savepostbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/catalog-data-category-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/catalog-data-category-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "categories",
        "tags": [
          "categories"
        ]
      }
    },
    "/V1/categories/attributes": {
      "get": {
        "description": "Retrieve all attributes for entity type",
        "operationId": "catalogCategoryAttributeRepositoryV1GetListGet",
        "parameters": [
          {
            "description": "Field",
            "in": "query",
            "name": "searchCriteria[filterGroups][0][filters][0][field]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Value",
            "in": "query",
            "name": "searchCriteria[filterGroups][0][filters][0][value]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Condition type",
            "in": "query",
            "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sorting field.",
            "in": "query",
            "name": "searchCriteria[sortOrders][0][field]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sorting direction.",
            "in": "query",
            "name": "searchCriteria[sortOrders][0][direction]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Page size.",
            "in": "query",
            "name": "searchCriteria[pageSize]",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Current page.",
            "in": "query",
            "name": "searchCriteria[currentPage]",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/catalog-data-category-attribute-search-results-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/catalog-data-category-attribute-search-results-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "categories/attributes",
        "tags": [
          "categories/attributes"
        ]
      }
    },
    "/V1/categories/attributes/{attributeCode}": {
      "get": {
        "description": "Retrieve specific attribute",
        "operationId": "catalogCategoryAttributeRepositoryV1GetGet",
        "parameters": [
          {
            "in": "path",
            "name": "attributeCode",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/catalog-data-category-attribute-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/catalog-data-category-attribute-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "categories/attributes/{attributeCode}",
        "tags": [
          "categories/attributes/{attributeCode}"
        ]
      }
    },
    "/V1/categories/attributes/{attributeCode}/options": {
      "get": {
        "description": "Retrieve list of attribute options",
        "operationId": "catalogCategoryAttributeOptionManagementV1GetItemsGet",
        "parameters": [
          {
            "in": "path",
            "name": "attributeCode",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/eav-data-attribute-option-interface"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/eav-data-attribute-option-interface"
                  },
                  "type": "array"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "categories/attributes/{attributeCode}/options",
        "tags": [
          "categories/attributes/{attributeCode}/options"
        ]
      }
    },
    "/V1/categories/list": {
      "get": {
        "description": "Get category list",
        "operationId": "catalogCategoryListV1GetListGet",
        "parameters": [
          {
            "description": "Field",
            "in": "query",
            "name": "searchCriteria[filterGroups][0][filters][0][field]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Value",
            "in": "query",
            "name": "searchCriteria[filterGroups][0][filters][0][value]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Condition type",
            "in": "query",
            "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sorting field.",
            "in": "query",
            "name": "searchCriteria[sortOrders][0][field]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sorting direction.",
            "in": "query",
            "name": "searchCriteria[sortOrders][0][direction]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Page size.",
            "in": "query",
            "name": "searchCriteria[pageSize]",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Current page.",
            "in": "query",
            "name": "searchCriteria[currentPage]",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/catalog-data-category-search-results-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/catalog-data-category-search-results-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "categories/list",
        "tags": [
          "categories/list"
        ]
      }
    },
    "/V1/categories/{categoryId}": {
      "delete": {
        "description": "Delete category by identifier",
        "operationId": "catalogCategoryRepositoryV1DeleteByIdentifierDelete",
        "parameters": [
          {
            "in": "path",
            "name": "categoryId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Will returned True if deleted",
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "description": "Will returned True if deleted",
                  "type": "boolean"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "categories/{categoryId}",
        "tags": [
          "categories/{categoryId}"
        ]
      },
      "get": {
        "description": "Get info about category by category id",
        "operationId": "catalogCategoryRepositoryV1GetGet",
        "parameters": [
          {
            "in": "path",
            "name": "categoryId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "storeId",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/catalog-data-category-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/catalog-data-category-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "categories/{categoryId}",
        "tags": [
          "categories/{categoryId}"
        ]
      }
    },
    "/V1/categories/{categoryId}/move": {
      "put": {
        "description": "Move category",
        "operationId": "catalogCategoryManagementV1MovePut",
        "parameters": [
          {
            "in": "path",
            "name": "categoryId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "afterId": {
                    "type": "integer"
                  },
                  "parentId": {
                    "type": "integer"
                  }
                },
                "required": [
                  "parentId"
                ],
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "properties": {
                  "afterId": {
                    "type": "integer"
                  },
                  "parentId": {
                    "type": "integer"
                  }
                },
                "required": [
                  "parentId"
                ],
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Internal Server error"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "categories/{categoryId}/move",
        "tags": [
          "categories/{categoryId}/move"
        ]
      }
    },
    "/V1/categories/{categoryId}/products": {
      "get": {
        "description": "Get products assigned to category",
        "operationId": "catalogCategoryLinkManagementV1GetAssignedProductsGet",
        "parameters": [
          {
            "in": "path",
            "name": "categoryId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-category-product-link-interface"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-category-product-link-interface"
                  },
                  "type": "array"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "categories/{categoryId}/products",
        "tags": [
          "categories/{categoryId}/products"
        ]
      },
      "post": {
        "description": "Assign a product to the required category",
        "operationId": "catalogCategoryLinkRepositoryV1SavePost",
        "parameters": [
          {
            "in": "path",
            "name": "categoryId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/catalogCategoryLinkRepositoryV1SavePostCatalogcategorylinkrepositoryv1savepostbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "will returned True if assigned",
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "description": "will returned True if assigned",
                  "type": "boolean"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "categories/{categoryId}/products",
        "tags": [
          "categories/{categoryId}/products"
        ]
      },
      "put": {
        "description": "Assign a product to the required category",
        "operationId": "catalogCategoryLinkRepositoryV1SavePut",
        "parameters": [
          {
            "in": "path",
            "name": "categoryId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/catalogCategoryLinkRepositoryV1SavePostCatalogcategorylinkrepositoryv1savepostbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "will returned True if assigned",
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "description": "will returned True if assigned",
                  "type": "boolean"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "categories/{categoryId}/products",
        "tags": [
          "categories/{categoryId}/products"
        ]
      }
    },
    "/V1/categories/{categoryId}/products/{sku}": {
      "delete": {
        "description": "Remove the product assignment from the category by category id and sku",
        "operationId": "catalogCategoryLinkRepositoryV1DeleteByIdsDelete",
        "parameters": [
          {
            "in": "path",
            "name": "categoryId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "sku",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "will returned True if products successfully deleted",
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "description": "will returned True if products successfully deleted",
                  "type": "boolean"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "categories/{categoryId}/products/{sku}",
        "tags": [
          "categories/{categoryId}/products/{sku}"
        ]
      }
    },
    "/V1/categories/{id}": {
      "put": {
        "description": "Create category service",
        "operationId": "catalogCategoryRepositoryV1SavePut",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/catalogCategoryRepositoryV1SavePostCatalogcategoryrepositoryv1savepostbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/catalog-data-category-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/catalog-data-category-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "categories/{id}",
        "tags": [
          "categories/{id}"
        ]
      }
    },
    "/V1/cmsBlock": {
      "post": {
        "description": "Save block.",
        "operationId": "cmsBlockRepositoryV1SavePost",
        "requestBody": {
          "$ref": "#/components/requestBodies/cmsBlockRepositoryV1SavePostCmsblockrepositoryv1savepostbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/cms-data-block-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/cms-data-block-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Internal Server error"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "cmsBlock",
        "tags": [
          "cmsBlock"
        ]
      }
    },
    "/V1/cmsBlock/search": {
      "get": {
        "description": "Retrieve blocks matching the specified criteria.",
        "operationId": "cmsBlockRepositoryV1GetListGet",
        "parameters": [
          {
            "description": "Field",
            "in": "query",
            "name": "searchCriteria[filterGroups][0][filters][0][field]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Value",
            "in": "query",
            "name": "searchCriteria[filterGroups][0][filters][0][value]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Condition type",
            "in": "query",
            "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sorting field.",
            "in": "query",
            "name": "searchCriteria[sortOrders][0][field]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sorting direction.",
            "in": "query",
            "name": "searchCriteria[sortOrders][0][direction]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Page size.",
            "in": "query",
            "name": "searchCriteria[pageSize]",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Current page.",
            "in": "query",
            "name": "searchCriteria[currentPage]",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/cms-data-block-search-results-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/cms-data-block-search-results-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Internal Server error"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "cmsBlock/search",
        "tags": [
          "cmsBlock/search"
        ]
      }
    },
    "/V1/cmsBlock/{blockId}": {
      "delete": {
        "description": "Delete block by ID.",
        "operationId": "cmsBlockRepositoryV1DeleteByIdDelete",
        "parameters": [
          {
            "in": "path",
            "name": "blockId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "true on success",
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "description": "true on success",
                  "type": "boolean"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Internal Server error"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "cmsBlock/{blockId}",
        "tags": [
          "cmsBlock/{blockId}"
        ]
      },
      "get": {
        "description": "Retrieve block.",
        "operationId": "cmsBlockRepositoryV1GetByIdGet",
        "parameters": [
          {
            "in": "path",
            "name": "blockId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/cms-data-block-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/cms-data-block-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Internal Server error"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "cmsBlock/{blockId}",
        "tags": [
          "cmsBlock/{blockId}"
        ]
      }
    },
    "/V1/cmsBlock/{id}": {
      "put": {
        "description": "Save block.",
        "operationId": "cmsBlockRepositoryV1SavePut",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/cmsBlockRepositoryV1SavePostCmsblockrepositoryv1savepostbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/cms-data-block-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/cms-data-block-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Internal Server error"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "cmsBlock/{id}",
        "tags": [
          "cmsBlock/{id}"
        ]
      }
    },
    "/V1/cmsPage": {
      "post": {
        "description": "Save page.",
        "operationId": "cmsPageRepositoryV1SavePost",
        "requestBody": {
          "$ref": "#/components/requestBodies/cmsPageRepositoryV1SavePostCmspagerepositoryv1savepostbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/cms-data-page-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/cms-data-page-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Internal Server error"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "cmsPage",
        "tags": [
          "cmsPage"
        ]
      }
    },
    "/V1/cmsPage/search": {
      "get": {
        "description": "Retrieve pages matching the specified criteria.",
        "operationId": "cmsPageRepositoryV1GetListGet",
        "parameters": [
          {
            "description": "Field",
            "in": "query",
            "name": "searchCriteria[filterGroups][0][filters][0][field]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Value",
            "in": "query",
            "name": "searchCriteria[filterGroups][0][filters][0][value]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Condition type",
            "in": "query",
            "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sorting field.",
            "in": "query",
            "name": "searchCriteria[sortOrders][0][field]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sorting direction.",
            "in": "query",
            "name": "searchCriteria[sortOrders][0][direction]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Page size.",
            "in": "query",
            "name": "searchCriteria[pageSize]",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Current page.",
            "in": "query",
            "name": "searchCriteria[currentPage]",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/cms-data-page-search-results-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/cms-data-page-search-results-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Internal Server error"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "cmsPage/search",
        "tags": [
          "cmsPage/search"
        ]
      }
    },
    "/V1/cmsPage/{id}": {
      "put": {
        "description": "Save page.",
        "operationId": "cmsPageRepositoryV1SavePut",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/cmsPageRepositoryV1SavePostCmspagerepositoryv1savepostbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/cms-data-page-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/cms-data-page-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Internal Server error"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "cmsPage/{id}",
        "tags": [
          "cmsPage/{id}"
        ]
      }
    },
    "/V1/cmsPage/{pageId}": {
      "delete": {
        "description": "Delete page by ID.",
        "operationId": "cmsPageRepositoryV1DeleteByIdDelete",
        "parameters": [
          {
            "in": "path",
            "name": "pageId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "true on success",
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "description": "true on success",
                  "type": "boolean"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Internal Server error"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "cmsPage/{pageId}",
        "tags": [
          "cmsPage/{pageId}"
        ]
      },
      "get": {
        "description": "Retrieve page.",
        "operationId": "cmsPageRepositoryV1GetByIdGet",
        "parameters": [
          {
            "in": "path",
            "name": "pageId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/cms-data-page-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/cms-data-page-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Internal Server error"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "cmsPage/{pageId}",
        "tags": [
          "cmsPage/{pageId}"
        ]
      }
    },
    "/V1/company/": {
      "get": {
        "description": "Returns the list of companies. The list is an array of objects, and detailed information about item attributes might not be included.",
        "operationId": "companyCompanyRepositoryV1GetListGet",
        "parameters": [
          {
            "description": "Field",
            "in": "query",
            "name": "searchCriteria[filterGroups][0][filters][0][field]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Value",
            "in": "query",
            "name": "searchCriteria[filterGroups][0][filters][0][value]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Condition type",
            "in": "query",
            "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sorting field.",
            "in": "query",
            "name": "searchCriteria[sortOrders][0][field]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sorting direction.",
            "in": "query",
            "name": "searchCriteria[sortOrders][0][direction]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Page size.",
            "in": "query",
            "name": "searchCriteria[pageSize]",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Current page.",
            "in": "query",
            "name": "searchCriteria[currentPage]",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/company-data-company-search-results-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/company-data-company-search-results-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Internal Server error"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "company/",
        "tags": [
          "company/"
        ]
      },
      "post": {
        "description": "Create or update a company account.",
        "operationId": "companyCompanyRepositoryV1SavePost",
        "requestBody": {
          "$ref": "#/components/requestBodies/companyCompanyRepositoryV1SavePostCompanycompanyrepositoryv1savepostbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/company-data-company-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/company-data-company-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "company/",
        "tags": [
          "company/"
        ]
      }
    },
    "/V1/company/assignRoles": {
      "put": {
        "description": "Change a role for a company user.",
        "operationId": "companyAclV1AssignRolesPut",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "roles": {
                    "items": {
                      "$ref": "#/components/schemas/company-data-role-interface"
                    },
                    "type": "array"
                  },
                  "userId": {
                    "type": "integer"
                  }
                },
                "required": [
                  "userId",
                  "roles"
                ],
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "properties": {
                  "roles": {
                    "items": {
                      "$ref": "#/components/schemas/company-data-role-interface"
                    },
                    "type": "array"
                  },
                  "userId": {
                    "type": "integer"
                  }
                },
                "required": [
                  "userId",
                  "roles"
                ],
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "company/assignRoles",
        "tags": [
          "company/assignRoles"
        ]
      }
    },
    "/V1/company/role/": {
      "get": {
        "description": "Returns the list of roles and permissions for a specified company.",
        "operationId": "companyRoleRepositoryV1GetListGet",
        "parameters": [
          {
            "description": "Field",
            "in": "query",
            "name": "searchCriteria[filterGroups][0][filters][0][field]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Value",
            "in": "query",
            "name": "searchCriteria[filterGroups][0][filters][0][value]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Condition type",
            "in": "query",
            "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sorting field.",
            "in": "query",
            "name": "searchCriteria[sortOrders][0][field]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sorting direction.",
            "in": "query",
            "name": "searchCriteria[sortOrders][0][direction]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Page size.",
            "in": "query",
            "name": "searchCriteria[pageSize]",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Current page.",
            "in": "query",
            "name": "searchCriteria[currentPage]",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/company-data-role-search-results-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/company-data-role-search-results-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Internal Server error"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "company/role/",
        "tags": [
          "company/role/"
        ]
      },
      "post": {
        "description": "Create or update a role for a selected company.",
        "operationId": "companyRoleRepositoryV1SavePost",
        "requestBody": {
          "$ref": "#/components/requestBodies/companyRoleRepositoryV1SavePostCompanyrolerepositoryv1savepostbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/company-data-role-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/company-data-role-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "company/role/",
        "tags": [
          "company/role/"
        ]
      }
    },
    "/V1/company/role/{id}": {
      "put": {
        "description": "Create or update a role for a selected company.",
        "operationId": "companyRoleRepositoryV1SavePut",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/companyRoleRepositoryV1SavePostCompanyrolerepositoryv1savepostbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/company-data-role-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/company-data-role-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "company/role/{id}",
        "tags": [
          "company/role/{id}"
        ]
      }
    },
    "/V1/company/role/{roleId}": {
      "delete": {
        "description": "Delete a role.",
        "operationId": "companyRoleRepositoryV1DeleteDelete",
        "parameters": [
          {
            "in": "path",
            "name": "roleId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "company/role/{roleId}",
        "tags": [
          "company/role/{roleId}"
        ]
      },
      "get": {
        "description": "Returns the list of permissions for a specified role.",
        "operationId": "companyRoleRepositoryV1GetGet",
        "parameters": [
          {
            "in": "path",
            "name": "roleId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/company-data-role-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/company-data-role-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "company/role/{roleId}",
        "tags": [
          "company/role/{roleId}"
        ]
      }
    },
    "/V1/company/role/{roleId}/users": {
      "get": {
        "description": "View the list of company users assigned to a specified role.",
        "operationId": "companyAclV1GetUsersByRoleIdGet",
        "parameters": [
          {
            "in": "path",
            "name": "roleId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/customer-data-customer-interface"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/customer-data-customer-interface"
                  },
                  "type": "array"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "company/role/{roleId}/users",
        "tags": [
          "company/role/{roleId}/users"
        ]
      }
    },
    "/V1/company/{companyId}": {
      "delete": {
        "description": "Delete a company. Customers belonging to a company are not deleted with this request.",
        "operationId": "companyCompanyRepositoryV1DeleteByIdDelete",
        "parameters": [
          {
            "in": "path",
            "name": "companyId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "company/{companyId}",
        "tags": [
          "company/{companyId}"
        ]
      },
      "get": {
        "description": "Returns company details.",
        "operationId": "companyCompanyRepositoryV1GetGet",
        "parameters": [
          {
            "in": "path",
            "name": "companyId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/company-data-company-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/company-data-company-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "company/{companyId}",
        "tags": [
          "company/{companyId}"
        ]
      },
      "put": {
        "description": "Create or update a company account.",
        "operationId": "companyCompanyRepositoryV1SavePut",
        "parameters": [
          {
            "in": "path",
            "name": "companyId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/companyCompanyRepositoryV1SavePostCompanycompanyrepositoryv1savepostbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/company-data-company-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/company-data-company-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "company/{companyId}",
        "tags": [
          "company/{companyId}"
        ]
      }
    },
    "/V1/companyCredits/": {
      "get": {
        "description": "Returns the list of credits for specified companies.",
        "operationId": "companyCreditCreditLimitRepositoryV1GetListGet",
        "parameters": [
          {
            "description": "Field",
            "in": "query",
            "name": "searchCriteria[filterGroups][0][filters][0][field]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Value",
            "in": "query",
            "name": "searchCriteria[filterGroups][0][filters][0][value]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Condition type",
            "in": "query",
            "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sorting field.",
            "in": "query",
            "name": "searchCriteria[sortOrders][0][field]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sorting direction.",
            "in": "query",
            "name": "searchCriteria[sortOrders][0][direction]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Page size.",
            "in": "query",
            "name": "searchCriteria[pageSize]",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Current page.",
            "in": "query",
            "name": "searchCriteria[currentPage]",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/company-credit-data-credit-limit-search-results-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/company-credit-data-credit-limit-search-results-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Internal Server error"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "companyCredits/",
        "tags": [
          "companyCredits/"
        ]
      }
    },
    "/V1/companyCredits/company/{companyId}": {
      "get": {
        "description": "Returns data on the credit limit for a specified company.",
        "operationId": "companyCreditCreditLimitManagementV1GetCreditByCompanyIdGet",
        "parameters": [
          {
            "in": "path",
            "name": "companyId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/company-credit-data-credit-limit-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/company-credit-data-credit-limit-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "companyCredits/company/{companyId}",
        "tags": [
          "companyCredits/company/{companyId}"
        ]
      }
    },
    "/V1/companyCredits/history": {
      "get": {
        "description": "Returns the credit history for one or more companies.",
        "operationId": "companyCreditCreditHistoryManagementV1GetListGet",
        "parameters": [
          {
            "description": "Field",
            "in": "query",
            "name": "searchCriteria[filterGroups][0][filters][0][field]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Value",
            "in": "query",
            "name": "searchCriteria[filterGroups][0][filters][0][value]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Condition type",
            "in": "query",
            "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sorting field.",
            "in": "query",
            "name": "searchCriteria[sortOrders][0][field]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sorting direction.",
            "in": "query",
            "name": "searchCriteria[sortOrders][0][direction]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Page size.",
            "in": "query",
            "name": "searchCriteria[pageSize]",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Current page.",
            "in": "query",
            "name": "searchCriteria[currentPage]",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/company-credit-data-history-search-results-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/company-credit-data-history-search-results-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Internal Server error"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "companyCredits/history",
        "tags": [
          "companyCredits/history"
        ]
      }
    },
    "/V1/companyCredits/history/{historyId}": {
      "put": {
        "description": "Update the PO Number and/or comment for a Reimburse transaction.",
        "operationId": "companyCreditCreditHistoryManagementV1UpdatePut",
        "parameters": [
          {
            "in": "path",
            "name": "historyId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "comment": {
                    "description": "[optional]",
                    "type": "string"
                  },
                  "purchaseOrder": {
                    "description": "[optional]",
                    "type": "string"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "properties": {
                  "comment": {
                    "description": "[optional]",
                    "type": "string"
                  },
                  "purchaseOrder": {
                    "description": "[optional]",
                    "type": "string"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "true on success",
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "description": "true on success",
                  "type": "boolean"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "companyCredits/history/{historyId}",
        "tags": [
          "companyCredits/history/{historyId}"
        ]
      }
    },
    "/V1/companyCredits/{creditId}": {
      "get": {
        "description": "Returns data on the credit limit for a specified credit limit ID.",
        "operationId": "companyCreditCreditLimitRepositoryV1GetGet",
        "parameters": [
          {
            "in": "path",
            "name": "creditId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "[optional]",
            "in": "query",
            "name": "reload",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/company-credit-data-credit-limit-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/company-credit-data-credit-limit-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "companyCredits/{creditId}",
        "tags": [
          "companyCredits/{creditId}"
        ]
      }
    },
    "/V1/companyCredits/{creditId}/decreaseBalance": {
      "post": {
        "description": "Decreases the company credit with an Update, Reimburse, or Purchase transaction. This transaction increases company's outstanding balance and decreases company's available credit.",
        "operationId": "companyCreditCreditBalanceManagementV1DecreasePost",
        "parameters": [
          {
            "in": "path",
            "name": "creditId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/companyCreditCreditBalanceManagementV1DecreasePostCompanycreditcreditbalancemanagementv1decreasepostbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "true on success",
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "description": "true on success",
                  "type": "boolean"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "companyCredits/{creditId}/decreaseBalance",
        "tags": [
          "companyCredits/{creditId}/decreaseBalance"
        ]
      }
    },
    "/V1/companyCredits/{creditId}/increaseBalance": {
      "post": {
        "description": "Increases the company credit with an Allocate, Update, Refund, Revert, or Reimburse transaction. This transaction decreases company's outstanding balance and increases company's available credit.",
        "operationId": "companyCreditCreditBalanceManagementV1IncreasePost",
        "parameters": [
          {
            "in": "path",
            "name": "creditId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/companyCreditCreditBalanceManagementV1DecreasePostCompanycreditcreditbalancemanagementv1decreasepostbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "true on success",
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "description": "true on success",
                  "type": "boolean"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "companyCredits/{creditId}/increaseBalance",
        "tags": [
          "companyCredits/{creditId}/increaseBalance"
        ]
      }
    },
    "/V1/companyCredits/{id}": {
      "put": {
        "description": "Update the following company credit attributes: credit currency, credit limit and setting to exceed credit.",
        "operationId": "companyCreditCreditLimitRepositoryV1SavePut",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "creditLimit": {
                    "$ref": "#/components/schemas/company-credit-data-credit-limit-interface"
                  }
                },
                "required": [
                  "creditLimit"
                ],
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "properties": {
                  "creditLimit": {
                    "$ref": "#/components/schemas/company-credit-data-credit-limit-interface"
                  }
                },
                "required": [
                  "creditLimit"
                ],
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/company-credit-data-credit-limit-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/company-credit-data-credit-limit-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Internal Server error"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "companyCredits/{id}",
        "tags": [
          "companyCredits/{id}"
        ]
      }
    },
    "/V1/configurable-products/variation": {
      "put": {
        "description": "Generate variation based on same product",
        "operationId": "configurableProductConfigurableProductManagementV1GenerateVariationPut",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "options": {
                    "items": {
                      "$ref": "#/components/schemas/configurable-product-data-option-interface"
                    },
                    "type": "array"
                  },
                  "product": {
                    "$ref": "#/components/schemas/catalog-data-product-interface"
                  }
                },
                "required": [
                  "product",
                  "options"
                ],
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "properties": {
                  "options": {
                    "items": {
                      "$ref": "#/components/schemas/configurable-product-data-option-interface"
                    },
                    "type": "array"
                  },
                  "product": {
                    "$ref": "#/components/schemas/catalog-data-product-interface"
                  }
                },
                "required": [
                  "product",
                  "options"
                ],
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-product-interface"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-product-interface"
                  },
                  "type": "array"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "configurable-products/variation",
        "tags": [
          "configurable-products/variation"
        ]
      }
    },
    "/V1/configurable-products/{sku}/child": {
      "post": {
        "description": "",
        "operationId": "configurableProductLinkManagementV1AddChildPost",
        "parameters": [
          {
            "in": "path",
            "name": "sku",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "childSku": {
                    "type": "string"
                  }
                },
                "required": [
                  "childSku"
                ],
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "properties": {
                  "childSku": {
                    "type": "string"
                  }
                },
                "required": [
                  "childSku"
                ],
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "configurable-products/{sku}/child",
        "tags": [
          "configurable-products/{sku}/child"
        ]
      }
    },
    "/V1/configurable-products/{sku}/children": {
      "get": {
        "description": "Get all children for Configurable product",
        "operationId": "configurableProductLinkManagementV1GetChildrenGet",
        "parameters": [
          {
            "in": "path",
            "name": "sku",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-product-interface"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-product-interface"
                  },
                  "type": "array"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "configurable-products/{sku}/children",
        "tags": [
          "configurable-products/{sku}/children"
        ]
      }
    },
    "/V1/configurable-products/{sku}/children/{childSku}": {
      "delete": {
        "description": "Remove configurable product option",
        "operationId": "configurableProductLinkManagementV1RemoveChildDelete",
        "parameters": [
          {
            "in": "path",
            "name": "sku",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "childSku",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "configurable-products/{sku}/children/{childSku}",
        "tags": [
          "configurable-products/{sku}/children/{childSku}"
        ]
      }
    },
    "/V1/configurable-products/{sku}/options": {
      "post": {
        "description": "Save option",
        "operationId": "configurableProductOptionRepositoryV1SavePost",
        "parameters": [
          {
            "in": "path",
            "name": "sku",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/configurableProductOptionRepositoryV1SavePostConfigurableproductoptionrepositoryv1savepostbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "integer"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Internal Server error"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "configurable-products/{sku}/options",
        "tags": [
          "configurable-products/{sku}/options"
        ]
      }
    },
    "/V1/configurable-products/{sku}/options/all": {
      "get": {
        "description": "Get all options for configurable product",
        "operationId": "configurableProductOptionRepositoryV1GetListGet",
        "parameters": [
          {
            "in": "path",
            "name": "sku",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/configurable-product-data-option-interface"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/configurable-product-data-option-interface"
                  },
                  "type": "array"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "configurable-products/{sku}/options/all",
        "tags": [
          "configurable-products/{sku}/options/all"
        ]
      }
    },
    "/V1/configurable-products/{sku}/options/{id}": {
      "delete": {
        "description": "Remove option from configurable product",
        "operationId": "configurableProductOptionRepositoryV1DeleteByIdDelete",
        "parameters": [
          {
            "in": "path",
            "name": "sku",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "configurable-products/{sku}/options/{id}",
        "tags": [
          "configurable-products/{sku}/options/{id}"
        ]
      },
      "get": {
        "description": "Get option for configurable product",
        "operationId": "configurableProductOptionRepositoryV1GetGet",
        "parameters": [
          {
            "in": "path",
            "name": "sku",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/configurable-product-data-option-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/configurable-product-data-option-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "configurable-products/{sku}/options/{id}",
        "tags": [
          "configurable-products/{sku}/options/{id}"
        ]
      },
      "put": {
        "description": "Save option",
        "operationId": "configurableProductOptionRepositoryV1SavePut",
        "parameters": [
          {
            "in": "path",
            "name": "sku",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/configurableProductOptionRepositoryV1SavePostConfigurableproductoptionrepositoryv1savepostbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "integer"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Internal Server error"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "configurable-products/{sku}/options/{id}",
        "tags": [
          "configurable-products/{sku}/options/{id}"
        ]
      }
    },
    "/V1/coupons": {
      "post": {
        "description": "Save a coupon.",
        "operationId": "salesRuleCouponRepositoryV1SavePost",
        "requestBody": {
          "$ref": "#/components/requestBodies/salesRuleCouponRepositoryV1SavePostSalesrulecouponrepositoryv1savepostbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sales-rule-data-coupon-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/sales-rule-data-coupon-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Internal Server error"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "coupons",
        "tags": [
          "coupons"
        ]
      }
    },
    "/V1/coupons/deleteByCodes": {
      "post": {
        "description": "Delete coupon by coupon codes.",
        "operationId": "salesRuleCouponManagementV1DeleteByCodesPost",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "codes": {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "ignoreInvalidCoupons": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "codes"
                ],
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "properties": {
                  "codes": {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "ignoreInvalidCoupons": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "codes"
                ],
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sales-rule-data-coupon-mass-delete-result-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/sales-rule-data-coupon-mass-delete-result-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Internal Server error"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "coupons/deleteByCodes",
        "tags": [
          "coupons/deleteByCodes"
        ]
      }
    },
    "/V1/coupons/deleteByIds": {
      "post": {
        "description": "Delete coupon by coupon ids.",
        "operationId": "salesRuleCouponManagementV1DeleteByIdsPost",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "ids": {
                    "items": {
                      "type": "integer"
                    },
                    "type": "array"
                  },
                  "ignoreInvalidCoupons": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "ids"
                ],
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "properties": {
                  "ids": {
                    "items": {
                      "type": "integer"
                    },
                    "type": "array"
                  },
                  "ignoreInvalidCoupons": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "ids"
                ],
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sales-rule-data-coupon-mass-delete-result-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/sales-rule-data-coupon-mass-delete-result-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Internal Server error"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "coupons/deleteByIds",
        "tags": [
          "coupons/deleteByIds"
        ]
      }
    },
    "/V1/coupons/generate": {
      "post": {
        "description": "Generate coupon for a rule",
        "operationId": "salesRuleCouponManagementV1GeneratePost",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "couponSpec": {
                    "$ref": "#/components/schemas/sales-rule-data-coupon-generation-spec-interface"
                  }
                },
                "required": [
                  "couponSpec"
                ],
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "properties": {
                  "couponSpec": {
                    "$ref": "#/components/schemas/sales-rule-data-coupon-generation-spec-interface"
                  }
                },
                "required": [
                  "couponSpec"
                ],
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Internal Server error"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "coupons/generate",
        "tags": [
          "coupons/generate"
        ]
      }
    },
    "/V1/coupons/search": {
      "get": {
        "description": "Retrieve a coupon using the specified search criteria. This call returns an array of objects, but detailed information about each object’s attributes might not be included. See https://devdocs.magento.com/codelinks/attributes.html#CouponRepositoryInterface to determine which call to use to get detailed information about all attributes for an object.",
        "operationId": "salesRuleCouponRepositoryV1GetListGet",
        "parameters": [
          {
            "description": "Field",
            "in": "query",
            "name": "searchCriteria[filterGroups][0][filters][0][field]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Value",
            "in": "query",
            "name": "searchCriteria[filterGroups][0][filters][0][value]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Condition type",
            "in": "query",
            "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sorting field.",
            "in": "query",
            "name": "searchCriteria[sortOrders][0][field]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sorting direction.",
            "in": "query",
            "name": "searchCriteria[sortOrders][0][direction]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Page size.",
            "in": "query",
            "name": "searchCriteria[pageSize]",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Current page.",
            "in": "query",
            "name": "searchCriteria[currentPage]",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sales-rule-data-coupon-search-result-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/sales-rule-data-coupon-search-result-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Internal Server error"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "coupons/search",
        "tags": [
          "coupons/search"
        ]
      }
    },
    "/V1/coupons/{couponId}": {
      "delete": {
        "description": "Delete coupon by coupon id.",
        "operationId": "salesRuleCouponRepositoryV1DeleteByIdDelete",
        "parameters": [
          {
            "in": "path",
            "name": "couponId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "true on success",
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "description": "true on success",
                  "type": "boolean"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Internal Server error"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "coupons/{couponId}",
        "tags": [
          "coupons/{couponId}"
        ]
      },
      "get": {
        "description": "Get coupon by coupon id.",
        "operationId": "salesRuleCouponRepositoryV1GetByIdGet",
        "parameters": [
          {
            "in": "path",
            "name": "couponId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sales-rule-data-coupon-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/sales-rule-data-coupon-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Internal Server error"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "coupons/{couponId}",
        "tags": [
          "coupons/{couponId}"
        ]
      },
      "put": {
        "description": "Save a coupon.",
        "operationId": "salesRuleCouponRepositoryV1SavePut",
        "parameters": [
          {
            "in": "path",
            "name": "couponId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/salesRuleCouponRepositoryV1SavePostSalesrulecouponrepositoryv1savepostbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sales-rule-data-coupon-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/sales-rule-data-coupon-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Internal Server error"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "coupons/{couponId}",
        "tags": [
          "coupons/{couponId}"
        ]
      }
    },
    "/V1/creditmemo": {
      "post": {
        "description": "Performs persist operations for a specified credit memo.",
        "operationId": "salesCreditmemoRepositoryV1SavePost",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "entity": {
                    "$ref": "#/components/schemas/sales-data-creditmemo-interface"
                  }
                },
                "required": [
                  "entity"
                ],
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "properties": {
                  "entity": {
                    "$ref": "#/components/schemas/sales-data-creditmemo-interface"
                  }
                },
                "required": [
                  "entity"
                ],
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sales-data-creditmemo-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/sales-data-creditmemo-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "creditmemo",
        "tags": [
          "creditmemo"
        ]
      }
    },
    "/V1/creditmemo/refund": {
      "post": {
        "description": "Prepare creditmemo to refund and save it.",
        "operationId": "salesCreditmemoManagementV1RefundPost",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "creditmemo": {
                    "$ref": "#/components/schemas/sales-data-creditmemo-interface"
                  },
                  "offlineRequested": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "creditmemo"
                ],
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "properties": {
                  "creditmemo": {
                    "$ref": "#/components/schemas/sales-data-creditmemo-interface"
                  },
                  "offlineRequested": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "creditmemo"
                ],
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sales-data-creditmemo-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/sales-data-creditmemo-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "creditmemo/refund",
        "tags": [
          "creditmemo/refund"
        ]
      }
    },
    "/V1/creditmemo/{id}": {
      "get": {
        "description": "Loads a specified credit memo.",
        "operationId": "salesCreditmemoRepositoryV1GetGet",
        "parameters": [
          {
            "description": "The credit memo ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sales-data-creditmemo-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/sales-data-creditmemo-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "creditmemo/{id}",
        "tags": [
          "creditmemo/{id}"
        ]
      },
      "put": {
        "description": "Cancels a specified credit memo.",
        "operationId": "salesCreditmemoManagementV1CancelPut",
        "parameters": [
          {
            "description": "The credit memo ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Internal Server error"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "creditmemo/{id}",
        "tags": [
          "creditmemo/{id}"
        ]
      }
    },
    "/V1/creditmemo/{id}/comments": {
      "get": {
        "description": "Lists comments for a specified credit memo.",
        "operationId": "salesCreditmemoManagementV1GetCommentsListGet",
        "parameters": [
          {
            "description": "The credit memo ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sales-data-creditmemo-comment-search-result-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/sales-data-creditmemo-comment-search-result-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "creditmemo/{id}/comments",
        "tags": [
          "creditmemo/{id}/comments"
        ]
      },
      "post": {
        "description": "Performs persist operations for a specified entity.",
        "operationId": "salesCreditmemoCommentRepositoryV1SavePost",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "entity": {
                    "$ref": "#/components/schemas/sales-data-creditmemo-comment-interface"
                  }
                },
                "required": [
                  "entity"
                ],
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "properties": {
                  "entity": {
                    "$ref": "#/components/schemas/sales-data-creditmemo-comment-interface"
                  }
                },
                "required": [
                  "entity"
                ],
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sales-data-creditmemo-comment-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/sales-data-creditmemo-comment-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "creditmemo/{id}/comments",
        "tags": [
          "creditmemo/{id}/comments"
        ]
      }
    },
    "/V1/creditmemo/{id}/emails": {
      "post": {
        "description": "Emails a user a specified credit memo.",
        "operationId": "salesCreditmemoManagementV1NotifyPost",
        "parameters": [
          {
            "description": "The credit memo ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "creditmemo/{id}/emails",
        "tags": [
          "creditmemo/{id}/emails"
        ]
      }
    },
    "/V1/creditmemos": {
      "get": {
        "description": "Lists credit memos that match specified search criteria. This call returns an array of objects, but detailed information about each object’s attributes might not be included. See https://devdocs.magento.com/codelinks/attributes.html#CreditmemoRepositoryInterface to determine which call to use to get detailed information about all attributes for an object.",
        "operationId": "salesCreditmemoRepositoryV1GetListGet",
        "parameters": [
          {
            "description": "Field",
            "in": "query",
            "name": "searchCriteria[filterGroups][0][filters][0][field]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Value",
            "in": "query",
            "name": "searchCriteria[filterGroups][0][filters][0][value]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Condition type",
            "in": "query",
            "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sorting field.",
            "in": "query",
            "name": "searchCriteria[sortOrders][0][field]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sorting direction.",
            "in": "query",
            "name": "searchCriteria[sortOrders][0][direction]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Page size.",
            "in": "query",
            "name": "searchCriteria[pageSize]",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Current page.",
            "in": "query",
            "name": "searchCriteria[currentPage]",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sales-data-creditmemo-search-result-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/sales-data-creditmemo-search-result-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "creditmemos",
        "tags": [
          "creditmemos"
        ]
      }
    },
    "/V1/customerGroups": {
      "post": {
        "description": "Save customer group.",
        "operationId": "customerGroupRepositoryV1SavePost",
        "requestBody": {
          "$ref": "#/components/requestBodies/customerGroupRepositoryV1SavePostCustomergrouprepositoryv1savepostbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-group-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-group-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Internal Server error"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "customerGroups",
        "tags": [
          "customerGroups"
        ]
      }
    },
    "/V1/customerGroups/default": {
      "get": {
        "description": "Get default customer group.",
        "operationId": "customerGroupManagementV1GetDefaultGroupGet",
        "parameters": [
          {
            "in": "query",
            "name": "storeId",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-group-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-group-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Internal Server error"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "customerGroups/default",
        "tags": [
          "customerGroups/default"
        ]
      }
    },
    "/V1/customerGroups/default/{id}": {
      "put": {
        "description": "Set system default customer group.",
        "operationId": "customerCustomerGroupConfigV1SetDefaultCustomerGroupPut",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "integer"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Internal Server error"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "customerGroups/default/{id}",
        "tags": [
          "customerGroups/default/{id}"
        ]
      }
    },
    "/V1/customerGroups/default/{storeId}": {
      "get": {
        "description": "Get default customer group.",
        "parameters": [
          {
            "in": "path",
            "name": "storeId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-group-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-group-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Internal Server error"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "customerGroups/default/{storeId}",
        "tags": [
          "customerGroups/default/{storeId}"
        ]
      }
    },
    "/V1/customerGroups/search": {
      "get": {
        "description": "Retrieve customer groups. The list of groups can be filtered to exclude the NOT_LOGGED_IN group using the first parameter and/or it can be filtered by tax class. This call returns an array of objects, but detailed information about each object’s attributes might not be included. See https://devdocs.magento.com/codelinks/attributes.html#GroupRepositoryInterface to determine which call to use to get detailed information about all attributes for an object.",
        "operationId": "customerGroupRepositoryV1GetListGet",
        "parameters": [
          {
            "description": "Field",
            "in": "query",
            "name": "searchCriteria[filterGroups][0][filters][0][field]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Value",
            "in": "query",
            "name": "searchCriteria[filterGroups][0][filters][0][value]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Condition type",
            "in": "query",
            "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sorting field.",
            "in": "query",
            "name": "searchCriteria[sortOrders][0][field]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sorting direction.",
            "in": "query",
            "name": "searchCriteria[sortOrders][0][direction]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Page size.",
            "in": "query",
            "name": "searchCriteria[pageSize]",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Current page.",
            "in": "query",
            "name": "searchCriteria[currentPage]",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-group-search-results-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-group-search-results-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Internal Server error"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "customerGroups/search",
        "tags": [
          "customerGroups/search"
        ]
      }
    },
    "/V1/customerGroups/{id}": {
      "delete": {
        "description": "Delete customer group by ID.",
        "operationId": "customerGroupRepositoryV1DeleteByIdDelete",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "true on success",
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "description": "true on success",
                  "type": "boolean"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Internal Server error"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "customerGroups/{id}",
        "tags": [
          "customerGroups/{id}"
        ]
      },
      "get": {
        "description": "Get customer group by group ID.",
        "operationId": "customerGroupRepositoryV1GetByIdGet",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-group-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-group-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Internal Server error"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "customerGroups/{id}",
        "tags": [
          "customerGroups/{id}"
        ]
      },
      "put": {
        "description": "Save customer group.",
        "operationId": "customerGroupRepositoryV1SavePut",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/customerGroupRepositoryV1SavePostCustomergrouprepositoryv1savepostbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-group-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-group-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Internal Server error"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "customerGroups/{id}",
        "tags": [
          "customerGroups/{id}"
        ]
      }
    },
    "/V1/customerGroups/{id}/permissions": {
      "get": {
        "description": "Check if customer group can be deleted.",
        "operationId": "customerGroupManagementV1IsReadonlyGet",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Internal Server error"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "customerGroups/{id}/permissions",
        "tags": [
          "customerGroups/{id}/permissions"
        ]
      }
    },
    "/V1/customers": {
      "post": {
        "description": "Create customer account. Perform necessary business operations like sending email.",
        "operationId": "customerAccountManagementV1CreateAccountPost",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "customer": {
                    "$ref": "#/components/schemas/customer-data-customer-interface"
                  },
                  "password": {
                    "type": "string"
                  },
                  "redirectUrl": {
                    "type": "string"
                  }
                },
                "required": [
                  "customer"
                ],
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "properties": {
                  "customer": {
                    "$ref": "#/components/schemas/customer-data-customer-interface"
                  },
                  "password": {
                    "type": "string"
                  },
                  "redirectUrl": {
                    "type": "string"
                  }
                },
                "required": [
                  "customer"
                ],
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-customer-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-customer-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Internal Server error"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "customers",
        "tags": [
          "customers"
        ]
      }
    },
    "/V1/customers/addresses/{addressId}": {
      "get": {
        "description": "Retrieve customer address.",
        "operationId": "customerAddressRepositoryV1GetByIdGet",
        "parameters": [
          {
            "in": "path",
            "name": "addressId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-address-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-address-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Internal Server error"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "customers/addresses/{addressId}",
        "tags": [
          "customers/addresses/{addressId}"
        ]
      }
    },
    "/V1/customers/confirm": {
      "post": {
        "description": "Resend confirmation email.",
        "operationId": "customerAccountManagementV1ResendConfirmationPost",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "redirectUrl": {
                    "type": "string"
                  },
                  "websiteId": {
                    "type": "integer"
                  }
                },
                "required": [
                  "email",
                  "websiteId"
                ],
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "redirectUrl": {
                    "type": "string"
                  },
                  "websiteId": {
                    "type": "integer"
                  }
                },
                "required": [
                  "email",
                  "websiteId"
                ],
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "true on success",
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "description": "true on success",
                  "type": "boolean"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Internal Server error"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "customers/confirm",
        "tags": [
          "customers/confirm"
        ]
      }
    },
    "/V1/customers/isEmailAvailable": {
      "post": {
        "description": "Check if given email is associated with a customer account in given website.",
        "operationId": "customerAccountManagementV1IsEmailAvailablePost",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "customerEmail": {
                    "type": "string"
                  },
                  "websiteId": {
                    "description": "If not set, will use the current websiteId",
                    "type": "integer"
                  }
                },
                "required": [
                  "customerEmail"
                ],
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "properties": {
                  "customerEmail": {
                    "type": "string"
                  },
                  "websiteId": {
                    "description": "If not set, will use the current websiteId",
                    "type": "integer"
                  }
                },
                "required": [
                  "customerEmail"
                ],
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            },
            "description": "200 Success."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Internal Server error"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "customers/isEmailAvailable",
        "tags": [
          "customers/isEmailAvailable"
        ]
      }
    },
    "/V1/customers/me": {
      "get": {
        "description": "Get customer by Customer ID.",
        "operationId": "customerCustomerRepositoryV1GetByIdGet",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-customer-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-customer-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Internal Server error"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "customers/me",
        "tags": [
          "customers/me"
        ]
      },
      "put": {
        "description": "Create or update a customer.",
        "operationId": "customerCustomerRepositoryV1SavePut",
        "requestBody": {
          "$ref": "#/components/requestBodies/customerCustomerRepositoryV1SavePutCustomercustomerrepositoryv1saveputbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-customer-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-customer-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Internal Server error"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "customers/me",
        "tags": [
          "customers/me"
        ]
      }
    },
    "/V1/customers/me/activate": {
      "put": {
        "description": "Activate a customer account using a key that was sent in a confirmation email.",
        "operationId": "customerAccountManagementV1ActivateByIdPut",
        "requestBody": {
          "$ref": "#/components/requestBodies/customerAccountManagementV1ActivateByIdPutCustomeraccountmanagementv1activatebyidputbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-customer-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-customer-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Internal Server error"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "customers/me/activate",
        "tags": [
          "customers/me/activate"
        ]
      }
    },
    "/V1/customers/me/billingAddress": {
      "get": {
        "description": "Retrieve default billing address for the given customerId.",
        "operationId": "customerAccountManagementV1GetDefaultBillingAddressGet",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-address-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-address-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Internal Server error"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "customers/me/billingAddress",
        "tags": [
          "customers/me/billingAddress"
        ]
      }
    },
    "/V1/customers/me/password": {
      "put": {
        "description": "Change customer password.",
        "operationId": "customerAccountManagementV1ChangePasswordByIdPut",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "currentPassword": {
                    "type": "string"
                  },
                  "newPassword": {
                    "type": "string"
                  }
                },
                "required": [
                  "currentPassword",
                  "newPassword"
                ],
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "properties": {
                  "currentPassword": {
                    "type": "string"
                  },
                  "newPassword": {
                    "type": "string"
                  }
                },
                "required": [
                  "currentPassword",
                  "newPassword"
                ],
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "true on success",
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "description": "true on success",
                  "type": "boolean"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Internal Server error"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "customers/me/password",
        "tags": [
          "customers/me/password"
        ]
      }
    },
    "/V1/customers/me/shippingAddress": {
      "get": {
        "description": "Retrieve default shipping address for the given customerId.",
        "operationId": "customerAccountManagementV1GetDefaultShippingAddressGet",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-address-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-address-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Internal Server error"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "customers/me/shippingAddress",
        "tags": [
          "customers/me/shippingAddress"
        ]
      }
    },
    "/V1/customers/password": {
      "put": {
        "description": "Send an email to the customer with a password reset link.",
        "operationId": "customerAccountManagementV1InitiatePasswordResetPut",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "template": {
                    "type": "string"
                  },
                  "websiteId": {
                    "type": "integer"
                  }
                },
                "required": [
                  "email",
                  "template"
                ],
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "template": {
                    "type": "string"
                  },
                  "websiteId": {
                    "type": "integer"
                  }
                },
                "required": [
                  "email",
                  "template"
                ],
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "true on success",
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "description": "true on success",
                  "type": "boolean"
                }
              }
            },
            "description": "200 Success."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Internal Server error"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "customers/password",
        "tags": [
          "customers/password"
        ]
      }
    },
    "/V1/customers/resetPassword": {
      "post": {
        "description": "Reset customer password.",
        "operationId": "customerAccountManagementV1ResetPasswordPost",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "email": {
                    "description": "If empty value given then the customer will be matched by the RP token.",
                    "type": "string"
                  },
                  "newPassword": {
                    "type": "string"
                  },
                  "resetToken": {
                    "type": "string"
                  }
                },
                "required": [
                  "email",
                  "resetToken",
                  "newPassword"
                ],
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "properties": {
                  "email": {
                    "description": "If empty value given then the customer will be matched by the RP token.",
                    "type": "string"
                  },
                  "newPassword": {
                    "type": "string"
                  },
                  "resetToken": {
                    "type": "string"
                  }
                },
                "required": [
                  "email",
                  "resetToken",
                  "newPassword"
                ],
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "true on success",
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "description": "true on success",
                  "type": "boolean"
                }
              }
            },
            "description": "200 Success."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Internal Server error"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "customers/resetPassword",
        "tags": [
          "customers/resetPassword"
        ]
      }
    },
    "/V1/customers/search": {
      "get": {
        "description": "Retrieve customers which match a specified criteria. This call returns an array of objects, but detailed information about each object’s attributes might not be included. See https://devdocs.magento.com/codelinks/attributes.html#CustomerRepositoryInterface to determine which call to use to get detailed information about all attributes for an object.",
        "operationId": "customerCustomerRepositoryV1GetListGet",
        "parameters": [
          {
            "description": "Field",
            "in": "query",
            "name": "searchCriteria[filterGroups][0][filters][0][field]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Value",
            "in": "query",
            "name": "searchCriteria[filterGroups][0][filters][0][value]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Condition type",
            "in": "query",
            "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sorting field.",
            "in": "query",
            "name": "searchCriteria[sortOrders][0][field]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sorting direction.",
            "in": "query",
            "name": "searchCriteria[sortOrders][0][direction]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Page size.",
            "in": "query",
            "name": "searchCriteria[pageSize]",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Current page.",
            "in": "query",
            "name": "searchCriteria[currentPage]",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-customer-search-results-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-customer-search-results-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Internal Server error"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "customers/search",
        "tags": [
          "customers/search"
        ]
      }
    },
    "/V1/customers/validate": {
      "put": {
        "description": "Validate customer data.",
        "operationId": "customerAccountManagementV1ValidatePut",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "customer": {
                    "$ref": "#/components/schemas/customer-data-customer-interface"
                  }
                },
                "required": [
                  "customer"
                ],
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "properties": {
                  "customer": {
                    "$ref": "#/components/schemas/customer-data-customer-interface"
                  }
                },
                "required": [
                  "customer"
                ],
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-validation-results-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-validation-results-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Internal Server error"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "customers/validate",
        "tags": [
          "customers/validate"
        ]
      }
    },
    "/V1/customers/{customerId}": {
      "delete": {
        "description": "Delete customer by Customer ID.",
        "operationId": "customerCustomerRepositoryV1DeleteByIdDelete",
        "parameters": [
          {
            "in": "path",
            "name": "customerId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "true on success",
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "description": "true on success",
                  "type": "boolean"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Internal Server error"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "customers/{customerId}",
        "tags": [
          "customers/{customerId}"
        ]
      },
      "get": {
        "description": "Get customer by Customer ID.",
        "parameters": [
          {
            "in": "path",
            "name": "customerId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-customer-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-customer-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Internal Server error"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "customers/{customerId}",
        "tags": [
          "customers/{customerId}"
        ]
      },
      "put": {
        "description": "Create or update a customer.",
        "parameters": [
          {
            "in": "path",
            "name": "customerId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/customerCustomerRepositoryV1SavePutCustomercustomerrepositoryv1saveputbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-customer-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-customer-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Internal Server error"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "customers/{customerId}",
        "tags": [
          "customers/{customerId}"
        ]
      }
    },
    "/V1/customers/{customerId}/billingAddress": {
      "get": {
        "description": "Retrieve default billing address for the given customerId.",
        "parameters": [
          {
            "in": "path",
            "name": "customerId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-address-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-address-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Internal Server error"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "customers/{customerId}/billingAddress",
        "tags": [
          "customers/{customerId}/billingAddress"
        ]
      }
    },
    "/V1/customers/{customerId}/carts": {
      "post": {
        "description": "Creates an empty cart and quote for a specified customer if customer does not have a cart yet.",
        "parameters": [
          {
            "description": "The customer ID.",
            "in": "path",
            "name": "customerId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "new cart ID if customer did not have a cart or ID of the existing cart otherwise.",
                  "type": "integer"
                }
              },
              "application/xml": {
                "schema": {
                  "description": "new cart ID if customer did not have a cart or ID of the existing cart otherwise.",
                  "type": "integer"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "customers/{customerId}/carts",
        "tags": [
          "customers/{customerId}/carts"
        ]
      }
    },
    "/V1/customers/{customerId}/confirm": {
      "get": {
        "description": "Gets the account confirmation status.",
        "operationId": "customerAccountManagementV1GetConfirmationStatusGet",
        "parameters": [
          {
            "in": "path",
            "name": "customerId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Internal Server error"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "customers/{customerId}/confirm",
        "tags": [
          "customers/{customerId}/confirm"
        ]
      }
    },
    "/V1/customers/{customerId}/password/resetLinkToken/{resetPasswordLinkToken}": {
      "get": {
        "description": "Check if password reset token is valid.",
        "operationId": "customerAccountManagementV1ValidateResetPasswordLinkTokenGet",
        "parameters": [
          {
            "description": "If 0 is given then a customer will be matched by the RP token.",
            "in": "path",
            "name": "customerId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "resetPasswordLinkToken",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "True if the token is valid",
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "description": "True if the token is valid",
                  "type": "boolean"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Internal Server error"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "customers/{customerId}/password/resetLinkToken/{resetPasswordLinkToken}",
        "tags": [
          "customers/{customerId}/password/resetLinkToken/{resetPasswordLinkToken}"
        ]
      }
    },
    "/V1/customers/{customerId}/permissions/readonly": {
      "get": {
        "description": "Check if customer can be deleted.",
        "operationId": "customerAccountManagementV1IsReadonlyGet",
        "parameters": [
          {
            "in": "path",
            "name": "customerId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Internal Server error"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "customers/{customerId}/permissions/readonly",
        "tags": [
          "customers/{customerId}/permissions/readonly"
        ]
      }
    },
    "/V1/customers/{customerId}/shippingAddress": {
      "get": {
        "description": "Retrieve default shipping address for the given customerId.",
        "parameters": [
          {
            "in": "path",
            "name": "customerId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-address-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-address-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Internal Server error"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "customers/{customerId}/shippingAddress",
        "tags": [
          "customers/{customerId}/shippingAddress"
        ]
      }
    },
    "/V1/customers/{email}/activate": {
      "put": {
        "description": "Activate a customer account using a key that was sent in a confirmation email.",
        "operationId": "customerAccountManagementV1ActivatePut",
        "parameters": [
          {
            "in": "path",
            "name": "email",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/customerAccountManagementV1ActivateByIdPutCustomeraccountmanagementv1activatebyidputbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-customer-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-customer-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Internal Server error"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "customers/{email}/activate",
        "tags": [
          "customers/{email}/activate"
        ]
      }
    },
    "/V1/directory/countries": {
      "get": {
        "description": "Get all countries and regions information for the store.",
        "operationId": "directoryCountryInformationAcquirerV1GetCountriesInfoGet",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/directory-data-country-information-interface"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/directory-data-country-information-interface"
                  },
                  "type": "array"
                }
              }
            },
            "description": "200 Success."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "directory/countries",
        "tags": [
          "directory/countries"
        ]
      }
    },
    "/V1/directory/countries/{countryId}": {
      "get": {
        "description": "Get country and region information for the store.",
        "operationId": "directoryCountryInformationAcquirerV1GetCountryInfoGet",
        "parameters": [
          {
            "in": "path",
            "name": "countryId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/directory-data-country-information-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/directory-data-country-information-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "directory/countries/{countryId}",
        "tags": [
          "directory/countries/{countryId}"
        ]
      }
    },
    "/V1/directory/currency": {
      "get": {
        "description": "Get currency information for the store.",
        "operationId": "directoryCurrencyInformationAcquirerV1GetCurrencyInfoGet",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/directory-data-currency-information-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/directory-data-currency-information-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "directory/currency",
        "tags": [
          "directory/currency"
        ]
      }
    },
    "/V1/eav/attribute-sets": {
      "post": {
        "description": "Create attribute set from data",
        "operationId": "eavAttributeSetManagementV1CreatePost",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "attributeSet": {
                    "$ref": "#/components/schemas/eav-data-attribute-set-interface"
                  },
                  "entityTypeCode": {
                    "type": "string"
                  },
                  "skeletonId": {
                    "type": "integer"
                  }
                },
                "required": [
                  "entityTypeCode",
                  "attributeSet",
                  "skeletonId"
                ],
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "properties": {
                  "attributeSet": {
                    "$ref": "#/components/schemas/eav-data-attribute-set-interface"
                  },
                  "entityTypeCode": {
                    "type": "string"
                  },
                  "skeletonId": {
                    "type": "integer"
                  }
                },
                "required": [
                  "entityTypeCode",
                  "attributeSet",
                  "skeletonId"
                ],
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/eav-data-attribute-set-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/eav-data-attribute-set-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "eav/attribute-sets",
        "tags": [
          "eav/attribute-sets"
        ]
      }
    },
    "/V1/eav/attribute-sets/list": {
      "get": {
        "description": "Retrieve list of Attribute Sets This call returns an array of objects, but detailed information about each object’s attributes might not be included. See https://devdocs.magento.com/codelinks/attributes.html#AttributeSetRepositoryInterface to determine which call to use to get detailed information about all attributes for an object.",
        "operationId": "eavAttributeSetRepositoryV1GetListGet",
        "parameters": [
          {
            "description": "Field",
            "in": "query",
            "name": "searchCriteria[filterGroups][0][filters][0][field]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Value",
            "in": "query",
            "name": "searchCriteria[filterGroups][0][filters][0][value]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Condition type",
            "in": "query",
            "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sorting field.",
            "in": "query",
            "name": "searchCriteria[sortOrders][0][field]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sorting direction.",
            "in": "query",
            "name": "searchCriteria[sortOrders][0][direction]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Page size.",
            "in": "query",
            "name": "searchCriteria[pageSize]",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Current page.",
            "in": "query",
            "name": "searchCriteria[currentPage]",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/eav-data-attribute-set-search-results-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/eav-data-attribute-set-search-results-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "eav/attribute-sets/list",
        "tags": [
          "eav/attribute-sets/list"
        ]
      }
    },
    "/V1/eav/attribute-sets/{attributeSetId}": {
      "delete": {
        "description": "Remove attribute set by given ID",
        "operationId": "eavAttributeSetRepositoryV1DeleteByIdDelete",
        "parameters": [
          {
            "in": "path",
            "name": "attributeSetId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "eav/attribute-sets/{attributeSetId}",
        "tags": [
          "eav/attribute-sets/{attributeSetId}"
        ]
      },
      "get": {
        "description": "Retrieve attribute set information based on given ID",
        "operationId": "eavAttributeSetRepositoryV1GetGet",
        "parameters": [
          {
            "in": "path",
            "name": "attributeSetId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/eav-data-attribute-set-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/eav-data-attribute-set-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "eav/attribute-sets/{attributeSetId}",
        "tags": [
          "eav/attribute-sets/{attributeSetId}"
        ]
      },
      "put": {
        "description": "Save attribute set data",
        "operationId": "eavAttributeSetRepositoryV1SavePut",
        "parameters": [
          {
            "in": "path",
            "name": "attributeSetId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/eavAttributeSetRepositoryV1SavePutEavattributesetrepositoryv1saveputbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/eav-data-attribute-set-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/eav-data-attribute-set-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Internal Server error"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "eav/attribute-sets/{attributeSetId}",
        "tags": [
          "eav/attribute-sets/{attributeSetId}"
        ]
      }
    },
    "/V1/gift-wrappings": {
      "get": {
        "description": "Return list of gift wrapping data objects based on search criteria",
        "operationId": "giftWrappingWrappingRepositoryV1GetListGet",
        "parameters": [
          {
            "description": "Field",
            "in": "query",
            "name": "searchCriteria[filterGroups][0][filters][0][field]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Value",
            "in": "query",
            "name": "searchCriteria[filterGroups][0][filters][0][value]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Condition type",
            "in": "query",
            "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sorting field.",
            "in": "query",
            "name": "searchCriteria[sortOrders][0][field]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sorting direction.",
            "in": "query",
            "name": "searchCriteria[sortOrders][0][direction]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Page size.",
            "in": "query",
            "name": "searchCriteria[pageSize]",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Current page.",
            "in": "query",
            "name": "searchCriteria[currentPage]",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/gift-wrapping-data-wrapping-search-results-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/gift-wrapping-data-wrapping-search-results-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "gift-wrappings",
        "tags": [
          "gift-wrappings"
        ]
      },
      "post": {
        "description": "Create/Update new gift wrapping with data object values",
        "operationId": "giftWrappingWrappingRepositoryV1SavePost",
        "requestBody": {
          "$ref": "#/components/requestBodies/giftWrappingWrappingRepositoryV1SavePostGiftwrappingwrappingrepositoryv1savepostbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/gift-wrapping-data-wrapping-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/gift-wrapping-data-wrapping-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "gift-wrappings",
        "tags": [
          "gift-wrappings"
        ]
      }
    },
    "/V1/gift-wrappings/{id}": {
      "delete": {
        "description": "Delete gift wrapping",
        "operationId": "giftWrappingWrappingRepositoryV1DeleteByIdDelete",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "gift-wrappings/{id}",
        "tags": [
          "gift-wrappings/{id}"
        ]
      },
      "get": {
        "description": "Return data object for specified wrapping ID and store.",
        "operationId": "giftWrappingWrappingRepositoryV1GetGet",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "storeId",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/gift-wrapping-data-wrapping-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/gift-wrapping-data-wrapping-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "gift-wrappings/{id}",
        "tags": [
          "gift-wrappings/{id}"
        ]
      }
    },
    "/V1/gift-wrappings/{wrappingId}": {
      "put": {
        "description": "Create/Update new gift wrapping with data object values",
        "operationId": "giftWrappingWrappingRepositoryV1SavePut",
        "parameters": [
          {
            "in": "path",
            "name": "wrappingId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/giftWrappingWrappingRepositoryV1SavePostGiftwrappingwrappingrepositoryv1savepostbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/gift-wrapping-data-wrapping-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/gift-wrapping-data-wrapping-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "gift-wrappings/{wrappingId}",
        "tags": [
          "gift-wrappings/{wrappingId}"
        ]
      }
    },
    "/V1/giftregistry/mine/estimate-shipping-methods": {
      "post": {
        "description": "Estimate shipping",
        "operationId": "giftRegistryShippingMethodManagementV1EstimateByRegistryIdPost",
        "requestBody": {
          "$ref": "#/components/requestBodies/giftRegistryShippingMethodManagementV1EstimateByRegistryIdPostGiftregistryshippingmethodmanagementv1estimatebyregistryidpostbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "An array of shipping methods.",
                  "items": {
                    "$ref": "#/components/schemas/quote-data-shipping-method-interface"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "description": "An array of shipping methods.",
                  "items": {
                    "$ref": "#/components/schemas/quote-data-shipping-method-interface"
                  },
                  "type": "array"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "giftregistry/mine/estimate-shipping-methods",
        "tags": [
          "giftregistry/mine/estimate-shipping-methods"
        ]
      }
    },
    "/V1/guest-carts": {
      "post": {
        "description": "Enable an customer or guest user to create an empty cart and quote for an anonymous customer.",
        "operationId": "quoteGuestCartManagementV1CreateEmptyCartPost",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Cart ID.",
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "description": "Cart ID.",
                  "type": "string"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "guest-carts",
        "tags": [
          "guest-carts"
        ]
      }
    },
    "/V1/guest-carts/{cartId}": {
      "get": {
        "description": "Enable a guest user to return information for a specified cart.",
        "operationId": "quoteGuestCartRepositoryV1GetGet",
        "parameters": [
          {
            "in": "path",
            "name": "cartId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/quote-data-cart-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/quote-data-cart-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "guest-carts/{cartId}",
        "tags": [
          "guest-carts/{cartId}"
        ]
      },
      "put": {
        "description": "Assign a specified customer to a specified shopping cart.",
        "operationId": "quoteGuestCartManagementV1AssignCustomerPut",
        "parameters": [
          {
            "description": "The cart ID.",
            "in": "path",
            "name": "cartId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/quoteCartManagementV1AssignCustomerPutQuotecartmanagementv1assigncustomerputbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "guest-carts/{cartId}",
        "tags": [
          "guest-carts/{cartId}"
        ]
      }
    },
    "/V1/guest-carts/{cartId}/billing-address": {
      "get": {
        "description": "Return the billing address for a specified quote.",
        "operationId": "quoteGuestBillingAddressManagementV1GetGet",
        "parameters": [
          {
            "description": "The cart ID.",
            "in": "path",
            "name": "cartId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/quote-data-address-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/quote-data-address-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "guest-carts/{cartId}/billing-address",
        "tags": [
          "guest-carts/{cartId}/billing-address"
        ]
      },
      "post": {
        "description": "Assign a specified billing address to a specified cart.",
        "operationId": "quoteGuestBillingAddressManagementV1AssignPost",
        "parameters": [
          {
            "description": "The cart ID.",
            "in": "path",
            "name": "cartId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/quoteBillingAddressManagementV1AssignPostQuotebillingaddressmanagementv1assignpostbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Address ID.",
                  "type": "integer"
                }
              },
              "application/xml": {
                "schema": {
                  "description": "Address ID.",
                  "type": "integer"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "guest-carts/{cartId}/billing-address",
        "tags": [
          "guest-carts/{cartId}/billing-address"
        ]
      }
    },
    "/V1/guest-carts/{cartId}/checkout-fields": {
      "post": {
        "description": "",
        "operationId": "temandoShippingQuoteGuestCartCheckoutFieldManagementV1SaveCheckoutFieldsPost",
        "parameters": [
          {
            "in": "path",
            "name": "cartId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/temandoShippingQuoteCartCheckoutFieldManagementV1SaveCheckoutFieldsPostTemandoshippingquotecartcheckoutfieldmanagementv1savecheckoutfieldspostbody"
        },
        "responses": {
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "guest-carts/{cartId}/checkout-fields",
        "tags": [
          "guest-carts/{cartId}/checkout-fields"
        ]
      }
    },
    "/V1/guest-carts/{cartId}/collect-totals": {
      "put": {
        "description": "Set shipping/billing methods and additional data for cart and collect totals for guest.",
        "operationId": "quoteGuestCartTotalManagementV1CollectTotalsPut",
        "parameters": [
          {
            "description": "The cart ID.",
            "in": "path",
            "name": "cartId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/quoteCartTotalManagementV1CollectTotalsPutQuotecarttotalmanagementv1collecttotalsputbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/quote-data-totals-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/quote-data-totals-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "guest-carts/{cartId}/collect-totals",
        "tags": [
          "guest-carts/{cartId}/collect-totals"
        ]
      }
    },
    "/V1/guest-carts/{cartId}/collection-point/search-request": {
      "delete": {
        "description": "",
        "operationId": "temandoShippingCollectionPointGuestCartCollectionPointManagementV1DeleteSearchRequestDelete",
        "parameters": [
          {
            "in": "path",
            "name": "cartId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            },
            "description": "200 Success."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Internal Server error"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "guest-carts/{cartId}/collection-point/search-request",
        "tags": [
          "guest-carts/{cartId}/collection-point/search-request"
        ]
      },
      "put": {
        "description": "",
        "operationId": "temandoShippingCollectionPointGuestCartCollectionPointManagementV1SaveSearchRequestPut",
        "parameters": [
          {
            "in": "path",
            "name": "cartId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/temandoShippingCollectionPointCartCollectionPointManagementV1SaveSearchRequestPutTemandoshippingcollectionpointcartcollectionpointmanagementv1savesearchrequestputbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/temando-shipping-data-collection-point-search-request-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/temando-shipping-data-collection-point-search-request-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Internal Server error"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "guest-carts/{cartId}/collection-point/search-request",
        "tags": [
          "guest-carts/{cartId}/collection-point/search-request"
        ]
      }
    },
    "/V1/guest-carts/{cartId}/collection-point/search-result": {
      "get": {
        "description": "",
        "operationId": "temandoShippingCollectionPointGuestCartCollectionPointManagementV1GetCollectionPointsGet",
        "parameters": [
          {
            "in": "path",
            "name": "cartId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/temando-shipping-data-collection-point-quote-collection-point-interface"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/temando-shipping-data-collection-point-quote-collection-point-interface"
                  },
                  "type": "array"
                }
              }
            },
            "description": "200 Success."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "guest-carts/{cartId}/collection-point/search-result",
        "tags": [
          "guest-carts/{cartId}/collection-point/search-result"
        ]
      }
    },
    "/V1/guest-carts/{cartId}/collection-point/select": {
      "post": {
        "description": "",
        "operationId": "temandoShippingCollectionPointGuestCartCollectionPointManagementV1SelectCollectionPointPost",
        "parameters": [
          {
            "in": "path",
            "name": "cartId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/temandoShippingCollectionPointCartCollectionPointManagementV1SelectCollectionPointPostTemandoshippingcollectionpointcartcollectionpointmanagementv1selectcollectionpointpostbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            },
            "description": "200 Success."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Internal Server error"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "guest-carts/{cartId}/collection-point/select",
        "tags": [
          "guest-carts/{cartId}/collection-point/select"
        ]
      }
    },
    "/V1/guest-carts/{cartId}/coupons": {
      "delete": {
        "description": "Delete a coupon from a specified cart.",
        "operationId": "quoteGuestCouponManagementV1RemoveDelete",
        "parameters": [
          {
            "description": "The cart ID.",
            "in": "path",
            "name": "cartId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "guest-carts/{cartId}/coupons",
        "tags": [
          "guest-carts/{cartId}/coupons"
        ]
      },
      "get": {
        "description": "Return information for a coupon in a specified cart.",
        "operationId": "quoteGuestCouponManagementV1GetGet",
        "parameters": [
          {
            "description": "The cart ID.",
            "in": "path",
            "name": "cartId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "The coupon code data.",
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "description": "The coupon code data.",
                  "type": "string"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "guest-carts/{cartId}/coupons",
        "tags": [
          "guest-carts/{cartId}/coupons"
        ]
      }
    },
    "/V1/guest-carts/{cartId}/coupons/{couponCode}": {
      "put": {
        "description": "Add a coupon by code to a specified cart.",
        "operationId": "quoteGuestCouponManagementV1SetPut",
        "parameters": [
          {
            "description": "The cart ID.",
            "in": "path",
            "name": "cartId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The coupon code data.",
            "in": "path",
            "name": "couponCode",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "guest-carts/{cartId}/coupons/{couponCode}",
        "tags": [
          "guest-carts/{cartId}/coupons/{couponCode}"
        ]
      }
    },
    "/V1/guest-carts/{cartId}/delivery-option": {
      "post": {
        "description": "Handle selected delivery option.",
        "operationId": "temandoShippingQuoteGuestCartDeliveryOptionManagementV1SavePost",
        "parameters": [
          {
            "description": "The shopping cart ID.",
            "in": "path",
            "name": "cartId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/temandoShippingQuoteCartDeliveryOptionManagementV1SavePostTemandoshippingquotecartdeliveryoptionmanagementv1savepostbody"
        },
        "responses": {
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Internal Server error"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "guest-carts/{cartId}/delivery-option",
        "tags": [
          "guest-carts/{cartId}/delivery-option"
        ]
      }
    },
    "/V1/guest-carts/{cartId}/estimate-shipping-methods": {
      "post": {
        "description": "Estimate shipping by address and return list of available shipping methods",
        "operationId": "quoteGuestShipmentEstimationV1EstimateByExtendedAddressPost",
        "parameters": [
          {
            "in": "path",
            "name": "cartId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/quoteShipmentEstimationV1EstimateByExtendedAddressPostQuoteshipmentestimationv1estimatebyextendedaddresspostbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "An array of shipping methods",
                  "items": {
                    "$ref": "#/components/schemas/quote-data-shipping-method-interface"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "description": "An array of shipping methods",
                  "items": {
                    "$ref": "#/components/schemas/quote-data-shipping-method-interface"
                  },
                  "type": "array"
                }
              }
            },
            "description": "200 Success."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "guest-carts/{cartId}/estimate-shipping-methods",
        "tags": [
          "guest-carts/{cartId}/estimate-shipping-methods"
        ]
      }
    },
    "/V1/guest-carts/{cartId}/gift-message": {
      "get": {
        "description": "Return the gift message for a specified order.",
        "operationId": "giftMessageGuestCartRepositoryV1GetGet",
        "parameters": [
          {
            "description": "The shopping cart ID.",
            "in": "path",
            "name": "cartId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/gift-message-data-message-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/gift-message-data-message-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "guest-carts/{cartId}/gift-message",
        "tags": [
          "guest-carts/{cartId}/gift-message"
        ]
      },
      "post": {
        "description": "Set the gift message for an entire order.",
        "operationId": "giftMessageGuestCartRepositoryV1SavePost",
        "parameters": [
          {
            "description": "The cart ID.",
            "in": "path",
            "name": "cartId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/giftMessageCartRepositoryV1SavePostGiftmessagecartrepositoryv1savepostbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "guest-carts/{cartId}/gift-message",
        "tags": [
          "guest-carts/{cartId}/gift-message"
        ]
      }
    },
    "/V1/guest-carts/{cartId}/gift-message/{itemId}": {
      "get": {
        "description": "Return the gift message for a specified item in a specified shopping cart.",
        "operationId": "giftMessageGuestItemRepositoryV1GetGet",
        "parameters": [
          {
            "description": "The shopping cart ID.",
            "in": "path",
            "name": "cartId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The item ID.",
            "in": "path",
            "name": "itemId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/gift-message-data-message-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/gift-message-data-message-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "guest-carts/{cartId}/gift-message/{itemId}",
        "tags": [
          "guest-carts/{cartId}/gift-message/{itemId}"
        ]
      },
      "post": {
        "description": "Set the gift message for a specified item in a specified shopping cart.",
        "operationId": "giftMessageGuestItemRepositoryV1SavePost",
        "parameters": [
          {
            "description": "The cart ID.",
            "in": "path",
            "name": "cartId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The item ID.",
            "in": "path",
            "name": "itemId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/giftMessageCartRepositoryV1SavePostGiftmessagecartrepositoryv1savepostbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "guest-carts/{cartId}/gift-message/{itemId}",
        "tags": [
          "guest-carts/{cartId}/gift-message/{itemId}"
        ]
      }
    },
    "/V1/guest-carts/{cartId}/items": {
      "get": {
        "description": "List items that are assigned to a specified cart.",
        "operationId": "quoteGuestCartItemRepositoryV1GetListGet",
        "parameters": [
          {
            "description": "The cart ID.",
            "in": "path",
            "name": "cartId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Array of items.",
                  "items": {
                    "$ref": "#/components/schemas/quote-data-cart-item-interface"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "description": "Array of items.",
                  "items": {
                    "$ref": "#/components/schemas/quote-data-cart-item-interface"
                  },
                  "type": "array"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "guest-carts/{cartId}/items",
        "tags": [
          "guest-carts/{cartId}/items"
        ]
      },
      "post": {
        "description": "Add/update the specified cart item.",
        "operationId": "quoteGuestCartItemRepositoryV1SavePost",
        "parameters": [
          {
            "in": "path",
            "name": "cartId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/quoteCartItemRepositoryV1SavePostQuotecartitemrepositoryv1savepostbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/quote-data-cart-item-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/quote-data-cart-item-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "guest-carts/{cartId}/items",
        "tags": [
          "guest-carts/{cartId}/items"
        ]
      }
    },
    "/V1/guest-carts/{cartId}/items/{itemId}": {
      "delete": {
        "description": "Remove the specified item from the specified cart.",
        "operationId": "quoteGuestCartItemRepositoryV1DeleteByIdDelete",
        "parameters": [
          {
            "description": "The cart ID.",
            "in": "path",
            "name": "cartId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The item ID of the item to be removed.",
            "in": "path",
            "name": "itemId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "guest-carts/{cartId}/items/{itemId}",
        "tags": [
          "guest-carts/{cartId}/items/{itemId}"
        ]
      },
      "put": {
        "description": "Add/update the specified cart item.",
        "operationId": "quoteGuestCartItemRepositoryV1SavePut",
        "parameters": [
          {
            "in": "path",
            "name": "cartId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "itemId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/quoteCartItemRepositoryV1SavePostQuotecartitemrepositoryv1savepostbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/quote-data-cart-item-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/quote-data-cart-item-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "guest-carts/{cartId}/items/{itemId}",
        "tags": [
          "guest-carts/{cartId}/items/{itemId}"
        ]
      }
    },
    "/V1/guest-carts/{cartId}/order": {
      "put": {
        "description": "Place an order for a specified cart.",
        "operationId": "quoteGuestCartManagementV1PlaceOrderPut",
        "parameters": [
          {
            "description": "The cart ID.",
            "in": "path",
            "name": "cartId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/quoteCartManagementV1PlaceOrderPutQuotecartmanagementv1placeorderputbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Order ID.",
                  "type": "integer"
                }
              },
              "application/xml": {
                "schema": {
                  "description": "Order ID.",
                  "type": "integer"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "guest-carts/{cartId}/order",
        "tags": [
          "guest-carts/{cartId}/order"
        ]
      }
    },
    "/V1/guest-carts/{cartId}/payment-information": {
      "get": {
        "description": "Get payment information",
        "operationId": "checkoutGuestPaymentInformationManagementV1GetPaymentInformationGet",
        "parameters": [
          {
            "in": "path",
            "name": "cartId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/checkout-data-payment-details-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/checkout-data-payment-details-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "guest-carts/{cartId}/payment-information",
        "tags": [
          "guest-carts/{cartId}/payment-information"
        ]
      },
      "post": {
        "description": "Set payment information and place order for a specified cart.",
        "operationId": "checkoutGuestPaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPost",
        "parameters": [
          {
            "in": "path",
            "name": "cartId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/checkoutGuestPaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostCheckoutguestpaymentinformationmanagementv1savepaymentinformationandplaceorderpostbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Order ID.",
                  "type": "integer"
                }
              },
              "application/xml": {
                "schema": {
                  "description": "Order ID.",
                  "type": "integer"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "guest-carts/{cartId}/payment-information",
        "tags": [
          "guest-carts/{cartId}/payment-information"
        ]
      }
    },
    "/V1/guest-carts/{cartId}/payment-methods": {
      "get": {
        "description": "List available payment methods for a specified shopping cart. This call returns an array of objects, but detailed information about each object’s attributes might not be included.  See https://devdocs.magento.com/codelinks/attributes.html#GuestPaymentMethodManagementInterface to determine which call to use to get detailed information about all attributes for an object.",
        "operationId": "quoteGuestPaymentMethodManagementV1GetListGet",
        "parameters": [
          {
            "description": "The cart ID.",
            "in": "path",
            "name": "cartId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Array of payment methods.",
                  "items": {
                    "$ref": "#/components/schemas/quote-data-payment-method-interface"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "description": "Array of payment methods.",
                  "items": {
                    "$ref": "#/components/schemas/quote-data-payment-method-interface"
                  },
                  "type": "array"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "guest-carts/{cartId}/payment-methods",
        "tags": [
          "guest-carts/{cartId}/payment-methods"
        ]
      }
    },
    "/V1/guest-carts/{cartId}/selected-payment-method": {
      "get": {
        "description": "Return the payment method for a specified shopping cart.",
        "operationId": "quoteGuestPaymentMethodManagementV1GetGet",
        "parameters": [
          {
            "description": "The cart ID.",
            "in": "path",
            "name": "cartId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/quote-data-payment-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/quote-data-payment-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "guest-carts/{cartId}/selected-payment-method",
        "tags": [
          "guest-carts/{cartId}/selected-payment-method"
        ]
      },
      "put": {
        "description": "Add a specified payment method to a specified shopping cart.",
        "operationId": "quoteGuestPaymentMethodManagementV1SetPut",
        "parameters": [
          {
            "description": "The cart ID.",
            "in": "path",
            "name": "cartId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/quotePaymentMethodManagementV1SetPutQuotepaymentmethodmanagementv1setputbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Payment method ID.",
                  "type": "integer"
                }
              },
              "application/xml": {
                "schema": {
                  "description": "Payment method ID.",
                  "type": "integer"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "guest-carts/{cartId}/selected-payment-method",
        "tags": [
          "guest-carts/{cartId}/selected-payment-method"
        ]
      }
    },
    "/V1/guest-carts/{cartId}/set-payment-information": {
      "post": {
        "description": "Set payment information for a specified cart.",
        "operationId": "checkoutGuestPaymentInformationManagementV1SavePaymentInformationPost",
        "parameters": [
          {
            "in": "path",
            "name": "cartId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/checkoutGuestPaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostCheckoutguestpaymentinformationmanagementv1savepaymentinformationandplaceorderpostbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Order ID.",
                  "type": "integer"
                }
              },
              "application/xml": {
                "schema": {
                  "description": "Order ID.",
                  "type": "integer"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "guest-carts/{cartId}/set-payment-information",
        "tags": [
          "guest-carts/{cartId}/set-payment-information"
        ]
      }
    },
    "/V1/guest-carts/{cartId}/shipping-information": {
      "post": {
        "description": "",
        "operationId": "checkoutGuestShippingInformationManagementV1SaveAddressInformationPost",
        "parameters": [
          {
            "in": "path",
            "name": "cartId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/checkoutShippingInformationManagementV1SaveAddressInformationPostCheckoutshippinginformationmanagementv1saveaddressinformationpostbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/checkout-data-payment-details-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/checkout-data-payment-details-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "guest-carts/{cartId}/shipping-information",
        "tags": [
          "guest-carts/{cartId}/shipping-information"
        ]
      }
    },
    "/V1/guest-carts/{cartId}/shipping-methods": {
      "get": {
        "description": "List applicable shipping methods for a specified quote.",
        "operationId": "quoteGuestShippingMethodManagementV1GetListGet",
        "parameters": [
          {
            "description": "The shopping cart ID.",
            "in": "path",
            "name": "cartId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "An array of shipping methods.",
                  "items": {
                    "$ref": "#/components/schemas/quote-data-shipping-method-interface"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "description": "An array of shipping methods.",
                  "items": {
                    "$ref": "#/components/schemas/quote-data-shipping-method-interface"
                  },
                  "type": "array"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "guest-carts/{cartId}/shipping-methods",
        "tags": [
          "guest-carts/{cartId}/shipping-methods"
        ]
      }
    },
    "/V1/guest-carts/{cartId}/totals": {
      "get": {
        "description": "Return quote totals data for a specified cart.",
        "operationId": "quoteGuestCartTotalRepositoryV1GetGet",
        "parameters": [
          {
            "description": "The cart ID.",
            "in": "path",
            "name": "cartId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/quote-data-totals-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/quote-data-totals-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "guest-carts/{cartId}/totals",
        "tags": [
          "guest-carts/{cartId}/totals"
        ]
      }
    },
    "/V1/guest-carts/{cartId}/totals-information": {
      "post": {
        "description": "Calculate quote totals based on address and shipping method.",
        "operationId": "checkoutGuestTotalsInformationManagementV1CalculatePost",
        "parameters": [
          {
            "in": "path",
            "name": "cartId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/checkoutTotalsInformationManagementV1CalculatePostCheckouttotalsinformationmanagementv1calculatepostbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/quote-data-totals-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/quote-data-totals-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "guest-carts/{cartId}/totals-information",
        "tags": [
          "guest-carts/{cartId}/totals-information"
        ]
      }
    },
    "/V1/guest-giftregistry/{cartId}/estimate-shipping-methods": {
      "post": {
        "description": "Estimate shipping",
        "operationId": "giftRegistryGuestCartShippingMethodManagementV1EstimateByRegistryIdPost",
        "parameters": [
          {
            "description": "The shopping cart ID.",
            "in": "path",
            "name": "cartId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/giftRegistryShippingMethodManagementV1EstimateByRegistryIdPostGiftregistryshippingmethodmanagementv1estimatebyregistryidpostbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "An array of shipping methods.",
                  "items": {
                    "$ref": "#/components/schemas/quote-data-shipping-method-interface"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "description": "An array of shipping methods.",
                  "items": {
                    "$ref": "#/components/schemas/quote-data-shipping-method-interface"
                  },
                  "type": "array"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "guest-giftregistry/{cartId}/estimate-shipping-methods",
        "tags": [
          "guest-giftregistry/{cartId}/estimate-shipping-methods"
        ]
      }
    },
    "/V1/hierarchy/move/{id}": {
      "put": {
        "description": "Moves teams and users within the company structure.",
        "operationId": "companyCompanyHierarchyV1MoveNodePut",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "newParentId": {
                    "type": "integer"
                  }
                },
                "required": [
                  "newParentId"
                ],
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "properties": {
                  "newParentId": {
                    "type": "integer"
                  }
                },
                "required": [
                  "newParentId"
                ],
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "hierarchy/move/{id}",
        "tags": [
          "hierarchy/move/{id}"
        ]
      }
    },
    "/V1/hierarchy/{id}": {
      "get": {
        "description": "Returns the list of teams and company users in the company structure.",
        "operationId": "companyCompanyHierarchyV1GetCompanyHierarchyGet",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/company-data-hierarchy-interface"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/company-data-hierarchy-interface"
                  },
                  "type": "array"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "hierarchy/{id}",
        "tags": [
          "hierarchy/{id}"
        ]
      }
    },
    "/V1/integration/admin/token": {
      "post": {
        "description": "Create access token for admin given the admin credentials.",
        "operationId": "integrationAdminTokenServiceV1CreateAdminAccessTokenPost",
        "requestBody": {
          "$ref": "#/components/requestBodies/integrationAdminTokenServiceV1CreateAdminAccessTokenPostIntegrationadmintokenservicev1createadminaccesstokenpostbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Token created",
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "description": "Token created",
                  "type": "string"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Internal Server error"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "integration/admin/token",
        "tags": [
          "integration/admin/token"
        ]
      }
    },
    "/V1/integration/customer/token": {
      "post": {
        "description": "Create access token for admin given the customer credentials.",
        "operationId": "integrationCustomerTokenServiceV1CreateCustomerAccessTokenPost",
        "requestBody": {
          "$ref": "#/components/requestBodies/integrationAdminTokenServiceV1CreateAdminAccessTokenPostIntegrationadmintokenservicev1createadminaccesstokenpostbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Token created",
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "description": "Token created",
                  "type": "string"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "integration/customer/token",
        "tags": [
          "integration/customer/token"
        ]
      }
    },
    "/V1/invoice/{invoiceId}/refund": {
      "post": {
        "description": "Create refund for invoice",
        "operationId": "salesRefundInvoiceV1ExecutePost",
        "parameters": [
          {
            "in": "path",
            "name": "invoiceId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "appendComment": {
                    "type": "boolean"
                  },
                  "arguments": {
                    "$ref": "#/components/schemas/sales-data-creditmemo-creation-arguments-interface"
                  },
                  "comment": {
                    "$ref": "#/components/schemas/sales-data-creditmemo-comment-creation-interface"
                  },
                  "isOnline": {
                    "type": "boolean"
                  },
                  "items": {
                    "items": {
                      "$ref": "#/components/schemas/sales-data-creditmemo-item-creation-interface"
                    },
                    "type": "array"
                  },
                  "notify": {
                    "type": "boolean"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "properties": {
                  "appendComment": {
                    "type": "boolean"
                  },
                  "arguments": {
                    "$ref": "#/components/schemas/sales-data-creditmemo-creation-arguments-interface"
                  },
                  "comment": {
                    "$ref": "#/components/schemas/sales-data-creditmemo-comment-creation-interface"
                  },
                  "isOnline": {
                    "type": "boolean"
                  },
                  "items": {
                    "items": {
                      "$ref": "#/components/schemas/sales-data-creditmemo-item-creation-interface"
                    },
                    "type": "array"
                  },
                  "notify": {
                    "type": "boolean"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "integer"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "invoice/{invoiceId}/refund",
        "tags": [
          "invoice/{invoiceId}/refund"
        ]
      }
    },
    "/V1/invoices": {
      "get": {
        "description": "Lists invoices that match specified search criteria. This call returns an array of objects, but detailed information about each object’s attributes might not be included. See https://devdocs.magento.com/codelinks/attributes.html#InvoiceRepositoryInterface to determine which call to use to get detailed information about all attributes for an object.",
        "operationId": "salesInvoiceRepositoryV1GetListGet",
        "parameters": [
          {
            "description": "Field",
            "in": "query",
            "name": "searchCriteria[filterGroups][0][filters][0][field]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Value",
            "in": "query",
            "name": "searchCriteria[filterGroups][0][filters][0][value]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Condition type",
            "in": "query",
            "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sorting field.",
            "in": "query",
            "name": "searchCriteria[sortOrders][0][field]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sorting direction.",
            "in": "query",
            "name": "searchCriteria[sortOrders][0][direction]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Page size.",
            "in": "query",
            "name": "searchCriteria[pageSize]",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Current page.",
            "in": "query",
            "name": "searchCriteria[currentPage]",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sales-data-invoice-search-result-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/sales-data-invoice-search-result-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "invoices",
        "tags": [
          "invoices"
        ]
      }
    },
    "/V1/invoices/": {
      "post": {
        "description": "Performs persist operations for a specified invoice.",
        "operationId": "salesInvoiceRepositoryV1SavePost",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "entity": {
                    "$ref": "#/components/schemas/sales-data-invoice-interface"
                  }
                },
                "required": [
                  "entity"
                ],
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "properties": {
                  "entity": {
                    "$ref": "#/components/schemas/sales-data-invoice-interface"
                  }
                },
                "required": [
                  "entity"
                ],
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sales-data-invoice-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/sales-data-invoice-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "invoices/",
        "tags": [
          "invoices/"
        ]
      }
    },
    "/V1/invoices/comments": {
      "post": {
        "description": "Performs persist operations for a specified invoice comment.",
        "operationId": "salesInvoiceCommentRepositoryV1SavePost",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "entity": {
                    "$ref": "#/components/schemas/sales-data-invoice-comment-interface"
                  }
                },
                "required": [
                  "entity"
                ],
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "properties": {
                  "entity": {
                    "$ref": "#/components/schemas/sales-data-invoice-comment-interface"
                  }
                },
                "required": [
                  "entity"
                ],
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sales-data-invoice-comment-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/sales-data-invoice-comment-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "invoices/comments",
        "tags": [
          "invoices/comments"
        ]
      }
    },
    "/V1/invoices/{id}": {
      "get": {
        "description": "Loads a specified invoice.",
        "operationId": "salesInvoiceRepositoryV1GetGet",
        "parameters": [
          {
            "description": "The invoice ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sales-data-invoice-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/sales-data-invoice-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "invoices/{id}",
        "tags": [
          "invoices/{id}"
        ]
      }
    },
    "/V1/invoices/{id}/capture": {
      "post": {
        "description": "Sets invoice capture.",
        "operationId": "salesInvoiceManagementV1SetCapturePost",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "invoices/{id}/capture",
        "tags": [
          "invoices/{id}/capture"
        ]
      }
    },
    "/V1/invoices/{id}/comments": {
      "get": {
        "description": "Lists comments for a specified invoice.",
        "operationId": "salesInvoiceManagementV1GetCommentsListGet",
        "parameters": [
          {
            "description": "The invoice ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sales-data-invoice-comment-search-result-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/sales-data-invoice-comment-search-result-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "invoices/{id}/comments",
        "tags": [
          "invoices/{id}/comments"
        ]
      }
    },
    "/V1/invoices/{id}/emails": {
      "post": {
        "description": "Emails a user a specified invoice.",
        "operationId": "salesInvoiceManagementV1NotifyPost",
        "parameters": [
          {
            "description": "The invoice ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "invoices/{id}/emails",
        "tags": [
          "invoices/{id}/emails"
        ]
      }
    },
    "/V1/invoices/{id}/void": {
      "post": {
        "description": "Voids a specified invoice.",
        "operationId": "salesInvoiceManagementV1SetVoidPost",
        "parameters": [
          {
            "description": "The invoice ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "invoices/{id}/void",
        "tags": [
          "invoices/{id}/void"
        ]
      }
    },
    "/V1/modules": {
      "get": {
        "description": "Returns an array of enabled modules",
        "operationId": "backendModuleServiceV1GetModulesGet",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "modules",
        "tags": [
          "modules"
        ]
      }
    },
    "/V1/negotiable-carts/{cartId}/billing-address": {
      "get": {
        "description": "Returns the billing address for a specified quote.",
        "operationId": "negotiableQuoteBillingAddressManagementV1GetGet",
        "parameters": [
          {
            "description": "The cart ID.",
            "in": "path",
            "name": "cartId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/quote-data-address-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/quote-data-address-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "negotiable-carts/{cartId}/billing-address",
        "tags": [
          "negotiable-carts/{cartId}/billing-address"
        ]
      },
      "post": {
        "description": "Assigns a specified billing address to a specified cart.",
        "operationId": "negotiableQuoteBillingAddressManagementV1AssignPost",
        "parameters": [
          {
            "description": "The cart ID.",
            "in": "path",
            "name": "cartId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/quoteBillingAddressManagementV1AssignPostQuotebillingaddressmanagementv1assignpostbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Address ID.",
                  "type": "integer"
                }
              },
              "application/xml": {
                "schema": {
                  "description": "Address ID.",
                  "type": "integer"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "negotiable-carts/{cartId}/billing-address",
        "tags": [
          "negotiable-carts/{cartId}/billing-address"
        ]
      }
    },
    "/V1/negotiable-carts/{cartId}/coupons": {
      "delete": {
        "description": "Deletes a coupon from a specified cart.",
        "operationId": "negotiableQuoteCouponManagementV1RemoveDelete",
        "parameters": [
          {
            "description": "The cart ID.",
            "in": "path",
            "name": "cartId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "negotiable-carts/{cartId}/coupons",
        "tags": [
          "negotiable-carts/{cartId}/coupons"
        ]
      }
    },
    "/V1/negotiable-carts/{cartId}/coupons/{couponCode}": {
      "put": {
        "description": "Adds a coupon by code to a specified cart.",
        "operationId": "negotiableQuoteCouponManagementV1SetPut",
        "parameters": [
          {
            "description": "The cart ID.",
            "in": "path",
            "name": "cartId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The coupon code data.",
            "in": "path",
            "name": "couponCode",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "negotiable-carts/{cartId}/coupons/{couponCode}",
        "tags": [
          "negotiable-carts/{cartId}/coupons/{couponCode}"
        ]
      }
    },
    "/V1/negotiable-carts/{cartId}/estimate-shipping-methods": {
      "post": {
        "description": "Estimate shipping by address and return list of available shipping methods",
        "operationId": "negotiableQuoteShipmentEstimationV1EstimateByExtendedAddressPost",
        "parameters": [
          {
            "in": "path",
            "name": "cartId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/quoteShipmentEstimationV1EstimateByExtendedAddressPostQuoteshipmentestimationv1estimatebyextendedaddresspostbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "An array of shipping methods",
                  "items": {
                    "$ref": "#/components/schemas/quote-data-shipping-method-interface"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "description": "An array of shipping methods",
                  "items": {
                    "$ref": "#/components/schemas/quote-data-shipping-method-interface"
                  },
                  "type": "array"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "negotiable-carts/{cartId}/estimate-shipping-methods",
        "tags": [
          "negotiable-carts/{cartId}/estimate-shipping-methods"
        ]
      }
    },
    "/V1/negotiable-carts/{cartId}/estimate-shipping-methods-by-address-id": {
      "post": {
        "description": "Estimate shipping",
        "operationId": "negotiableQuoteShippingMethodManagementV1EstimateByAddressIdPost",
        "parameters": [
          {
            "description": "The shopping cart ID.",
            "in": "path",
            "name": "cartId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/quoteShippingMethodManagementV1EstimateByAddressIdPostQuoteshippingmethodmanagementv1estimatebyaddressidpostbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "An array of shipping methods.",
                  "items": {
                    "$ref": "#/components/schemas/quote-data-shipping-method-interface"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "description": "An array of shipping methods.",
                  "items": {
                    "$ref": "#/components/schemas/quote-data-shipping-method-interface"
                  },
                  "type": "array"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "negotiable-carts/{cartId}/estimate-shipping-methods-by-address-id",
        "tags": [
          "negotiable-carts/{cartId}/estimate-shipping-methods-by-address-id"
        ]
      }
    },
    "/V1/negotiable-carts/{cartId}/giftCards": {
      "post": {
        "description": "",
        "operationId": "negotiableQuoteGiftCardAccountManagementV1SaveByQuoteIdPost",
        "parameters": [
          {
            "in": "path",
            "name": "cartId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/giftCardAccountGuestGiftCardAccountManagementV1AddGiftCardPostGiftcardaccountguestgiftcardaccountmanagementv1addgiftcardpostbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "negotiable-carts/{cartId}/giftCards",
        "tags": [
          "negotiable-carts/{cartId}/giftCards"
        ]
      }
    },
    "/V1/negotiable-carts/{cartId}/giftCards/{giftCardCode}": {
      "delete": {
        "description": "Remove GiftCard Account entity",
        "operationId": "negotiableQuoteGiftCardAccountManagementV1DeleteByQuoteIdDelete",
        "parameters": [
          {
            "in": "path",
            "name": "cartId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "giftCardCode",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "negotiable-carts/{cartId}/giftCards/{giftCardCode}",
        "tags": [
          "negotiable-carts/{cartId}/giftCards/{giftCardCode}"
        ]
      }
    },
    "/V1/negotiable-carts/{cartId}/payment-information": {
      "get": {
        "description": "Get payment information",
        "operationId": "negotiableQuotePaymentInformationManagementV1GetPaymentInformationGet",
        "parameters": [
          {
            "in": "path",
            "name": "cartId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/checkout-data-payment-details-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/checkout-data-payment-details-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "negotiable-carts/{cartId}/payment-information",
        "tags": [
          "negotiable-carts/{cartId}/payment-information"
        ]
      },
      "post": {
        "description": "Set payment information and place order for a specified cart.",
        "operationId": "negotiableQuotePaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPost",
        "parameters": [
          {
            "in": "path",
            "name": "cartId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/checkoutPaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostCheckoutpaymentinformationmanagementv1savepaymentinformationandplaceorderpostbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Order ID.",
                  "type": "integer"
                }
              },
              "application/xml": {
                "schema": {
                  "description": "Order ID.",
                  "type": "integer"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "negotiable-carts/{cartId}/payment-information",
        "tags": [
          "negotiable-carts/{cartId}/payment-information"
        ]
      }
    },
    "/V1/negotiable-carts/{cartId}/set-payment-information": {
      "post": {
        "description": "Set payment information for a specified cart.",
        "operationId": "negotiableQuotePaymentInformationManagementV1SavePaymentInformationPost",
        "parameters": [
          {
            "in": "path",
            "name": "cartId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/checkoutPaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostCheckoutpaymentinformationmanagementv1savepaymentinformationandplaceorderpostbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Order ID.",
                  "type": "integer"
                }
              },
              "application/xml": {
                "schema": {
                  "description": "Order ID.",
                  "type": "integer"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "negotiable-carts/{cartId}/set-payment-information",
        "tags": [
          "negotiable-carts/{cartId}/set-payment-information"
        ]
      }
    },
    "/V1/negotiable-carts/{cartId}/shipping-information": {
      "post": {
        "description": "",
        "operationId": "negotiableQuoteShippingInformationManagementV1SaveAddressInformationPost",
        "parameters": [
          {
            "in": "path",
            "name": "cartId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/checkoutShippingInformationManagementV1SaveAddressInformationPostCheckoutshippinginformationmanagementv1saveaddressinformationpostbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/checkout-data-payment-details-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/checkout-data-payment-details-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "negotiable-carts/{cartId}/shipping-information",
        "tags": [
          "negotiable-carts/{cartId}/shipping-information"
        ]
      }
    },
    "/V1/negotiable-carts/{cartId}/totals": {
      "get": {
        "description": "Returns quote totals data for a specified cart.",
        "operationId": "negotiableQuoteCartTotalRepositoryV1GetGet",
        "parameters": [
          {
            "description": "The cart ID.",
            "in": "path",
            "name": "cartId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/quote-data-totals-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/quote-data-totals-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "negotiable-carts/{cartId}/totals",
        "tags": [
          "negotiable-carts/{cartId}/totals"
        ]
      }
    },
    "/V1/negotiableQuote/attachmentContent": {
      "get": {
        "description": "Returns content for one or more files attached on the quote comment.",
        "operationId": "negotiableQuoteAttachmentContentManagementV1GetGet",
        "parameters": [
          {
            "explode": false,
            "in": "query",
            "name": "attachmentIds",
            "required": true,
            "schema": {
              "items": {
                "type": "integer"
              },
              "type": "array"
            },
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/negotiable-quote-data-attachment-content-interface"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/negotiable-quote-data-attachment-content-interface"
                  },
                  "type": "array"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "negotiableQuote/attachmentContent",
        "tags": [
          "negotiableQuote/attachmentContent"
        ]
      }
    },
    "/V1/negotiableQuote/decline": {
      "post": {
        "description": "Decline the B2B quote. All custom pricing will be removed from this quote. The buyer will be able to place an order using their standard catalog prices and discounts.",
        "operationId": "negotiableQuoteNegotiableQuoteManagementV1DeclinePost",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "quoteId": {
                    "type": "integer"
                  },
                  "reason": {
                    "type": "string"
                  }
                },
                "required": [
                  "quoteId",
                  "reason"
                ],
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "properties": {
                  "quoteId": {
                    "type": "integer"
                  },
                  "reason": {
                    "type": "string"
                  }
                },
                "required": [
                  "quoteId",
                  "reason"
                ],
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "negotiableQuote/decline",
        "tags": [
          "negotiableQuote/decline"
        ]
      }
    },
    "/V1/negotiableQuote/pricesUpdated": {
      "post": {
        "description": "Refreshes item prices, taxes, discounts, cart rules in the negotiable quote as per the latest changes in the catalog / shared catalog and in the price rules. Depending on the negotiable quote state and totals, all or just some of quote numbers will be recalculated. 'Update Prices' parameter forces refresh on any quote that is not locked for admin user, including the quotes with a negotiated price. The request can be applied to one or more quotes at the same time.",
        "operationId": "negotiableQuoteNegotiableQuotePriceManagementV1PricesUpdatedPost",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "quoteIds": {
                    "items": {
                      "type": "integer"
                    },
                    "type": "array"
                  }
                },
                "required": [
                  "quoteIds"
                ],
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "properties": {
                  "quoteIds": {
                    "items": {
                      "type": "integer"
                    },
                    "type": "array"
                  }
                },
                "required": [
                  "quoteIds"
                ],
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "negotiableQuote/pricesUpdated",
        "tags": [
          "negotiableQuote/pricesUpdated"
        ]
      }
    },
    "/V1/negotiableQuote/request": {
      "post": {
        "description": "Create a B2B quote based on a regular Magento quote. If the B2B quote requires a shipping address (for negotiation or tax calculations), add it to the regular quote before you create a B2B quote.",
        "operationId": "negotiableQuoteNegotiableQuoteManagementV1CreatePost",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "comment": {
                    "type": "string"
                  },
                  "files": {
                    "items": {
                      "$ref": "#/components/schemas/negotiable-quote-data-attachment-content-interface"
                    },
                    "type": "array"
                  },
                  "quoteId": {
                    "type": "integer"
                  },
                  "quoteName": {
                    "type": "string"
                  }
                },
                "required": [
                  "quoteId",
                  "quoteName"
                ],
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "properties": {
                  "comment": {
                    "type": "string"
                  },
                  "files": {
                    "items": {
                      "$ref": "#/components/schemas/negotiable-quote-data-attachment-content-interface"
                    },
                    "type": "array"
                  },
                  "quoteId": {
                    "type": "integer"
                  },
                  "quoteName": {
                    "type": "string"
                  }
                },
                "required": [
                  "quoteId",
                  "quoteName"
                ],
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "negotiableQuote/request",
        "tags": [
          "negotiableQuote/request"
        ]
      }
    },
    "/V1/negotiableQuote/submitToCustomer": {
      "post": {
        "description": "Submit the B2B quote to the customer. The quote status for the customer will be changed to 'Updated', and the customer can work with the quote.",
        "operationId": "negotiableQuoteNegotiableQuoteManagementV1AdminSendPost",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "comment": {
                    "type": "string"
                  },
                  "files": {
                    "items": {
                      "$ref": "#/components/schemas/negotiable-quote-data-attachment-content-interface"
                    },
                    "type": "array"
                  },
                  "quoteId": {
                    "type": "integer"
                  }
                },
                "required": [
                  "quoteId"
                ],
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "properties": {
                  "comment": {
                    "type": "string"
                  },
                  "files": {
                    "items": {
                      "$ref": "#/components/schemas/negotiable-quote-data-attachment-content-interface"
                    },
                    "type": "array"
                  },
                  "quoteId": {
                    "type": "integer"
                  }
                },
                "required": [
                  "quoteId"
                ],
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "negotiableQuote/submitToCustomer",
        "tags": [
          "negotiableQuote/submitToCustomer"
        ]
      }
    },
    "/V1/negotiableQuote/{quoteId}": {
      "put": {
        "description": "Save quote",
        "operationId": "negotiableQuoteNegotiableCartRepositoryV1SavePut",
        "parameters": [
          {
            "in": "path",
            "name": "quoteId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/quoteCartRepositoryV1SavePutQuotecartrepositoryv1saveputbody"
        },
        "responses": {
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "negotiableQuote/{quoteId}",
        "tags": [
          "negotiableQuote/{quoteId}"
        ]
      }
    },
    "/V1/negotiableQuote/{quoteId}/comments": {
      "get": {
        "description": "Returns comments for a specified negotiable quote.",
        "operationId": "negotiableQuoteCommentLocatorV1GetListForQuoteGet",
        "parameters": [
          {
            "description": "Negotiable Quote ID.",
            "in": "path",
            "name": "quoteId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "An array of quote comments.",
                  "items": {
                    "$ref": "#/components/schemas/negotiable-quote-data-comment-interface"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "description": "An array of quote comments.",
                  "items": {
                    "$ref": "#/components/schemas/negotiable-quote-data-comment-interface"
                  },
                  "type": "array"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "negotiableQuote/{quoteId}/comments",
        "tags": [
          "negotiableQuote/{quoteId}/comments"
        ]
      }
    },
    "/V1/negotiableQuote/{quoteId}/shippingMethod": {
      "put": {
        "description": "Updates the shipping method on a negotiable quote.",
        "operationId": "negotiableQuoteNegotiableQuoteShippingManagementV1SetShippingMethodPut",
        "parameters": [
          {
            "description": "Negotiable Quote id",
            "in": "path",
            "name": "quoteId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "shippingMethod": {
                    "description": "The shipping method code.",
                    "type": "string"
                  }
                },
                "required": [
                  "shippingMethod"
                ],
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "properties": {
                  "shippingMethod": {
                    "description": "The shipping method code.",
                    "type": "string"
                  }
                },
                "required": [
                  "shippingMethod"
                ],
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "negotiableQuote/{quoteId}/shippingMethod",
        "tags": [
          "negotiableQuote/{quoteId}/shippingMethod"
        ]
      }
    },
    "/V1/order/{orderId}/invoice": {
      "post": {
        "description": "",
        "operationId": "salesInvoiceOrderV1ExecutePost",
        "parameters": [
          {
            "in": "path",
            "name": "orderId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "appendComment": {
                    "type": "boolean"
                  },
                  "arguments": {
                    "$ref": "#/components/schemas/sales-data-invoice-creation-arguments-interface"
                  },
                  "capture": {
                    "type": "boolean"
                  },
                  "comment": {
                    "$ref": "#/components/schemas/sales-data-invoice-comment-creation-interface"
                  },
                  "items": {
                    "items": {
                      "$ref": "#/components/schemas/sales-data-invoice-item-creation-interface"
                    },
                    "type": "array"
                  },
                  "notify": {
                    "type": "boolean"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "properties": {
                  "appendComment": {
                    "type": "boolean"
                  },
                  "arguments": {
                    "$ref": "#/components/schemas/sales-data-invoice-creation-arguments-interface"
                  },
                  "capture": {
                    "type": "boolean"
                  },
                  "comment": {
                    "$ref": "#/components/schemas/sales-data-invoice-comment-creation-interface"
                  },
                  "items": {
                    "items": {
                      "$ref": "#/components/schemas/sales-data-invoice-item-creation-interface"
                    },
                    "type": "array"
                  },
                  "notify": {
                    "type": "boolean"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "integer"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "order/{orderId}/invoice",
        "tags": [
          "order/{orderId}/invoice"
        ]
      }
    },
    "/V1/order/{orderId}/refund": {
      "post": {
        "description": "Create offline refund for order",
        "operationId": "salesRefundOrderV1ExecutePost",
        "parameters": [
          {
            "in": "path",
            "name": "orderId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "appendComment": {
                    "type": "boolean"
                  },
                  "arguments": {
                    "$ref": "#/components/schemas/sales-data-creditmemo-creation-arguments-interface"
                  },
                  "comment": {
                    "$ref": "#/components/schemas/sales-data-creditmemo-comment-creation-interface"
                  },
                  "items": {
                    "items": {
                      "$ref": "#/components/schemas/sales-data-creditmemo-item-creation-interface"
                    },
                    "type": "array"
                  },
                  "notify": {
                    "type": "boolean"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "properties": {
                  "appendComment": {
                    "type": "boolean"
                  },
                  "arguments": {
                    "$ref": "#/components/schemas/sales-data-creditmemo-creation-arguments-interface"
                  },
                  "comment": {
                    "$ref": "#/components/schemas/sales-data-creditmemo-comment-creation-interface"
                  },
                  "items": {
                    "items": {
                      "$ref": "#/components/schemas/sales-data-creditmemo-item-creation-interface"
                    },
                    "type": "array"
                  },
                  "notify": {
                    "type": "boolean"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "integer"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "order/{orderId}/refund",
        "tags": [
          "order/{orderId}/refund"
        ]
      }
    },
    "/V1/order/{orderId}/ship": {
      "post": {
        "description": "Creates new Shipment for given Order.",
        "operationId": "salesShipOrderV1ExecutePost",
        "parameters": [
          {
            "in": "path",
            "name": "orderId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "appendComment": {
                    "type": "boolean"
                  },
                  "arguments": {
                    "$ref": "#/components/schemas/sales-data-shipment-creation-arguments-interface"
                  },
                  "comment": {
                    "$ref": "#/components/schemas/sales-data-shipment-comment-creation-interface"
                  },
                  "items": {
                    "items": {
                      "$ref": "#/components/schemas/sales-data-shipment-item-creation-interface"
                    },
                    "type": "array"
                  },
                  "notify": {
                    "type": "boolean"
                  },
                  "packages": {
                    "items": {
                      "$ref": "#/components/schemas/sales-data-shipment-package-creation-interface"
                    },
                    "type": "array"
                  },
                  "tracks": {
                    "items": {
                      "$ref": "#/components/schemas/sales-data-shipment-track-creation-interface"
                    },
                    "type": "array"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "properties": {
                  "appendComment": {
                    "type": "boolean"
                  },
                  "arguments": {
                    "$ref": "#/components/schemas/sales-data-shipment-creation-arguments-interface"
                  },
                  "comment": {
                    "$ref": "#/components/schemas/sales-data-shipment-comment-creation-interface"
                  },
                  "items": {
                    "items": {
                      "$ref": "#/components/schemas/sales-data-shipment-item-creation-interface"
                    },
                    "type": "array"
                  },
                  "notify": {
                    "type": "boolean"
                  },
                  "packages": {
                    "items": {
                      "$ref": "#/components/schemas/sales-data-shipment-package-creation-interface"
                    },
                    "type": "array"
                  },
                  "tracks": {
                    "items": {
                      "$ref": "#/components/schemas/sales-data-shipment-track-creation-interface"
                    },
                    "type": "array"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Id of created Shipment.",
                  "type": "integer"
                }
              },
              "application/xml": {
                "schema": {
                  "description": "Id of created Shipment.",
                  "type": "integer"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "order/{orderId}/ship",
        "tags": [
          "order/{orderId}/ship"
        ]
      }
    },
    "/V1/orders": {
      "get": {
        "description": "Lists orders that match specified search criteria. This call returns an array of objects, but detailed information about each object’s attributes might not be included. See https://devdocs.magento.com/codelinks/attributes.html#OrderRepositoryInterface to determine which call to use to get detailed information about all attributes for an object.",
        "operationId": "salesOrderRepositoryV1GetListGet",
        "parameters": [
          {
            "description": "Field",
            "in": "query",
            "name": "searchCriteria[filterGroups][0][filters][0][field]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Value",
            "in": "query",
            "name": "searchCriteria[filterGroups][0][filters][0][value]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Condition type",
            "in": "query",
            "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sorting field.",
            "in": "query",
            "name": "searchCriteria[sortOrders][0][field]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sorting direction.",
            "in": "query",
            "name": "searchCriteria[sortOrders][0][direction]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Page size.",
            "in": "query",
            "name": "searchCriteria[pageSize]",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Current page.",
            "in": "query",
            "name": "searchCriteria[currentPage]",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sales-data-order-search-result-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/sales-data-order-search-result-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "orders",
        "tags": [
          "orders"
        ]
      }
    },
    "/V1/orders/": {
      "post": {
        "description": "Performs persist operations for a specified order.",
        "operationId": "salesOrderRepositoryV1SavePost",
        "requestBody": {
          "$ref": "#/components/requestBodies/salesOrderRepositoryV1SavePostSalesorderrepositoryv1savepostbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sales-data-order-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/sales-data-order-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "orders/",
        "tags": [
          "orders/"
        ]
      }
    },
    "/V1/orders/create": {
      "put": {
        "description": "Performs persist operations for a specified order.",
        "operationId": "salesOrderRepositoryV1SavePut",
        "requestBody": {
          "$ref": "#/components/requestBodies/salesOrderRepositoryV1SavePostSalesorderrepositoryv1savepostbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sales-data-order-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/sales-data-order-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "orders/create",
        "tags": [
          "orders/create"
        ]
      }
    },
    "/V1/orders/items": {
      "get": {
        "description": "Lists order items that match specified search criteria. This call returns an array of objects, but detailed information about each object’s attributes might not be included. See https://devdocs.magento.com/codelinks/attributes.html#OrderItemRepositoryInterface to determine which call to use to get detailed information about all attributes for an object.",
        "operationId": "salesOrderItemRepositoryV1GetListGet",
        "parameters": [
          {
            "description": "Field",
            "in": "query",
            "name": "searchCriteria[filterGroups][0][filters][0][field]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Value",
            "in": "query",
            "name": "searchCriteria[filterGroups][0][filters][0][value]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Condition type",
            "in": "query",
            "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sorting field.",
            "in": "query",
            "name": "searchCriteria[sortOrders][0][field]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sorting direction.",
            "in": "query",
            "name": "searchCriteria[sortOrders][0][direction]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Page size.",
            "in": "query",
            "name": "searchCriteria[pageSize]",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Current page.",
            "in": "query",
            "name": "searchCriteria[currentPage]",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sales-data-order-item-search-result-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/sales-data-order-item-search-result-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "orders/items",
        "tags": [
          "orders/items"
        ]
      }
    },
    "/V1/orders/items/{id}": {
      "get": {
        "description": "Loads a specified order item.",
        "operationId": "salesOrderItemRepositoryV1GetGet",
        "parameters": [
          {
            "description": "The order item ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sales-data-order-item-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/sales-data-order-item-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "orders/items/{id}",
        "tags": [
          "orders/items/{id}"
        ]
      }
    },
    "/V1/orders/{id}": {
      "get": {
        "description": "Loads a specified order.",
        "operationId": "salesOrderRepositoryV1GetGet",
        "parameters": [
          {
            "description": "The order ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sales-data-order-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/sales-data-order-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "orders/{id}",
        "tags": [
          "orders/{id}"
        ]
      }
    },
    "/V1/orders/{id}/cancel": {
      "post": {
        "description": "Cancels a specified order.",
        "operationId": "salesOrderManagementV1CancelPost",
        "parameters": [
          {
            "description": "The order ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "orders/{id}/cancel",
        "tags": [
          "orders/{id}/cancel"
        ]
      }
    },
    "/V1/orders/{id}/comments": {
      "get": {
        "description": "Lists comments for a specified order.",
        "operationId": "salesOrderManagementV1GetCommentsListGet",
        "parameters": [
          {
            "description": "The order ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sales-data-order-status-history-search-result-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/sales-data-order-status-history-search-result-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "orders/{id}/comments",
        "tags": [
          "orders/{id}/comments"
        ]
      },
      "post": {
        "description": "Adds a comment to a specified order.",
        "operationId": "salesOrderManagementV1AddCommentPost",
        "parameters": [
          {
            "description": "The order ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "statusHistory": {
                    "$ref": "#/components/schemas/sales-data-order-status-history-interface"
                  }
                },
                "required": [
                  "statusHistory"
                ],
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "properties": {
                  "statusHistory": {
                    "$ref": "#/components/schemas/sales-data-order-status-history-interface"
                  }
                },
                "required": [
                  "statusHistory"
                ],
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "orders/{id}/comments",
        "tags": [
          "orders/{id}/comments"
        ]
      }
    },
    "/V1/orders/{id}/emails": {
      "post": {
        "description": "Emails a user a specified order.",
        "operationId": "salesOrderManagementV1NotifyPost",
        "parameters": [
          {
            "description": "The order ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "orders/{id}/emails",
        "tags": [
          "orders/{id}/emails"
        ]
      }
    },
    "/V1/orders/{id}/hold": {
      "post": {
        "description": "Holds a specified order.",
        "operationId": "salesOrderManagementV1HoldPost",
        "parameters": [
          {
            "description": "The order ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "orders/{id}/hold",
        "tags": [
          "orders/{id}/hold"
        ]
      }
    },
    "/V1/orders/{id}/statuses": {
      "get": {
        "description": "Gets the status for a specified order.",
        "operationId": "salesOrderManagementV1GetStatusGet",
        "parameters": [
          {
            "description": "The order ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Order status.",
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "description": "Order status.",
                  "type": "string"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "orders/{id}/statuses",
        "tags": [
          "orders/{id}/statuses"
        ]
      }
    },
    "/V1/orders/{id}/unhold": {
      "post": {
        "description": "Releases a specified order from hold status.",
        "operationId": "salesOrderManagementV1UnHoldPost",
        "parameters": [
          {
            "description": "The order ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "orders/{id}/unhold",
        "tags": [
          "orders/{id}/unhold"
        ]
      }
    },
    "/V1/orders/{parent_id}": {
      "put": {
        "description": "Performs persist operations for a specified order address.",
        "operationId": "salesOrderAddressRepositoryV1SavePut",
        "parameters": [
          {
            "in": "path",
            "name": "parent_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "entity": {
                    "$ref": "#/components/schemas/sales-data-order-address-interface"
                  }
                },
                "required": [
                  "entity"
                ],
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "properties": {
                  "entity": {
                    "$ref": "#/components/schemas/sales-data-order-address-interface"
                  }
                },
                "required": [
                  "entity"
                ],
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sales-data-order-address-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/sales-data-order-address-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "orders/{parent_id}",
        "tags": [
          "orders/{parent_id}"
        ]
      }
    },
    "/V1/products": {
      "get": {
        "description": "Get product list",
        "operationId": "catalogProductRepositoryV1GetListGet",
        "parameters": [
          {
            "description": "Field",
            "in": "query",
            "name": "searchCriteria[filterGroups][0][filters][0][field]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Value",
            "in": "query",
            "name": "searchCriteria[filterGroups][0][filters][0][value]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Condition type",
            "in": "query",
            "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sorting field.",
            "in": "query",
            "name": "searchCriteria[sortOrders][0][field]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sorting direction.",
            "in": "query",
            "name": "searchCriteria[sortOrders][0][direction]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Page size.",
            "in": "query",
            "name": "searchCriteria[pageSize]",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Current page.",
            "in": "query",
            "name": "searchCriteria[currentPage]",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/catalog-data-product-search-results-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/catalog-data-product-search-results-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "products",
        "tags": [
          "products"
        ]
      },
      "post": {
        "description": "Create product",
        "operationId": "catalogProductRepositoryV1SavePost",
        "requestBody": {
          "$ref": "#/components/requestBodies/catalogProductRepositoryV1SavePostCatalogproductrepositoryv1savepostbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/catalog-data-product-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/catalog-data-product-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "products",
        "tags": [
          "products"
        ]
      }
    },
    "/V1/products-render-info": {
      "get": {
        "description": "Collect and retrieve the list of product render info This info contains raw prices and formated prices, product name, stock status, store_id, etc",
        "operationId": "catalogProductRenderListV1GetListGet",
        "parameters": [
          {
            "description": "Field",
            "in": "query",
            "name": "searchCriteria[filterGroups][0][filters][0][field]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Value",
            "in": "query",
            "name": "searchCriteria[filterGroups][0][filters][0][value]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Condition type",
            "in": "query",
            "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sorting field.",
            "in": "query",
            "name": "searchCriteria[sortOrders][0][field]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sorting direction.",
            "in": "query",
            "name": "searchCriteria[sortOrders][0][direction]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Page size.",
            "in": "query",
            "name": "searchCriteria[pageSize]",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Current page.",
            "in": "query",
            "name": "searchCriteria[currentPage]",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "storeId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "currencyCode",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/catalog-data-product-render-search-results-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/catalog-data-product-render-search-results-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "products-render-info",
        "tags": [
          "products-render-info"
        ]
      }
    },
    "/V1/products/attribute-sets": {
      "post": {
        "description": "Create attribute set from data",
        "operationId": "catalogAttributeSetManagementV1CreatePost",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "attributeSet": {
                    "$ref": "#/components/schemas/eav-data-attribute-set-interface"
                  },
                  "skeletonId": {
                    "type": "integer"
                  }
                },
                "required": [
                  "attributeSet",
                  "skeletonId"
                ],
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "properties": {
                  "attributeSet": {
                    "$ref": "#/components/schemas/eav-data-attribute-set-interface"
                  },
                  "skeletonId": {
                    "type": "integer"
                  }
                },
                "required": [
                  "attributeSet",
                  "skeletonId"
                ],
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/eav-data-attribute-set-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/eav-data-attribute-set-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "products/attribute-sets",
        "tags": [
          "products/attribute-sets"
        ]
      }
    },
    "/V1/products/attribute-sets/attributes": {
      "post": {
        "description": "Assign attribute to attribute set",
        "operationId": "catalogProductAttributeManagementV1AssignPost",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "attributeCode": {
                    "type": "string"
                  },
                  "attributeGroupId": {
                    "type": "integer"
                  },
                  "attributeSetId": {
                    "type": "integer"
                  },
                  "sortOrder": {
                    "type": "integer"
                  }
                },
                "required": [
                  "attributeSetId",
                  "attributeGroupId",
                  "attributeCode",
                  "sortOrder"
                ],
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "properties": {
                  "attributeCode": {
                    "type": "string"
                  },
                  "attributeGroupId": {
                    "type": "integer"
                  },
                  "attributeSetId": {
                    "type": "integer"
                  },
                  "sortOrder": {
                    "type": "integer"
                  }
                },
                "required": [
                  "attributeSetId",
                  "attributeGroupId",
                  "attributeCode",
                  "sortOrder"
                ],
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "integer"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "products/attribute-sets/attributes",
        "tags": [
          "products/attribute-sets/attributes"
        ]
      }
    },
    "/V1/products/attribute-sets/groups": {
      "post": {
        "description": "Save attribute group",
        "operationId": "catalogProductAttributeGroupRepositoryV1SavePost",
        "requestBody": {
          "$ref": "#/components/requestBodies/catalogProductAttributeGroupRepositoryV1SavePostCatalogproductattributegrouprepositoryv1savepostbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/eav-data-attribute-group-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/eav-data-attribute-group-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "products/attribute-sets/groups",
        "tags": [
          "products/attribute-sets/groups"
        ]
      }
    },
    "/V1/products/attribute-sets/groups/list": {
      "get": {
        "description": "Retrieve list of attribute groups",
        "operationId": "catalogProductAttributeGroupRepositoryV1GetListGet",
        "parameters": [
          {
            "description": "Field",
            "in": "query",
            "name": "searchCriteria[filterGroups][0][filters][0][field]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Value",
            "in": "query",
            "name": "searchCriteria[filterGroups][0][filters][0][value]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Condition type",
            "in": "query",
            "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sorting field.",
            "in": "query",
            "name": "searchCriteria[sortOrders][0][field]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sorting direction.",
            "in": "query",
            "name": "searchCriteria[sortOrders][0][direction]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Page size.",
            "in": "query",
            "name": "searchCriteria[pageSize]",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Current page.",
            "in": "query",
            "name": "searchCriteria[currentPage]",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/eav-data-attribute-group-search-results-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/eav-data-attribute-group-search-results-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "products/attribute-sets/groups/list",
        "tags": [
          "products/attribute-sets/groups/list"
        ]
      }
    },
    "/V1/products/attribute-sets/groups/{groupId}": {
      "delete": {
        "description": "Remove attribute group by id",
        "operationId": "catalogProductAttributeGroupRepositoryV1DeleteByIdDelete",
        "parameters": [
          {
            "in": "path",
            "name": "groupId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "products/attribute-sets/groups/{groupId}",
        "tags": [
          "products/attribute-sets/groups/{groupId}"
        ]
      }
    },
    "/V1/products/attribute-sets/sets/list": {
      "get": {
        "description": "Retrieve list of Attribute Sets",
        "operationId": "catalogAttributeSetRepositoryV1GetListGet",
        "parameters": [
          {
            "description": "Field",
            "in": "query",
            "name": "searchCriteria[filterGroups][0][filters][0][field]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Value",
            "in": "query",
            "name": "searchCriteria[filterGroups][0][filters][0][value]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Condition type",
            "in": "query",
            "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sorting field.",
            "in": "query",
            "name": "searchCriteria[sortOrders][0][field]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sorting direction.",
            "in": "query",
            "name": "searchCriteria[sortOrders][0][direction]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Page size.",
            "in": "query",
            "name": "searchCriteria[pageSize]",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Current page.",
            "in": "query",
            "name": "searchCriteria[currentPage]",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/eav-data-attribute-set-search-results-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/eav-data-attribute-set-search-results-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "products/attribute-sets/sets/list",
        "tags": [
          "products/attribute-sets/sets/list"
        ]
      }
    },
    "/V1/products/attribute-sets/{attributeSetId}": {
      "delete": {
        "description": "Remove attribute set by given ID",
        "operationId": "catalogAttributeSetRepositoryV1DeleteByIdDelete",
        "parameters": [
          {
            "in": "path",
            "name": "attributeSetId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "products/attribute-sets/{attributeSetId}",
        "tags": [
          "products/attribute-sets/{attributeSetId}"
        ]
      },
      "get": {
        "description": "Retrieve attribute set information based on given ID",
        "operationId": "catalogAttributeSetRepositoryV1GetGet",
        "parameters": [
          {
            "in": "path",
            "name": "attributeSetId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/eav-data-attribute-set-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/eav-data-attribute-set-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "products/attribute-sets/{attributeSetId}",
        "tags": [
          "products/attribute-sets/{attributeSetId}"
        ]
      },
      "put": {
        "description": "Save attribute set data",
        "operationId": "catalogAttributeSetRepositoryV1SavePut",
        "parameters": [
          {
            "in": "path",
            "name": "attributeSetId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/eavAttributeSetRepositoryV1SavePutEavattributesetrepositoryv1saveputbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/eav-data-attribute-set-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/eav-data-attribute-set-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Internal Server error"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "products/attribute-sets/{attributeSetId}",
        "tags": [
          "products/attribute-sets/{attributeSetId}"
        ]
      }
    },
    "/V1/products/attribute-sets/{attributeSetId}/attributes": {
      "get": {
        "description": "Retrieve related attributes based on given attribute set ID",
        "operationId": "catalogProductAttributeManagementV1GetAttributesGet",
        "parameters": [
          {
            "in": "path",
            "name": "attributeSetId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-product-attribute-interface"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-product-attribute-interface"
                  },
                  "type": "array"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "products/attribute-sets/{attributeSetId}/attributes",
        "tags": [
          "products/attribute-sets/{attributeSetId}/attributes"
        ]
      }
    },
    "/V1/products/attribute-sets/{attributeSetId}/attributes/{attributeCode}": {
      "delete": {
        "description": "Remove attribute from attribute set",
        "operationId": "catalogProductAttributeManagementV1UnassignDelete",
        "parameters": [
          {
            "in": "path",
            "name": "attributeSetId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "attributeCode",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "products/attribute-sets/{attributeSetId}/attributes/{attributeCode}",
        "tags": [
          "products/attribute-sets/{attributeSetId}/attributes/{attributeCode}"
        ]
      }
    },
    "/V1/products/attribute-sets/{attributeSetId}/groups": {
      "put": {
        "description": "Save attribute group",
        "operationId": "catalogProductAttributeGroupRepositoryV1SavePut",
        "parameters": [
          {
            "in": "path",
            "name": "attributeSetId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/catalogProductAttributeGroupRepositoryV1SavePostCatalogproductattributegrouprepositoryv1savepostbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/eav-data-attribute-group-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/eav-data-attribute-group-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "products/attribute-sets/{attributeSetId}/groups",
        "tags": [
          "products/attribute-sets/{attributeSetId}/groups"
        ]
      }
    },
    "/V1/products/attributes": {
      "get": {
        "description": "Retrieve all attributes for entity type",
        "operationId": "catalogProductAttributeRepositoryV1GetListGet",
        "parameters": [
          {
            "description": "Field",
            "in": "query",
            "name": "searchCriteria[filterGroups][0][filters][0][field]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Value",
            "in": "query",
            "name": "searchCriteria[filterGroups][0][filters][0][value]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Condition type",
            "in": "query",
            "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sorting field.",
            "in": "query",
            "name": "searchCriteria[sortOrders][0][field]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sorting direction.",
            "in": "query",
            "name": "searchCriteria[sortOrders][0][direction]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Page size.",
            "in": "query",
            "name": "searchCriteria[pageSize]",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Current page.",
            "in": "query",
            "name": "searchCriteria[currentPage]",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/catalog-data-product-attribute-search-results-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/catalog-data-product-attribute-search-results-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "products/attributes",
        "tags": [
          "products/attributes"
        ]
      },
      "post": {
        "description": "Save attribute data",
        "operationId": "catalogProductAttributeRepositoryV1SavePost",
        "requestBody": {
          "$ref": "#/components/requestBodies/catalogProductAttributeRepositoryV1SavePostCatalogproductattributerepositoryv1savepostbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/catalog-data-product-attribute-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/catalog-data-product-attribute-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "products/attributes",
        "tags": [
          "products/attributes"
        ]
      }
    },
    "/V1/products/attributes/types": {
      "get": {
        "description": "Retrieve list of product attribute types",
        "operationId": "catalogProductAttributeTypesListV1GetItemsGet",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-product-attribute-type-interface"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-product-attribute-type-interface"
                  },
                  "type": "array"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "products/attributes/types",
        "tags": [
          "products/attributes/types"
        ]
      }
    },
    "/V1/products/attributes/{attributeCode}": {
      "delete": {
        "description": "Delete Attribute by id",
        "operationId": "catalogProductAttributeRepositoryV1DeleteByIdDelete",
        "parameters": [
          {
            "in": "path",
            "name": "attributeCode",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "products/attributes/{attributeCode}",
        "tags": [
          "products/attributes/{attributeCode}"
        ]
      },
      "get": {
        "description": "Retrieve specific attribute",
        "operationId": "catalogProductAttributeRepositoryV1GetGet",
        "parameters": [
          {
            "in": "path",
            "name": "attributeCode",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/catalog-data-product-attribute-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/catalog-data-product-attribute-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "products/attributes/{attributeCode}",
        "tags": [
          "products/attributes/{attributeCode}"
        ]
      },
      "put": {
        "description": "Save attribute data",
        "operationId": "catalogProductAttributeRepositoryV1SavePut",
        "parameters": [
          {
            "in": "path",
            "name": "attributeCode",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/catalogProductAttributeRepositoryV1SavePostCatalogproductattributerepositoryv1savepostbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/catalog-data-product-attribute-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/catalog-data-product-attribute-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "products/attributes/{attributeCode}",
        "tags": [
          "products/attributes/{attributeCode}"
        ]
      }
    },
    "/V1/products/attributes/{attributeCode}/options": {
      "get": {
        "description": "Retrieve list of attribute options",
        "operationId": "catalogProductAttributeOptionManagementV1GetItemsGet",
        "parameters": [
          {
            "in": "path",
            "name": "attributeCode",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/eav-data-attribute-option-interface"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/eav-data-attribute-option-interface"
                  },
                  "type": "array"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "products/attributes/{attributeCode}/options",
        "tags": [
          "products/attributes/{attributeCode}/options"
        ]
      },
      "post": {
        "description": "Add option to attribute",
        "operationId": "catalogProductAttributeOptionManagementV1AddPost",
        "parameters": [
          {
            "in": "path",
            "name": "attributeCode",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "option": {
                    "$ref": "#/components/schemas/eav-data-attribute-option-interface"
                  }
                },
                "required": [
                  "option"
                ],
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "properties": {
                  "option": {
                    "$ref": "#/components/schemas/eav-data-attribute-option-interface"
                  }
                },
                "required": [
                  "option"
                ],
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "products/attributes/{attributeCode}/options",
        "tags": [
          "products/attributes/{attributeCode}/options"
        ]
      }
    },
    "/V1/products/attributes/{attributeCode}/options/{optionId}": {
      "delete": {
        "description": "Delete option from attribute",
        "operationId": "catalogProductAttributeOptionManagementV1DeleteDelete",
        "parameters": [
          {
            "in": "path",
            "name": "attributeCode",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "optionId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "products/attributes/{attributeCode}/options/{optionId}",
        "tags": [
          "products/attributes/{attributeCode}/options/{optionId}"
        ]
      }
    },
    "/V1/products/base-prices": {
      "post": {
        "description": "Add or update product prices. Input item should correspond \\Magento\\Catalog\\Api\\Data\\CostInterface. If any items will have invalid price, store id or sku, they will be marked as failed and excluded from update list and \\Magento\\Catalog\\Api\\Data\\PriceUpdateResultInterface[] with problem description will be returned. If there were no failed items during update empty array will be returned. If error occurred during the update exception will be thrown.",
        "operationId": "catalogBasePriceStorageV1UpdatePost",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "prices": {
                    "items": {
                      "$ref": "#/components/schemas/catalog-data-base-price-interface"
                    },
                    "type": "array"
                  }
                },
                "required": [
                  "prices"
                ],
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "properties": {
                  "prices": {
                    "items": {
                      "$ref": "#/components/schemas/catalog-data-base-price-interface"
                    },
                    "type": "array"
                  }
                },
                "required": [
                  "prices"
                ],
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-price-update-result-interface"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-price-update-result-interface"
                  },
                  "type": "array"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "products/base-prices",
        "tags": [
          "products/base-prices"
        ]
      }
    },
    "/V1/products/base-prices-information": {
      "post": {
        "description": "Return product prices. In case of at least one of skus is not found exception will be thrown.",
        "operationId": "catalogBasePriceStorageV1GetPost",
        "requestBody": {
          "$ref": "#/components/requestBodies/catalogBasePriceStorageV1GetPostCatalogbasepricestoragev1getpostbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-base-price-interface"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-base-price-interface"
                  },
                  "type": "array"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "products/base-prices-information",
        "tags": [
          "products/base-prices-information"
        ]
      }
    },
    "/V1/products/cost": {
      "post": {
        "description": "Add or update product cost. Input item should correspond to \\Magento\\Catalog\\Api\\Data\\CostInterface. If any items will have invalid cost, store id or sku, they will be marked as failed and excluded from update list and \\Magento\\Catalog\\Api\\Data\\PriceUpdateResultInterface[] with problem description will be returned. If there were no failed items during update empty array will be returned. If error occurred during the update exception will be thrown.",
        "operationId": "catalogCostStorageV1UpdatePost",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "prices": {
                    "items": {
                      "$ref": "#/components/schemas/catalog-data-cost-interface"
                    },
                    "type": "array"
                  }
                },
                "required": [
                  "prices"
                ],
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "properties": {
                  "prices": {
                    "items": {
                      "$ref": "#/components/schemas/catalog-data-cost-interface"
                    },
                    "type": "array"
                  }
                },
                "required": [
                  "prices"
                ],
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-price-update-result-interface"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-price-update-result-interface"
                  },
                  "type": "array"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "products/cost",
        "tags": [
          "products/cost"
        ]
      }
    },
    "/V1/products/cost-delete": {
      "post": {
        "description": "Delete product cost. In case of at least one of skus is not found exception will be thrown. If error occurred during the delete exception will be thrown.",
        "operationId": "catalogCostStorageV1DeletePost",
        "requestBody": {
          "$ref": "#/components/requestBodies/catalogBasePriceStorageV1GetPostCatalogbasepricestoragev1getpostbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Will return True if deleted.",
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "description": "Will return True if deleted.",
                  "type": "boolean"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "products/cost-delete",
        "tags": [
          "products/cost-delete"
        ]
      }
    },
    "/V1/products/cost-information": {
      "post": {
        "description": "Return product prices. In case of at least one of skus is not found exception will be thrown.",
        "operationId": "catalogCostStorageV1GetPost",
        "requestBody": {
          "$ref": "#/components/requestBodies/catalogBasePriceStorageV1GetPostCatalogbasepricestoragev1getpostbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-cost-interface"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-cost-interface"
                  },
                  "type": "array"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "products/cost-information",
        "tags": [
          "products/cost-information"
        ]
      }
    },
    "/V1/products/downloadable-links/samples/{id}": {
      "delete": {
        "description": "Delete downloadable sample",
        "operationId": "downloadableSampleRepositoryV1DeleteDelete",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "products/downloadable-links/samples/{id}",
        "tags": [
          "products/downloadable-links/samples/{id}"
        ]
      }
    },
    "/V1/products/downloadable-links/{id}": {
      "delete": {
        "description": "Delete downloadable link",
        "operationId": "downloadableLinkRepositoryV1DeleteDelete",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "products/downloadable-links/{id}",
        "tags": [
          "products/downloadable-links/{id}"
        ]
      }
    },
    "/V1/products/links/types": {
      "get": {
        "description": "Retrieve information about available product link types",
        "operationId": "catalogProductLinkTypeListV1GetItemsGet",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-product-link-type-interface"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-product-link-type-interface"
                  },
                  "type": "array"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "products/links/types",
        "tags": [
          "products/links/types"
        ]
      }
    },
    "/V1/products/links/{type}/attributes": {
      "get": {
        "description": "Provide a list of the product link type attributes",
        "operationId": "catalogProductLinkTypeListV1GetItemAttributesGet",
        "parameters": [
          {
            "in": "path",
            "name": "type",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-product-link-attribute-interface"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-product-link-attribute-interface"
                  },
                  "type": "array"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "products/links/{type}/attributes",
        "tags": [
          "products/links/{type}/attributes"
        ]
      }
    },
    "/V1/products/media/types/{attributeSetName}": {
      "get": {
        "description": "Retrieve the list of media attributes (fronted input type is media_image) assigned to the given attribute set.",
        "operationId": "catalogProductMediaAttributeManagementV1GetListGet",
        "parameters": [
          {
            "in": "path",
            "name": "attributeSetName",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "list of media attributes",
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-product-attribute-interface"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "description": "list of media attributes",
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-product-attribute-interface"
                  },
                  "type": "array"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "products/media/types/{attributeSetName}",
        "tags": [
          "products/media/types/{attributeSetName}"
        ]
      }
    },
    "/V1/products/options": {
      "post": {
        "description": "Save Custom Option",
        "operationId": "catalogProductCustomOptionRepositoryV1SavePost",
        "requestBody": {
          "$ref": "#/components/requestBodies/catalogProductCustomOptionRepositoryV1SavePostCatalogproductcustomoptionrepositoryv1savepostbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/catalog-data-product-custom-option-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/catalog-data-product-custom-option-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "products/options",
        "tags": [
          "products/options"
        ]
      }
    },
    "/V1/products/options/types": {
      "get": {
        "description": "Get custom option types",
        "operationId": "catalogProductCustomOptionTypeListV1GetItemsGet",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-product-custom-option-type-interface"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-product-custom-option-type-interface"
                  },
                  "type": "array"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "products/options/types",
        "tags": [
          "products/options/types"
        ]
      }
    },
    "/V1/products/options/{optionId}": {
      "put": {
        "description": "Save Custom Option",
        "operationId": "catalogProductCustomOptionRepositoryV1SavePut",
        "parameters": [
          {
            "in": "path",
            "name": "optionId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/catalogProductCustomOptionRepositoryV1SavePostCatalogproductcustomoptionrepositoryv1savepostbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/catalog-data-product-custom-option-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/catalog-data-product-custom-option-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "products/options/{optionId}",
        "tags": [
          "products/options/{optionId}"
        ]
      }
    },
    "/V1/products/special-price": {
      "post": {
        "description": "Add or update product's special price. If any items will have invalid price, store id, sku or dates, they will be marked as failed and excluded from update list and \\Magento\\Catalog\\Api\\Data\\PriceUpdateResultInterface[] with problem description will be returned. If there were no failed items during update empty array will be returned. If error occurred during the update exception will be thrown.",
        "operationId": "catalogSpecialPriceStorageV1UpdatePost",
        "requestBody": {
          "$ref": "#/components/requestBodies/catalogSpecialPriceStorageV1UpdatePostCatalogspecialpricestoragev1updatepostbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-price-update-result-interface"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-price-update-result-interface"
                  },
                  "type": "array"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "products/special-price",
        "tags": [
          "products/special-price"
        ]
      }
    },
    "/V1/products/special-price-delete": {
      "post": {
        "description": "Delete product's special price. If any items will have invalid price, store id, sku or dates, they will be marked as failed and excluded from delete list and \\Magento\\Catalog\\Api\\Data\\PriceUpdateResultInterface[] with problem description will be returned. If there were no failed items during update empty array will be returned. If error occurred during the delete exception will be thrown.",
        "operationId": "catalogSpecialPriceStorageV1DeletePost",
        "requestBody": {
          "$ref": "#/components/requestBodies/catalogSpecialPriceStorageV1UpdatePostCatalogspecialpricestoragev1updatepostbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-price-update-result-interface"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-price-update-result-interface"
                  },
                  "type": "array"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "products/special-price-delete",
        "tags": [
          "products/special-price-delete"
        ]
      }
    },
    "/V1/products/special-price-information": {
      "post": {
        "description": "Return product's special price. In case of at least one of skus is not found exception will be thrown.",
        "operationId": "catalogSpecialPriceStorageV1GetPost",
        "requestBody": {
          "$ref": "#/components/requestBodies/catalogBasePriceStorageV1GetPostCatalogbasepricestoragev1getpostbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-special-price-interface"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-special-price-interface"
                  },
                  "type": "array"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "products/special-price-information",
        "tags": [
          "products/special-price-information"
        ]
      }
    },
    "/V1/products/tier-prices": {
      "post": {
        "description": "Add or update product prices. If any items will have invalid price, price type, website id, sku, customer group or quantity, they will be marked as failed and excluded from update list and \\Magento\\Catalog\\Api\\Data\\PriceUpdateResultInterface[] with problem description will be returned. If there were no failed items during update empty array will be returned. If error occurred during the update exception will be thrown.",
        "operationId": "catalogTierPriceStorageV1UpdatePost",
        "requestBody": {
          "$ref": "#/components/requestBodies/catalogTierPriceStorageV1UpdatePostCatalogtierpricestoragev1updatepostbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-price-update-result-interface"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-price-update-result-interface"
                  },
                  "type": "array"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "products/tier-prices",
        "tags": [
          "products/tier-prices"
        ]
      },
      "put": {
        "description": "Remove existing tier prices and replace them with the new ones. If any items will have invalid price, price type, website id, sku, customer group or quantity, they will be marked as failed and excluded from replace list and \\Magento\\Catalog\\Api\\Data\\PriceUpdateResultInterface[] with problem description will be returned. If there were no failed items during update empty array will be returned. If error occurred during the update exception will be thrown.",
        "operationId": "catalogTierPriceStorageV1ReplacePut",
        "requestBody": {
          "$ref": "#/components/requestBodies/catalogTierPriceStorageV1UpdatePostCatalogtierpricestoragev1updatepostbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-price-update-result-interface"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-price-update-result-interface"
                  },
                  "type": "array"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "products/tier-prices",
        "tags": [
          "products/tier-prices"
        ]
      }
    },
    "/V1/products/tier-prices-delete": {
      "post": {
        "description": "Delete product tier prices. If any items will have invalid price, price type, website id, sku, customer group or quantity, they will be marked as failed and excluded from delete list and \\Magento\\Catalog\\Api\\Data\\PriceUpdateResultInterface[] with problem description will be returned. If there were no failed items during update empty array will be returned. If error occurred during the update exception will be thrown.",
        "operationId": "catalogTierPriceStorageV1DeletePost",
        "requestBody": {
          "$ref": "#/components/requestBodies/catalogTierPriceStorageV1UpdatePostCatalogtierpricestoragev1updatepostbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-price-update-result-interface"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-price-update-result-interface"
                  },
                  "type": "array"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "products/tier-prices-delete",
        "tags": [
          "products/tier-prices-delete"
        ]
      }
    },
    "/V1/products/tier-prices-information": {
      "post": {
        "description": "Return product prices. In case of at least one of skus is not found exception will be thrown.",
        "operationId": "catalogTierPriceStorageV1GetPost",
        "requestBody": {
          "$ref": "#/components/requestBodies/catalogBasePriceStorageV1GetPostCatalogbasepricestoragev1getpostbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-tier-price-interface"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-tier-price-interface"
                  },
                  "type": "array"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "products/tier-prices-information",
        "tags": [
          "products/tier-prices-information"
        ]
      }
    },
    "/V1/products/types": {
      "get": {
        "description": "Retrieve available product types",
        "operationId": "catalogProductTypeListV1GetProductTypesGet",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-product-type-interface"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-product-type-interface"
                  },
                  "type": "array"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "products/types",
        "tags": [
          "products/types"
        ]
      }
    },
    "/V1/products/{productSku}/stockItems/{itemId}": {
      "put": {
        "description": "",
        "operationId": "catalogInventoryStockRegistryV1UpdateStockItemBySkuPut",
        "parameters": [
          {
            "in": "path",
            "name": "productSku",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "itemId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "stockItem": {
                    "$ref": "#/components/schemas/catalog-inventory-data-stock-item-interface"
                  }
                },
                "required": [
                  "stockItem"
                ],
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "properties": {
                  "stockItem": {
                    "$ref": "#/components/schemas/catalog-inventory-data-stock-item-interface"
                  }
                },
                "required": [
                  "stockItem"
                ],
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "integer"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "products/{productSku}/stockItems/{itemId}",
        "tags": [
          "products/{productSku}/stockItems/{itemId}"
        ]
      }
    },
    "/V1/products/{sku}": {
      "delete": {
        "description": "",
        "operationId": "catalogProductRepositoryV1DeleteByIdDelete",
        "parameters": [
          {
            "in": "path",
            "name": "sku",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Will returned True if deleted",
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "description": "Will returned True if deleted",
                  "type": "boolean"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "products/{sku}",
        "tags": [
          "products/{sku}"
        ]
      },
      "get": {
        "description": "Get info about product by product SKU",
        "operationId": "catalogProductRepositoryV1GetGet",
        "parameters": [
          {
            "in": "path",
            "name": "sku",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "editMode",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "storeId",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "forceReload",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/catalog-data-product-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/catalog-data-product-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "products/{sku}",
        "tags": [
          "products/{sku}"
        ]
      },
      "put": {
        "description": "Create product",
        "operationId": "catalogProductRepositoryV1SavePut",
        "parameters": [
          {
            "in": "path",
            "name": "sku",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/catalogProductRepositoryV1SavePostCatalogproductrepositoryv1savepostbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/catalog-data-product-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/catalog-data-product-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "products/{sku}",
        "tags": [
          "products/{sku}"
        ]
      }
    },
    "/V1/products/{sku}/downloadable-links": {
      "get": {
        "description": "List of links with associated samples",
        "operationId": "downloadableLinkRepositoryV1GetListGet",
        "parameters": [
          {
            "in": "path",
            "name": "sku",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/downloadable-data-link-interface"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/downloadable-data-link-interface"
                  },
                  "type": "array"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "products/{sku}/downloadable-links",
        "tags": [
          "products/{sku}/downloadable-links"
        ]
      },
      "post": {
        "description": "Update downloadable link of the given product (link type and its resources cannot be changed)",
        "operationId": "downloadableLinkRepositoryV1SavePost",
        "parameters": [
          {
            "in": "path",
            "name": "sku",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/downloadableLinkRepositoryV1SavePostDownloadablelinkrepositoryv1savepostbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "integer"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "products/{sku}/downloadable-links",
        "tags": [
          "products/{sku}/downloadable-links"
        ]
      }
    },
    "/V1/products/{sku}/downloadable-links/samples": {
      "get": {
        "description": "List of samples for downloadable product",
        "operationId": "downloadableSampleRepositoryV1GetListGet",
        "parameters": [
          {
            "in": "path",
            "name": "sku",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/downloadable-data-sample-interface"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/downloadable-data-sample-interface"
                  },
                  "type": "array"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "products/{sku}/downloadable-links/samples",
        "tags": [
          "products/{sku}/downloadable-links/samples"
        ]
      },
      "post": {
        "description": "Update downloadable sample of the given product",
        "operationId": "downloadableSampleRepositoryV1SavePost",
        "parameters": [
          {
            "in": "path",
            "name": "sku",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/downloadableSampleRepositoryV1SavePostDownloadablesamplerepositoryv1savepostbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "integer"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "products/{sku}/downloadable-links/samples",
        "tags": [
          "products/{sku}/downloadable-links/samples"
        ]
      }
    },
    "/V1/products/{sku}/downloadable-links/samples/{id}": {
      "put": {
        "description": "Update downloadable sample of the given product",
        "operationId": "downloadableSampleRepositoryV1SavePut",
        "parameters": [
          {
            "in": "path",
            "name": "sku",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/downloadableSampleRepositoryV1SavePostDownloadablesamplerepositoryv1savepostbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "integer"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "products/{sku}/downloadable-links/samples/{id}",
        "tags": [
          "products/{sku}/downloadable-links/samples/{id}"
        ]
      }
    },
    "/V1/products/{sku}/downloadable-links/{id}": {
      "put": {
        "description": "Update downloadable link of the given product (link type and its resources cannot be changed)",
        "operationId": "downloadableLinkRepositoryV1SavePut",
        "parameters": [
          {
            "in": "path",
            "name": "sku",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/downloadableLinkRepositoryV1SavePostDownloadablelinkrepositoryv1savepostbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "integer"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "products/{sku}/downloadable-links/{id}",
        "tags": [
          "products/{sku}/downloadable-links/{id}"
        ]
      }
    },
    "/V1/products/{sku}/group-prices/{customerGroupId}/tiers": {
      "get": {
        "description": "Get tier price of product",
        "operationId": "catalogProductTierPriceManagementV1GetListGet",
        "parameters": [
          {
            "in": "path",
            "name": "sku",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "'all' can be used to specify 'ALL GROUPS'",
            "in": "path",
            "name": "customerGroupId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-product-tier-price-interface"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-product-tier-price-interface"
                  },
                  "type": "array"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "products/{sku}/group-prices/{customerGroupId}/tiers",
        "tags": [
          "products/{sku}/group-prices/{customerGroupId}/tiers"
        ]
      }
    },
    "/V1/products/{sku}/group-prices/{customerGroupId}/tiers/{qty}": {
      "delete": {
        "description": "Remove tier price from product",
        "operationId": "catalogProductTierPriceManagementV1RemoveDelete",
        "parameters": [
          {
            "in": "path",
            "name": "sku",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "'all' can be used to specify 'ALL GROUPS'",
            "in": "path",
            "name": "customerGroupId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "qty",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "products/{sku}/group-prices/{customerGroupId}/tiers/{qty}",
        "tags": [
          "products/{sku}/group-prices/{customerGroupId}/tiers/{qty}"
        ]
      }
    },
    "/V1/products/{sku}/group-prices/{customerGroupId}/tiers/{qty}/price/{price}": {
      "post": {
        "description": "Create tier price for product",
        "operationId": "catalogProductTierPriceManagementV1AddPost",
        "parameters": [
          {
            "in": "path",
            "name": "sku",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "'all' can be used to specify 'ALL GROUPS'",
            "in": "path",
            "name": "customerGroupId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "price",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "path",
            "name": "qty",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "products/{sku}/group-prices/{customerGroupId}/tiers/{qty}/price/{price}",
        "tags": [
          "products/{sku}/group-prices/{customerGroupId}/tiers/{qty}/price/{price}"
        ]
      }
    },
    "/V1/products/{sku}/links": {
      "post": {
        "description": "Assign a product link to another product",
        "operationId": "catalogProductLinkManagementV1SetProductLinksPost",
        "parameters": [
          {
            "in": "path",
            "name": "sku",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "items": {
                    "items": {
                      "$ref": "#/components/schemas/catalog-data-product-link-interface"
                    },
                    "type": "array"
                  }
                },
                "required": [
                  "items"
                ],
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "properties": {
                  "items": {
                    "items": {
                      "$ref": "#/components/schemas/catalog-data-product-link-interface"
                    },
                    "type": "array"
                  }
                },
                "required": [
                  "items"
                ],
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "products/{sku}/links",
        "tags": [
          "products/{sku}/links"
        ]
      },
      "put": {
        "description": "Save product link",
        "operationId": "catalogProductLinkRepositoryV1SavePut",
        "parameters": [
          {
            "in": "path",
            "name": "sku",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "entity": {
                    "$ref": "#/components/schemas/catalog-data-product-link-interface"
                  }
                },
                "required": [
                  "entity"
                ],
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "properties": {
                  "entity": {
                    "$ref": "#/components/schemas/catalog-data-product-link-interface"
                  }
                },
                "required": [
                  "entity"
                ],
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "products/{sku}/links",
        "tags": [
          "products/{sku}/links"
        ]
      }
    },
    "/V1/products/{sku}/links/{type}": {
      "get": {
        "description": "Provide the list of links for a specific product",
        "operationId": "catalogProductLinkManagementV1GetLinkedItemsByTypeGet",
        "parameters": [
          {
            "in": "path",
            "name": "sku",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "type",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-product-link-interface"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-product-link-interface"
                  },
                  "type": "array"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "products/{sku}/links/{type}",
        "tags": [
          "products/{sku}/links/{type}"
        ]
      }
    },
    "/V1/products/{sku}/links/{type}/{linkedProductSku}": {
      "delete": {
        "description": "",
        "operationId": "catalogProductLinkRepositoryV1DeleteByIdDelete",
        "parameters": [
          {
            "in": "path",
            "name": "sku",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "type",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "linkedProductSku",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "products/{sku}/links/{type}/{linkedProductSku}",
        "tags": [
          "products/{sku}/links/{type}/{linkedProductSku}"
        ]
      }
    },
    "/V1/products/{sku}/media": {
      "get": {
        "description": "Retrieve the list of gallery entries associated with given product",
        "operationId": "catalogProductAttributeMediaGalleryManagementV1GetListGet",
        "parameters": [
          {
            "in": "path",
            "name": "sku",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-product-attribute-media-gallery-entry-interface"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-product-attribute-media-gallery-entry-interface"
                  },
                  "type": "array"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "products/{sku}/media",
        "tags": [
          "products/{sku}/media"
        ]
      },
      "post": {
        "description": "Create new gallery entry",
        "operationId": "catalogProductAttributeMediaGalleryManagementV1CreatePost",
        "parameters": [
          {
            "in": "path",
            "name": "sku",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/catalogProductAttributeMediaGalleryManagementV1CreatePostCatalogproductattributemediagallerymanagementv1createpostbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "gallery entry ID",
                  "type": "integer"
                }
              },
              "application/xml": {
                "schema": {
                  "description": "gallery entry ID",
                  "type": "integer"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "products/{sku}/media",
        "tags": [
          "products/{sku}/media"
        ]
      }
    },
    "/V1/products/{sku}/media/{entryId}": {
      "delete": {
        "description": "Remove gallery entry",
        "operationId": "catalogProductAttributeMediaGalleryManagementV1RemoveDelete",
        "parameters": [
          {
            "in": "path",
            "name": "sku",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "entryId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "products/{sku}/media/{entryId}",
        "tags": [
          "products/{sku}/media/{entryId}"
        ]
      },
      "get": {
        "description": "Return information about gallery entry",
        "operationId": "catalogProductAttributeMediaGalleryManagementV1GetGet",
        "parameters": [
          {
            "in": "path",
            "name": "sku",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "entryId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/catalog-data-product-attribute-media-gallery-entry-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/catalog-data-product-attribute-media-gallery-entry-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "products/{sku}/media/{entryId}",
        "tags": [
          "products/{sku}/media/{entryId}"
        ]
      },
      "put": {
        "description": "Update gallery entry",
        "operationId": "catalogProductAttributeMediaGalleryManagementV1UpdatePut",
        "parameters": [
          {
            "in": "path",
            "name": "sku",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "entryId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/catalogProductAttributeMediaGalleryManagementV1CreatePostCatalogproductattributemediagallerymanagementv1createpostbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "products/{sku}/media/{entryId}",
        "tags": [
          "products/{sku}/media/{entryId}"
        ]
      }
    },
    "/V1/products/{sku}/options": {
      "get": {
        "description": "Get the list of custom options for a specific product",
        "operationId": "catalogProductCustomOptionRepositoryV1GetListGet",
        "parameters": [
          {
            "in": "path",
            "name": "sku",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-product-custom-option-interface"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-product-custom-option-interface"
                  },
                  "type": "array"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "products/{sku}/options",
        "tags": [
          "products/{sku}/options"
        ]
      }
    },
    "/V1/products/{sku}/options/{optionId}": {
      "delete": {
        "description": "",
        "operationId": "catalogProductCustomOptionRepositoryV1DeleteByIdentifierDelete",
        "parameters": [
          {
            "in": "path",
            "name": "sku",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "optionId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "products/{sku}/options/{optionId}",
        "tags": [
          "products/{sku}/options/{optionId}"
        ]
      },
      "get": {
        "description": "Get custom option for a specific product",
        "operationId": "catalogProductCustomOptionRepositoryV1GetGet",
        "parameters": [
          {
            "in": "path",
            "name": "sku",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "optionId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/catalog-data-product-custom-option-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/catalog-data-product-custom-option-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "products/{sku}/options/{optionId}",
        "tags": [
          "products/{sku}/options/{optionId}"
        ]
      }
    },
    "/V1/products/{sku}/websites": {
      "post": {
        "description": "Assign a product to the website",
        "operationId": "catalogProductWebsiteLinkRepositoryV1SavePost",
        "parameters": [
          {
            "in": "path",
            "name": "sku",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/catalogProductWebsiteLinkRepositoryV1SavePostCatalogproductwebsitelinkrepositoryv1savepostbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "will returned True if website successfully assigned to product",
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "description": "will returned True if website successfully assigned to product",
                  "type": "boolean"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "products/{sku}/websites",
        "tags": [
          "products/{sku}/websites"
        ]
      },
      "put": {
        "description": "Assign a product to the website",
        "operationId": "catalogProductWebsiteLinkRepositoryV1SavePut",
        "parameters": [
          {
            "in": "path",
            "name": "sku",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/catalogProductWebsiteLinkRepositoryV1SavePostCatalogproductwebsitelinkrepositoryv1savepostbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "will returned True if website successfully assigned to product",
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "description": "will returned True if website successfully assigned to product",
                  "type": "boolean"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "products/{sku}/websites",
        "tags": [
          "products/{sku}/websites"
        ]
      }
    },
    "/V1/products/{sku}/websites/{websiteId}": {
      "delete": {
        "description": "Remove the website assignment from the product by product sku",
        "operationId": "catalogProductWebsiteLinkRepositoryV1DeleteByIdDelete",
        "parameters": [
          {
            "in": "path",
            "name": "sku",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "websiteId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "will returned True if website successfully unassigned from product",
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "description": "will returned True if website successfully unassigned from product",
                  "type": "boolean"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "products/{sku}/websites/{websiteId}",
        "tags": [
          "products/{sku}/websites/{websiteId}"
        ]
      }
    },
    "/V1/requisition_lists": {
      "post": {
        "description": "Save Requisition List",
        "operationId": "requisitionListRequisitionListRepositoryV1SavePost",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "requisitionList": {
                    "$ref": "#/components/schemas/requisition-list-data-requisition-list-interface"
                  }
                },
                "required": [
                  "requisitionList"
                ],
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "properties": {
                  "requisitionList": {
                    "$ref": "#/components/schemas/requisition-list-data-requisition-list-interface"
                  }
                },
                "required": [
                  "requisitionList"
                ],
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/requisition-list-data-requisition-list-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/requisition-list-data-requisition-list-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "requisition_lists",
        "tags": [
          "requisition_lists"
        ]
      }
    },
    "/V1/returns": {
      "get": {
        "description": "Return list of rma data objects based on search criteria",
        "operationId": "rmaRmaManagementV1SearchGet",
        "parameters": [
          {
            "description": "Field",
            "in": "query",
            "name": "searchCriteria[filterGroups][0][filters][0][field]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Value",
            "in": "query",
            "name": "searchCriteria[filterGroups][0][filters][0][value]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Condition type",
            "in": "query",
            "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sorting field.",
            "in": "query",
            "name": "searchCriteria[sortOrders][0][field]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sorting direction.",
            "in": "query",
            "name": "searchCriteria[sortOrders][0][direction]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Page size.",
            "in": "query",
            "name": "searchCriteria[pageSize]",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Current page.",
            "in": "query",
            "name": "searchCriteria[currentPage]",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rma-data-rma-search-result-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/rma-data-rma-search-result-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "returns",
        "tags": [
          "returns"
        ]
      },
      "post": {
        "description": "Save RMA",
        "operationId": "rmaRmaManagementV1SaveRmaPost",
        "requestBody": {
          "$ref": "#/components/requestBodies/rmaRmaManagementV1SaveRmaPostRmarmamanagementv1savermapostbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rma-data-rma-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/rma-data-rma-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "returns",
        "tags": [
          "returns"
        ]
      }
    },
    "/V1/returns/{id}": {
      "delete": {
        "description": "Delete RMA",
        "operationId": "rmaRmaRepositoryV1DeleteDelete",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/rmaRmaManagementV1SaveRmaPostRmarmamanagementv1savermapostbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "returns/{id}",
        "tags": [
          "returns/{id}"
        ]
      },
      "get": {
        "description": "Return data object for specified RMA id",
        "operationId": "rmaRmaRepositoryV1GetGet",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rma-data-rma-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/rma-data-rma-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "returns/{id}",
        "tags": [
          "returns/{id}"
        ]
      },
      "put": {
        "description": "Save RMA",
        "operationId": "rmaRmaManagementV1SaveRmaPut",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/rmaRmaManagementV1SaveRmaPostRmarmamanagementv1savermapostbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rma-data-rma-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/rma-data-rma-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "returns/{id}",
        "tags": [
          "returns/{id}"
        ]
      }
    },
    "/V1/returns/{id}/comments": {
      "get": {
        "description": "Comments list",
        "operationId": "rmaCommentManagementV1CommentsListGet",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rma-data-comment-search-result-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/rma-data-comment-search-result-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "returns/{id}/comments",
        "tags": [
          "returns/{id}/comments"
        ]
      },
      "post": {
        "description": "Add comment",
        "operationId": "rmaCommentManagementV1AddCommentPost",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/rma-data-comment-interface"
                  }
                },
                "required": [
                  "data"
                ],
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/rma-data-comment-interface"
                  }
                },
                "required": [
                  "data"
                ],
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Internal Server error"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "returns/{id}/comments",
        "tags": [
          "returns/{id}/comments"
        ]
      }
    },
    "/V1/returns/{id}/labels": {
      "get": {
        "description": "Get shipping label int the PDF format",
        "operationId": "rmaTrackManagementV1GetShippingLabelPdfGet",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "returns/{id}/labels",
        "tags": [
          "returns/{id}/labels"
        ]
      }
    },
    "/V1/returns/{id}/tracking-numbers": {
      "get": {
        "description": "Get track list",
        "operationId": "rmaTrackManagementV1GetTracksGet",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rma-data-track-search-result-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/rma-data-track-search-result-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "returns/{id}/tracking-numbers",
        "tags": [
          "returns/{id}/tracking-numbers"
        ]
      },
      "post": {
        "description": "Add track",
        "operationId": "rmaTrackManagementV1AddTrackPost",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "track": {
                    "$ref": "#/components/schemas/rma-data-track-interface"
                  }
                },
                "required": [
                  "track"
                ],
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "properties": {
                  "track": {
                    "$ref": "#/components/schemas/rma-data-track-interface"
                  }
                },
                "required": [
                  "track"
                ],
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "returns/{id}/tracking-numbers",
        "tags": [
          "returns/{id}/tracking-numbers"
        ]
      }
    },
    "/V1/returns/{id}/tracking-numbers/{trackId}": {
      "delete": {
        "description": "Remove track by id",
        "operationId": "rmaTrackManagementV1RemoveTrackByIdDelete",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "trackId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "returns/{id}/tracking-numbers/{trackId}",
        "tags": [
          "returns/{id}/tracking-numbers/{trackId}"
        ]
      }
    },
    "/V1/returnsAttributeMetadata": {
      "get": {
        "description": "Get all attribute metadata.",
        "operationId": "rmaRmaAttributesManagementV1GetAllAttributesMetadataGet",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/customer-data-attribute-metadata-interface"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/customer-data-attribute-metadata-interface"
                  },
                  "type": "array"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "returnsAttributeMetadata",
        "tags": [
          "returnsAttributeMetadata"
        ]
      }
    },
    "/V1/returnsAttributeMetadata/custom": {
      "get": {
        "description": "Get custom attribute metadata for the given Data object's attribute set",
        "operationId": "rmaRmaAttributesManagementV1GetCustomAttributesMetadataGet",
        "parameters": [
          {
            "description": "Data object class name",
            "in": "query",
            "name": "dataObjectClassName",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/framework-metadata-object-interface"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/framework-metadata-object-interface"
                  },
                  "type": "array"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "returnsAttributeMetadata/custom",
        "tags": [
          "returnsAttributeMetadata/custom"
        ]
      }
    },
    "/V1/returnsAttributeMetadata/form/{formCode}": {
      "get": {
        "description": "Retrieve all attributes filtered by form code",
        "operationId": "rmaRmaAttributesManagementV1GetAttributesGet",
        "parameters": [
          {
            "in": "path",
            "name": "formCode",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/customer-data-attribute-metadata-interface"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/customer-data-attribute-metadata-interface"
                  },
                  "type": "array"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "returnsAttributeMetadata/form/{formCode}",
        "tags": [
          "returnsAttributeMetadata/form/{formCode}"
        ]
      }
    },
    "/V1/returnsAttributeMetadata/{attributeCode}": {
      "get": {
        "description": "Retrieve attribute metadata.",
        "operationId": "rmaRmaAttributesManagementV1GetAttributeMetadataGet",
        "parameters": [
          {
            "in": "path",
            "name": "attributeCode",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-attribute-metadata-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-attribute-metadata-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "returnsAttributeMetadata/{attributeCode}",
        "tags": [
          "returnsAttributeMetadata/{attributeCode}"
        ]
      }
    },
    "/V1/reward/mine/use-reward": {
      "post": {
        "description": "Set reward points to quote",
        "operationId": "rewardRewardManagementV1SetPost",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "reward/mine/use-reward",
        "tags": [
          "reward/mine/use-reward"
        ]
      }
    },
    "/V1/salesRules": {
      "post": {
        "description": "Save sales rule.",
        "operationId": "salesRuleRuleRepositoryV1SavePost",
        "requestBody": {
          "$ref": "#/components/requestBodies/salesRuleRuleRepositoryV1SavePostSalesrulerulerepositoryv1savepostbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sales-rule-data-rule-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/sales-rule-data-rule-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Internal Server error"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "salesRules",
        "tags": [
          "salesRules"
        ]
      }
    },
    "/V1/salesRules/search": {
      "get": {
        "description": "Retrieve sales rules that match te specified criteria. This call returns an array of objects, but detailed information about each object’s attributes might not be included. See https://devdocs.magento.com/codelinks/attributes.html#RuleRepositoryInterface to determine which call to use to get detailed information about all attributes for an object.",
        "operationId": "salesRuleRuleRepositoryV1GetListGet",
        "parameters": [
          {
            "description": "Field",
            "in": "query",
            "name": "searchCriteria[filterGroups][0][filters][0][field]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Value",
            "in": "query",
            "name": "searchCriteria[filterGroups][0][filters][0][value]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Condition type",
            "in": "query",
            "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sorting field.",
            "in": "query",
            "name": "searchCriteria[sortOrders][0][field]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sorting direction.",
            "in": "query",
            "name": "searchCriteria[sortOrders][0][direction]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Page size.",
            "in": "query",
            "name": "searchCriteria[pageSize]",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Current page.",
            "in": "query",
            "name": "searchCriteria[currentPage]",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sales-rule-data-rule-search-result-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/sales-rule-data-rule-search-result-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Internal Server error"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "salesRules/search",
        "tags": [
          "salesRules/search"
        ]
      }
    },
    "/V1/salesRules/{ruleId}": {
      "delete": {
        "description": "Delete rule by ID.",
        "operationId": "salesRuleRuleRepositoryV1DeleteByIdDelete",
        "parameters": [
          {
            "in": "path",
            "name": "ruleId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "true on success",
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "description": "true on success",
                  "type": "boolean"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Internal Server error"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "salesRules/{ruleId}",
        "tags": [
          "salesRules/{ruleId}"
        ]
      },
      "get": {
        "description": "Get rule by ID.",
        "operationId": "salesRuleRuleRepositoryV1GetByIdGet",
        "parameters": [
          {
            "in": "path",
            "name": "ruleId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sales-rule-data-rule-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/sales-rule-data-rule-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Internal Server error"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "salesRules/{ruleId}",
        "tags": [
          "salesRules/{ruleId}"
        ]
      },
      "put": {
        "description": "Save sales rule.",
        "operationId": "salesRuleRuleRepositoryV1SavePut",
        "parameters": [
          {
            "in": "path",
            "name": "ruleId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/salesRuleRuleRepositoryV1SavePostSalesrulerulerepositoryv1savepostbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sales-rule-data-rule-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/sales-rule-data-rule-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Internal Server error"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "salesRules/{ruleId}",
        "tags": [
          "salesRules/{ruleId}"
        ]
      }
    },
    "/V1/search": {
      "get": {
        "description": "Make Full Text Search and return found Documents",
        "operationId": "searchV1SearchGet",
        "parameters": [
          {
            "in": "query",
            "name": "searchCriteria[requestName]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Field",
            "in": "query",
            "name": "searchCriteria[filterGroups][0][filters][0][field]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Value",
            "in": "query",
            "name": "searchCriteria[filterGroups][0][filters][0][value]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Condition type",
            "in": "query",
            "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sorting field.",
            "in": "query",
            "name": "searchCriteria[sortOrders][0][field]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sorting direction.",
            "in": "query",
            "name": "searchCriteria[sortOrders][0][direction]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Page size.",
            "in": "query",
            "name": "searchCriteria[pageSize]",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Current page.",
            "in": "query",
            "name": "searchCriteria[currentPage]",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/framework-search-search-result-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/framework-search-search-result-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "search",
        "tags": [
          "search"
        ]
      }
    },
    "/V1/sharedCatalog": {
      "post": {
        "description": "Create or update Shared Catalog service.",
        "operationId": "sharedCatalogSharedCatalogRepositoryV1SavePost",
        "requestBody": {
          "$ref": "#/components/requestBodies/sharedCatalogSharedCatalogRepositoryV1SavePostSharedcatalogsharedcatalogrepositoryv1savepostbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "integer"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Internal Server error"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "sharedCatalog",
        "tags": [
          "sharedCatalog"
        ]
      }
    },
    "/V1/sharedCatalog/": {
      "get": {
        "description": "Return the list of shared catalogs and basic properties for each catalog.",
        "operationId": "sharedCatalogSharedCatalogRepositoryV1GetListGet",
        "parameters": [
          {
            "description": "Field",
            "in": "query",
            "name": "searchCriteria[filterGroups][0][filters][0][field]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Value",
            "in": "query",
            "name": "searchCriteria[filterGroups][0][filters][0][value]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Condition type",
            "in": "query",
            "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sorting field.",
            "in": "query",
            "name": "searchCriteria[sortOrders][0][field]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sorting direction.",
            "in": "query",
            "name": "searchCriteria[sortOrders][0][direction]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Page size.",
            "in": "query",
            "name": "searchCriteria[pageSize]",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Current page.",
            "in": "query",
            "name": "searchCriteria[currentPage]",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/shared-catalog-data-search-results-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/shared-catalog-data-search-results-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Internal Server error"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "sharedCatalog/",
        "tags": [
          "sharedCatalog/"
        ]
      }
    },
    "/V1/sharedCatalog/{id}": {
      "put": {
        "description": "Create or update Shared Catalog service.",
        "operationId": "sharedCatalogSharedCatalogRepositoryV1SavePut",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/sharedCatalogSharedCatalogRepositoryV1SavePostSharedcatalogsharedcatalogrepositoryv1savepostbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "integer"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Internal Server error"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "sharedCatalog/{id}",
        "tags": [
          "sharedCatalog/{id}"
        ]
      }
    },
    "/V1/sharedCatalog/{id}/assignCategories": {
      "post": {
        "description": "Add categories into the shared catalog.",
        "operationId": "sharedCatalogCategoryManagementV1AssignCategoriesPost",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/sharedCatalogCategoryManagementV1AssignCategoriesPostSharedcatalogcategorymanagementv1assigncategoriespostbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "true on success",
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "description": "true on success",
                  "type": "boolean"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "sharedCatalog/{id}/assignCategories",
        "tags": [
          "sharedCatalog/{id}/assignCategories"
        ]
      }
    },
    "/V1/sharedCatalog/{id}/assignProducts": {
      "post": {
        "description": "Add products into the shared catalog.",
        "operationId": "sharedCatalogProductManagementV1AssignProductsPost",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/sharedCatalogProductManagementV1AssignProductsPostSharedcatalogproductmanagementv1assignproductspostbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "true on success",
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "description": "true on success",
                  "type": "boolean"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "sharedCatalog/{id}/assignProducts",
        "tags": [
          "sharedCatalog/{id}/assignProducts"
        ]
      }
    },
    "/V1/sharedCatalog/{id}/categories": {
      "get": {
        "description": "Return the list of categories in the selected shared catalog.",
        "operationId": "sharedCatalogCategoryManagementV1GetCategoriesGet",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "type": "integer"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "type": "integer"
                  },
                  "type": "array"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "sharedCatalog/{id}/categories",
        "tags": [
          "sharedCatalog/{id}/categories"
        ]
      }
    },
    "/V1/sharedCatalog/{id}/products": {
      "get": {
        "description": "Return the list of product SKUs in the selected shared catalog.",
        "operationId": "sharedCatalogProductManagementV1GetProductsGet",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "sharedCatalog/{id}/products",
        "tags": [
          "sharedCatalog/{id}/products"
        ]
      }
    },
    "/V1/sharedCatalog/{id}/unassignCategories": {
      "post": {
        "description": "Remove the specified categories from the shared catalog.",
        "operationId": "sharedCatalogCategoryManagementV1UnassignCategoriesPost",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/sharedCatalogCategoryManagementV1AssignCategoriesPostSharedcatalogcategorymanagementv1assigncategoriespostbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "true on success",
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "description": "true on success",
                  "type": "boolean"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "sharedCatalog/{id}/unassignCategories",
        "tags": [
          "sharedCatalog/{id}/unassignCategories"
        ]
      }
    },
    "/V1/sharedCatalog/{id}/unassignProducts": {
      "post": {
        "description": "Remove the specified products from the shared catalog.",
        "operationId": "sharedCatalogProductManagementV1UnassignProductsPost",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/sharedCatalogProductManagementV1AssignProductsPostSharedcatalogproductmanagementv1assignproductspostbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "true on success",
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "description": "true on success",
                  "type": "boolean"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "sharedCatalog/{id}/unassignProducts",
        "tags": [
          "sharedCatalog/{id}/unassignProducts"
        ]
      }
    },
    "/V1/sharedCatalog/{sharedCatalogId}": {
      "delete": {
        "description": "Delete a shared catalog by ID.",
        "operationId": "sharedCatalogSharedCatalogRepositoryV1DeleteByIdDelete",
        "parameters": [
          {
            "in": "path",
            "name": "sharedCatalogId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "true on success",
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "description": "true on success",
                  "type": "boolean"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Internal Server error"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "sharedCatalog/{sharedCatalogId}",
        "tags": [
          "sharedCatalog/{sharedCatalogId}"
        ]
      },
      "get": {
        "description": "Return the following properties for the selected shared catalog: ID, Store Group ID, Name, Type, Description, Customer Group, Tax Class.",
        "operationId": "sharedCatalogSharedCatalogRepositoryV1GetGet",
        "parameters": [
          {
            "in": "path",
            "name": "sharedCatalogId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/shared-catalog-data-shared-catalog-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/shared-catalog-data-shared-catalog-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "sharedCatalog/{sharedCatalogId}",
        "tags": [
          "sharedCatalog/{sharedCatalogId}"
        ]
      }
    },
    "/V1/sharedCatalog/{sharedCatalogId}/assignCompanies": {
      "post": {
        "description": "Assign companies to a shared catalog.",
        "operationId": "sharedCatalogCompanyManagementV1AssignCompaniesPost",
        "parameters": [
          {
            "in": "path",
            "name": "sharedCatalogId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/sharedCatalogCompanyManagementV1AssignCompaniesPostSharedcatalogcompanymanagementv1assigncompaniespostbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Internal Server error"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "sharedCatalog/{sharedCatalogId}/assignCompanies",
        "tags": [
          "sharedCatalog/{sharedCatalogId}/assignCompanies"
        ]
      }
    },
    "/V1/sharedCatalog/{sharedCatalogId}/companies": {
      "get": {
        "description": "Return the list of company IDs for the companies assigned to the selected catalog.",
        "operationId": "sharedCatalogCompanyManagementV1GetCompaniesGet",
        "parameters": [
          {
            "in": "path",
            "name": "sharedCatalogId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "sharedCatalog/{sharedCatalogId}/companies",
        "tags": [
          "sharedCatalog/{sharedCatalogId}/companies"
        ]
      }
    },
    "/V1/sharedCatalog/{sharedCatalogId}/unassignCompanies": {
      "post": {
        "description": "Unassign companies from a shared catalog.",
        "operationId": "sharedCatalogCompanyManagementV1UnassignCompaniesPost",
        "parameters": [
          {
            "in": "path",
            "name": "sharedCatalogId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/sharedCatalogCompanyManagementV1AssignCompaniesPostSharedcatalogcompanymanagementv1assigncompaniespostbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Internal Server error"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "sharedCatalog/{sharedCatalogId}/unassignCompanies",
        "tags": [
          "sharedCatalog/{sharedCatalogId}/unassignCompanies"
        ]
      }
    },
    "/V1/shipment/": {
      "post": {
        "description": "Performs persist operations for a specified shipment.",
        "operationId": "salesShipmentRepositoryV1SavePost",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "entity": {
                    "$ref": "#/components/schemas/sales-data-shipment-interface"
                  }
                },
                "required": [
                  "entity"
                ],
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "properties": {
                  "entity": {
                    "$ref": "#/components/schemas/sales-data-shipment-interface"
                  }
                },
                "required": [
                  "entity"
                ],
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sales-data-shipment-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/sales-data-shipment-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "shipment/",
        "tags": [
          "shipment/"
        ]
      }
    },
    "/V1/shipment/track": {
      "post": {
        "description": "Performs persist operations for a specified shipment track.",
        "operationId": "salesShipmentTrackRepositoryV1SavePost",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "entity": {
                    "$ref": "#/components/schemas/sales-data-shipment-track-interface"
                  }
                },
                "required": [
                  "entity"
                ],
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "properties": {
                  "entity": {
                    "$ref": "#/components/schemas/sales-data-shipment-track-interface"
                  }
                },
                "required": [
                  "entity"
                ],
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sales-data-shipment-track-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/sales-data-shipment-track-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "shipment/track",
        "tags": [
          "shipment/track"
        ]
      }
    },
    "/V1/shipment/track/{id}": {
      "delete": {
        "description": "Deletes a specified shipment track by ID.",
        "operationId": "salesShipmentTrackRepositoryV1DeleteByIdDelete",
        "parameters": [
          {
            "description": "The shipment track ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "shipment/track/{id}",
        "tags": [
          "shipment/track/{id}"
        ]
      }
    },
    "/V1/shipment/{id}": {
      "get": {
        "description": "Loads a specified shipment.",
        "operationId": "salesShipmentRepositoryV1GetGet",
        "parameters": [
          {
            "description": "The shipment ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sales-data-shipment-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/sales-data-shipment-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "shipment/{id}",
        "tags": [
          "shipment/{id}"
        ]
      }
    },
    "/V1/shipment/{id}/comments": {
      "get": {
        "description": "Lists comments for a specified shipment.",
        "operationId": "salesShipmentManagementV1GetCommentsListGet",
        "parameters": [
          {
            "description": "The shipment ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sales-data-shipment-comment-search-result-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/sales-data-shipment-comment-search-result-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "shipment/{id}/comments",
        "tags": [
          "shipment/{id}/comments"
        ]
      },
      "post": {
        "description": "Performs persist operations for a specified shipment comment.",
        "operationId": "salesShipmentCommentRepositoryV1SavePost",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "entity": {
                    "$ref": "#/components/schemas/sales-data-shipment-comment-interface"
                  }
                },
                "required": [
                  "entity"
                ],
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "properties": {
                  "entity": {
                    "$ref": "#/components/schemas/sales-data-shipment-comment-interface"
                  }
                },
                "required": [
                  "entity"
                ],
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sales-data-shipment-comment-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/sales-data-shipment-comment-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "shipment/{id}/comments",
        "tags": [
          "shipment/{id}/comments"
        ]
      }
    },
    "/V1/shipment/{id}/emails": {
      "post": {
        "description": "Emails user a specified shipment.",
        "operationId": "salesShipmentManagementV1NotifyPost",
        "parameters": [
          {
            "description": "The shipment ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "shipment/{id}/emails",
        "tags": [
          "shipment/{id}/emails"
        ]
      }
    },
    "/V1/shipment/{id}/label": {
      "get": {
        "description": "Gets a specified shipment label.",
        "operationId": "salesShipmentManagementV1GetLabelGet",
        "parameters": [
          {
            "description": "The shipment label ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Shipment label.",
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "description": "Shipment label.",
                  "type": "string"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "shipment/{id}/label",
        "tags": [
          "shipment/{id}/label"
        ]
      }
    },
    "/V1/shipments": {
      "get": {
        "description": "Lists shipments that match specified search criteria. This call returns an array of objects, but detailed information about each object’s attributes might not be included. See https://devdocs.magento.com/codelinks/attributes.html#ShipmentRepositoryInterface to determine which call to use to get detailed information about all attributes for an object.",
        "operationId": "salesShipmentRepositoryV1GetListGet",
        "parameters": [
          {
            "description": "Field",
            "in": "query",
            "name": "searchCriteria[filterGroups][0][filters][0][field]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Value",
            "in": "query",
            "name": "searchCriteria[filterGroups][0][filters][0][value]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Condition type",
            "in": "query",
            "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sorting field.",
            "in": "query",
            "name": "searchCriteria[sortOrders][0][field]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sorting direction.",
            "in": "query",
            "name": "searchCriteria[sortOrders][0][direction]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Page size.",
            "in": "query",
            "name": "searchCriteria[pageSize]",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Current page.",
            "in": "query",
            "name": "searchCriteria[currentPage]",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sales-data-shipment-search-result-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/sales-data-shipment-search-result-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "shipments",
        "tags": [
          "shipments"
        ]
      }
    },
    "/V1/stockItems/lowStock/": {
      "get": {
        "description": "Retrieves a list of SKU's with low inventory qty",
        "operationId": "catalogInventoryStockRegistryV1GetLowStockItemsGet",
        "parameters": [
          {
            "in": "query",
            "name": "scopeId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "qty",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "currentPage",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/catalog-inventory-data-stock-item-collection-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/catalog-inventory-data-stock-item-collection-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "stockItems/lowStock/",
        "tags": [
          "stockItems/lowStock/"
        ]
      }
    },
    "/V1/stockItems/{productSku}": {
      "get": {
        "description": "",
        "operationId": "catalogInventoryStockRegistryV1GetStockItemBySkuGet",
        "parameters": [
          {
            "in": "path",
            "name": "productSku",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "scopeId",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/catalog-inventory-data-stock-item-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/catalog-inventory-data-stock-item-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "stockItems/{productSku}",
        "tags": [
          "stockItems/{productSku}"
        ]
      }
    },
    "/V1/stockStatuses/{productSku}": {
      "get": {
        "description": "",
        "operationId": "catalogInventoryStockRegistryV1GetStockStatusBySkuGet",
        "parameters": [
          {
            "in": "path",
            "name": "productSku",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "scopeId",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/catalog-inventory-data-stock-status-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/catalog-inventory-data-stock-status-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "stockStatuses/{productSku}",
        "tags": [
          "stockStatuses/{productSku}"
        ]
      }
    },
    "/V1/store/storeConfigs": {
      "get": {
        "description": "",
        "operationId": "storeStoreConfigManagerV1GetStoreConfigsGet",
        "parameters": [
          {
            "explode": false,
            "in": "query",
            "name": "storeCodes",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/store-data-store-config-interface"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/store-data-store-config-interface"
                  },
                  "type": "array"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "store/storeConfigs",
        "tags": [
          "store/storeConfigs"
        ]
      }
    },
    "/V1/store/storeGroups": {
      "get": {
        "description": "Retrieve list of all groups",
        "operationId": "storeGroupRepositoryV1GetListGet",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/store-data-group-interface"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/store-data-group-interface"
                  },
                  "type": "array"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "store/storeGroups",
        "tags": [
          "store/storeGroups"
        ]
      }
    },
    "/V1/store/storeViews": {
      "get": {
        "description": "Retrieve list of all stores",
        "operationId": "storeStoreRepositoryV1GetListGet",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/store-data-store-interface"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/store-data-store-interface"
                  },
                  "type": "array"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "store/storeViews",
        "tags": [
          "store/storeViews"
        ]
      }
    },
    "/V1/store/websites": {
      "get": {
        "description": "Retrieve list of all websites",
        "operationId": "storeWebsiteRepositoryV1GetListGet",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/store-data-website-interface"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/store-data-website-interface"
                  },
                  "type": "array"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "store/websites",
        "tags": [
          "store/websites"
        ]
      }
    },
    "/V1/taxClasses": {
      "post": {
        "description": "Create a Tax Class",
        "operationId": "taxTaxClassRepositoryV1SavePost",
        "requestBody": {
          "$ref": "#/components/requestBodies/taxTaxClassRepositoryV1SavePostTaxtaxclassrepositoryv1savepostbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "id for the newly created Tax class",
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "description": "id for the newly created Tax class",
                  "type": "string"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Internal Server error"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "taxClasses",
        "tags": [
          "taxClasses"
        ]
      }
    },
    "/V1/taxClasses/search": {
      "get": {
        "description": "Retrieve tax classes which match a specific criteria. This call returns an array of objects, but detailed information about each object’s attributes might not be included. See https://devdocs.magento.com/codelinks/attributes.html#TaxClassRepositoryInterface to determine which call to use to get detailed information about all attributes for an object.",
        "operationId": "taxTaxClassRepositoryV1GetListGet",
        "parameters": [
          {
            "description": "Field",
            "in": "query",
            "name": "searchCriteria[filterGroups][0][filters][0][field]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Value",
            "in": "query",
            "name": "searchCriteria[filterGroups][0][filters][0][value]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Condition type",
            "in": "query",
            "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sorting field.",
            "in": "query",
            "name": "searchCriteria[sortOrders][0][field]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sorting direction.",
            "in": "query",
            "name": "searchCriteria[sortOrders][0][direction]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Page size.",
            "in": "query",
            "name": "searchCriteria[pageSize]",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Current page.",
            "in": "query",
            "name": "searchCriteria[currentPage]",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/tax-data-tax-class-search-results-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/tax-data-tax-class-search-results-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "taxClasses/search",
        "tags": [
          "taxClasses/search"
        ]
      }
    },
    "/V1/taxClasses/{classId}": {
      "put": {
        "description": "Create a Tax Class",
        "operationId": "taxTaxClassRepositoryV1SavePut",
        "parameters": [
          {
            "in": "path",
            "name": "classId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/taxTaxClassRepositoryV1SavePostTaxtaxclassrepositoryv1savepostbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "id for the newly created Tax class",
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "description": "id for the newly created Tax class",
                  "type": "string"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Internal Server error"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "taxClasses/{classId}",
        "tags": [
          "taxClasses/{classId}"
        ]
      }
    },
    "/V1/taxClasses/{taxClassId}": {
      "delete": {
        "description": "Delete a tax class with the given tax class id.",
        "operationId": "taxTaxClassRepositoryV1DeleteByIdDelete",
        "parameters": [
          {
            "in": "path",
            "name": "taxClassId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "True if the tax class was deleted, false otherwise",
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "description": "True if the tax class was deleted, false otherwise",
                  "type": "boolean"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "taxClasses/{taxClassId}",
        "tags": [
          "taxClasses/{taxClassId}"
        ]
      },
      "get": {
        "description": "Get a tax class with the given tax class id.",
        "operationId": "taxTaxClassRepositoryV1GetGet",
        "parameters": [
          {
            "in": "path",
            "name": "taxClassId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/tax-data-tax-class-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/tax-data-tax-class-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "taxClasses/{taxClassId}",
        "tags": [
          "taxClasses/{taxClassId}"
        ]
      }
    },
    "/V1/taxRates": {
      "post": {
        "description": "Create or update tax rate",
        "operationId": "taxTaxRateRepositoryV1SavePost",
        "requestBody": {
          "$ref": "#/components/requestBodies/taxTaxRateRepositoryV1SavePostTaxtaxraterepositoryv1savepostbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/tax-data-tax-rate-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/tax-data-tax-rate-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Internal Server error"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "taxRates",
        "tags": [
          "taxRates"
        ]
      },
      "put": {
        "description": "Create or update tax rate",
        "operationId": "taxTaxRateRepositoryV1SavePut",
        "requestBody": {
          "$ref": "#/components/requestBodies/taxTaxRateRepositoryV1SavePostTaxtaxraterepositoryv1savepostbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/tax-data-tax-rate-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/tax-data-tax-rate-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Internal Server error"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "taxRates",
        "tags": [
          "taxRates"
        ]
      }
    },
    "/V1/taxRates/search": {
      "get": {
        "description": "Search TaxRates This call returns an array of objects, but detailed information about each object’s attributes might not be included. See https://devdocs.magento.com/codelinks/attributes.html#TaxRateRepositoryInterface to determine which call to use to get detailed information about all attributes for an object.",
        "operationId": "taxTaxRateRepositoryV1GetListGet",
        "parameters": [
          {
            "description": "Field",
            "in": "query",
            "name": "searchCriteria[filterGroups][0][filters][0][field]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Value",
            "in": "query",
            "name": "searchCriteria[filterGroups][0][filters][0][value]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Condition type",
            "in": "query",
            "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sorting field.",
            "in": "query",
            "name": "searchCriteria[sortOrders][0][field]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sorting direction.",
            "in": "query",
            "name": "searchCriteria[sortOrders][0][direction]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Page size.",
            "in": "query",
            "name": "searchCriteria[pageSize]",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Current page.",
            "in": "query",
            "name": "searchCriteria[currentPage]",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/tax-data-tax-rate-search-results-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/tax-data-tax-rate-search-results-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "taxRates/search",
        "tags": [
          "taxRates/search"
        ]
      }
    },
    "/V1/taxRates/{rateId}": {
      "delete": {
        "description": "Delete tax rate",
        "operationId": "taxTaxRateRepositoryV1DeleteByIdDelete",
        "parameters": [
          {
            "in": "path",
            "name": "rateId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Internal Server error"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "taxRates/{rateId}",
        "tags": [
          "taxRates/{rateId}"
        ]
      },
      "get": {
        "description": "Get tax rate",
        "operationId": "taxTaxRateRepositoryV1GetGet",
        "parameters": [
          {
            "in": "path",
            "name": "rateId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/tax-data-tax-rate-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/tax-data-tax-rate-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "taxRates/{rateId}",
        "tags": [
          "taxRates/{rateId}"
        ]
      }
    },
    "/V1/taxRules": {
      "post": {
        "description": "Save TaxRule",
        "operationId": "taxTaxRuleRepositoryV1SavePost",
        "requestBody": {
          "$ref": "#/components/requestBodies/taxTaxRuleRepositoryV1SavePostTaxtaxrulerepositoryv1savepostbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/tax-data-tax-rule-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/tax-data-tax-rule-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Internal Server error"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "taxRules",
        "tags": [
          "taxRules"
        ]
      },
      "put": {
        "description": "Save TaxRule",
        "operationId": "taxTaxRuleRepositoryV1SavePut",
        "requestBody": {
          "$ref": "#/components/requestBodies/taxTaxRuleRepositoryV1SavePostTaxtaxrulerepositoryv1savepostbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/tax-data-tax-rule-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/tax-data-tax-rule-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Internal Server error"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "taxRules",
        "tags": [
          "taxRules"
        ]
      }
    },
    "/V1/taxRules/search": {
      "get": {
        "description": "Search TaxRules This call returns an array of objects, but detailed information about each object’s attributes might not be included. See https://devdocs.magento.com/codelinks/attributes.html#TaxRuleRepositoryInterface to determine which call to use to get detailed information about all attributes for an object.",
        "operationId": "taxTaxRuleRepositoryV1GetListGet",
        "parameters": [
          {
            "description": "Field",
            "in": "query",
            "name": "searchCriteria[filterGroups][0][filters][0][field]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Value",
            "in": "query",
            "name": "searchCriteria[filterGroups][0][filters][0][value]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Condition type",
            "in": "query",
            "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sorting field.",
            "in": "query",
            "name": "searchCriteria[sortOrders][0][field]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sorting direction.",
            "in": "query",
            "name": "searchCriteria[sortOrders][0][direction]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Page size.",
            "in": "query",
            "name": "searchCriteria[pageSize]",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Current page.",
            "in": "query",
            "name": "searchCriteria[currentPage]",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/tax-data-tax-rule-search-results-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/tax-data-tax-rule-search-results-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "taxRules/search",
        "tags": [
          "taxRules/search"
        ]
      }
    },
    "/V1/taxRules/{ruleId}": {
      "delete": {
        "description": "Delete TaxRule",
        "operationId": "taxTaxRuleRepositoryV1DeleteByIdDelete",
        "parameters": [
          {
            "in": "path",
            "name": "ruleId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Internal Server error"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "taxRules/{ruleId}",
        "tags": [
          "taxRules/{ruleId}"
        ]
      },
      "get": {
        "description": "Get TaxRule",
        "operationId": "taxTaxRuleRepositoryV1GetGet",
        "parameters": [
          {
            "in": "path",
            "name": "ruleId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/tax-data-tax-rule-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/tax-data-tax-rule-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "taxRules/{ruleId}",
        "tags": [
          "taxRules/{ruleId}"
        ]
      }
    },
    "/V1/team/": {
      "get": {
        "description": "Returns the list of teams for the specified search criteria (team name or description).",
        "operationId": "companyTeamRepositoryV1GetListGet",
        "parameters": [
          {
            "description": "Field",
            "in": "query",
            "name": "searchCriteria[filterGroups][0][filters][0][field]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Value",
            "in": "query",
            "name": "searchCriteria[filterGroups][0][filters][0][value]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Condition type",
            "in": "query",
            "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sorting field.",
            "in": "query",
            "name": "searchCriteria[sortOrders][0][field]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sorting direction.",
            "in": "query",
            "name": "searchCriteria[sortOrders][0][direction]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Page size.",
            "in": "query",
            "name": "searchCriteria[pageSize]",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Current page.",
            "in": "query",
            "name": "searchCriteria[currentPage]",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/company-data-team-search-results-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/company-data-team-search-results-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Internal Server error"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "team/",
        "tags": [
          "team/"
        ]
      }
    },
    "/V1/team/{companyId}": {
      "post": {
        "description": "Create a team in the company structure.",
        "operationId": "companyTeamRepositoryV1CreatePost",
        "parameters": [
          {
            "in": "path",
            "name": "companyId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/companyTeamRepositoryV1CreatePostCompanyteamrepositoryv1createpostbody"
        },
        "responses": {
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "team/{companyId}",
        "tags": [
          "team/{companyId}"
        ]
      }
    },
    "/V1/team/{teamId}": {
      "delete": {
        "description": "Delete a team from the company structure.",
        "operationId": "companyTeamRepositoryV1DeleteByIdDelete",
        "parameters": [
          {
            "in": "path",
            "name": "teamId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "team/{teamId}",
        "tags": [
          "team/{teamId}"
        ]
      },
      "get": {
        "description": "Returns data for a team in the company, by entity id.",
        "operationId": "companyTeamRepositoryV1GetGet",
        "parameters": [
          {
            "in": "path",
            "name": "teamId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/company-data-team-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/company-data-team-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "team/{teamId}",
        "tags": [
          "team/{teamId}"
        ]
      },
      "put": {
        "description": "Update a team in the company structure.",
        "operationId": "companyTeamRepositoryV1SavePut",
        "parameters": [
          {
            "in": "path",
            "name": "teamId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/companyTeamRepositoryV1CreatePostCompanyteamrepositoryv1createpostbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "team/{teamId}",
        "tags": [
          "team/{teamId}"
        ]
      }
    },
    "/V1/temando/rma/{rmaId}/shipments": {
      "put": {
        "description": "Assign platform shipment IDs to a core RMA entity.",
        "operationId": "temandoShippingRmaRmaShipmentManagementV1AssignShipmentIdsPut",
        "parameters": [
          {
            "in": "path",
            "name": "rmaId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "returnShipmentIds": {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  }
                },
                "required": [
                  "returnShipmentIds"
                ],
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "properties": {
                  "returnShipmentIds": {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  }
                },
                "required": [
                  "returnShipmentIds"
                ],
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Number of successfully assigned shipment IDs.",
                  "type": "integer"
                }
              },
              "application/xml": {
                "schema": {
                  "description": "Number of successfully assigned shipment IDs.",
                  "type": "integer"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Internal Server error"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "temando/rma/{rmaId}/shipments",
        "tags": [
          "temando/rma/{rmaId}/shipments"
        ]
      }
    },
    "/V1/transactions": {
      "get": {
        "description": "Lists transactions that match specified search criteria. This call returns an array of objects, but detailed information about each object’s attributes might not be included. See https://devdocs.magento.com/codelinks/attributes.html#TransactionRepositoryInterface to determine which call to use to get detailed information about all attributes for an object.",
        "operationId": "salesTransactionRepositoryV1GetListGet",
        "parameters": [
          {
            "description": "Field",
            "in": "query",
            "name": "searchCriteria[filterGroups][0][filters][0][field]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Value",
            "in": "query",
            "name": "searchCriteria[filterGroups][0][filters][0][value]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Condition type",
            "in": "query",
            "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sorting field.",
            "in": "query",
            "name": "searchCriteria[sortOrders][0][field]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sorting direction.",
            "in": "query",
            "name": "searchCriteria[sortOrders][0][direction]",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Page size.",
            "in": "query",
            "name": "searchCriteria[pageSize]",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Current page.",
            "in": "query",
            "name": "searchCriteria[currentPage]",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sales-data-transaction-search-result-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/sales-data-transaction-search-result-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "transactions",
        "tags": [
          "transactions"
        ]
      }
    },
    "/V1/transactions/{id}": {
      "get": {
        "description": "Loads a specified transaction.",
        "operationId": "salesTransactionRepositoryV1GetGet",
        "parameters": [
          {
            "description": "The transaction ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sales-data-transaction-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/sales-data-transaction-interface"
                }
              }
            },
            "description": "200 Success."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "401 Unauthorized"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "transactions/{id}",
        "tags": [
          "transactions/{id}"
        ]
      }
    },
    "/V1/worldpay-guest-carts/{cartId}/payment-information": {
      "post": {
        "description": "Proxy handler for guest place order",
        "operationId": "worldpayGuestPaymentInformationManagementProxyV1SavePaymentInformationAndPlaceOrderPost",
        "parameters": [
          {
            "in": "path",
            "name": "cartId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/checkoutGuestPaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostCheckoutguestpaymentinformationmanagementv1savepaymentinformationandplaceorderpostbody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Order ID.",
                  "type": "integer"
                }
              },
              "application/xml": {
                "schema": {
                  "description": "Order ID.",
                  "type": "integer"
                }
              }
            },
            "description": "200 Success."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "400 Bad Request"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "worldpay-guest-carts/{cartId}/payment-information",
        "tags": [
          "worldpay-guest-carts/{cartId}/payment-information"
        ]
      }
    }
  },
  "components": {
    "requestBodies": {
      "amazonPaymentAddressManagementV1GetBillingAddressPutAmazonpaymentaddressmanagementv1getbillingaddressputbody": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "addressConsentToken": {
                  "type": "string"
                }
              },
              "required": [
                "addressConsentToken"
              ],
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "properties": {
                "addressConsentToken": {
                  "type": "string"
                }
              },
              "required": [
                "addressConsentToken"
              ],
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "bundleProductLinkManagementV1SaveChildPutBundleproductlinkmanagementv1savechildputbody": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "linkedProduct": {
                  "$ref": "#/components/schemas/bundle-data-link-interface"
                }
              },
              "required": [
                "linkedProduct"
              ],
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "properties": {
                "linkedProduct": {
                  "$ref": "#/components/schemas/bundle-data-link-interface"
                }
              },
              "required": [
                "linkedProduct"
              ],
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "bundleProductOptionManagementV1SavePostBundleproductoptionmanagementv1savepostbody": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "option": {
                  "$ref": "#/components/schemas/bundle-data-option-interface"
                }
              },
              "required": [
                "option"
              ],
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "properties": {
                "option": {
                  "$ref": "#/components/schemas/bundle-data-option-interface"
                }
              },
              "required": [
                "option"
              ],
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "catalogBasePriceStorageV1GetPostCatalogbasepricestoragev1getpostbody": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "skus": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "required": [
                "skus"
              ],
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "properties": {
                "skus": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "required": [
                "skus"
              ],
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "catalogCategoryLinkRepositoryV1SavePostCatalogcategorylinkrepositoryv1savepostbody": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "productLink": {
                  "$ref": "#/components/schemas/catalog-data-category-product-link-interface"
                }
              },
              "required": [
                "productLink"
              ],
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "properties": {
                "productLink": {
                  "$ref": "#/components/schemas/catalog-data-category-product-link-interface"
                }
              },
              "required": [
                "productLink"
              ],
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "catalogCategoryRepositoryV1SavePostCatalogcategoryrepositoryv1savepostbody": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "category": {
                  "$ref": "#/components/schemas/catalog-data-category-interface"
                }
              },
              "required": [
                "category"
              ],
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "properties": {
                "category": {
                  "$ref": "#/components/schemas/catalog-data-category-interface"
                }
              },
              "required": [
                "category"
              ],
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "catalogProductAttributeGroupRepositoryV1SavePostCatalogproductattributegrouprepositoryv1savepostbody": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "group": {
                  "$ref": "#/components/schemas/eav-data-attribute-group-interface"
                }
              },
              "required": [
                "group"
              ],
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "properties": {
                "group": {
                  "$ref": "#/components/schemas/eav-data-attribute-group-interface"
                }
              },
              "required": [
                "group"
              ],
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "catalogProductAttributeMediaGalleryManagementV1CreatePostCatalogproductattributemediagallerymanagementv1createpostbody": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "entry": {
                  "$ref": "#/components/schemas/catalog-data-product-attribute-media-gallery-entry-interface"
                }
              },
              "required": [
                "entry"
              ],
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "properties": {
                "entry": {
                  "$ref": "#/components/schemas/catalog-data-product-attribute-media-gallery-entry-interface"
                }
              },
              "required": [
                "entry"
              ],
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "catalogProductAttributeRepositoryV1SavePostCatalogproductattributerepositoryv1savepostbody": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "attribute": {
                  "$ref": "#/components/schemas/catalog-data-product-attribute-interface"
                }
              },
              "required": [
                "attribute"
              ],
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "properties": {
                "attribute": {
                  "$ref": "#/components/schemas/catalog-data-product-attribute-interface"
                }
              },
              "required": [
                "attribute"
              ],
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "catalogProductCustomOptionRepositoryV1SavePostCatalogproductcustomoptionrepositoryv1savepostbody": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "option": {
                  "$ref": "#/components/schemas/catalog-data-product-custom-option-interface"
                }
              },
              "required": [
                "option"
              ],
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "properties": {
                "option": {
                  "$ref": "#/components/schemas/catalog-data-product-custom-option-interface"
                }
              },
              "required": [
                "option"
              ],
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "catalogProductRepositoryV1SavePostCatalogproductrepositoryv1savepostbody": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "product": {
                  "$ref": "#/components/schemas/catalog-data-product-interface"
                },
                "saveOptions": {
                  "type": "boolean"
                }
              },
              "required": [
                "product"
              ],
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "properties": {
                "product": {
                  "$ref": "#/components/schemas/catalog-data-product-interface"
                },
                "saveOptions": {
                  "type": "boolean"
                }
              },
              "required": [
                "product"
              ],
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "catalogProductWebsiteLinkRepositoryV1SavePostCatalogproductwebsitelinkrepositoryv1savepostbody": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "productWebsiteLink": {
                  "$ref": "#/components/schemas/catalog-data-product-website-link-interface"
                }
              },
              "required": [
                "productWebsiteLink"
              ],
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "properties": {
                "productWebsiteLink": {
                  "$ref": "#/components/schemas/catalog-data-product-website-link-interface"
                }
              },
              "required": [
                "productWebsiteLink"
              ],
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "catalogSpecialPriceStorageV1UpdatePostCatalogspecialpricestoragev1updatepostbody": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "prices": {
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-special-price-interface"
                  },
                  "type": "array"
                }
              },
              "required": [
                "prices"
              ],
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "properties": {
                "prices": {
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-special-price-interface"
                  },
                  "type": "array"
                }
              },
              "required": [
                "prices"
              ],
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "catalogTierPriceStorageV1UpdatePostCatalogtierpricestoragev1updatepostbody": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "prices": {
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-tier-price-interface"
                  },
                  "type": "array"
                }
              },
              "required": [
                "prices"
              ],
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "properties": {
                "prices": {
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-tier-price-interface"
                  },
                  "type": "array"
                }
              },
              "required": [
                "prices"
              ],
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "checkoutGuestPaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostCheckoutguestpaymentinformationmanagementv1savepaymentinformationandplaceorderpostbody": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "billingAddress": {
                  "$ref": "#/components/schemas/quote-data-address-interface"
                },
                "email": {
                  "type": "string"
                },
                "paymentMethod": {
                  "$ref": "#/components/schemas/quote-data-payment-interface"
                }
              },
              "required": [
                "email",
                "paymentMethod"
              ],
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "properties": {
                "billingAddress": {
                  "$ref": "#/components/schemas/quote-data-address-interface"
                },
                "email": {
                  "type": "string"
                },
                "paymentMethod": {
                  "$ref": "#/components/schemas/quote-data-payment-interface"
                }
              },
              "required": [
                "email",
                "paymentMethod"
              ],
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "checkoutPaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostCheckoutpaymentinformationmanagementv1savepaymentinformationandplaceorderpostbody": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "billingAddress": {
                  "$ref": "#/components/schemas/quote-data-address-interface"
                },
                "paymentMethod": {
                  "$ref": "#/components/schemas/quote-data-payment-interface"
                }
              },
              "required": [
                "paymentMethod"
              ],
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "properties": {
                "billingAddress": {
                  "$ref": "#/components/schemas/quote-data-address-interface"
                },
                "paymentMethod": {
                  "$ref": "#/components/schemas/quote-data-payment-interface"
                }
              },
              "required": [
                "paymentMethod"
              ],
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "checkoutShippingInformationManagementV1SaveAddressInformationPostCheckoutshippinginformationmanagementv1saveaddressinformationpostbody": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "addressInformation": {
                  "$ref": "#/components/schemas/checkout-data-shipping-information-interface"
                }
              },
              "required": [
                "addressInformation"
              ],
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "properties": {
                "addressInformation": {
                  "$ref": "#/components/schemas/checkout-data-shipping-information-interface"
                }
              },
              "required": [
                "addressInformation"
              ],
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "checkoutTotalsInformationManagementV1CalculatePostCheckouttotalsinformationmanagementv1calculatepostbody": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "addressInformation": {
                  "$ref": "#/components/schemas/checkout-data-totals-information-interface"
                }
              },
              "required": [
                "addressInformation"
              ],
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "properties": {
                "addressInformation": {
                  "$ref": "#/components/schemas/checkout-data-totals-information-interface"
                }
              },
              "required": [
                "addressInformation"
              ],
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "cmsBlockRepositoryV1SavePostCmsblockrepositoryv1savepostbody": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "block": {
                  "$ref": "#/components/schemas/cms-data-block-interface"
                }
              },
              "required": [
                "block"
              ],
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "properties": {
                "block": {
                  "$ref": "#/components/schemas/cms-data-block-interface"
                }
              },
              "required": [
                "block"
              ],
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "cmsPageRepositoryV1SavePostCmspagerepositoryv1savepostbody": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "page": {
                  "$ref": "#/components/schemas/cms-data-page-interface"
                }
              },
              "required": [
                "page"
              ],
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "properties": {
                "page": {
                  "$ref": "#/components/schemas/cms-data-page-interface"
                }
              },
              "required": [
                "page"
              ],
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "companyCompanyRepositoryV1SavePostCompanycompanyrepositoryv1savepostbody": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "company": {
                  "$ref": "#/components/schemas/company-data-company-interface"
                }
              },
              "required": [
                "company"
              ],
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "properties": {
                "company": {
                  "$ref": "#/components/schemas/company-data-company-interface"
                }
              },
              "required": [
                "company"
              ],
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "companyCreditCreditBalanceManagementV1DecreasePostCompanycreditcreditbalancemanagementv1decreasepostbody": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "comment": {
                  "description": "[optional]",
                  "type": "string"
                },
                "currency": {
                  "type": "string"
                },
                "operationType": {
                  "type": "integer"
                },
                "options": {
                  "$ref": "#/components/schemas/company-credit-data-credit-balance-options-interface"
                },
                "value": {
                  "type": "number"
                }
              },
              "required": [
                "value",
                "currency",
                "operationType"
              ],
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "properties": {
                "comment": {
                  "description": "[optional]",
                  "type": "string"
                },
                "currency": {
                  "type": "string"
                },
                "operationType": {
                  "type": "integer"
                },
                "options": {
                  "$ref": "#/components/schemas/company-credit-data-credit-balance-options-interface"
                },
                "value": {
                  "type": "number"
                }
              },
              "required": [
                "value",
                "currency",
                "operationType"
              ],
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "companyRoleRepositoryV1SavePostCompanyrolerepositoryv1savepostbody": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "role": {
                  "$ref": "#/components/schemas/company-data-role-interface"
                }
              },
              "required": [
                "role"
              ],
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "properties": {
                "role": {
                  "$ref": "#/components/schemas/company-data-role-interface"
                }
              },
              "required": [
                "role"
              ],
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "companyTeamRepositoryV1CreatePostCompanyteamrepositoryv1createpostbody": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "team": {
                  "$ref": "#/components/schemas/company-data-team-interface"
                }
              },
              "required": [
                "team"
              ],
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "properties": {
                "team": {
                  "$ref": "#/components/schemas/company-data-team-interface"
                }
              },
              "required": [
                "team"
              ],
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "configurableProductOptionRepositoryV1SavePostConfigurableproductoptionrepositoryv1savepostbody": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "option": {
                  "$ref": "#/components/schemas/configurable-product-data-option-interface"
                }
              },
              "required": [
                "option"
              ],
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "properties": {
                "option": {
                  "$ref": "#/components/schemas/configurable-product-data-option-interface"
                }
              },
              "required": [
                "option"
              ],
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "customerAccountManagementV1ActivateByIdPutCustomeraccountmanagementv1activatebyidputbody": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "confirmationKey": {
                  "type": "string"
                }
              },
              "required": [
                "confirmationKey"
              ],
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "properties": {
                "confirmationKey": {
                  "type": "string"
                }
              },
              "required": [
                "confirmationKey"
              ],
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "customerCustomerRepositoryV1SavePutCustomercustomerrepositoryv1saveputbody": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "customer": {
                  "$ref": "#/components/schemas/customer-data-customer-interface"
                },
                "passwordHash": {
                  "type": "string"
                }
              },
              "required": [
                "customer"
              ],
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "properties": {
                "customer": {
                  "$ref": "#/components/schemas/customer-data-customer-interface"
                },
                "passwordHash": {
                  "type": "string"
                }
              },
              "required": [
                "customer"
              ],
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "customerGroupRepositoryV1SavePostCustomergrouprepositoryv1savepostbody": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "group": {
                  "$ref": "#/components/schemas/customer-data-group-interface"
                }
              },
              "required": [
                "group"
              ],
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "properties": {
                "group": {
                  "$ref": "#/components/schemas/customer-data-group-interface"
                }
              },
              "required": [
                "group"
              ],
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "downloadableLinkRepositoryV1SavePostDownloadablelinkrepositoryv1savepostbody": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "isGlobalScopeContent": {
                  "type": "boolean"
                },
                "link": {
                  "$ref": "#/components/schemas/downloadable-data-link-interface"
                }
              },
              "required": [
                "link"
              ],
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "properties": {
                "isGlobalScopeContent": {
                  "type": "boolean"
                },
                "link": {
                  "$ref": "#/components/schemas/downloadable-data-link-interface"
                }
              },
              "required": [
                "link"
              ],
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "downloadableSampleRepositoryV1SavePostDownloadablesamplerepositoryv1savepostbody": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "isGlobalScopeContent": {
                  "type": "boolean"
                },
                "sample": {
                  "$ref": "#/components/schemas/downloadable-data-sample-interface"
                }
              },
              "required": [
                "sample"
              ],
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "properties": {
                "isGlobalScopeContent": {
                  "type": "boolean"
                },
                "sample": {
                  "$ref": "#/components/schemas/downloadable-data-sample-interface"
                }
              },
              "required": [
                "sample"
              ],
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "eavAttributeSetRepositoryV1SavePutEavattributesetrepositoryv1saveputbody": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "attributeSet": {
                  "$ref": "#/components/schemas/eav-data-attribute-set-interface"
                }
              },
              "required": [
                "attributeSet"
              ],
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "properties": {
                "attributeSet": {
                  "$ref": "#/components/schemas/eav-data-attribute-set-interface"
                }
              },
              "required": [
                "attributeSet"
              ],
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "giftCardAccountGuestGiftCardAccountManagementV1AddGiftCardPostGiftcardaccountguestgiftcardaccountmanagementv1addgiftcardpostbody": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "giftCardAccountData": {
                  "$ref": "#/components/schemas/gift-card-account-data-gift-card-account-interface"
                }
              },
              "required": [
                "giftCardAccountData"
              ],
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "properties": {
                "giftCardAccountData": {
                  "$ref": "#/components/schemas/gift-card-account-data-gift-card-account-interface"
                }
              },
              "required": [
                "giftCardAccountData"
              ],
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "giftMessageCartRepositoryV1SavePostGiftmessagecartrepositoryv1savepostbody": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "giftMessage": {
                  "$ref": "#/components/schemas/gift-message-data-message-interface"
                }
              },
              "required": [
                "giftMessage"
              ],
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "properties": {
                "giftMessage": {
                  "$ref": "#/components/schemas/gift-message-data-message-interface"
                }
              },
              "required": [
                "giftMessage"
              ],
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "giftRegistryShippingMethodManagementV1EstimateByRegistryIdPostGiftregistryshippingmethodmanagementv1estimatebyregistryidpostbody": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "registryId": {
                  "description": "The estimate registry id",
                  "type": "integer"
                }
              },
              "required": [
                "registryId"
              ],
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "properties": {
                "registryId": {
                  "description": "The estimate registry id",
                  "type": "integer"
                }
              },
              "required": [
                "registryId"
              ],
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "giftWrappingWrappingRepositoryV1SavePostGiftwrappingwrappingrepositoryv1savepostbody": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "data": {
                  "$ref": "#/components/schemas/gift-wrapping-data-wrapping-interface"
                },
                "storeId": {
                  "type": "integer"
                }
              },
              "required": [
                "data"
              ],
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "properties": {
                "data": {
                  "$ref": "#/components/schemas/gift-wrapping-data-wrapping-interface"
                },
                "storeId": {
                  "type": "integer"
                }
              },
              "required": [
                "data"
              ],
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "integrationAdminTokenServiceV1CreateAdminAccessTokenPostIntegrationadmintokenservicev1createadminaccesstokenpostbody": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "password": {
                  "type": "string"
                },
                "username": {
                  "type": "string"
                }
              },
              "required": [
                "username",
                "password"
              ],
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "properties": {
                "password": {
                  "type": "string"
                },
                "username": {
                  "type": "string"
                }
              },
              "required": [
                "username",
                "password"
              ],
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "quoteBillingAddressManagementV1AssignPostQuotebillingaddressmanagementv1assignpostbody": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "address": {
                  "$ref": "#/components/schemas/quote-data-address-interface"
                },
                "useForShipping": {
                  "type": "boolean"
                }
              },
              "required": [
                "address"
              ],
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "properties": {
                "address": {
                  "$ref": "#/components/schemas/quote-data-address-interface"
                },
                "useForShipping": {
                  "type": "boolean"
                }
              },
              "required": [
                "address"
              ],
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "quoteCartItemRepositoryV1SavePostQuotecartitemrepositoryv1savepostbody": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "cartItem": {
                  "$ref": "#/components/schemas/quote-data-cart-item-interface"
                }
              },
              "required": [
                "cartItem"
              ],
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "properties": {
                "cartItem": {
                  "$ref": "#/components/schemas/quote-data-cart-item-interface"
                }
              },
              "required": [
                "cartItem"
              ],
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "quoteCartManagementV1AssignCustomerPutQuotecartmanagementv1assigncustomerputbody": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "customerId": {
                  "description": "The customer ID.",
                  "type": "integer"
                },
                "storeId": {
                  "type": "integer"
                }
              },
              "required": [
                "customerId",
                "storeId"
              ],
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "properties": {
                "customerId": {
                  "description": "The customer ID.",
                  "type": "integer"
                },
                "storeId": {
                  "type": "integer"
                }
              },
              "required": [
                "customerId",
                "storeId"
              ],
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "quoteCartManagementV1PlaceOrderPutQuotecartmanagementv1placeorderputbody": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "paymentMethod": {
                  "$ref": "#/components/schemas/quote-data-payment-interface"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "properties": {
                "paymentMethod": {
                  "$ref": "#/components/schemas/quote-data-payment-interface"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "quoteCartRepositoryV1SavePutQuotecartrepositoryv1saveputbody": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "quote": {
                  "$ref": "#/components/schemas/quote-data-cart-interface"
                }
              },
              "required": [
                "quote"
              ],
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "properties": {
                "quote": {
                  "$ref": "#/components/schemas/quote-data-cart-interface"
                }
              },
              "required": [
                "quote"
              ],
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "quoteCartTotalManagementV1CollectTotalsPutQuotecarttotalmanagementv1collecttotalsputbody": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "additionalData": {
                  "$ref": "#/components/schemas/quote-data-totals-additional-data-interface"
                },
                "paymentMethod": {
                  "$ref": "#/components/schemas/quote-data-payment-interface"
                },
                "shippingCarrierCode": {
                  "description": "The carrier code.",
                  "type": "string"
                },
                "shippingMethodCode": {
                  "description": "The shipping method code.",
                  "type": "string"
                }
              },
              "required": [
                "paymentMethod"
              ],
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "properties": {
                "additionalData": {
                  "$ref": "#/components/schemas/quote-data-totals-additional-data-interface"
                },
                "paymentMethod": {
                  "$ref": "#/components/schemas/quote-data-payment-interface"
                },
                "shippingCarrierCode": {
                  "description": "The carrier code.",
                  "type": "string"
                },
                "shippingMethodCode": {
                  "description": "The shipping method code.",
                  "type": "string"
                }
              },
              "required": [
                "paymentMethod"
              ],
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "quotePaymentMethodManagementV1SetPutQuotepaymentmethodmanagementv1setputbody": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "method": {
                  "$ref": "#/components/schemas/quote-data-payment-interface"
                }
              },
              "required": [
                "method"
              ],
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "properties": {
                "method": {
                  "$ref": "#/components/schemas/quote-data-payment-interface"
                }
              },
              "required": [
                "method"
              ],
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "quoteShipmentEstimationV1EstimateByExtendedAddressPostQuoteshipmentestimationv1estimatebyextendedaddresspostbody": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "address": {
                  "$ref": "#/components/schemas/quote-data-address-interface"
                }
              },
              "required": [
                "address"
              ],
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "properties": {
                "address": {
                  "$ref": "#/components/schemas/quote-data-address-interface"
                }
              },
              "required": [
                "address"
              ],
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "quoteShippingMethodManagementV1EstimateByAddressIdPostQuoteshippingmethodmanagementv1estimatebyaddressidpostbody": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "addressId": {
                  "description": "The estimate address id",
                  "type": "integer"
                }
              },
              "required": [
                "addressId"
              ],
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "properties": {
                "addressId": {
                  "description": "The estimate address id",
                  "type": "integer"
                }
              },
              "required": [
                "addressId"
              ],
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "rmaRmaManagementV1SaveRmaPostRmarmamanagementv1savermapostbody": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "rmaDataObject": {
                  "$ref": "#/components/schemas/rma-data-rma-interface"
                }
              },
              "required": [
                "rmaDataObject"
              ],
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "properties": {
                "rmaDataObject": {
                  "$ref": "#/components/schemas/rma-data-rma-interface"
                }
              },
              "required": [
                "rmaDataObject"
              ],
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "salesOrderRepositoryV1SavePostSalesorderrepositoryv1savepostbody": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "entity": {
                  "$ref": "#/components/schemas/sales-data-order-interface"
                }
              },
              "required": [
                "entity"
              ],
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "properties": {
                "entity": {
                  "$ref": "#/components/schemas/sales-data-order-interface"
                }
              },
              "required": [
                "entity"
              ],
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "salesRuleCouponRepositoryV1SavePostSalesrulecouponrepositoryv1savepostbody": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "coupon": {
                  "$ref": "#/components/schemas/sales-rule-data-coupon-interface"
                }
              },
              "required": [
                "coupon"
              ],
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "properties": {
                "coupon": {
                  "$ref": "#/components/schemas/sales-rule-data-coupon-interface"
                }
              },
              "required": [
                "coupon"
              ],
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "salesRuleRuleRepositoryV1SavePostSalesrulerulerepositoryv1savepostbody": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "rule": {
                  "$ref": "#/components/schemas/sales-rule-data-rule-interface"
                }
              },
              "required": [
                "rule"
              ],
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "properties": {
                "rule": {
                  "$ref": "#/components/schemas/sales-rule-data-rule-interface"
                }
              },
              "required": [
                "rule"
              ],
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "sharedCatalogCategoryManagementV1AssignCategoriesPostSharedcatalogcategorymanagementv1assigncategoriespostbody": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "categories": {
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-category-interface"
                  },
                  "type": "array"
                }
              },
              "required": [
                "categories"
              ],
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "properties": {
                "categories": {
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-category-interface"
                  },
                  "type": "array"
                }
              },
              "required": [
                "categories"
              ],
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "sharedCatalogCompanyManagementV1AssignCompaniesPostSharedcatalogcompanymanagementv1assigncompaniespostbody": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "companies": {
                  "items": {
                    "$ref": "#/components/schemas/company-data-company-interface"
                  },
                  "type": "array"
                }
              },
              "required": [
                "companies"
              ],
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "properties": {
                "companies": {
                  "items": {
                    "$ref": "#/components/schemas/company-data-company-interface"
                  },
                  "type": "array"
                }
              },
              "required": [
                "companies"
              ],
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "sharedCatalogProductManagementV1AssignProductsPostSharedcatalogproductmanagementv1assignproductspostbody": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "products": {
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-product-interface"
                  },
                  "type": "array"
                }
              },
              "required": [
                "products"
              ],
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "properties": {
                "products": {
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-product-interface"
                  },
                  "type": "array"
                }
              },
              "required": [
                "products"
              ],
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "sharedCatalogSharedCatalogRepositoryV1SavePostSharedcatalogsharedcatalogrepositoryv1savepostbody": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "sharedCatalog": {
                  "$ref": "#/components/schemas/shared-catalog-data-shared-catalog-interface"
                }
              },
              "required": [
                "sharedCatalog"
              ],
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "properties": {
                "sharedCatalog": {
                  "$ref": "#/components/schemas/shared-catalog-data-shared-catalog-interface"
                }
              },
              "required": [
                "sharedCatalog"
              ],
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "taxTaxClassRepositoryV1SavePostTaxtaxclassrepositoryv1savepostbody": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "taxClass": {
                  "$ref": "#/components/schemas/tax-data-tax-class-interface"
                }
              },
              "required": [
                "taxClass"
              ],
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "properties": {
                "taxClass": {
                  "$ref": "#/components/schemas/tax-data-tax-class-interface"
                }
              },
              "required": [
                "taxClass"
              ],
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "taxTaxRateRepositoryV1SavePostTaxtaxraterepositoryv1savepostbody": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "taxRate": {
                  "$ref": "#/components/schemas/tax-data-tax-rate-interface"
                }
              },
              "required": [
                "taxRate"
              ],
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "properties": {
                "taxRate": {
                  "$ref": "#/components/schemas/tax-data-tax-rate-interface"
                }
              },
              "required": [
                "taxRate"
              ],
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "taxTaxRuleRepositoryV1SavePostTaxtaxrulerepositoryv1savepostbody": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "rule": {
                  "$ref": "#/components/schemas/tax-data-tax-rule-interface"
                }
              },
              "required": [
                "rule"
              ],
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "properties": {
                "rule": {
                  "$ref": "#/components/schemas/tax-data-tax-rule-interface"
                }
              },
              "required": [
                "rule"
              ],
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "temandoShippingCollectionPointCartCollectionPointManagementV1SaveSearchRequestPutTemandoshippingcollectionpointcartcollectionpointmanagementv1savesearchrequestputbody": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "countryId": {
                  "type": "string"
                },
                "postcode": {
                  "type": "string"
                }
              },
              "required": [
                "countryId",
                "postcode"
              ],
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "properties": {
                "countryId": {
                  "type": "string"
                },
                "postcode": {
                  "type": "string"
                }
              },
              "required": [
                "countryId",
                "postcode"
              ],
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "temandoShippingCollectionPointCartCollectionPointManagementV1SelectCollectionPointPostTemandoshippingcollectionpointcartcollectionpointmanagementv1selectcollectionpointpostbody": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "entityId": {
                  "type": "integer"
                }
              },
              "required": [
                "entityId"
              ],
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "properties": {
                "entityId": {
                  "type": "integer"
                }
              },
              "required": [
                "entityId"
              ],
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "temandoShippingQuoteCartCheckoutFieldManagementV1SaveCheckoutFieldsPostTemandoshippingquotecartcheckoutfieldmanagementv1savecheckoutfieldspostbody": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "serviceSelection": {
                  "items": {
                    "$ref": "#/components/schemas/framework-attribute-interface"
                  },
                  "type": "array"
                }
              },
              "required": [
                "serviceSelection"
              ],
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "properties": {
                "serviceSelection": {
                  "items": {
                    "$ref": "#/components/schemas/framework-attribute-interface"
                  },
                  "type": "array"
                }
              },
              "required": [
                "serviceSelection"
              ],
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "temandoShippingQuoteCartDeliveryOptionManagementV1SavePostTemandoshippingquotecartdeliveryoptionmanagementv1savepostbody": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "selectedOption": {
                  "type": "string"
                }
              },
              "required": [
                "selectedOption"
              ],
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "properties": {
                "selectedOption": {
                  "type": "string"
                }
              },
              "required": [
                "selectedOption"
              ],
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      }
    },
    "schemas": {
      "analytics-data-link-interface": {
        "description": "Interface LinkInterface Represents link with collected data and initialized vector for decryption.",
        "properties": {
          "initialization_vector": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        },
        "required": [
          "url",
          "initialization_vector"
        ],
        "type": "object"
      },
      "asynchronous-operations-data-bulk-operations-status-interface": {
        "description": "Interface BulkStatusInterface Bulk summary data with list of operations items summary data.",
        "properties": {
          "bulk_id": {
            "description": "Bulk uuid",
            "type": "string"
          },
          "description": {
            "description": "Bulk description",
            "type": "string"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/asynchronous-operations-data-bulk-summary-extension-interface"
          },
          "operation_count": {
            "description": "Total number of operations scheduled in scope of this bulk",
            "type": "integer"
          },
          "operations_list": {
            "description": "List of operation with statuses (short data).",
            "items": {
              "$ref": "#/components/schemas/asynchronous-operations-data-summary-operation-status-interface"
            },
            "type": "array"
          },
          "start_time": {
            "description": "Bulk scheduled time",
            "type": "string"
          },
          "user_id": {
            "description": "User id",
            "type": "integer"
          }
        },
        "required": [
          "operations_list",
          "bulk_id",
          "description",
          "start_time",
          "user_id",
          "operation_count"
        ],
        "type": "object"
      },
      "asynchronous-operations-data-bulk-summary-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\AsynchronousOperations\\Api\\Data\\BulkSummaryInterface",
        "type": "object"
      },
      "asynchronous-operations-data-detailed-bulk-operations-status-interface": {
        "description": "Interface BulkStatusInterface Bulk summary data with list of operations items full data.",
        "properties": {
          "bulk_id": {
            "description": "Bulk uuid",
            "type": "string"
          },
          "description": {
            "description": "Bulk description",
            "type": "string"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/asynchronous-operations-data-bulk-summary-extension-interface"
          },
          "operation_count": {
            "description": "Total number of operations scheduled in scope of this bulk",
            "type": "integer"
          },
          "operations_list": {
            "description": "Operations list.",
            "items": {
              "$ref": "#/components/schemas/asynchronous-operations-data-detailed-operation-status-interface"
            },
            "type": "array"
          },
          "start_time": {
            "description": "Bulk scheduled time",
            "type": "string"
          },
          "user_id": {
            "description": "User id",
            "type": "integer"
          }
        },
        "required": [
          "operations_list",
          "bulk_id",
          "description",
          "start_time",
          "user_id",
          "operation_count"
        ],
        "type": "object"
      },
      "asynchronous-operations-data-detailed-operation-status-interface": {
        "description": "",
        "properties": {
          "bulk_uuid": {
            "description": "Bulk uuid",
            "type": "string"
          },
          "error_code": {
            "description": "Error code",
            "type": "integer"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/asynchronous-operations-data-operation-extension-interface"
          },
          "id": {
            "description": "Id",
            "type": "integer"
          },
          "result_message": {
            "description": "Result message",
            "type": "string"
          },
          "result_serialized_data": {
            "description": "Serialized Data",
            "type": "string"
          },
          "serialized_data": {
            "description": "Data",
            "type": "string"
          },
          "status": {
            "description": "Operation status",
            "type": "integer"
          },
          "topic_name": {
            "description": "Queue Topic",
            "type": "string"
          }
        },
        "required": [
          "result_serialized_data",
          "id",
          "bulk_uuid",
          "topic_name",
          "serialized_data",
          "status",
          "result_message",
          "error_code"
        ],
        "type": "object"
      },
      "asynchronous-operations-data-operation-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\AsynchronousOperations\\Api\\Data\\OperationInterface",
        "type": "object"
      },
      "asynchronous-operations-data-summary-operation-status-interface": {
        "description": "Getter Class OperationsStatusInterface Instead of OperationInterface this class don't provide all operation data and not responsive to set any data, just to get operation data without serialized_data and result_serialized_data",
        "properties": {
          "error_code": {
            "description": "Error code",
            "type": "integer"
          },
          "id": {
            "description": "Id",
            "type": "integer"
          },
          "result_message": {
            "description": "Result message",
            "type": "string"
          },
          "status": {
            "description": "Operation status",
            "type": "integer"
          }
        },
        "required": [
          "id",
          "status",
          "result_message",
          "error_code"
        ],
        "type": "object"
      },
      "bundle-data-bundle-option-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\Bundle\\Api\\Data\\BundleOptionInterface",
        "type": "object"
      },
      "bundle-data-bundle-option-interface": {
        "description": "Interface BundleOptionInterface",
        "properties": {
          "extension_attributes": {
            "$ref": "#/components/schemas/bundle-data-bundle-option-extension-interface"
          },
          "option_id": {
            "description": "Bundle option id.",
            "type": "integer"
          },
          "option_qty": {
            "description": "Bundle option quantity.",
            "type": "integer"
          },
          "option_selections": {
            "description": "Bundle option selection ids.",
            "items": {
              "type": "integer"
            },
            "type": "array"
          }
        },
        "required": [
          "option_id",
          "option_qty",
          "option_selections"
        ],
        "type": "object"
      },
      "bundle-data-link-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\Bundle\\Api\\Data\\LinkInterface",
        "type": "object"
      },
      "bundle-data-link-interface": {
        "description": "Interface LinkInterface",
        "properties": {
          "can_change_quantity": {
            "description": "Whether quantity could be changed",
            "type": "integer"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/bundle-data-link-extension-interface"
          },
          "id": {
            "description": "The identifier",
            "type": "string"
          },
          "is_default": {
            "description": "Is default",
            "type": "boolean"
          },
          "option_id": {
            "description": "Option id",
            "type": "integer"
          },
          "position": {
            "description": "Position",
            "type": "integer"
          },
          "price": {
            "description": "Price",
            "type": "number"
          },
          "price_type": {
            "description": "Price type",
            "type": "integer"
          },
          "qty": {
            "description": "Qty",
            "type": "number"
          },
          "sku": {
            "description": "Linked product sku",
            "type": "string"
          }
        },
        "required": [
          "is_default",
          "price",
          "price_type"
        ],
        "type": "object"
      },
      "bundle-data-option-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\Bundle\\Api\\Data\\OptionInterface",
        "type": "object"
      },
      "bundle-data-option-interface": {
        "description": "Interface OptionInterface",
        "properties": {
          "extension_attributes": {
            "$ref": "#/components/schemas/bundle-data-option-extension-interface"
          },
          "option_id": {
            "description": "Option id",
            "type": "integer"
          },
          "position": {
            "description": "Option position",
            "type": "integer"
          },
          "product_links": {
            "description": "Product links",
            "items": {
              "$ref": "#/components/schemas/bundle-data-link-interface"
            },
            "type": "array"
          },
          "required": {
            "description": "Is required option",
            "type": "boolean"
          },
          "sku": {
            "description": "Product sku",
            "type": "string"
          },
          "title": {
            "description": "Option title",
            "type": "string"
          },
          "type": {
            "description": "Input type",
            "type": "string"
          }
        },
        "type": "object"
      },
      "bundle-data-option-type-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\Bundle\\Api\\Data\\OptionTypeInterface",
        "type": "object"
      },
      "bundle-data-option-type-interface": {
        "description": "Interface OptionTypeInterface",
        "properties": {
          "code": {
            "description": "Type code",
            "type": "string"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/bundle-data-option-type-extension-interface"
          },
          "label": {
            "description": "Type label",
            "type": "string"
          }
        },
        "required": [
          "label",
          "code"
        ],
        "type": "object"
      },
      "catalog-data-base-price-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\BasePriceInterface",
        "type": "object"
      },
      "catalog-data-base-price-interface": {
        "description": "Price interface.",
        "properties": {
          "extension_attributes": {
            "$ref": "#/components/schemas/catalog-data-base-price-extension-interface"
          },
          "price": {
            "description": "Price.",
            "type": "number"
          },
          "sku": {
            "description": "SKU.",
            "type": "string"
          },
          "store_id": {
            "description": "Store id.",
            "type": "integer"
          }
        },
        "required": [
          "price",
          "store_id",
          "sku"
        ],
        "type": "object"
      },
      "catalog-data-category-attribute-interface": {
        "description": "",
        "properties": {
          "apply_to": {
            "description": "Apply to value for the element",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "attribute_code": {
            "description": "Code of the attribute.",
            "type": "string"
          },
          "attribute_id": {
            "description": "Id of the attribute.",
            "type": "integer"
          },
          "backend_model": {
            "description": "Backend model",
            "type": "string"
          },
          "backend_type": {
            "description": "Backend type.",
            "type": "string"
          },
          "custom_attributes": {
            "description": "Custom attributes values.",
            "items": {
              "$ref": "#/components/schemas/framework-attribute-interface"
            },
            "type": "array"
          },
          "default_frontend_label": {
            "description": "Frontend label for default store",
            "type": "string"
          },
          "default_value": {
            "description": "Default value for the element.",
            "type": "string"
          },
          "entity_type_id": {
            "description": "Entity type id",
            "type": "string"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/catalog-data-eav-attribute-extension-interface"
          },
          "frontend_class": {
            "description": "Frontend class of attribute",
            "type": "string"
          },
          "frontend_input": {
            "description": "HTML for input element.",
            "type": "string"
          },
          "frontend_labels": {
            "description": "Frontend label for each store",
            "items": {
              "$ref": "#/components/schemas/eav-data-attribute-frontend-label-interface"
            },
            "type": "array"
          },
          "is_comparable": {
            "description": "The attribute can be compared on the frontend",
            "type": "string"
          },
          "is_filterable": {
            "description": "It used in layered navigation",
            "type": "boolean"
          },
          "is_filterable_in_grid": {
            "description": "It is filterable in catalog product grid",
            "type": "boolean"
          },
          "is_filterable_in_search": {
            "description": "It is used in search results layered navigation",
            "type": "boolean"
          },
          "is_html_allowed_on_front": {
            "description": "The HTML tags are allowed on the frontend",
            "type": "boolean"
          },
          "is_required": {
            "description": "Attribute is required.",
            "type": "boolean"
          },
          "is_searchable": {
            "description": "The attribute can be used in Quick Search",
            "type": "string"
          },
          "is_unique": {
            "description": "This is a unique attribute",
            "type": "string"
          },
          "is_used_for_promo_rules": {
            "description": "The attribute can be used for promo rules",
            "type": "string"
          },
          "is_used_in_grid": {
            "description": "It is used in catalog product grid",
            "type": "boolean"
          },
          "is_user_defined": {
            "description": "Current attribute has been defined by a user.",
            "type": "boolean"
          },
          "is_visible": {
            "description": "Attribute is visible on frontend.",
            "type": "boolean"
          },
          "is_visible_in_advanced_search": {
            "description": "The attribute can be used in Advanced Search",
            "type": "string"
          },
          "is_visible_in_grid": {
            "description": "It is visible in catalog product grid",
            "type": "boolean"
          },
          "is_visible_on_front": {
            "description": "The attribute is visible on the frontend",
            "type": "string"
          },
          "is_wysiwyg_enabled": {
            "description": "WYSIWYG flag",
            "type": "boolean"
          },
          "note": {
            "description": "The note attribute for the element.",
            "type": "string"
          },
          "options": {
            "description": "Options of the attribute (key => value pairs for select)",
            "items": {
              "$ref": "#/components/schemas/eav-data-attribute-option-interface"
            },
            "type": "array"
          },
          "position": {
            "description": "Position",
            "type": "integer"
          },
          "scope": {
            "description": "Attribute scope",
            "type": "string"
          },
          "source_model": {
            "description": "Source model",
            "type": "string"
          },
          "used_for_sort_by": {
            "description": "It is used for sorting in product listing",
            "type": "boolean"
          },
          "used_in_product_listing": {
            "description": "The attribute can be used in product listing",
            "type": "string"
          },
          "validation_rules": {
            "description": "Validation rules.",
            "items": {
              "$ref": "#/components/schemas/eav-data-attribute-validation-rule-interface"
            },
            "type": "array"
          }
        },
        "required": [
          "attribute_code",
          "frontend_input",
          "entity_type_id",
          "is_required",
          "frontend_labels"
        ],
        "type": "object"
      },
      "catalog-data-category-attribute-search-results-interface": {
        "description": "",
        "properties": {
          "items": {
            "description": "Attributes list.",
            "items": {
              "$ref": "#/components/schemas/catalog-data-category-attribute-interface"
            },
            "type": "array"
          },
          "search_criteria": {
            "$ref": "#/components/schemas/framework-search-criteria-interface"
          },
          "total_count": {
            "description": "Total count.",
            "type": "integer"
          }
        },
        "required": [
          "items",
          "search_criteria",
          "total_count"
        ],
        "type": "object"
      },
      "catalog-data-category-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\CategoryInterface",
        "type": "object"
      },
      "catalog-data-category-interface": {
        "description": "",
        "properties": {
          "available_sort_by": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "children": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          },
          "custom_attributes": {
            "description": "Custom attributes values.",
            "items": {
              "$ref": "#/components/schemas/framework-attribute-interface"
            },
            "type": "array"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/catalog-data-category-extension-interface"
          },
          "id": {
            "type": "integer"
          },
          "include_in_menu": {
            "type": "boolean"
          },
          "is_active": {
            "description": "Whether category is active",
            "type": "boolean"
          },
          "level": {
            "description": "Category level",
            "type": "integer"
          },
          "name": {
            "description": "Category name",
            "type": "string"
          },
          "parent_id": {
            "description": "Parent category ID",
            "type": "integer"
          },
          "path": {
            "type": "string"
          },
          "position": {
            "description": "Category position",
            "type": "integer"
          },
          "updated_at": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "catalog-data-category-link-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\CategoryLinkInterface",
        "type": "object"
      },
      "catalog-data-category-link-interface": {
        "description": "",
        "properties": {
          "category_id": {
            "description": "Category id",
            "type": "string"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/catalog-data-category-link-extension-interface"
          },
          "position": {
            "type": "integer"
          }
        },
        "required": [
          "category_id"
        ],
        "type": "object"
      },
      "catalog-data-category-product-link-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\CategoryProductLinkInterface",
        "type": "object"
      },
      "catalog-data-category-product-link-interface": {
        "description": "",
        "properties": {
          "category_id": {
            "description": "Category id",
            "type": "string"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/catalog-data-category-product-link-extension-interface"
          },
          "position": {
            "type": "integer"
          },
          "sku": {
            "type": "string"
          }
        },
        "required": [
          "category_id"
        ],
        "type": "object"
      },
      "catalog-data-category-search-results-interface": {
        "description": "",
        "properties": {
          "items": {
            "description": "Categories",
            "items": {
              "$ref": "#/components/schemas/catalog-data-category-interface"
            },
            "type": "array"
          },
          "search_criteria": {
            "$ref": "#/components/schemas/framework-search-criteria-interface"
          },
          "total_count": {
            "description": "Total count.",
            "type": "integer"
          }
        },
        "required": [
          "items",
          "search_criteria",
          "total_count"
        ],
        "type": "object"
      },
      "catalog-data-category-tree-interface": {
        "description": "",
        "properties": {
          "children_data": {
            "items": {
              "$ref": "#/components/schemas/catalog-data-category-tree-interface"
            },
            "type": "array"
          },
          "id": {
            "type": "integer"
          },
          "is_active": {
            "description": "Whether category is active",
            "type": "boolean"
          },
          "level": {
            "description": "Category level",
            "type": "integer"
          },
          "name": {
            "description": "Category name",
            "type": "string"
          },
          "parent_id": {
            "description": "Parent category ID",
            "type": "integer"
          },
          "position": {
            "description": "Category position",
            "type": "integer"
          },
          "product_count": {
            "description": "Product count",
            "type": "integer"
          }
        },
        "required": [
          "parent_id",
          "name",
          "is_active",
          "position",
          "level",
          "product_count",
          "children_data"
        ],
        "type": "object"
      },
      "catalog-data-cost-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\CostInterface",
        "type": "object"
      },
      "catalog-data-cost-interface": {
        "description": "Cost interface.",
        "properties": {
          "cost": {
            "description": "Cost value.",
            "type": "number"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/catalog-data-cost-extension-interface"
          },
          "sku": {
            "description": "SKU.",
            "type": "string"
          },
          "store_id": {
            "description": "Store id.",
            "type": "integer"
          }
        },
        "required": [
          "cost",
          "store_id",
          "sku"
        ],
        "type": "object"
      },
      "catalog-data-custom-option-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\CustomOptionInterface",
        "properties": {
          "file_info": {
            "$ref": "#/components/schemas/framework-data-image-content-interface"
          }
        },
        "type": "object"
      },
      "catalog-data-custom-option-interface": {
        "description": "Interface CustomOptionInterface",
        "properties": {
          "extension_attributes": {
            "$ref": "#/components/schemas/catalog-data-custom-option-extension-interface"
          },
          "option_id": {
            "description": "Option id",
            "type": "string"
          },
          "option_value": {
            "description": "Option value",
            "type": "string"
          }
        },
        "required": [
          "option_id",
          "option_value"
        ],
        "type": "object"
      },
      "catalog-data-eav-attribute-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\EavAttributeInterface",
        "type": "object"
      },
      "catalog-data-price-update-result-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\PriceUpdateResultInterface",
        "type": "object"
      },
      "catalog-data-price-update-result-interface": {
        "description": "Interface returned in case of incorrect price passed to efficient price API.",
        "properties": {
          "extension_attributes": {
            "$ref": "#/components/schemas/catalog-data-price-update-result-extension-interface"
          },
          "message": {
            "description": "Error message, that contains description of error occurred during price update.",
            "type": "string"
          },
          "parameters": {
            "description": "Parameters, that could be displayed in error message placeholders.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "message",
          "parameters"
        ],
        "type": "object"
      },
      "catalog-data-product-attribute-interface": {
        "description": "",
        "properties": {
          "apply_to": {
            "description": "Apply to value for the element",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "attribute_code": {
            "description": "Code of the attribute.",
            "type": "string"
          },
          "attribute_id": {
            "description": "Id of the attribute.",
            "type": "integer"
          },
          "backend_model": {
            "description": "Backend model",
            "type": "string"
          },
          "backend_type": {
            "description": "Backend type.",
            "type": "string"
          },
          "custom_attributes": {
            "description": "Custom attributes values.",
            "items": {
              "$ref": "#/components/schemas/framework-attribute-interface"
            },
            "type": "array"
          },
          "default_frontend_label": {
            "description": "Frontend label for default store",
            "type": "string"
          },
          "default_value": {
            "description": "Default value for the element.",
            "type": "string"
          },
          "entity_type_id": {
            "description": "Entity type id",
            "type": "string"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/catalog-data-eav-attribute-extension-interface"
          },
          "frontend_class": {
            "description": "Frontend class of attribute",
            "type": "string"
          },
          "frontend_input": {
            "description": "HTML for input element.",
            "type": "string"
          },
          "frontend_labels": {
            "description": "Frontend label for each store",
            "items": {
              "$ref": "#/components/schemas/eav-data-attribute-frontend-label-interface"
            },
            "type": "array"
          },
          "is_comparable": {
            "description": "The attribute can be compared on the frontend",
            "type": "string"
          },
          "is_filterable": {
            "description": "It used in layered navigation",
            "type": "boolean"
          },
          "is_filterable_in_grid": {
            "description": "It is filterable in catalog product grid",
            "type": "boolean"
          },
          "is_filterable_in_search": {
            "description": "It is used in search results layered navigation",
            "type": "boolean"
          },
          "is_html_allowed_on_front": {
            "description": "The HTML tags are allowed on the frontend",
            "type": "boolean"
          },
          "is_required": {
            "description": "Attribute is required.",
            "type": "boolean"
          },
          "is_searchable": {
            "description": "The attribute can be used in Quick Search",
            "type": "string"
          },
          "is_unique": {
            "description": "This is a unique attribute",
            "type": "string"
          },
          "is_used_for_promo_rules": {
            "description": "The attribute can be used for promo rules",
            "type": "string"
          },
          "is_used_in_grid": {
            "description": "It is used in catalog product grid",
            "type": "boolean"
          },
          "is_user_defined": {
            "description": "Current attribute has been defined by a user.",
            "type": "boolean"
          },
          "is_visible": {
            "description": "Attribute is visible on frontend.",
            "type": "boolean"
          },
          "is_visible_in_advanced_search": {
            "description": "The attribute can be used in Advanced Search",
            "type": "string"
          },
          "is_visible_in_grid": {
            "description": "It is visible in catalog product grid",
            "type": "boolean"
          },
          "is_visible_on_front": {
            "description": "The attribute is visible on the frontend",
            "type": "string"
          },
          "is_wysiwyg_enabled": {
            "description": "WYSIWYG flag",
            "type": "boolean"
          },
          "note": {
            "description": "The note attribute for the element.",
            "type": "string"
          },
          "options": {
            "description": "Options of the attribute (key => value pairs for select)",
            "items": {
              "$ref": "#/components/schemas/eav-data-attribute-option-interface"
            },
            "type": "array"
          },
          "position": {
            "description": "Position",
            "type": "integer"
          },
          "scope": {
            "description": "Attribute scope",
            "type": "string"
          },
          "source_model": {
            "description": "Source model",
            "type": "string"
          },
          "used_for_sort_by": {
            "description": "It is used for sorting in product listing",
            "type": "boolean"
          },
          "used_in_product_listing": {
            "description": "The attribute can be used in product listing",
            "type": "string"
          },
          "validation_rules": {
            "description": "Validation rules.",
            "items": {
              "$ref": "#/components/schemas/eav-data-attribute-validation-rule-interface"
            },
            "type": "array"
          }
        },
        "required": [
          "attribute_code",
          "frontend_input",
          "entity_type_id",
          "is_required",
          "frontend_labels"
        ],
        "type": "object"
      },
      "catalog-data-product-attribute-media-gallery-entry-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\ProductAttributeMediaGalleryEntryInterface",
        "properties": {
          "video_content": {
            "$ref": "#/components/schemas/framework-data-video-content-interface"
          }
        },
        "type": "object"
      },
      "catalog-data-product-attribute-media-gallery-entry-interface": {
        "description": "",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/framework-data-image-content-interface"
          },
          "disabled": {
            "description": "If gallery entry is hidden from product page",
            "type": "boolean"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/catalog-data-product-attribute-media-gallery-entry-extension-interface"
          },
          "file": {
            "description": "File path",
            "type": "string"
          },
          "id": {
            "description": "Gallery entry ID",
            "type": "integer"
          },
          "label": {
            "description": "Gallery entry alternative text",
            "type": "string"
          },
          "media_type": {
            "description": "Media type",
            "type": "string"
          },
          "position": {
            "description": "Gallery entry position (sort order)",
            "type": "integer"
          },
          "types": {
            "description": "Gallery entry image types (thumbnail, image, small_image etc)",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "media_type",
          "label",
          "position",
          "disabled",
          "types"
        ],
        "type": "object"
      },
      "catalog-data-product-attribute-search-results-interface": {
        "description": "",
        "properties": {
          "items": {
            "description": "Attributes list.",
            "items": {
              "$ref": "#/components/schemas/catalog-data-product-attribute-interface"
            },
            "type": "array"
          },
          "search_criteria": {
            "$ref": "#/components/schemas/framework-search-criteria-interface"
          },
          "total_count": {
            "description": "Total count.",
            "type": "integer"
          }
        },
        "required": [
          "items",
          "search_criteria",
          "total_count"
        ],
        "type": "object"
      },
      "catalog-data-product-attribute-type-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\ProductAttributeTypeInterface",
        "type": "object"
      },
      "catalog-data-product-attribute-type-interface": {
        "description": "",
        "properties": {
          "extension_attributes": {
            "$ref": "#/components/schemas/catalog-data-product-attribute-type-extension-interface"
          },
          "label": {
            "description": "Type label",
            "type": "string"
          },
          "value": {
            "description": "Value",
            "type": "string"
          }
        },
        "required": [
          "value",
          "label"
        ],
        "type": "object"
      },
      "catalog-data-product-custom-option-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\ProductCustomOptionInterface",
        "properties": {
          "vertex_flex_field": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "catalog-data-product-custom-option-interface": {
        "description": "",
        "properties": {
          "extension_attributes": {
            "$ref": "#/components/schemas/catalog-data-product-custom-option-extension-interface"
          },
          "file_extension": {
            "type": "string"
          },
          "image_size_x": {
            "type": "integer"
          },
          "image_size_y": {
            "type": "integer"
          },
          "is_require": {
            "description": "Is require",
            "type": "boolean"
          },
          "max_characters": {
            "type": "integer"
          },
          "option_id": {
            "description": "Option id",
            "type": "integer"
          },
          "price": {
            "description": "Price",
            "type": "number"
          },
          "price_type": {
            "description": "Price type",
            "type": "string"
          },
          "product_sku": {
            "description": "Product SKU",
            "type": "string"
          },
          "sku": {
            "description": "Sku",
            "type": "string"
          },
          "sort_order": {
            "description": "Sort order",
            "type": "integer"
          },
          "title": {
            "description": "Option title",
            "type": "string"
          },
          "type": {
            "description": "Option type",
            "type": "string"
          },
          "values": {
            "items": {
              "$ref": "#/components/schemas/catalog-data-product-custom-option-values-interface"
            },
            "type": "array"
          }
        },
        "required": [
          "product_sku",
          "title",
          "type",
          "sort_order",
          "is_require"
        ],
        "type": "object"
      },
      "catalog-data-product-custom-option-type-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\ProductCustomOptionTypeInterface",
        "type": "object"
      },
      "catalog-data-product-custom-option-type-interface": {
        "description": "",
        "properties": {
          "code": {
            "description": "Option type code",
            "type": "string"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/catalog-data-product-custom-option-type-extension-interface"
          },
          "group": {
            "description": "Option type group",
            "type": "string"
          },
          "label": {
            "description": "Option type label",
            "type": "string"
          }
        },
        "required": [
          "label",
          "code",
          "group"
        ],
        "type": "object"
      },
      "catalog-data-product-custom-option-values-interface": {
        "description": "",
        "properties": {
          "option_type_id": {
            "description": "Option type id",
            "type": "integer"
          },
          "price": {
            "description": "Price",
            "type": "number"
          },
          "price_type": {
            "description": "Price type",
            "type": "string"
          },
          "sku": {
            "description": "Sku",
            "type": "string"
          },
          "sort_order": {
            "description": "Sort order",
            "type": "integer"
          },
          "title": {
            "description": "Option title",
            "type": "string"
          }
        },
        "required": [
          "title",
          "sort_order",
          "price",
          "price_type"
        ],
        "type": "object"
      },
      "catalog-data-product-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\ProductInterface",
        "properties": {
          "bundle_product_options": {
            "items": {
              "$ref": "#/components/schemas/bundle-data-option-interface"
            },
            "type": "array"
          },
          "category_links": {
            "items": {
              "$ref": "#/components/schemas/catalog-data-category-link-interface"
            },
            "type": "array"
          },
          "configurable_product_links": {
            "items": {
              "type": "integer"
            },
            "type": "array"
          },
          "configurable_product_options": {
            "items": {
              "$ref": "#/components/schemas/configurable-product-data-option-interface"
            },
            "type": "array"
          },
          "downloadable_product_links": {
            "items": {
              "$ref": "#/components/schemas/downloadable-data-link-interface"
            },
            "type": "array"
          },
          "downloadable_product_samples": {
            "items": {
              "$ref": "#/components/schemas/downloadable-data-sample-interface"
            },
            "type": "array"
          },
          "giftcard_amounts": {
            "items": {
              "$ref": "#/components/schemas/gift-card-data-giftcard-amount-interface"
            },
            "type": "array"
          },
          "stock_item": {
            "$ref": "#/components/schemas/catalog-inventory-data-stock-item-interface"
          },
          "website_ids": {
            "items": {
              "type": "integer"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "catalog-data-product-interface": {
        "description": "",
        "properties": {
          "attribute_set_id": {
            "description": "Attribute set id",
            "type": "integer"
          },
          "created_at": {
            "description": "Created date",
            "type": "string"
          },
          "custom_attributes": {
            "description": "Custom attributes values.",
            "items": {
              "$ref": "#/components/schemas/framework-attribute-interface"
            },
            "type": "array"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/catalog-data-product-extension-interface"
          },
          "id": {
            "description": "Id",
            "type": "integer"
          },
          "media_gallery_entries": {
            "description": "Media gallery entries",
            "items": {
              "$ref": "#/components/schemas/catalog-data-product-attribute-media-gallery-entry-interface"
            },
            "type": "array"
          },
          "name": {
            "description": "Name",
            "type": "string"
          },
          "options": {
            "description": "List of product options",
            "items": {
              "$ref": "#/components/schemas/catalog-data-product-custom-option-interface"
            },
            "type": "array"
          },
          "price": {
            "description": "Price",
            "type": "number"
          },
          "product_links": {
            "description": "Product links info",
            "items": {
              "$ref": "#/components/schemas/catalog-data-product-link-interface"
            },
            "type": "array"
          },
          "sku": {
            "description": "Sku",
            "type": "string"
          },
          "status": {
            "description": "Status",
            "type": "integer"
          },
          "tier_prices": {
            "description": "List of product tier prices",
            "items": {
              "$ref": "#/components/schemas/catalog-data-product-tier-price-interface"
            },
            "type": "array"
          },
          "type_id": {
            "description": "Type id",
            "type": "string"
          },
          "updated_at": {
            "description": "Updated date",
            "type": "string"
          },
          "visibility": {
            "description": "Visibility",
            "type": "integer"
          },
          "weight": {
            "description": "Weight",
            "type": "number"
          }
        },
        "required": [
          "sku"
        ],
        "type": "object"
      },
      "catalog-data-product-link-attribute-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\ProductLinkAttributeInterface",
        "type": "object"
      },
      "catalog-data-product-link-attribute-interface": {
        "description": "",
        "properties": {
          "code": {
            "description": "Attribute code",
            "type": "string"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/catalog-data-product-link-attribute-extension-interface"
          },
          "type": {
            "description": "Attribute type",
            "type": "string"
          }
        },
        "required": [
          "code",
          "type"
        ],
        "type": "object"
      },
      "catalog-data-product-link-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\ProductLinkInterface",
        "properties": {
          "qty": {
            "type": "number"
          }
        },
        "type": "object"
      },
      "catalog-data-product-link-interface": {
        "description": "",
        "properties": {
          "extension_attributes": {
            "$ref": "#/components/schemas/catalog-data-product-link-extension-interface"
          },
          "link_type": {
            "description": "Link type",
            "type": "string"
          },
          "linked_product_sku": {
            "description": "Linked product sku",
            "type": "string"
          },
          "linked_product_type": {
            "description": "Linked product type (simple, virtual, etc)",
            "type": "string"
          },
          "position": {
            "description": "Linked item position",
            "type": "integer"
          },
          "sku": {
            "description": "SKU",
            "type": "string"
          }
        },
        "required": [
          "sku",
          "link_type",
          "linked_product_sku",
          "linked_product_type",
          "position"
        ],
        "type": "object"
      },
      "catalog-data-product-link-type-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\ProductLinkTypeInterface",
        "type": "object"
      },
      "catalog-data-product-link-type-interface": {
        "description": "",
        "properties": {
          "code": {
            "description": "Link type code",
            "type": "integer"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/catalog-data-product-link-type-extension-interface"
          },
          "name": {
            "description": "Link type name",
            "type": "string"
          }
        },
        "required": [
          "code",
          "name"
        ],
        "type": "object"
      },
      "catalog-data-product-option-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\ProductOptionInterface",
        "properties": {
          "bundle_options": {
            "items": {
              "$ref": "#/components/schemas/bundle-data-bundle-option-interface"
            },
            "type": "array"
          },
          "configurable_item_options": {
            "items": {
              "$ref": "#/components/schemas/configurable-product-data-configurable-item-option-value-interface"
            },
            "type": "array"
          },
          "custom_options": {
            "items": {
              "$ref": "#/components/schemas/catalog-data-custom-option-interface"
            },
            "type": "array"
          },
          "downloadable_option": {
            "$ref": "#/components/schemas/downloadable-data-downloadable-option-interface"
          },
          "giftcard_item_option": {
            "$ref": "#/components/schemas/gift-card-data-gift-card-option-interface"
          }
        },
        "type": "object"
      },
      "catalog-data-product-option-interface": {
        "description": "Product option interface",
        "properties": {
          "extension_attributes": {
            "$ref": "#/components/schemas/catalog-data-product-option-extension-interface"
          }
        },
        "type": "object"
      },
      "catalog-data-product-render-button-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\ProductRender\\ButtonInterface",
        "type": "object"
      },
      "catalog-data-product-render-button-interface": {
        "description": "Button interface. This interface represents all manner of product buttons: add to cart, add to compare, etc... The buttons describes by this interface should have interaction with backend",
        "properties": {
          "extension_attributes": {
            "$ref": "#/components/schemas/catalog-data-product-render-button-extension-interface"
          },
          "post_data": {
            "description": "Post data",
            "type": "string"
          },
          "required_options": {
            "description": "Flag whether a product has options or not",
            "type": "boolean"
          },
          "url": {
            "description": "Url, needed to add product to cart",
            "type": "string"
          }
        },
        "required": [
          "post_data",
          "url",
          "required_options"
        ],
        "type": "object"
      },
      "catalog-data-product-render-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\ProductRenderInterface",
        "properties": {
          "review_html": {
            "type": "string"
          },
          "wishlist_button": {
            "$ref": "#/components/schemas/catalog-data-product-render-button-interface"
          }
        },
        "type": "object"
      },
      "catalog-data-product-render-formatted-price-info-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\ProductRender\\FormattedPriceInfoInterface",
        "type": "object"
      },
      "catalog-data-product-render-formatted-price-info-interface": {
        "description": "Formatted Price interface. Aggregate formatted html with price representations. E.g.: <span class=\"price\">$9.00</span> Consider currency, rounding and html",
        "properties": {
          "extension_attributes": {
            "$ref": "#/components/schemas/catalog-data-product-render-formatted-price-info-extension-interface"
          },
          "final_price": {
            "description": "Html with final price",
            "type": "string"
          },
          "max_price": {
            "description": "Max price of a product",
            "type": "string"
          },
          "max_regular_price": {
            "description": "Max regular price",
            "type": "string"
          },
          "minimal_price": {
            "description": "The minimal price of the product or variation",
            "type": "string"
          },
          "minimal_regular_price": {
            "description": "Minimal regular price",
            "type": "string"
          },
          "regular_price": {
            "description": "Price - is price of product without discounts and special price with taxes and fixed product tax",
            "type": "string"
          },
          "special_price": {
            "description": "Special price",
            "type": "string"
          }
        },
        "required": [
          "final_price",
          "max_price",
          "minimal_price",
          "max_regular_price",
          "minimal_regular_price",
          "special_price",
          "regular_price"
        ],
        "type": "object"
      },
      "catalog-data-product-render-image-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\ProductRender\\ImageInterface",
        "type": "object"
      },
      "catalog-data-product-render-image-interface": {
        "description": "Product Render image interface. Represents physical characteristics of image, that can be used in product listing or product view",
        "properties": {
          "code": {
            "description": "Image code",
            "type": "string"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/catalog-data-product-render-image-extension-interface"
          },
          "height": {
            "description": "Image height",
            "type": "number"
          },
          "label": {
            "description": "Image label",
            "type": "string"
          },
          "resized_height": {
            "description": "Resize height",
            "type": "number"
          },
          "resized_width": {
            "description": "Resize width",
            "type": "number"
          },
          "url": {
            "description": "Image url",
            "type": "string"
          },
          "width": {
            "description": "Image width in px",
            "type": "number"
          }
        },
        "required": [
          "url",
          "code",
          "height",
          "width",
          "label",
          "resized_width",
          "resized_height"
        ],
        "type": "object"
      },
      "catalog-data-product-render-interface": {
        "description": "Represents Data Object which holds enough information to render product This information is put into part as Add To Cart or Add to Compare Data or Price Data",
        "properties": {
          "add_to_cart_button": {
            "$ref": "#/components/schemas/catalog-data-product-render-button-interface"
          },
          "add_to_compare_button": {
            "$ref": "#/components/schemas/catalog-data-product-render-button-interface"
          },
          "currency_code": {
            "description": "Current or desired currency code to product",
            "type": "string"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/catalog-data-product-render-extension-interface"
          },
          "id": {
            "description": "Product identifier",
            "type": "integer"
          },
          "images": {
            "description": "Enough information, that needed to render image on front",
            "items": {
              "$ref": "#/components/schemas/catalog-data-product-render-image-interface"
            },
            "type": "array"
          },
          "is_salable": {
            "description": "Information about product saleability (In Stock)",
            "type": "string"
          },
          "name": {
            "description": "Product name",
            "type": "string"
          },
          "price_info": {
            "$ref": "#/components/schemas/catalog-data-product-render-price-info-interface"
          },
          "store_id": {
            "description": "Information about current store id or requested store id",
            "type": "integer"
          },
          "type": {
            "description": "Product type. Such as bundle, grouped, simple, etc...",
            "type": "string"
          },
          "url": {
            "description": "Product url",
            "type": "string"
          }
        },
        "required": [
          "add_to_cart_button",
          "add_to_compare_button",
          "price_info",
          "images",
          "url",
          "id",
          "name",
          "type",
          "is_salable",
          "store_id",
          "currency_code",
          "extension_attributes"
        ],
        "type": "object"
      },
      "catalog-data-product-render-price-info-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\ProductRender\\PriceInfoInterface",
        "properties": {
          "msrp": {
            "$ref": "#/components/schemas/msrp-data-product-render-msrp-price-info-interface"
          },
          "tax_adjustments": {
            "$ref": "#/components/schemas/catalog-data-product-render-price-info-interface"
          },
          "weee_adjustment": {
            "type": "string"
          },
          "weee_attributes": {
            "items": {
              "$ref": "#/components/schemas/weee-data-product-render-weee-adjustment-attribute-interface"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "catalog-data-product-render-price-info-interface": {
        "description": "Price interface.",
        "properties": {
          "extension_attributes": {
            "$ref": "#/components/schemas/catalog-data-product-render-price-info-extension-interface"
          },
          "final_price": {
            "description": "Final price",
            "type": "number"
          },
          "formatted_prices": {
            "$ref": "#/components/schemas/catalog-data-product-render-formatted-price-info-interface"
          },
          "max_price": {
            "description": "Max price of a product",
            "type": "number"
          },
          "max_regular_price": {
            "description": "Max regular price",
            "type": "number"
          },
          "minimal_price": {
            "type": "number"
          },
          "minimal_regular_price": {
            "description": "Minimal regular price",
            "type": "number"
          },
          "regular_price": {
            "description": "Regular price",
            "type": "number"
          },
          "special_price": {
            "description": "Special price",
            "type": "number"
          }
        },
        "required": [
          "final_price",
          "max_price",
          "max_regular_price",
          "minimal_regular_price",
          "special_price",
          "minimal_price",
          "regular_price",
          "formatted_prices"
        ],
        "type": "object"
      },
      "catalog-data-product-render-search-results-interface": {
        "description": "Dto that holds render information about products",
        "properties": {
          "items": {
            "description": "List of products rendered information",
            "items": {
              "$ref": "#/components/schemas/catalog-data-product-render-interface"
            },
            "type": "array"
          }
        },
        "required": [
          "items"
        ],
        "type": "object"
      },
      "catalog-data-product-search-results-interface": {
        "description": "",
        "properties": {
          "items": {
            "description": "Attributes list.",
            "items": {
              "$ref": "#/components/schemas/catalog-data-product-interface"
            },
            "type": "array"
          },
          "search_criteria": {
            "$ref": "#/components/schemas/framework-search-criteria-interface"
          },
          "total_count": {
            "description": "Total count.",
            "type": "integer"
          }
        },
        "required": [
          "items",
          "search_criteria",
          "total_count"
        ],
        "type": "object"
      },
      "catalog-data-product-tier-price-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\ProductTierPriceInterface",
        "properties": {
          "percentage_value": {
            "type": "number"
          },
          "website_id": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "catalog-data-product-tier-price-interface": {
        "description": "",
        "properties": {
          "customer_group_id": {
            "description": "Customer group id",
            "type": "integer"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/catalog-data-product-tier-price-extension-interface"
          },
          "qty": {
            "description": "Tier qty",
            "type": "number"
          },
          "value": {
            "description": "Price value",
            "type": "number"
          }
        },
        "required": [
          "customer_group_id",
          "qty",
          "value"
        ],
        "type": "object"
      },
      "catalog-data-product-type-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\ProductTypeInterface",
        "type": "object"
      },
      "catalog-data-product-type-interface": {
        "description": "Product type details",
        "properties": {
          "extension_attributes": {
            "$ref": "#/components/schemas/catalog-data-product-type-extension-interface"
          },
          "label": {
            "description": "Product type label",
            "type": "string"
          },
          "name": {
            "description": "Product type code",
            "type": "string"
          }
        },
        "required": [
          "name",
          "label"
        ],
        "type": "object"
      },
      "catalog-data-product-website-link-interface": {
        "description": "",
        "properties": {
          "sku": {
            "type": "string"
          },
          "website_id": {
            "description": "Website ids",
            "type": "integer"
          }
        },
        "required": [
          "sku",
          "website_id"
        ],
        "type": "object"
      },
      "catalog-data-special-price-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\SpecialPriceInterface",
        "type": "object"
      },
      "catalog-data-special-price-interface": {
        "description": "Product Special Price Interface is used to encapsulate data that can be processed by efficient price API.",
        "properties": {
          "extension_attributes": {
            "$ref": "#/components/schemas/catalog-data-special-price-extension-interface"
          },
          "price": {
            "description": "Product special price value.",
            "type": "number"
          },
          "price_from": {
            "description": "Start date for special price in Y-m-d H:i:s format.",
            "type": "string"
          },
          "price_to": {
            "description": "End date for special price in Y-m-d H:i:s format.",
            "type": "string"
          },
          "sku": {
            "description": "SKU of product, that contains special price value.",
            "type": "string"
          },
          "store_id": {
            "description": "ID of store, that contains special price value.",
            "type": "integer"
          }
        },
        "required": [
          "price",
          "store_id",
          "sku",
          "price_from",
          "price_to"
        ],
        "type": "object"
      },
      "catalog-data-tier-price-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\TierPriceInterface",
        "type": "object"
      },
      "catalog-data-tier-price-interface": {
        "description": "Tier price interface.",
        "properties": {
          "customer_group": {
            "description": "Customer group.",
            "type": "string"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/catalog-data-tier-price-extension-interface"
          },
          "price": {
            "description": "Tier price.",
            "type": "number"
          },
          "price_type": {
            "description": "Tier price type.",
            "type": "string"
          },
          "quantity": {
            "description": "Quantity.",
            "type": "number"
          },
          "sku": {
            "description": "SKU.",
            "type": "string"
          },
          "website_id": {
            "description": "Website id.",
            "type": "integer"
          }
        },
        "required": [
          "price",
          "price_type",
          "website_id",
          "sku",
          "customer_group",
          "quantity"
        ],
        "type": "object"
      },
      "catalog-inventory-data-stock-item-collection-interface": {
        "description": "Interface StockItemCollectionInterface",
        "properties": {
          "items": {
            "description": "Items",
            "items": {
              "$ref": "#/components/schemas/catalog-inventory-data-stock-item-interface"
            },
            "type": "array"
          },
          "search_criteria": {
            "$ref": "#/components/schemas/catalog-inventory-stock-item-criteria-interface"
          },
          "total_count": {
            "description": "Total count.",
            "type": "integer"
          }
        },
        "required": [
          "items",
          "search_criteria",
          "total_count"
        ],
        "type": "object"
      },
      "catalog-inventory-data-stock-item-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\CatalogInventory\\Api\\Data\\StockItemInterface",
        "type": "object"
      },
      "catalog-inventory-data-stock-item-interface": {
        "description": "Interface StockItem",
        "properties": {
          "backorders": {
            "description": "Backorders status",
            "type": "integer"
          },
          "enable_qty_increments": {
            "description": "Whether Quantity Increments is enabled",
            "type": "boolean"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/catalog-inventory-data-stock-item-extension-interface"
          },
          "is_decimal_divided": {
            "type": "boolean"
          },
          "is_in_stock": {
            "description": "Stock Availability",
            "type": "boolean"
          },
          "is_qty_decimal": {
            "type": "boolean"
          },
          "item_id": {
            "type": "integer"
          },
          "low_stock_date": {
            "type": "string"
          },
          "manage_stock": {
            "description": "Can Manage Stock",
            "type": "boolean"
          },
          "max_sale_qty": {
            "description": "Maximum Qty Allowed in Shopping Cart data wrapper",
            "type": "number"
          },
          "min_qty": {
            "description": "Minimal quantity available for item status in stock",
            "type": "number"
          },
          "min_sale_qty": {
            "description": "Minimum Qty Allowed in Shopping Cart or NULL when there is no limitation",
            "type": "number"
          },
          "notify_stock_qty": {
            "description": "Notify for Quantity Below data wrapper",
            "type": "number"
          },
          "product_id": {
            "type": "integer"
          },
          "qty": {
            "type": "number"
          },
          "qty_increments": {
            "description": "Quantity Increments data wrapper",
            "type": "number"
          },
          "show_default_notification_message": {
            "type": "boolean"
          },
          "stock_id": {
            "description": "Stock identifier",
            "type": "integer"
          },
          "stock_status_changed_auto": {
            "type": "integer"
          },
          "use_config_backorders": {
            "type": "boolean"
          },
          "use_config_enable_qty_inc": {
            "type": "boolean"
          },
          "use_config_manage_stock": {
            "type": "boolean"
          },
          "use_config_max_sale_qty": {
            "type": "boolean"
          },
          "use_config_min_qty": {
            "type": "boolean"
          },
          "use_config_min_sale_qty": {
            "type": "integer"
          },
          "use_config_notify_stock_qty": {
            "type": "boolean"
          },
          "use_config_qty_increments": {
            "type": "boolean"
          }
        },
        "required": [
          "qty",
          "is_in_stock",
          "is_qty_decimal",
          "show_default_notification_message",
          "use_config_min_qty",
          "min_qty",
          "use_config_min_sale_qty",
          "min_sale_qty",
          "use_config_max_sale_qty",
          "max_sale_qty",
          "use_config_backorders",
          "backorders",
          "use_config_notify_stock_qty",
          "notify_stock_qty",
          "use_config_qty_increments",
          "qty_increments",
          "use_config_enable_qty_inc",
          "enable_qty_increments",
          "use_config_manage_stock",
          "manage_stock",
          "low_stock_date",
          "is_decimal_divided",
          "stock_status_changed_auto"
        ],
        "type": "object"
      },
      "catalog-inventory-data-stock-status-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\CatalogInventory\\Api\\Data\\StockStatusInterface",
        "type": "object"
      },
      "catalog-inventory-data-stock-status-interface": {
        "description": "Interface StockStatusInterface",
        "properties": {
          "extension_attributes": {
            "$ref": "#/components/schemas/catalog-inventory-data-stock-status-extension-interface"
          },
          "product_id": {
            "type": "integer"
          },
          "qty": {
            "type": "integer"
          },
          "stock_id": {
            "type": "integer"
          },
          "stock_item": {
            "$ref": "#/components/schemas/catalog-inventory-data-stock-item-interface"
          },
          "stock_status": {
            "type": "integer"
          }
        },
        "required": [
          "product_id",
          "stock_id",
          "qty",
          "stock_status",
          "stock_item"
        ],
        "type": "object"
      },
      "catalog-inventory-stock-item-criteria-interface": {
        "description": "Interface StockItemCriteriaInterface",
        "properties": {
          "criteria_list": {
            "description": "Criteria objects added to current Composite Criteria",
            "items": {
              "$ref": "#/components/schemas/framework-criteria-interface"
            },
            "type": "array"
          },
          "filters": {
            "description": "List of filters",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "limit": {
            "description": "Limit",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "mapper_interface_name": {
            "description": "Associated Mapper Interface name",
            "type": "string"
          },
          "orders": {
            "description": "Ordering criteria",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "mapper_interface_name",
          "criteria_list",
          "filters",
          "orders",
          "limit"
        ],
        "type": "object"
      },
      "checkout-agreements-data-agreement-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\CheckoutAgreements\\Api\\Data\\AgreementInterface",
        "type": "object"
      },
      "checkout-agreements-data-agreement-interface": {
        "description": "Interface AgreementInterface",
        "properties": {
          "agreement_id": {
            "description": "Agreement ID.",
            "type": "integer"
          },
          "checkbox_text": {
            "description": "Agreement checkbox text.",
            "type": "string"
          },
          "content": {
            "description": "Agreement content.",
            "type": "string"
          },
          "content_height": {
            "description": "Agreement content height. Otherwise, null.",
            "type": "string"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/checkout-agreements-data-agreement-extension-interface"
          },
          "is_active": {
            "description": "Agreement status.",
            "type": "boolean"
          },
          "is_html": {
            "description": "* true - HTML. * false - plain text.",
            "type": "boolean"
          },
          "mode": {
            "description": "The agreement applied mode.",
            "type": "integer"
          },
          "name": {
            "description": "Agreement name.",
            "type": "string"
          }
        },
        "required": [
          "agreement_id",
          "name",
          "content",
          "checkbox_text",
          "is_active",
          "is_html",
          "mode"
        ],
        "type": "object"
      },
      "checkout-data-payment-details-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\Checkout\\Api\\Data\\PaymentDetailsInterface",
        "type": "object"
      },
      "checkout-data-payment-details-interface": {
        "description": "Interface PaymentDetailsInterface",
        "properties": {
          "extension_attributes": {
            "$ref": "#/components/schemas/checkout-data-payment-details-extension-interface"
          },
          "payment_methods": {
            "items": {
              "$ref": "#/components/schemas/quote-data-payment-method-interface"
            },
            "type": "array"
          },
          "totals": {
            "$ref": "#/components/schemas/quote-data-totals-interface"
          }
        },
        "required": [
          "payment_methods",
          "totals"
        ],
        "type": "object"
      },
      "checkout-data-shipping-information-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\Checkout\\Api\\Data\\ShippingInformationInterface",
        "type": "object"
      },
      "checkout-data-shipping-information-interface": {
        "description": "Interface ShippingInformationInterface",
        "properties": {
          "billing_address": {
            "$ref": "#/components/schemas/quote-data-address-interface"
          },
          "custom_attributes": {
            "description": "Custom attributes values.",
            "items": {
              "$ref": "#/components/schemas/framework-attribute-interface"
            },
            "type": "array"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/checkout-data-shipping-information-extension-interface"
          },
          "shipping_address": {
            "$ref": "#/components/schemas/quote-data-address-interface"
          },
          "shipping_carrier_code": {
            "description": "Carrier code",
            "type": "string"
          },
          "shipping_method_code": {
            "description": "Shipping method code",
            "type": "string"
          }
        },
        "required": [
          "shipping_address",
          "shipping_method_code",
          "shipping_carrier_code"
        ],
        "type": "object"
      },
      "checkout-data-totals-information-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\Checkout\\Api\\Data\\TotalsInformationInterface",
        "type": "object"
      },
      "checkout-data-totals-information-interface": {
        "description": "Interface TotalsInformationInterface",
        "properties": {
          "address": {
            "$ref": "#/components/schemas/quote-data-address-interface"
          },
          "custom_attributes": {
            "description": "Custom attributes values.",
            "items": {
              "$ref": "#/components/schemas/framework-attribute-interface"
            },
            "type": "array"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/checkout-data-totals-information-extension-interface"
          },
          "shipping_carrier_code": {
            "description": "Carrier code",
            "type": "string"
          },
          "shipping_method_code": {
            "description": "Shipping method code",
            "type": "string"
          }
        },
        "required": [
          "address"
        ],
        "type": "object"
      },
      "cms-data-block-interface": {
        "description": "CMS block interface.",
        "properties": {
          "active": {
            "description": "Active",
            "type": "boolean"
          },
          "content": {
            "description": "Content",
            "type": "string"
          },
          "creation_time": {
            "description": "Creation time",
            "type": "string"
          },
          "id": {
            "description": "ID",
            "type": "integer"
          },
          "identifier": {
            "description": "Identifier",
            "type": "string"
          },
          "title": {
            "description": "Title",
            "type": "string"
          },
          "update_time": {
            "description": "Update time",
            "type": "string"
          }
        },
        "required": [
          "identifier"
        ],
        "type": "object"
      },
      "cms-data-block-search-results-interface": {
        "description": "Interface for cms block search results.",
        "properties": {
          "items": {
            "description": "Blocks list.",
            "items": {
              "$ref": "#/components/schemas/cms-data-block-interface"
            },
            "type": "array"
          },
          "search_criteria": {
            "$ref": "#/components/schemas/framework-search-criteria-interface"
          },
          "total_count": {
            "description": "Total count.",
            "type": "integer"
          }
        },
        "required": [
          "items",
          "search_criteria",
          "total_count"
        ],
        "type": "object"
      },
      "cms-data-page-interface": {
        "description": "CMS page interface.",
        "properties": {
          "active": {
            "description": "Active",
            "type": "boolean"
          },
          "content": {
            "description": "Content",
            "type": "string"
          },
          "content_heading": {
            "description": "Content heading",
            "type": "string"
          },
          "creation_time": {
            "description": "Creation time",
            "type": "string"
          },
          "custom_layout_update_xml": {
            "description": "Custom layout update xml",
            "type": "string"
          },
          "custom_root_template": {
            "description": "Custom root template",
            "type": "string"
          },
          "custom_theme": {
            "description": "Custom theme",
            "type": "string"
          },
          "custom_theme_from": {
            "description": "Custom theme from",
            "type": "string"
          },
          "custom_theme_to": {
            "description": "Custom theme to",
            "type": "string"
          },
          "id": {
            "description": "ID",
            "type": "integer"
          },
          "identifier": {
            "description": "Identifier",
            "type": "string"
          },
          "layout_update_xml": {
            "description": "Layout update xml",
            "type": "string"
          },
          "meta_description": {
            "description": "Meta description",
            "type": "string"
          },
          "meta_keywords": {
            "description": "Meta keywords",
            "type": "string"
          },
          "meta_title": {
            "description": "Meta title",
            "type": "string"
          },
          "page_layout": {
            "description": "Page layout",
            "type": "string"
          },
          "sort_order": {
            "description": "Sort order",
            "type": "string"
          },
          "title": {
            "description": "Title",
            "type": "string"
          },
          "update_time": {
            "description": "Update time",
            "type": "string"
          }
        },
        "required": [
          "identifier"
        ],
        "type": "object"
      },
      "cms-data-page-search-results-interface": {
        "description": "Interface for cms page search results.",
        "properties": {
          "items": {
            "description": "Pages list.",
            "items": {
              "$ref": "#/components/schemas/cms-data-page-interface"
            },
            "type": "array"
          },
          "search_criteria": {
            "$ref": "#/components/schemas/framework-search-criteria-interface"
          },
          "total_count": {
            "description": "Total count.",
            "type": "integer"
          }
        },
        "required": [
          "items",
          "search_criteria",
          "total_count"
        ],
        "type": "object"
      },
      "company-credit-data-credit-balance-options-interface": {
        "description": "Credit balance data transfer object interface.",
        "properties": {
          "currency_base": {
            "description": "Currency base.",
            "type": "string"
          },
          "currency_display": {
            "description": "Currency display.",
            "type": "string"
          },
          "order_increment": {
            "description": "Order increment.",
            "type": "string"
          },
          "purchase_order": {
            "description": "Purchase order number.",
            "type": "string"
          }
        },
        "required": [
          "purchase_order",
          "order_increment",
          "currency_display",
          "currency_base"
        ],
        "type": "object"
      },
      "company-credit-data-credit-data-interface": {
        "description": "Credit Data interface.",
        "properties": {
          "available_limit": {
            "description": "Available Limit.",
            "type": "number"
          },
          "balance": {
            "description": "Balance.",
            "type": "number"
          },
          "company_id": {
            "description": "Company id.",
            "type": "integer"
          },
          "credit_limit": {
            "description": "Credit Limit.",
            "type": "number"
          },
          "currency_code": {
            "description": "Currency Code.",
            "type": "string"
          },
          "exceed_limit": {
            "description": "Exceed Limit.",
            "type": "boolean"
          },
          "id": {
            "description": "ID.",
            "type": "integer"
          }
        },
        "required": [
          "exceed_limit"
        ],
        "type": "object"
      },
      "company-credit-data-credit-limit-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\CompanyCredit\\Api\\Data\\CreditLimitInterface",
        "type": "object"
      },
      "company-credit-data-credit-limit-interface": {
        "description": "Credit Limit data transfer object interface.",
        "properties": {
          "available_limit": {
            "description": "Available Limit.",
            "type": "number"
          },
          "balance": {
            "description": "Balance.",
            "type": "number"
          },
          "company_id": {
            "description": "Company id.",
            "type": "integer"
          },
          "credit_comment": {
            "description": "Credit comment for company credit history.",
            "type": "string"
          },
          "credit_limit": {
            "description": "Credit Limit.",
            "type": "number"
          },
          "currency_code": {
            "description": "Currency Code.",
            "type": "string"
          },
          "exceed_limit": {
            "description": "Exceed Limit.",
            "type": "boolean"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/company-credit-data-credit-limit-extension-interface"
          },
          "id": {
            "description": "ID.",
            "type": "integer"
          }
        },
        "required": [
          "exceed_limit"
        ],
        "type": "object"
      },
      "company-credit-data-credit-limit-search-results-interface": {
        "description": "Interface for Credit Limit search results.",
        "properties": {
          "items": {
            "description": "Credit Limit list.",
            "items": {
              "$ref": "#/components/schemas/company-credit-data-credit-data-interface"
            },
            "type": "array"
          },
          "search_criteria": {
            "$ref": "#/components/schemas/framework-search-criteria-interface"
          },
          "total_count": {
            "description": "Total count.",
            "type": "integer"
          }
        },
        "required": [
          "items",
          "search_criteria",
          "total_count"
        ],
        "type": "object"
      },
      "company-credit-data-history-data-interface": {
        "description": "History data transfer object interface.",
        "properties": {
          "amount": {
            "description": "Amount.",
            "type": "number"
          },
          "available_limit": {
            "description": "Available limit.",
            "type": "number"
          },
          "balance": {
            "description": "Outstanding balance.",
            "type": "number"
          },
          "comment": {
            "description": "Comment.",
            "type": "string"
          },
          "company_credit_id": {
            "description": "Company credit id.",
            "type": "integer"
          },
          "credit_limit": {
            "description": "Credit limit.",
            "type": "number"
          },
          "currency_credit": {
            "description": "Currency code of credit.",
            "type": "string"
          },
          "currency_operation": {
            "description": "Currency code of operation.",
            "type": "string"
          },
          "datetime": {
            "description": "Operation datetime.",
            "type": "string"
          },
          "id": {
            "description": "ID.",
            "type": "integer"
          },
          "purchase_order": {
            "description": "Purchase Order number.",
            "type": "string"
          },
          "rate": {
            "description": "Currency rate between credit and operation currencies.",
            "type": "number"
          },
          "rate_credit": {
            "description": "Rate between credit and base currencies.",
            "type": "number"
          },
          "type": {
            "description": "Type of operation.",
            "type": "integer"
          },
          "user_id": {
            "description": "User Id.",
            "type": "integer"
          },
          "user_type": {
            "description": "User type: integration, admin, customer.",
            "type": "integer"
          }
        },
        "required": [
          "rate",
          "amount",
          "balance",
          "credit_limit"
        ],
        "type": "object"
      },
      "company-credit-data-history-search-results-interface": {
        "description": "Interface for History search results.",
        "properties": {
          "items": {
            "description": "History list.",
            "items": {
              "$ref": "#/components/schemas/company-credit-data-history-data-interface"
            },
            "type": "array"
          },
          "search_criteria": {
            "$ref": "#/components/schemas/framework-search-criteria-interface"
          },
          "total_count": {
            "description": "Total count.",
            "type": "integer"
          }
        },
        "required": [
          "items",
          "search_criteria",
          "total_count"
        ],
        "type": "object"
      },
      "company-data-company-customer-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\Company\\Api\\Data\\CompanyCustomerInterface",
        "type": "object"
      },
      "company-data-company-customer-interface": {
        "description": "Extended customer custom attributes interface.",
        "properties": {
          "company_id": {
            "description": "Company ID.",
            "type": "integer"
          },
          "customer_id": {
            "description": "Customer ID.",
            "type": "integer"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/company-data-company-customer-extension-interface"
          },
          "job_title": {
            "description": "Get job title.",
            "type": "string"
          },
          "status": {
            "description": "Customer status.",
            "type": "integer"
          },
          "telephone": {
            "description": "Get telephone.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "company-data-company-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\Company\\Api\\Data\\CompanyInterface",
        "properties": {
          "applicable_payment_method": {
            "type": "integer"
          },
          "available_payment_methods": {
            "type": "string"
          },
          "quote_config": {
            "$ref": "#/components/schemas/negotiable-quote-data-company-quote-config-interface"
          },
          "use_config_settings": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "company-data-company-interface": {
        "description": "Interface for Company entity.",
        "properties": {
          "city": {
            "description": "City.",
            "type": "string"
          },
          "comment": {
            "description": "Comment.",
            "type": "string"
          },
          "company_email": {
            "description": "Company email.",
            "type": "string"
          },
          "company_name": {
            "description": "Company name.",
            "type": "string"
          },
          "country_id": {
            "description": "Country.",
            "type": "string"
          },
          "customer_group_id": {
            "description": "Customer Group Id.",
            "type": "integer"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/company-data-company-extension-interface"
          },
          "id": {
            "description": "Id.",
            "type": "integer"
          },
          "legal_name": {
            "description": "Legal name.",
            "type": "string"
          },
          "postcode": {
            "description": "Postcode.",
            "type": "string"
          },
          "region": {
            "description": "Region.",
            "type": "string"
          },
          "region_id": {
            "description": "Region Id.",
            "type": "string"
          },
          "reject_reason": {
            "description": "Reject Reason.",
            "type": "string"
          },
          "rejected_at": {
            "description": "Rejected at time.",
            "type": "string"
          },
          "reseller_id": {
            "description": "Reseller Id.",
            "type": "string"
          },
          "sales_representative_id": {
            "description": "Sales Representative Id.",
            "type": "integer"
          },
          "status": {
            "description": "Status.",
            "type": "integer"
          },
          "street": {
            "description": "Street.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "super_user_id": {
            "description": "Company admin customer id.",
            "type": "integer"
          },
          "telephone": {
            "description": "Telephone.",
            "type": "string"
          },
          "vat_tax_id": {
            "description": "Vat tax id.",
            "type": "string"
          }
        },
        "required": [
          "street",
          "customer_group_id",
          "sales_representative_id",
          "reject_reason",
          "rejected_at",
          "super_user_id"
        ],
        "type": "object"
      },
      "company-data-company-order-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\Company\\Api\\Data\\CompanyOrderInterface",
        "type": "object"
      },
      "company-data-company-order-interface": {
        "description": "Order company extension attributes interface. Adds new company attributes to orders.",
        "properties": {
          "company_id": {
            "description": "Company ID.",
            "type": "integer"
          },
          "company_name": {
            "description": "Company name.",
            "type": "string"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/company-data-company-order-extension-interface"
          },
          "order_id": {
            "description": "Order ID.",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "company-data-company-search-results-interface": {
        "description": "Interface for company search results",
        "properties": {
          "items": {
            "description": "Companies list",
            "items": {
              "$ref": "#/components/schemas/company-data-company-interface"
            },
            "type": "array"
          },
          "search_criteria": {
            "$ref": "#/components/schemas/framework-search-criteria-interface"
          },
          "total_count": {
            "description": "Total count.",
            "type": "integer"
          }
        },
        "required": [
          "items",
          "search_criteria",
          "total_count"
        ],
        "type": "object"
      },
      "company-data-hierarchy-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\Company\\Api\\Data\\HierarchyInterface",
        "type": "object"
      },
      "company-data-hierarchy-interface": {
        "description": "Company hierarchy DTO interface for WebAPI.",
        "properties": {
          "entity_id": {
            "description": "Entity ID.",
            "type": "integer"
          },
          "entity_type": {
            "description": "Entity type.",
            "type": "string"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/company-data-hierarchy-extension-interface"
          },
          "structure_id": {
            "description": "Structure ID.",
            "type": "integer"
          },
          "structure_parent_id": {
            "description": "Structure parent ID.",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "company-data-permission-interface": {
        "description": "Permission interface.",
        "properties": {
          "id": {
            "description": "Id.",
            "type": "integer"
          },
          "permission": {
            "description": "Permission.",
            "type": "string"
          },
          "resource_id": {
            "description": "Resource id.",
            "type": "string"
          },
          "role_id": {
            "description": "Role id.",
            "type": "integer"
          }
        },
        "required": [
          "resource_id",
          "permission"
        ],
        "type": "object"
      },
      "company-data-role-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\Company\\Api\\Data\\RoleInterface",
        "type": "object"
      },
      "company-data-role-interface": {
        "description": "Role data transfer object interface.",
        "properties": {
          "company_id": {
            "description": "Company id.",
            "type": "integer"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/company-data-role-extension-interface"
          },
          "id": {
            "description": "Role id.",
            "type": "integer"
          },
          "permissions": {
            "description": "Permissions.",
            "items": {
              "$ref": "#/components/schemas/company-data-permission-interface"
            },
            "type": "array"
          },
          "role_name": {
            "description": "Role name.",
            "type": "string"
          }
        },
        "required": [
          "permissions"
        ],
        "type": "object"
      },
      "company-data-role-search-results-interface": {
        "description": "Interface for role search results.",
        "properties": {
          "items": {
            "description": "Roles list.",
            "items": {
              "$ref": "#/components/schemas/company-data-role-interface"
            },
            "type": "array"
          },
          "search_criteria": {
            "$ref": "#/components/schemas/framework-search-criteria-interface"
          },
          "total_count": {
            "description": "Total count.",
            "type": "integer"
          }
        },
        "required": [
          "items",
          "search_criteria",
          "total_count"
        ],
        "type": "object"
      },
      "company-data-team-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\Company\\Api\\Data\\TeamInterface",
        "type": "object"
      },
      "company-data-team-interface": {
        "description": "Team interface",
        "properties": {
          "custom_attributes": {
            "description": "Custom attributes values.",
            "items": {
              "$ref": "#/components/schemas/framework-attribute-interface"
            },
            "type": "array"
          },
          "description": {
            "description": "Description",
            "type": "string"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/company-data-team-extension-interface"
          },
          "id": {
            "description": "ID",
            "type": "integer"
          },
          "name": {
            "description": "Name",
            "type": "string"
          }
        },
        "type": "object"
      },
      "company-data-team-search-results-interface": {
        "description": "Interface for company team search results",
        "properties": {
          "items": {
            "description": "Teams list",
            "items": {
              "$ref": "#/components/schemas/company-data-team-interface"
            },
            "type": "array"
          },
          "search_criteria": {
            "$ref": "#/components/schemas/framework-search-criteria-interface"
          },
          "total_count": {
            "description": "Total count.",
            "type": "integer"
          }
        },
        "required": [
          "items",
          "search_criteria",
          "total_count"
        ],
        "type": "object"
      },
      "configurable-product-data-configurable-item-option-value-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\ConfigurableProduct\\Api\\Data\\ConfigurableItemOptionValueInterface",
        "type": "object"
      },
      "configurable-product-data-configurable-item-option-value-interface": {
        "description": "Interface ConfigurableItemOptionValueInterface",
        "properties": {
          "extension_attributes": {
            "$ref": "#/components/schemas/configurable-product-data-configurable-item-option-value-extension-interface"
          },
          "option_id": {
            "description": "Option SKU",
            "type": "string"
          },
          "option_value": {
            "description": "Item id",
            "type": "integer"
          }
        },
        "required": [
          "option_id"
        ],
        "type": "object"
      },
      "configurable-product-data-option-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\ConfigurableProduct\\Api\\Data\\OptionInterface",
        "type": "object"
      },
      "configurable-product-data-option-interface": {
        "description": "Interface OptionInterface",
        "properties": {
          "attribute_id": {
            "type": "string"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/configurable-product-data-option-extension-interface"
          },
          "id": {
            "type": "integer"
          },
          "is_use_default": {
            "type": "boolean"
          },
          "label": {
            "type": "string"
          },
          "position": {
            "type": "integer"
          },
          "product_id": {
            "type": "integer"
          },
          "values": {
            "items": {
              "$ref": "#/components/schemas/configurable-product-data-option-value-interface"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "configurable-product-data-option-value-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\ConfigurableProduct\\Api\\Data\\OptionValueInterface",
        "type": "object"
      },
      "configurable-product-data-option-value-interface": {
        "description": "Interface OptionValueInterface",
        "properties": {
          "extension_attributes": {
            "$ref": "#/components/schemas/configurable-product-data-option-value-extension-interface"
          },
          "value_index": {
            "type": "integer"
          }
        },
        "required": [
          "value_index"
        ],
        "type": "object"
      },
      "customer-data-address-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\Customer\\Api\\Data\\AddressInterface",
        "type": "object"
      },
      "customer-data-address-interface": {
        "description": "Customer address interface.",
        "properties": {
          "city": {
            "description": "City name",
            "type": "string"
          },
          "company": {
            "description": "Company",
            "type": "string"
          },
          "country_id": {
            "description": "Country code in ISO_3166-2 format",
            "type": "string"
          },
          "custom_attributes": {
            "description": "Custom attributes values.",
            "items": {
              "$ref": "#/components/schemas/framework-attribute-interface"
            },
            "type": "array"
          },
          "customer_id": {
            "description": "Customer ID",
            "type": "integer"
          },
          "default_billing": {
            "description": "If this address is default billing address",
            "type": "boolean"
          },
          "default_shipping": {
            "description": "If this address is default shipping address.",
            "type": "boolean"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/customer-data-address-extension-interface"
          },
          "fax": {
            "description": "Fax number",
            "type": "string"
          },
          "firstname": {
            "description": "First name",
            "type": "string"
          },
          "id": {
            "description": "ID",
            "type": "integer"
          },
          "lastname": {
            "description": "Last name",
            "type": "string"
          },
          "middlename": {
            "description": "Middle name",
            "type": "string"
          },
          "postcode": {
            "description": "Postcode",
            "type": "string"
          },
          "prefix": {
            "description": "Prefix",
            "type": "string"
          },
          "region": {
            "$ref": "#/components/schemas/customer-data-region-interface"
          },
          "region_id": {
            "description": "Region ID",
            "type": "integer"
          },
          "street": {
            "description": "Street",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "suffix": {
            "description": "Suffix",
            "type": "string"
          },
          "telephone": {
            "description": "Telephone number",
            "type": "string"
          },
          "vat_id": {
            "description": "Vat id",
            "type": "string"
          }
        },
        "type": "object"
      },
      "customer-data-attribute-metadata-interface": {
        "description": "Customer attribute metadata interface.",
        "properties": {
          "attribute_code": {
            "description": "Code of the attribute.",
            "type": "string"
          },
          "backend_type": {
            "description": "Backend type.",
            "type": "string"
          },
          "data_model": {
            "description": "Data model for attribute.",
            "type": "string"
          },
          "frontend_class": {
            "description": "Class which is used to display the attribute on frontend.",
            "type": "string"
          },
          "frontend_input": {
            "description": "HTML for input element.",
            "type": "string"
          },
          "frontend_label": {
            "description": "Label which supposed to be displayed on frontend.",
            "type": "string"
          },
          "input_filter": {
            "description": "Template used for input (e.g. \"date\")",
            "type": "string"
          },
          "is_filterable_in_grid": {
            "description": "It is filterable in customer grid",
            "type": "boolean"
          },
          "is_searchable_in_grid": {
            "description": "It is searchable in customer grid",
            "type": "boolean"
          },
          "is_used_in_grid": {
            "description": "It is used in customer grid",
            "type": "boolean"
          },
          "is_visible_in_grid": {
            "description": "It is visible in customer grid",
            "type": "boolean"
          },
          "multiline_count": {
            "description": "Of lines of the attribute value.",
            "type": "integer"
          },
          "note": {
            "description": "The note attribute for the element.",
            "type": "string"
          },
          "options": {
            "description": "Options of the attribute (key => value pairs for select)",
            "items": {
              "$ref": "#/components/schemas/customer-data-option-interface"
            },
            "type": "array"
          },
          "required": {
            "description": "Attribute is required.",
            "type": "boolean"
          },
          "sort_order": {
            "description": "Attributes sort order.",
            "type": "integer"
          },
          "store_label": {
            "description": "Label of the store.",
            "type": "string"
          },
          "system": {
            "description": "This is a system attribute.",
            "type": "boolean"
          },
          "user_defined": {
            "description": "Current attribute has been defined by a user.",
            "type": "boolean"
          },
          "validation_rules": {
            "description": "Validation rules.",
            "items": {
              "$ref": "#/components/schemas/customer-data-validation-rule-interface"
            },
            "type": "array"
          },
          "visible": {
            "description": "Attribute is visible on frontend.",
            "type": "boolean"
          }
        },
        "required": [
          "frontend_input",
          "input_filter",
          "store_label",
          "validation_rules",
          "multiline_count",
          "visible",
          "required",
          "data_model",
          "options",
          "frontend_class",
          "user_defined",
          "sort_order",
          "frontend_label",
          "note",
          "system",
          "backend_type",
          "attribute_code"
        ],
        "type": "object"
      },
      "customer-data-customer-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\Customer\\Api\\Data\\CustomerInterface",
        "properties": {
          "amazon_id": {
            "type": "string"
          },
          "company_attributes": {
            "$ref": "#/components/schemas/company-data-company-customer-interface"
          },
          "is_subscribed": {
            "type": "boolean"
          },
          "vertex_customer_code": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "customer-data-customer-interface": {
        "description": "Customer interface.",
        "properties": {
          "addresses": {
            "description": "Customer addresses.",
            "items": {
              "$ref": "#/components/schemas/customer-data-address-interface"
            },
            "type": "array"
          },
          "confirmation": {
            "description": "Confirmation",
            "type": "string"
          },
          "created_at": {
            "description": "Created at time",
            "type": "string"
          },
          "created_in": {
            "description": "Created in area",
            "type": "string"
          },
          "custom_attributes": {
            "description": "Custom attributes values.",
            "items": {
              "$ref": "#/components/schemas/framework-attribute-interface"
            },
            "type": "array"
          },
          "default_billing": {
            "description": "Default billing address id",
            "type": "string"
          },
          "default_shipping": {
            "description": "Default shipping address id",
            "type": "string"
          },
          "disable_auto_group_change": {
            "description": "Disable auto group change flag.",
            "type": "integer"
          },
          "dob": {
            "description": "Date of birth",
            "type": "string"
          },
          "email": {
            "description": "Email address",
            "type": "string"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/customer-data-customer-extension-interface"
          },
          "firstname": {
            "description": "First name",
            "type": "string"
          },
          "gender": {
            "description": "Gender",
            "type": "integer"
          },
          "group_id": {
            "description": "Group id",
            "type": "integer"
          },
          "id": {
            "description": "Customer id",
            "type": "integer"
          },
          "lastname": {
            "description": "Last name",
            "type": "string"
          },
          "middlename": {
            "description": "Middle name",
            "type": "string"
          },
          "prefix": {
            "description": "Prefix",
            "type": "string"
          },
          "store_id": {
            "description": "Store id",
            "type": "integer"
          },
          "suffix": {
            "description": "Suffix",
            "type": "string"
          },
          "taxvat": {
            "description": "Tax Vat",
            "type": "string"
          },
          "updated_at": {
            "description": "Updated at time",
            "type": "string"
          },
          "website_id": {
            "description": "Website id",
            "type": "integer"
          }
        },
        "required": [
          "email",
          "firstname",
          "lastname"
        ],
        "type": "object"
      },
      "customer-data-customer-search-results-interface": {
        "description": "Interface for customer search results.",
        "properties": {
          "items": {
            "description": "Customers list.",
            "items": {
              "$ref": "#/components/schemas/customer-data-customer-interface"
            },
            "type": "array"
          },
          "search_criteria": {
            "$ref": "#/components/schemas/framework-search-criteria-interface"
          },
          "total_count": {
            "description": "Total count.",
            "type": "integer"
          }
        },
        "required": [
          "items",
          "search_criteria",
          "total_count"
        ],
        "type": "object"
      },
      "customer-data-group-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\Customer\\Api\\Data\\GroupInterface",
        "type": "object"
      },
      "customer-data-group-interface": {
        "description": "Customer group interface.",
        "properties": {
          "code": {
            "description": "Code",
            "type": "string"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/customer-data-group-extension-interface"
          },
          "id": {
            "description": "Id",
            "type": "integer"
          },
          "tax_class_id": {
            "description": "Tax class id",
            "type": "integer"
          },
          "tax_class_name": {
            "description": "Tax class name",
            "type": "string"
          }
        },
        "required": [
          "code",
          "tax_class_id"
        ],
        "type": "object"
      },
      "customer-data-group-search-results-interface": {
        "description": "Interface for customer groups search results.",
        "properties": {
          "items": {
            "description": "Customer groups list.",
            "items": {
              "$ref": "#/components/schemas/customer-data-group-interface"
            },
            "type": "array"
          },
          "search_criteria": {
            "$ref": "#/components/schemas/framework-search-criteria-interface"
          },
          "total_count": {
            "description": "Total count.",
            "type": "integer"
          }
        },
        "required": [
          "items",
          "search_criteria",
          "total_count"
        ],
        "type": "object"
      },
      "customer-data-option-interface": {
        "description": "Option interface.",
        "properties": {
          "label": {
            "description": "Option label",
            "type": "string"
          },
          "options": {
            "description": "Nested options",
            "items": {
              "$ref": "#/components/schemas/customer-data-option-interface"
            },
            "type": "array"
          },
          "value": {
            "description": "Option value",
            "type": "string"
          }
        },
        "required": [
          "label"
        ],
        "type": "object"
      },
      "customer-data-region-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\Customer\\Api\\Data\\RegionInterface",
        "type": "object"
      },
      "customer-data-region-interface": {
        "description": "Customer address region interface.",
        "properties": {
          "extension_attributes": {
            "$ref": "#/components/schemas/customer-data-region-extension-interface"
          },
          "region": {
            "description": "Region",
            "type": "string"
          },
          "region_code": {
            "description": "Region code",
            "type": "string"
          },
          "region_id": {
            "description": "Region id",
            "type": "integer"
          }
        },
        "required": [
          "region_code",
          "region",
          "region_id"
        ],
        "type": "object"
      },
      "customer-data-validation-results-interface": {
        "description": "Validation results interface.",
        "properties": {
          "messages": {
            "description": "Error messages as array in case of validation failure, else return empty array.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "valid": {
            "description": "If the provided data is valid.",
            "type": "boolean"
          }
        },
        "required": [
          "valid",
          "messages"
        ],
        "type": "object"
      },
      "customer-data-validation-rule-interface": {
        "description": "Validation rule interface.",
        "properties": {
          "name": {
            "description": "Validation rule name",
            "type": "string"
          },
          "value": {
            "description": "Validation rule value",
            "type": "string"
          }
        },
        "required": [
          "name",
          "value"
        ],
        "type": "object"
      },
      "directory-data-country-information-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\Directory\\Api\\Data\\CountryInformationInterface",
        "type": "object"
      },
      "directory-data-country-information-interface": {
        "description": "Country Information interface.",
        "properties": {
          "available_regions": {
            "description": "The available regions for the store.",
            "items": {
              "$ref": "#/components/schemas/directory-data-region-information-interface"
            },
            "type": "array"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/directory-data-country-information-extension-interface"
          },
          "full_name_english": {
            "description": "The country full name (in English) for the store.",
            "type": "string"
          },
          "full_name_locale": {
            "description": "The country full name (in store locale) for the store.",
            "type": "string"
          },
          "id": {
            "description": "The country id for the store.",
            "type": "string"
          },
          "three_letter_abbreviation": {
            "description": "The country 3 letter abbreviation for the store.",
            "type": "string"
          },
          "two_letter_abbreviation": {
            "description": "The country 2 letter abbreviation for the store.",
            "type": "string"
          }
        },
        "required": [
          "id",
          "two_letter_abbreviation",
          "three_letter_abbreviation",
          "full_name_locale",
          "full_name_english"
        ],
        "type": "object"
      },
      "directory-data-currency-information-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\Directory\\Api\\Data\\CurrencyInformationInterface",
        "type": "object"
      },
      "directory-data-currency-information-interface": {
        "description": "Currency Information interface.",
        "properties": {
          "available_currency_codes": {
            "description": "The list of allowed currency codes for the store.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "base_currency_code": {
            "description": "The base currency code for the store.",
            "type": "string"
          },
          "base_currency_symbol": {
            "description": "The currency symbol of the base currency for the store.",
            "type": "string"
          },
          "default_display_currency_code": {
            "description": "The default display currency code for the store.",
            "type": "string"
          },
          "default_display_currency_symbol": {
            "description": "The currency symbol of the default display currency for the store.",
            "type": "string"
          },
          "exchange_rates": {
            "description": "The list of exchange rate information for the store.",
            "items": {
              "$ref": "#/components/schemas/directory-data-exchange-rate-interface"
            },
            "type": "array"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/directory-data-currency-information-extension-interface"
          }
        },
        "required": [
          "base_currency_code",
          "base_currency_symbol",
          "default_display_currency_code",
          "default_display_currency_symbol",
          "available_currency_codes",
          "exchange_rates"
        ],
        "type": "object"
      },
      "directory-data-exchange-rate-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\Directory\\Api\\Data\\ExchangeRateInterface",
        "type": "object"
      },
      "directory-data-exchange-rate-interface": {
        "description": "Exchange Rate interface.",
        "properties": {
          "currency_to": {
            "description": "The currency code associated with the exchange rate.",
            "type": "string"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/directory-data-exchange-rate-extension-interface"
          },
          "rate": {
            "description": "The exchange rate for the associated currency and the store's base currency.",
            "type": "number"
          }
        },
        "required": [
          "currency_to",
          "rate"
        ],
        "type": "object"
      },
      "directory-data-region-information-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\Directory\\Api\\Data\\RegionInformationInterface",
        "type": "object"
      },
      "directory-data-region-information-interface": {
        "description": "Region Information interface.",
        "properties": {
          "code": {
            "description": "Region code",
            "type": "string"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/directory-data-region-information-extension-interface"
          },
          "id": {
            "description": "Region id",
            "type": "string"
          },
          "name": {
            "description": "Region name",
            "type": "string"
          }
        },
        "required": [
          "id",
          "code",
          "name"
        ],
        "type": "object"
      },
      "downloadable-data-downloadable-option-interface": {
        "description": "Downloadable Option",
        "properties": {
          "downloadable_links": {
            "description": "The list of downloadable links",
            "items": {
              "type": "integer"
            },
            "type": "array"
          }
        },
        "required": [
          "downloadable_links"
        ],
        "type": "object"
      },
      "downloadable-data-file-content-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\Downloadable\\Api\\Data\\File\\ContentInterface",
        "type": "object"
      },
      "downloadable-data-file-content-interface": {
        "description": "",
        "properties": {
          "extension_attributes": {
            "$ref": "#/components/schemas/downloadable-data-file-content-extension-interface"
          },
          "file_data": {
            "description": "Data (base64 encoded content)",
            "type": "string"
          },
          "name": {
            "description": "File name",
            "type": "string"
          }
        },
        "required": [
          "file_data",
          "name"
        ],
        "type": "object"
      },
      "downloadable-data-link-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\Downloadable\\Api\\Data\\LinkInterface",
        "type": "object"
      },
      "downloadable-data-link-interface": {
        "description": "",
        "properties": {
          "extension_attributes": {
            "$ref": "#/components/schemas/downloadable-data-link-extension-interface"
          },
          "id": {
            "description": "Sample(or link) id",
            "type": "integer"
          },
          "is_shareable": {
            "description": "Shareable status",
            "type": "integer"
          },
          "link_file": {
            "description": "relative file path",
            "type": "string"
          },
          "link_file_content": {
            "$ref": "#/components/schemas/downloadable-data-file-content-interface"
          },
          "link_type": {
            "type": "string"
          },
          "link_url": {
            "description": "Link url or null when type is 'file'",
            "type": "string"
          },
          "number_of_downloads": {
            "description": "Of downloads per user",
            "type": "integer"
          },
          "price": {
            "description": "Price",
            "type": "number"
          },
          "sample_file": {
            "description": "relative file path",
            "type": "string"
          },
          "sample_file_content": {
            "$ref": "#/components/schemas/downloadable-data-file-content-interface"
          },
          "sample_type": {
            "type": "string"
          },
          "sample_url": {
            "description": "file URL",
            "type": "string"
          },
          "sort_order": {
            "type": "integer"
          },
          "title": {
            "type": "string"
          }
        },
        "required": [
          "sort_order",
          "is_shareable",
          "price",
          "link_type",
          "sample_type"
        ],
        "type": "object"
      },
      "downloadable-data-sample-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\Downloadable\\Api\\Data\\SampleInterface",
        "type": "object"
      },
      "downloadable-data-sample-interface": {
        "description": "",
        "properties": {
          "extension_attributes": {
            "$ref": "#/components/schemas/downloadable-data-sample-extension-interface"
          },
          "id": {
            "description": "Sample(or link) id",
            "type": "integer"
          },
          "sample_file": {
            "description": "relative file path",
            "type": "string"
          },
          "sample_file_content": {
            "$ref": "#/components/schemas/downloadable-data-file-content-interface"
          },
          "sample_type": {
            "type": "string"
          },
          "sample_url": {
            "description": "file URL",
            "type": "string"
          },
          "sort_order": {
            "description": "Order index for sample",
            "type": "integer"
          },
          "title": {
            "description": "Title",
            "type": "string"
          }
        },
        "required": [
          "title",
          "sort_order",
          "sample_type"
        ],
        "type": "object"
      },
      "eav-data-attribute-frontend-label-interface": {
        "description": "Interface AttributeFrontendLabelInterface",
        "properties": {
          "label": {
            "description": "Option label",
            "type": "string"
          },
          "store_id": {
            "description": "Store id",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "eav-data-attribute-group-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\Eav\\Api\\Data\\AttributeGroupInterface",
        "properties": {
          "attribute_group_code": {
            "type": "string"
          },
          "sort_order": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "eav-data-attribute-group-interface": {
        "description": "Interface AttributeGroupInterface",
        "properties": {
          "attribute_group_id": {
            "description": "Id",
            "type": "string"
          },
          "attribute_group_name": {
            "description": "Name",
            "type": "string"
          },
          "attribute_set_id": {
            "description": "Attribute set id",
            "type": "integer"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/eav-data-attribute-group-extension-interface"
          }
        },
        "type": "object"
      },
      "eav-data-attribute-group-search-results-interface": {
        "description": "Interface AttributeGroupSearchResultsInterface",
        "properties": {
          "items": {
            "description": "Attribute sets list.",
            "items": {
              "$ref": "#/components/schemas/eav-data-attribute-group-interface"
            },
            "type": "array"
          },
          "search_criteria": {
            "$ref": "#/components/schemas/framework-search-criteria-interface"
          },
          "total_count": {
            "description": "Total count.",
            "type": "integer"
          }
        },
        "required": [
          "items",
          "search_criteria",
          "total_count"
        ],
        "type": "object"
      },
      "eav-data-attribute-option-interface": {
        "description": "Created from:",
        "properties": {
          "is_default": {
            "description": "Default",
            "type": "boolean"
          },
          "label": {
            "description": "Option label",
            "type": "string"
          },
          "sort_order": {
            "description": "Option order",
            "type": "integer"
          },
          "store_labels": {
            "description": "Option label for store scopes",
            "items": {
              "$ref": "#/components/schemas/eav-data-attribute-option-label-interface"
            },
            "type": "array"
          },
          "value": {
            "description": "Option value",
            "type": "string"
          }
        },
        "required": [
          "label",
          "value"
        ],
        "type": "object"
      },
      "eav-data-attribute-option-label-interface": {
        "description": "Interface AttributeOptionLabelInterface",
        "properties": {
          "label": {
            "description": "Option label",
            "type": "string"
          },
          "store_id": {
            "description": "Store id",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "eav-data-attribute-set-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\Eav\\Api\\Data\\AttributeSetInterface",
        "type": "object"
      },
      "eav-data-attribute-set-interface": {
        "description": "Interface AttributeSetInterface",
        "properties": {
          "attribute_set_id": {
            "description": "Attribute set ID",
            "type": "integer"
          },
          "attribute_set_name": {
            "description": "Attribute set name",
            "type": "string"
          },
          "entity_type_id": {
            "description": "Attribute set entity type id",
            "type": "integer"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/eav-data-attribute-set-extension-interface"
          },
          "sort_order": {
            "description": "Attribute set sort order index",
            "type": "integer"
          }
        },
        "required": [
          "attribute_set_name",
          "sort_order"
        ],
        "type": "object"
      },
      "eav-data-attribute-set-search-results-interface": {
        "description": "Interface AttributeSetSearchResultsInterface",
        "properties": {
          "items": {
            "description": "Attribute sets list.",
            "items": {
              "$ref": "#/components/schemas/eav-data-attribute-set-interface"
            },
            "type": "array"
          },
          "search_criteria": {
            "$ref": "#/components/schemas/framework-search-criteria-interface"
          },
          "total_count": {
            "description": "Total count.",
            "type": "integer"
          }
        },
        "required": [
          "items",
          "search_criteria",
          "total_count"
        ],
        "type": "object"
      },
      "eav-data-attribute-validation-rule-interface": {
        "description": "Interface AttributeValidationRuleInterface",
        "properties": {
          "key": {
            "description": "Object key",
            "type": "string"
          },
          "value": {
            "description": "Object value",
            "type": "string"
          }
        },
        "required": [
          "key",
          "value"
        ],
        "type": "object"
      },
      "error-errors": {
        "description": "Errors list",
        "items": {
          "$ref": "#/components/schemas/error-errors-item"
        },
        "type": "array"
      },
      "error-errors-item": {
        "description": "Error details",
        "properties": {
          "message": {
            "description": "Error message",
            "type": "string"
          },
          "parameters": {
            "$ref": "#/components/schemas/error-parameters"
          }
        },
        "type": "object"
      },
      "error-parameters": {
        "description": "Error parameters list",
        "items": {
          "$ref": "#/components/schemas/error-parameters-item"
        },
        "type": "array"
      },
      "error-parameters-item": {
        "description": "Error parameters item",
        "properties": {
          "fieldName": {
            "description": "Missing or invalid field name",
            "type": "string"
          },
          "fieldValue": {
            "description": "Incorrect field value",
            "type": "string"
          },
          "resources": {
            "description": "ACL resource",
            "type": "string"
          }
        },
        "type": "object"
      },
      "error-response": {
        "properties": {
          "code": {
            "description": "Error code",
            "type": "integer"
          },
          "errors": {
            "$ref": "#/components/schemas/error-errors"
          },
          "message": {
            "description": "Error message",
            "type": "string"
          },
          "parameters": {
            "$ref": "#/components/schemas/error-parameters"
          },
          "trace": {
            "description": "Stack trace",
            "type": "string"
          }
        },
        "required": [
          "message"
        ],
        "type": "object"
      },
      "framework-attribute-interface": {
        "description": "Interface for custom attribute value.",
        "properties": {
          "attribute_code": {
            "description": "Attribute code",
            "type": "string"
          },
          "value": {
            "description": "Attribute value",
            "type": "string"
          }
        },
        "required": [
          "attribute_code",
          "value"
        ],
        "type": "object"
      },
      "framework-criteria-interface": {
        "description": "Interface CriteriaInterface",
        "properties": {
          "criteria_list": {
            "description": "Criteria objects added to current Composite Criteria",
            "items": {
              "$ref": "#/components/schemas/framework-criteria-interface"
            },
            "type": "array"
          },
          "filters": {
            "description": "List of filters",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "limit": {
            "description": "Limit",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "mapper_interface_name": {
            "description": "Associated Mapper Interface name",
            "type": "string"
          },
          "orders": {
            "description": "Ordering criteria",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "mapper_interface_name",
          "criteria_list",
          "filters",
          "orders",
          "limit"
        ],
        "type": "object"
      },
      "framework-data-image-content-interface": {
        "description": "Image Content data interface",
        "properties": {
          "base64_encoded_data": {
            "description": "Media data (base64 encoded content)",
            "type": "string"
          },
          "name": {
            "description": "Image name",
            "type": "string"
          },
          "type": {
            "description": "MIME type",
            "type": "string"
          }
        },
        "required": [
          "base64_encoded_data",
          "type",
          "name"
        ],
        "type": "object"
      },
      "framework-data-video-content-interface": {
        "description": "Video Content data interface",
        "properties": {
          "media_type": {
            "description": "MIME type",
            "type": "string"
          },
          "video_description": {
            "description": "Video Description",
            "type": "string"
          },
          "video_metadata": {
            "description": "Metadata",
            "type": "string"
          },
          "video_provider": {
            "description": "Provider",
            "type": "string"
          },
          "video_title": {
            "description": "Title",
            "type": "string"
          },
          "video_url": {
            "description": "Video URL",
            "type": "string"
          }
        },
        "required": [
          "media_type",
          "video_provider",
          "video_url",
          "video_title",
          "video_description",
          "video_metadata"
        ],
        "type": "object"
      },
      "framework-filter": {
        "description": "Filter which can be used by any methods from service layer.",
        "properties": {
          "condition_type": {
            "description": "Condition type",
            "type": "string"
          },
          "field": {
            "description": "Field",
            "type": "string"
          },
          "value": {
            "description": "Value",
            "type": "string"
          }
        },
        "required": [
          "field",
          "value"
        ],
        "type": "object"
      },
      "framework-metadata-object-interface": {
        "description": "Provides metadata about an attribute.",
        "properties": {
          "attribute_code": {
            "description": "Code of the attribute.",
            "type": "string"
          }
        },
        "required": [
          "attribute_code"
        ],
        "type": "object"
      },
      "framework-search-aggregation-interface": {
        "description": "Faceted data",
        "properties": {
          "bucket_names": {
            "description": "Document field names",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "buckets": {
            "description": "All Document fields",
            "items": {
              "$ref": "#/components/schemas/framework-search-bucket-interface"
            },
            "type": "array"
          }
        },
        "required": [
          "buckets",
          "bucket_names"
        ],
        "type": "object"
      },
      "framework-search-aggregation-value-interface": {
        "description": "Interface \\Magento\\Framework\\Api\\Search\\AggregationValueInterface",
        "properties": {
          "metrics": {
            "description": "Metrics",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "value": {
            "description": "Aggregation",
            "type": "string"
          }
        },
        "required": [
          "value",
          "metrics"
        ],
        "type": "object"
      },
      "framework-search-bucket-interface": {
        "description": "Facet Bucket",
        "properties": {
          "name": {
            "description": "Field name",
            "type": "string"
          },
          "values": {
            "description": "Field values",
            "items": {
              "$ref": "#/components/schemas/framework-search-aggregation-value-interface"
            },
            "type": "array"
          }
        },
        "required": [
          "name",
          "values"
        ],
        "type": "object"
      },
      "framework-search-criteria-interface": {
        "description": "Search criteria interface.",
        "properties": {
          "current_page": {
            "description": "Current page.",
            "type": "integer"
          },
          "filter_groups": {
            "description": "A list of filter groups.",
            "items": {
              "$ref": "#/components/schemas/framework-search-filter-group"
            },
            "type": "array"
          },
          "page_size": {
            "description": "Page size.",
            "type": "integer"
          },
          "sort_orders": {
            "description": "Sort order.",
            "items": {
              "$ref": "#/components/schemas/framework-sort-order"
            },
            "type": "array"
          }
        },
        "required": [
          "filter_groups"
        ],
        "type": "object"
      },
      "framework-search-document-interface": {
        "description": "Interface \\Magento\\Framework\\Api\\Search\\DocumentInterface",
        "properties": {
          "custom_attributes": {
            "description": "Custom attributes values.",
            "items": {
              "$ref": "#/components/schemas/framework-attribute-interface"
            },
            "type": "array"
          },
          "id": {
            "type": "integer"
          }
        },
        "required": [
          "id"
        ],
        "type": "object"
      },
      "framework-search-filter-group": {
        "description": "Groups two or more filters together using a logical OR",
        "properties": {
          "filters": {
            "description": "A list of filters in this group",
            "items": {
              "$ref": "#/components/schemas/framework-filter"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "framework-search-search-criteria-interface": {
        "description": "Interface SearchCriteriaInterface",
        "properties": {
          "current_page": {
            "description": "Current page.",
            "type": "integer"
          },
          "filter_groups": {
            "description": "A list of filter groups.",
            "items": {
              "$ref": "#/components/schemas/framework-search-filter-group"
            },
            "type": "array"
          },
          "page_size": {
            "description": "Page size.",
            "type": "integer"
          },
          "request_name": {
            "type": "string"
          },
          "sort_orders": {
            "description": "Sort order.",
            "items": {
              "$ref": "#/components/schemas/framework-sort-order"
            },
            "type": "array"
          }
        },
        "required": [
          "request_name",
          "filter_groups"
        ],
        "type": "object"
      },
      "framework-search-search-result-interface": {
        "description": "Interface SearchResultInterface",
        "properties": {
          "aggregations": {
            "$ref": "#/components/schemas/framework-search-aggregation-interface"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/framework-search-document-interface"
            },
            "type": "array"
          },
          "search_criteria": {
            "$ref": "#/components/schemas/framework-search-search-criteria-interface"
          },
          "total_count": {
            "description": "Total count.",
            "type": "integer"
          }
        },
        "required": [
          "items",
          "aggregations",
          "search_criteria",
          "total_count"
        ],
        "type": "object"
      },
      "framework-sort-order": {
        "description": "Data object for sort order.",
        "properties": {
          "direction": {
            "description": "Sorting direction.",
            "type": "string"
          },
          "field": {
            "description": "Sorting field.",
            "type": "string"
          }
        },
        "required": [
          "field",
          "direction"
        ],
        "type": "object"
      },
      "gift-card-account-data-gift-card-account-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\GiftCardAccount\\Api\\Data\\GiftCardAccountInterface",
        "type": "object"
      },
      "gift-card-account-data-gift-card-account-interface": {
        "description": "Gift Card Account data",
        "properties": {
          "base_gift_cards_amount": {
            "description": "Cards amount in base currency",
            "type": "number"
          },
          "base_gift_cards_amount_used": {
            "description": "Cards amount used in base currency",
            "type": "number"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/gift-card-account-data-gift-card-account-extension-interface"
          },
          "gift_cards": {
            "description": "Cards codes",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "gift_cards_amount": {
            "description": "Cards amount in quote currency",
            "type": "number"
          },
          "gift_cards_amount_used": {
            "description": "Cards amount used in quote currency",
            "type": "number"
          }
        },
        "required": [
          "gift_cards",
          "gift_cards_amount",
          "base_gift_cards_amount",
          "gift_cards_amount_used",
          "base_gift_cards_amount_used"
        ],
        "type": "object"
      },
      "gift-card-account-data-gift-card-interface": {
        "description": "Gift Card data",
        "properties": {
          "amount": {
            "description": "Amount",
            "type": "number"
          },
          "base_amount": {
            "description": "Base Amount",
            "type": "number"
          },
          "code": {
            "description": "Code",
            "type": "string"
          },
          "id": {
            "description": "Id",
            "type": "integer"
          }
        },
        "required": [
          "id",
          "code",
          "amount",
          "base_amount"
        ],
        "type": "object"
      },
      "gift-card-data-gift-card-option-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\GiftCard\\Api\\Data\\GiftCardOptionInterface",
        "type": "object"
      },
      "gift-card-data-gift-card-option-interface": {
        "description": "Interface GiftCardOptionInterface",
        "properties": {
          "custom_giftcard_amount": {
            "description": "Gift card open amount value.",
            "type": "number"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/gift-card-data-gift-card-option-extension-interface"
          },
          "giftcard_amount": {
            "description": "Gift card amount.",
            "type": "string"
          },
          "giftcard_message": {
            "description": "Giftcard message.",
            "type": "string"
          },
          "giftcard_recipient_email": {
            "description": "Gift card recipient email.",
            "type": "string"
          },
          "giftcard_recipient_name": {
            "description": "Gift card recipient name.",
            "type": "string"
          },
          "giftcard_sender_email": {
            "description": "Gift card sender email.",
            "type": "string"
          },
          "giftcard_sender_name": {
            "description": "Gift card sender name.",
            "type": "string"
          }
        },
        "required": [
          "giftcard_amount",
          "giftcard_sender_name",
          "giftcard_recipient_name",
          "giftcard_sender_email",
          "giftcard_recipient_email"
        ],
        "type": "object"
      },
      "gift-card-data-giftcard-amount-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\GiftCard\\Api\\Data\\GiftcardAmountInterface",
        "type": "object"
      },
      "gift-card-data-giftcard-amount-interface": {
        "description": "Interface GiftcardAmountInterface: this interface is used to serialize and deserialize EAV attribute giftcard_amounts",
        "properties": {
          "attribute_id": {
            "type": "integer"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/gift-card-data-giftcard-amount-extension-interface"
          },
          "value": {
            "type": "number"
          },
          "website_id": {
            "type": "integer"
          },
          "website_value": {
            "type": "number"
          }
        },
        "required": [
          "attribute_id",
          "website_id",
          "value",
          "website_value"
        ],
        "type": "object"
      },
      "gift-message-data-message-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\GiftMessage\\Api\\Data\\MessageInterface",
        "properties": {
          "entity_id": {
            "type": "string"
          },
          "entity_type": {
            "type": "string"
          },
          "wrapping_add_printed_card": {
            "type": "boolean"
          },
          "wrapping_allow_gift_receipt": {
            "type": "boolean"
          },
          "wrapping_id": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "gift-message-data-message-interface": {
        "description": "Interface MessageInterface",
        "properties": {
          "customer_id": {
            "description": "Customer ID. Otherwise, null.",
            "type": "integer"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/gift-message-data-message-extension-interface"
          },
          "gift_message_id": {
            "description": "Gift message ID. Otherwise, null.",
            "type": "integer"
          },
          "message": {
            "description": "Message text.",
            "type": "string"
          },
          "recipient": {
            "description": "Recipient name.",
            "type": "string"
          },
          "sender": {
            "description": "Sender name.",
            "type": "string"
          }
        },
        "required": [
          "sender",
          "recipient",
          "message"
        ],
        "type": "object"
      },
      "gift-wrapping-data-wrapping-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\GiftWrapping\\Api\\Data\\WrappingInterface",
        "type": "object"
      },
      "gift-wrapping-data-wrapping-interface": {
        "description": "Interface WrappingInterface",
        "properties": {
          "base_currency_code": {
            "type": "string"
          },
          "base_price": {
            "type": "number"
          },
          "design": {
            "type": "string"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/gift-wrapping-data-wrapping-extension-interface"
          },
          "image_base64_content": {
            "type": "string"
          },
          "image_name": {
            "type": "string"
          },
          "image_url": {
            "description": "Wrapping image URL.",
            "type": "string"
          },
          "status": {
            "type": "integer"
          },
          "website_ids": {
            "items": {
              "type": "integer"
            },
            "type": "array"
          },
          "wrapping_id": {
            "type": "integer"
          }
        },
        "required": [
          "design",
          "status",
          "base_price"
        ],
        "type": "object"
      },
      "gift-wrapping-data-wrapping-search-results-interface": {
        "description": "Interface WrappingSearchResultsInterface",
        "properties": {
          "items": {
            "description": "Items",
            "items": {
              "$ref": "#/components/schemas/gift-wrapping-data-wrapping-interface"
            },
            "type": "array"
          },
          "search_criteria": {
            "$ref": "#/components/schemas/framework-search-criteria-interface"
          },
          "total_count": {
            "description": "Total count.",
            "type": "integer"
          }
        },
        "required": [
          "items",
          "search_criteria",
          "total_count"
        ],
        "type": "object"
      },
      "msrp-data-product-render-msrp-price-info-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\Msrp\\Api\\Data\\ProductRender\\MsrpPriceInfoInterface",
        "type": "object"
      },
      "msrp-data-product-render-msrp-price-info-interface": {
        "description": "Price interface.",
        "properties": {
          "explanation_message": {
            "type": "string"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/msrp-data-product-render-msrp-price-info-extension-interface"
          },
          "is_applicable": {
            "type": "string"
          },
          "is_shown_price_on_gesture": {
            "type": "string"
          },
          "msrp_message": {
            "type": "string"
          },
          "msrp_price": {
            "type": "string"
          }
        },
        "required": [
          "msrp_price",
          "is_applicable",
          "is_shown_price_on_gesture",
          "msrp_message",
          "explanation_message"
        ],
        "type": "object"
      },
      "negotiable-quote-data-attachment-content-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\NegotiableQuote\\Api\\Data\\AttachmentContentInterface",
        "type": "object"
      },
      "negotiable-quote-data-attachment-content-interface": {
        "description": "Attachment files content interface.",
        "properties": {
          "base64_encoded_data": {
            "description": "Media data (base64 encoded content).",
            "type": "string"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/negotiable-quote-data-attachment-content-extension-interface"
          },
          "name": {
            "description": "File name.",
            "type": "string"
          },
          "type": {
            "description": "MIME type.",
            "type": "string"
          }
        },
        "required": [
          "base64_encoded_data",
          "type",
          "name"
        ],
        "type": "object"
      },
      "negotiable-quote-data-comment-attachment-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\NegotiableQuote\\Api\\Data\\CommentAttachmentInterface",
        "type": "object"
      },
      "negotiable-quote-data-comment-attachment-interface": {
        "description": "Interface for quote comment attachment.",
        "properties": {
          "attachment_id": {
            "description": "Attachment ID.",
            "type": "integer"
          },
          "comment_id": {
            "description": "Comment ID.",
            "type": "integer"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/negotiable-quote-data-comment-attachment-extension-interface"
          },
          "file_name": {
            "description": "File name.",
            "type": "string"
          },
          "file_path": {
            "description": "File path.",
            "type": "string"
          },
          "file_type": {
            "description": "File type.",
            "type": "string"
          }
        },
        "required": [
          "attachment_id",
          "comment_id",
          "file_name",
          "file_path",
          "file_type"
        ],
        "type": "object"
      },
      "negotiable-quote-data-comment-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\NegotiableQuote\\Api\\Data\\CommentInterface",
        "type": "object"
      },
      "negotiable-quote-data-comment-interface": {
        "description": "Interface CommentInterface",
        "properties": {
          "attachments": {
            "description": "Existing attachments.",
            "items": {
              "$ref": "#/components/schemas/negotiable-quote-data-comment-attachment-interface"
            },
            "type": "array"
          },
          "comment": {
            "description": "Comment.",
            "type": "string"
          },
          "created_at": {
            "description": "Comment created at.",
            "type": "string"
          },
          "creator_id": {
            "description": "Comment creator ID.",
            "type": "integer"
          },
          "creator_type": {
            "description": "The comment creator type.",
            "type": "integer"
          },
          "entity_id": {
            "description": "Comment ID.",
            "type": "integer"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/negotiable-quote-data-comment-extension-interface"
          },
          "is_decline": {
            "description": "Is quote was declined by seller.",
            "type": "integer"
          },
          "is_draft": {
            "description": "Is quote draft flag.",
            "type": "integer"
          },
          "parent_id": {
            "description": "Negotiable quote ID, that this comment belongs to.",
            "type": "integer"
          }
        },
        "required": [
          "entity_id",
          "parent_id",
          "creator_type",
          "is_decline",
          "is_draft",
          "creator_id",
          "comment",
          "created_at",
          "attachments"
        ],
        "type": "object"
      },
      "negotiable-quote-data-company-quote-config-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\NegotiableQuote\\Api\\Data\\CompanyQuoteConfigInterface",
        "type": "object"
      },
      "negotiable-quote-data-company-quote-config-interface": {
        "description": "Interface CompanyQuoteConfigInterface",
        "properties": {
          "company_id": {
            "description": "Company id",
            "type": "string"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/negotiable-quote-data-company-quote-config-extension-interface"
          },
          "is_quote_enabled": {
            "description": "Quote enabled for company",
            "type": "boolean"
          }
        },
        "required": [
          "is_quote_enabled"
        ],
        "type": "object"
      },
      "negotiable-quote-data-negotiable-quote-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\NegotiableQuote\\Api\\Data\\NegotiableQuoteInterface",
        "type": "object"
      },
      "negotiable-quote-data-negotiable-quote-interface": {
        "description": "Interface NegotiableQuoteInterface",
        "properties": {
          "applied_rule_ids": {
            "description": "Quote rules.",
            "type": "string"
          },
          "base_negotiated_total_price": {
            "description": "Quote negotiated total price in base currency.",
            "type": "number"
          },
          "base_original_total_price": {
            "description": "Quote original total price in base currency.",
            "type": "number"
          },
          "creator_id": {
            "description": "Quote creator id.",
            "type": "integer"
          },
          "creator_type": {
            "description": "Quote creator type.",
            "type": "integer"
          },
          "deleted_sku": {
            "description": "Deleted products sku.",
            "type": "string"
          },
          "email_notification_status": {
            "description": "Email notification status.",
            "type": "integer"
          },
          "expiration_period": {
            "description": "Expiration period.",
            "type": "string"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/negotiable-quote-data-negotiable-quote-extension-interface"
          },
          "has_unconfirmed_changes": {
            "description": "Has unconfirmed changes.",
            "type": "boolean"
          },
          "is_address_draft": {
            "description": "Is address draft.",
            "type": "boolean"
          },
          "is_customer_price_changed": {
            "description": "Customer price changes.",
            "type": "boolean"
          },
          "is_regular_quote": {
            "description": "Is regular quote.",
            "type": "boolean"
          },
          "is_shipping_tax_changed": {
            "description": "Shipping tax changes.",
            "type": "boolean"
          },
          "negotiated_price_type": {
            "description": "Negotiated price type.",
            "type": "integer"
          },
          "negotiated_price_value": {
            "description": "Negotiated price value.",
            "type": "number"
          },
          "negotiated_total_price": {
            "description": "Quote negotiated total price.",
            "type": "number"
          },
          "notifications": {
            "description": "Quote notifications.",
            "type": "integer"
          },
          "original_total_price": {
            "description": "Quote original total price.",
            "type": "number"
          },
          "quote_id": {
            "description": "Negotiable quote ID.",
            "type": "integer"
          },
          "quote_name": {
            "description": "Negotiable quote name.",
            "type": "string"
          },
          "shipping_price": {
            "description": "Proposed shipping price.",
            "type": "number"
          },
          "status": {
            "description": "Negotiable quote status.",
            "type": "string"
          }
        },
        "required": [
          "quote_id",
          "is_regular_quote",
          "status",
          "negotiated_price_type",
          "negotiated_price_value",
          "shipping_price",
          "quote_name",
          "expiration_period",
          "email_notification_status",
          "has_unconfirmed_changes",
          "is_shipping_tax_changed",
          "is_customer_price_changed",
          "notifications",
          "applied_rule_ids",
          "is_address_draft",
          "deleted_sku",
          "creator_id",
          "creator_type"
        ],
        "type": "object"
      },
      "negotiable-quote-data-negotiable-quote-item-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\NegotiableQuote\\Api\\Data\\NegotiableQuoteItemInterface",
        "type": "object"
      },
      "negotiable-quote-data-negotiable-quote-item-interface": {
        "description": "Interface CompanyQuoteConfigInterface",
        "properties": {
          "extension_attributes": {
            "$ref": "#/components/schemas/negotiable-quote-data-negotiable-quote-item-extension-interface"
          },
          "item_id": {
            "description": "Quote item id",
            "type": "integer"
          },
          "original_discount_amount": {
            "description": "Quote item original discount amount",
            "type": "number"
          },
          "original_price": {
            "description": "Quote item original price",
            "type": "number"
          },
          "original_tax_amount": {
            "description": "Quote item original tax amount",
            "type": "number"
          }
        },
        "required": [
          "item_id",
          "original_price",
          "original_tax_amount",
          "original_discount_amount"
        ],
        "type": "object"
      },
      "negotiable-quote-data-negotiable-quote-item-totals-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\NegotiableQuote\\Api\\Data\\NegotiableQuoteItemTotalsInterface",
        "type": "object"
      },
      "negotiable-quote-data-negotiable-quote-item-totals-interface": {
        "description": "Extension attribute for quote item totals model.",
        "properties": {
          "base_cart_price": {
            "description": "Cart price for quote item in base currency.",
            "type": "number"
          },
          "base_cart_price_incl_tax": {
            "description": "Cart price with included tax for quote item in base currency.",
            "type": "number"
          },
          "base_cart_tax": {
            "description": "Tax from catalog price for quote item in base currency.",
            "type": "number"
          },
          "base_catalog_price": {
            "description": "Catalog price for quote item in base currency.",
            "type": "number"
          },
          "base_catalog_price_incl_tax": {
            "description": "Catalog price with included tax for quote item in base currency.",
            "type": "number"
          },
          "cart_price": {
            "description": "Cart price for quote item.",
            "type": "number"
          },
          "cart_price_incl_tax": {
            "description": "Cart price with included tax for quote item.",
            "type": "number"
          },
          "cart_tax": {
            "description": "Tax from catalog price for quote item.",
            "type": "number"
          },
          "catalog_price": {
            "description": "Catalog price for quote item.",
            "type": "number"
          },
          "catalog_price_incl_tax": {
            "description": "Catalog price with included tax for quote item.",
            "type": "number"
          },
          "cost": {
            "description": "Cost for quote item.",
            "type": "number"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/negotiable-quote-data-negotiable-quote-item-totals-extension-interface"
          }
        },
        "required": [
          "cost",
          "catalog_price",
          "base_catalog_price",
          "catalog_price_incl_tax",
          "base_catalog_price_incl_tax",
          "cart_price",
          "base_cart_price",
          "cart_tax",
          "base_cart_tax",
          "cart_price_incl_tax",
          "base_cart_price_incl_tax"
        ],
        "type": "object"
      },
      "negotiable-quote-data-negotiable-quote-totals-interface": {
        "description": "Extension attribute for quote totals model.",
        "properties": {
          "base_cost_total": {
            "description": "Total cost for quote in base currency.",
            "type": "number"
          },
          "base_original_price_incl_tax": {
            "description": "Original price with included tax for quote in base currency.",
            "type": "number"
          },
          "base_original_tax": {
            "description": "Original tax amount for quote in base currency.",
            "type": "number"
          },
          "base_original_total": {
            "description": "Original quote total in base currency.",
            "type": "number"
          },
          "base_to_quote_rate": {
            "description": "Base currency to quote currency rate.",
            "type": "number"
          },
          "cost_total": {
            "description": "Total cost for quote.",
            "type": "number"
          },
          "created_at": {
            "description": "The cart creation date and time.",
            "type": "string"
          },
          "customer_group": {
            "description": "Customer group id.",
            "type": "integer"
          },
          "items_count": {
            "description": "The number of different items or products in the cart.",
            "type": "integer"
          },
          "negotiated_price_type": {
            "description": "Negotiable quote type.",
            "type": "integer"
          },
          "negotiated_price_value": {
            "description": "Negotiable price value for quote.",
            "type": "number"
          },
          "original_price_incl_tax": {
            "description": "Original price with included tax for quote.",
            "type": "number"
          },
          "original_tax": {
            "description": "Original tax amount for quote.",
            "type": "number"
          },
          "original_total": {
            "description": "Original quote total.",
            "type": "number"
          },
          "quote_status": {
            "description": "Negotiable quote status.",
            "type": "string"
          },
          "updated_at": {
            "description": "The cart last update date and time.",
            "type": "string"
          }
        },
        "required": [
          "items_count",
          "quote_status",
          "created_at",
          "updated_at",
          "customer_group",
          "base_to_quote_rate",
          "cost_total",
          "base_cost_total",
          "original_total",
          "base_original_total",
          "original_tax",
          "base_original_tax",
          "original_price_incl_tax",
          "base_original_price_incl_tax",
          "negotiated_price_type",
          "negotiated_price_value"
        ],
        "type": "object"
      },
      "payment-data-payment-additional-info-interface": {
        "description": "Payment additional info interface.",
        "properties": {
          "key": {
            "description": "Object key",
            "type": "string"
          },
          "value": {
            "description": "Object value",
            "type": "string"
          }
        },
        "required": [
          "key",
          "value"
        ],
        "type": "object"
      },
      "quote-data-address-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\Quote\\Api\\Data\\AddressInterface",
        "properties": {
          "checkout_fields": {
            "items": {
              "$ref": "#/components/schemas/framework-attribute-interface"
            },
            "type": "array"
          },
          "gift_registry_id": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "quote-data-address-interface": {
        "description": "Interface AddressInterface",
        "properties": {
          "city": {
            "description": "City name",
            "type": "string"
          },
          "company": {
            "description": "Company",
            "type": "string"
          },
          "country_id": {
            "description": "Country id",
            "type": "string"
          },
          "custom_attributes": {
            "description": "Custom attributes values.",
            "items": {
              "$ref": "#/components/schemas/framework-attribute-interface"
            },
            "type": "array"
          },
          "customer_address_id": {
            "description": "Customer address id",
            "type": "integer"
          },
          "customer_id": {
            "description": "Customer id",
            "type": "integer"
          },
          "email": {
            "description": "Billing/shipping email",
            "type": "string"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/quote-data-address-extension-interface"
          },
          "fax": {
            "description": "Fax number",
            "type": "string"
          },
          "firstname": {
            "description": "First name",
            "type": "string"
          },
          "id": {
            "description": "Id",
            "type": "integer"
          },
          "lastname": {
            "description": "Last name",
            "type": "string"
          },
          "middlename": {
            "description": "Middle name",
            "type": "string"
          },
          "postcode": {
            "description": "Postcode",
            "type": "string"
          },
          "prefix": {
            "description": "Prefix",
            "type": "string"
          },
          "region": {
            "description": "Region name",
            "type": "string"
          },
          "region_code": {
            "description": "Region code",
            "type": "string"
          },
          "region_id": {
            "description": "Region id",
            "type": "integer"
          },
          "same_as_billing": {
            "description": "Same as billing flag",
            "type": "integer"
          },
          "save_in_address_book": {
            "description": "Save in address book flag",
            "type": "integer"
          },
          "street": {
            "description": "Street",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "suffix": {
            "description": "Suffix",
            "type": "string"
          },
          "telephone": {
            "description": "Telephone number",
            "type": "string"
          },
          "vat_id": {
            "description": "Vat id",
            "type": "string"
          }
        },
        "required": [
          "region",
          "region_id",
          "region_code",
          "country_id",
          "street",
          "telephone",
          "postcode",
          "city",
          "firstname",
          "lastname",
          "email"
        ],
        "type": "object"
      },
      "quote-data-cart-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\Quote\\Api\\Data\\CartInterface",
        "properties": {
          "amazon_order_reference_id": {
            "type": "string"
          },
          "negotiable_quote": {
            "$ref": "#/components/schemas/negotiable-quote-data-negotiable-quote-interface"
          },
          "shipping_assignments": {
            "items": {
              "$ref": "#/components/schemas/quote-data-shipping-assignment-interface"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "quote-data-cart-interface": {
        "description": "Interface CartInterface",
        "properties": {
          "billing_address": {
            "$ref": "#/components/schemas/quote-data-address-interface"
          },
          "converted_at": {
            "description": "Cart conversion date and time. Otherwise, null.",
            "type": "string"
          },
          "created_at": {
            "description": "Cart creation date and time. Otherwise, null.",
            "type": "string"
          },
          "currency": {
            "$ref": "#/components/schemas/quote-data-currency-interface"
          },
          "customer": {
            "$ref": "#/components/schemas/customer-data-customer-interface"
          },
          "customer_is_guest": {
            "description": "For guest customers, false for logged in customers",
            "type": "boolean"
          },
          "customer_note": {
            "description": "Notice text",
            "type": "string"
          },
          "customer_note_notify": {
            "description": "Customer notification flag",
            "type": "boolean"
          },
          "customer_tax_class_id": {
            "description": "Customer tax class ID.",
            "type": "integer"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/quote-data-cart-extension-interface"
          },
          "id": {
            "description": "Cart/quote ID.",
            "type": "integer"
          },
          "is_active": {
            "description": "Active status flag value. Otherwise, null.",
            "type": "boolean"
          },
          "is_virtual": {
            "description": "Virtual flag value. Otherwise, null.",
            "type": "boolean"
          },
          "items": {
            "description": "Array of items. Otherwise, null.",
            "items": {
              "$ref": "#/components/schemas/quote-data-cart-item-interface"
            },
            "type": "array"
          },
          "items_count": {
            "description": "Number of different items or products in the cart. Otherwise, null.",
            "type": "integer"
          },
          "items_qty": {
            "description": "Total quantity of all cart items. Otherwise, null.",
            "type": "number"
          },
          "orig_order_id": {
            "description": "Original order ID. Otherwise, null.",
            "type": "integer"
          },
          "reserved_order_id": {
            "description": "Reserved order ID. Otherwise, null.",
            "type": "string"
          },
          "store_id": {
            "description": "Store identifier",
            "type": "integer"
          },
          "updated_at": {
            "description": "Cart last update date and time. Otherwise, null.",
            "type": "string"
          }
        },
        "required": [
          "id",
          "customer",
          "store_id"
        ],
        "type": "object"
      },
      "quote-data-cart-item-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\Quote\\Api\\Data\\CartItemInterface",
        "properties": {
          "negotiable_quote_item": {
            "$ref": "#/components/schemas/negotiable-quote-data-negotiable-quote-item-interface"
          }
        },
        "type": "object"
      },
      "quote-data-cart-item-interface": {
        "description": "Interface CartItemInterface",
        "properties": {
          "extension_attributes": {
            "$ref": "#/components/schemas/quote-data-cart-item-extension-interface"
          },
          "item_id": {
            "description": "Item ID. Otherwise, null.",
            "type": "integer"
          },
          "name": {
            "description": "Product name. Otherwise, null.",
            "type": "string"
          },
          "price": {
            "description": "Product price. Otherwise, null.",
            "type": "number"
          },
          "product_option": {
            "$ref": "#/components/schemas/quote-data-product-option-interface"
          },
          "product_type": {
            "description": "Product type. Otherwise, null.",
            "type": "string"
          },
          "qty": {
            "description": "Product quantity.",
            "type": "number"
          },
          "quote_id": {
            "description": "Quote id.",
            "type": "string"
          },
          "sku": {
            "description": "Product SKU. Otherwise, null.",
            "type": "string"
          }
        },
        "required": [
          "qty",
          "quote_id"
        ],
        "type": "object"
      },
      "quote-data-cart-search-results-interface": {
        "description": "Interface CartSearchResultsInterface",
        "properties": {
          "items": {
            "description": "Carts list.",
            "items": {
              "$ref": "#/components/schemas/quote-data-cart-interface"
            },
            "type": "array"
          },
          "search_criteria": {
            "$ref": "#/components/schemas/framework-search-criteria-interface"
          },
          "total_count": {
            "description": "Total count.",
            "type": "integer"
          }
        },
        "required": [
          "items",
          "search_criteria",
          "total_count"
        ],
        "type": "object"
      },
      "quote-data-currency-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\Quote\\Api\\Data\\CurrencyInterface",
        "type": "object"
      },
      "quote-data-currency-interface": {
        "description": "Interface CurrencyInterface",
        "properties": {
          "base_currency_code": {
            "description": "Base currency code",
            "type": "string"
          },
          "base_to_global_rate": {
            "description": "Base currency to global currency rate",
            "type": "number"
          },
          "base_to_quote_rate": {
            "description": "Base currency to quote currency rate",
            "type": "number"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/quote-data-currency-extension-interface"
          },
          "global_currency_code": {
            "description": "Global currency code",
            "type": "string"
          },
          "quote_currency_code": {
            "description": "Quote currency code",
            "type": "string"
          },
          "store_currency_code": {
            "description": "Store currency code",
            "type": "string"
          },
          "store_to_base_rate": {
            "description": "Store currency to base currency rate",
            "type": "number"
          },
          "store_to_quote_rate": {
            "description": "Store currency to quote currency rate",
            "type": "number"
          }
        },
        "type": "object"
      },
      "quote-data-payment-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\Quote\\Api\\Data\\PaymentInterface",
        "properties": {
          "agreement_ids": {
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "quote-data-payment-interface": {
        "description": "Interface PaymentInterface",
        "properties": {
          "additional_data": {
            "description": "Payment additional details",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/quote-data-payment-extension-interface"
          },
          "method": {
            "description": "Payment method code",
            "type": "string"
          },
          "po_number": {
            "description": "Purchase order number",
            "type": "string"
          }
        },
        "required": [
          "method"
        ],
        "type": "object"
      },
      "quote-data-payment-method-interface": {
        "description": "Interface PaymentMethodInterface",
        "properties": {
          "code": {
            "description": "Payment method code",
            "type": "string"
          },
          "title": {
            "description": "Payment method title",
            "type": "string"
          }
        },
        "required": [
          "code",
          "title"
        ],
        "type": "object"
      },
      "quote-data-product-option-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\Quote\\Api\\Data\\ProductOptionInterface",
        "properties": {
          "bundle_options": {
            "items": {
              "$ref": "#/components/schemas/bundle-data-bundle-option-interface"
            },
            "type": "array"
          },
          "configurable_item_options": {
            "items": {
              "$ref": "#/components/schemas/configurable-product-data-configurable-item-option-value-interface"
            },
            "type": "array"
          },
          "custom_options": {
            "items": {
              "$ref": "#/components/schemas/catalog-data-custom-option-interface"
            },
            "type": "array"
          },
          "downloadable_option": {
            "$ref": "#/components/schemas/downloadable-data-downloadable-option-interface"
          },
          "giftcard_item_option": {
            "$ref": "#/components/schemas/gift-card-data-gift-card-option-interface"
          }
        },
        "type": "object"
      },
      "quote-data-product-option-interface": {
        "description": "Product option interface",
        "properties": {
          "extension_attributes": {
            "$ref": "#/components/schemas/quote-data-product-option-extension-interface"
          }
        },
        "type": "object"
      },
      "quote-data-shipping-assignment-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\Quote\\Api\\Data\\ShippingAssignmentInterface",
        "type": "object"
      },
      "quote-data-shipping-assignment-interface": {
        "description": "Interface ShippingAssignmentInterface",
        "properties": {
          "extension_attributes": {
            "$ref": "#/components/schemas/quote-data-shipping-assignment-extension-interface"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/quote-data-cart-item-interface"
            },
            "type": "array"
          },
          "shipping": {
            "$ref": "#/components/schemas/quote-data-shipping-interface"
          }
        },
        "required": [
          "shipping",
          "items"
        ],
        "type": "object"
      },
      "quote-data-shipping-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\Quote\\Api\\Data\\ShippingInterface",
        "type": "object"
      },
      "quote-data-shipping-interface": {
        "description": "Interface ShippingInterface",
        "properties": {
          "address": {
            "$ref": "#/components/schemas/quote-data-address-interface"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/quote-data-shipping-extension-interface"
          },
          "method": {
            "description": "Shipping method",
            "type": "string"
          }
        },
        "required": [
          "address",
          "method"
        ],
        "type": "object"
      },
      "quote-data-shipping-method-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\Quote\\Api\\Data\\ShippingMethodInterface",
        "type": "object"
      },
      "quote-data-shipping-method-interface": {
        "description": "Interface ShippingMethodInterface",
        "properties": {
          "amount": {
            "description": "Shipping amount in store currency.",
            "type": "number"
          },
          "available": {
            "description": "The value of the availability flag for the current shipping method.",
            "type": "boolean"
          },
          "base_amount": {
            "description": "Shipping amount in base currency.",
            "type": "number"
          },
          "carrier_code": {
            "description": "Shipping carrier code.",
            "type": "string"
          },
          "carrier_title": {
            "description": "Shipping carrier title. Otherwise, null.",
            "type": "string"
          },
          "error_message": {
            "description": "Shipping Error message.",
            "type": "string"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/quote-data-shipping-method-extension-interface"
          },
          "method_code": {
            "description": "Shipping method code.",
            "type": "string"
          },
          "method_title": {
            "description": "Shipping method title. Otherwise, null.",
            "type": "string"
          },
          "price_excl_tax": {
            "description": "Shipping price excl tax.",
            "type": "number"
          },
          "price_incl_tax": {
            "description": "Shipping price incl tax.",
            "type": "number"
          }
        },
        "required": [
          "carrier_code",
          "method_code",
          "amount",
          "base_amount",
          "available",
          "error_message",
          "price_excl_tax",
          "price_incl_tax"
        ],
        "type": "object"
      },
      "quote-data-total-segment-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\Quote\\Api\\Data\\TotalSegmentInterface",
        "properties": {
          "gift_cards": {
            "type": "string"
          },
          "gw_add_card": {
            "type": "string"
          },
          "gw_allow_gift_receipt": {
            "type": "string"
          },
          "gw_base_price": {
            "type": "string"
          },
          "gw_base_price_incl_tax": {
            "type": "string"
          },
          "gw_base_tax_amount": {
            "type": "string"
          },
          "gw_card_base_price": {
            "type": "string"
          },
          "gw_card_base_price_incl_tax": {
            "type": "string"
          },
          "gw_card_base_tax_amount": {
            "type": "string"
          },
          "gw_card_price": {
            "type": "string"
          },
          "gw_card_price_incl_tax": {
            "type": "string"
          },
          "gw_card_tax_amount": {
            "type": "string"
          },
          "gw_item_ids": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "gw_items_base_price": {
            "type": "string"
          },
          "gw_items_base_price_incl_tax": {
            "type": "string"
          },
          "gw_items_base_tax_amount": {
            "type": "string"
          },
          "gw_items_price": {
            "type": "string"
          },
          "gw_items_price_incl_tax": {
            "type": "string"
          },
          "gw_items_tax_amount": {
            "type": "string"
          },
          "gw_order_id": {
            "type": "string"
          },
          "gw_price": {
            "type": "string"
          },
          "gw_price_incl_tax": {
            "type": "string"
          },
          "gw_tax_amount": {
            "type": "string"
          },
          "tax_grandtotal_details": {
            "items": {
              "$ref": "#/components/schemas/tax-data-grand-total-details-interface"
            },
            "type": "array"
          },
          "vertex_tax_calculation_messages": {
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "quote-data-total-segment-interface": {
        "description": "Interface TotalsInterface",
        "properties": {
          "area": {
            "description": "Display area code.",
            "type": "string"
          },
          "code": {
            "description": "Code",
            "type": "string"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/quote-data-total-segment-extension-interface"
          },
          "title": {
            "description": "Total title",
            "type": "string"
          },
          "value": {
            "description": "Total value",
            "type": "number"
          }
        },
        "required": [
          "code",
          "value"
        ],
        "type": "object"
      },
      "quote-data-totals-additional-data-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\Quote\\Api\\Data\\TotalsAdditionalDataInterface",
        "properties": {
          "gift_messages": {
            "items": {
              "$ref": "#/components/schemas/gift-message-data-message-interface"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "quote-data-totals-additional-data-interface": {
        "description": "Additional data for totals collection.",
        "properties": {
          "custom_attributes": {
            "description": "Custom attributes values.",
            "items": {
              "$ref": "#/components/schemas/framework-attribute-interface"
            },
            "type": "array"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/quote-data-totals-additional-data-extension-interface"
          }
        },
        "type": "object"
      },
      "quote-data-totals-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\Quote\\Api\\Data\\TotalsInterface",
        "properties": {
          "base_customer_balance_amount": {
            "type": "number"
          },
          "base_reward_currency_amount": {
            "type": "number"
          },
          "coupon_label": {
            "type": "string"
          },
          "customer_balance_amount": {
            "type": "number"
          },
          "negotiable_quote_totals": {
            "$ref": "#/components/schemas/negotiable-quote-data-negotiable-quote-totals-interface"
          },
          "reward_currency_amount": {
            "type": "number"
          },
          "reward_points_balance": {
            "type": "number"
          }
        },
        "type": "object"
      },
      "quote-data-totals-interface": {
        "description": "Interface TotalsInterface",
        "properties": {
          "base_currency_code": {
            "description": "Base currency code",
            "type": "string"
          },
          "base_discount_amount": {
            "description": "Discount amount in base currency",
            "type": "number"
          },
          "base_grand_total": {
            "description": "Grand total in base currency",
            "type": "number"
          },
          "base_shipping_amount": {
            "description": "Shipping amount in base currency",
            "type": "number"
          },
          "base_shipping_discount_amount": {
            "description": "Shipping discount amount in base currency",
            "type": "number"
          },
          "base_shipping_incl_tax": {
            "description": "Shipping including tax in base currency",
            "type": "number"
          },
          "base_shipping_tax_amount": {
            "description": "Shipping tax amount in base currency",
            "type": "number"
          },
          "base_subtotal": {
            "description": "Subtotal in base currency",
            "type": "number"
          },
          "base_subtotal_incl_tax": {
            "description": "Subtotal including tax in base currency",
            "type": "number"
          },
          "base_subtotal_with_discount": {
            "description": "Subtotal in base currency with applied discount",
            "type": "number"
          },
          "base_tax_amount": {
            "description": "Tax amount in base currency",
            "type": "number"
          },
          "coupon_code": {
            "description": "Applied coupon code",
            "type": "string"
          },
          "discount_amount": {
            "description": "Discount amount in quote currency",
            "type": "number"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/quote-data-totals-extension-interface"
          },
          "grand_total": {
            "description": "Grand total in quote currency",
            "type": "number"
          },
          "items": {
            "description": "Totals by items",
            "items": {
              "$ref": "#/components/schemas/quote-data-totals-item-interface"
            },
            "type": "array"
          },
          "items_qty": {
            "description": "Items qty",
            "type": "integer"
          },
          "quote_currency_code": {
            "description": "Quote currency code",
            "type": "string"
          },
          "shipping_amount": {
            "description": "Shipping amount in quote currency",
            "type": "number"
          },
          "shipping_discount_amount": {
            "description": "Shipping discount amount in quote currency",
            "type": "number"
          },
          "shipping_incl_tax": {
            "description": "Shipping including tax in quote currency",
            "type": "number"
          },
          "shipping_tax_amount": {
            "description": "Shipping tax amount in quote currency",
            "type": "number"
          },
          "subtotal": {
            "description": "Subtotal in quote currency",
            "type": "number"
          },
          "subtotal_incl_tax": {
            "description": "Subtotal including tax in quote currency",
            "type": "number"
          },
          "subtotal_with_discount": {
            "description": "Subtotal in quote currency with applied discount",
            "type": "number"
          },
          "tax_amount": {
            "description": "Tax amount in quote currency",
            "type": "number"
          },
          "total_segments": {
            "description": "Dynamically calculated totals",
            "items": {
              "$ref": "#/components/schemas/quote-data-total-segment-interface"
            },
            "type": "array"
          },
          "weee_tax_applied_amount": {
            "description": "Item weee tax applied amount in quote currency.",
            "type": "number"
          }
        },
        "required": [
          "weee_tax_applied_amount",
          "total_segments"
        ],
        "type": "object"
      },
      "quote-data-totals-item-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\Quote\\Api\\Data\\TotalsItemInterface",
        "properties": {
          "negotiable_quote_item_totals": {
            "$ref": "#/components/schemas/negotiable-quote-data-negotiable-quote-item-totals-interface"
          }
        },
        "type": "object"
      },
      "quote-data-totals-item-interface": {
        "description": "Interface TotalsItemInterface",
        "properties": {
          "base_discount_amount": {
            "description": "Discount amount in base currency. Otherwise, null.",
            "type": "number"
          },
          "base_price": {
            "description": "Item price in base currency.",
            "type": "number"
          },
          "base_price_incl_tax": {
            "description": "Price including tax in base currency. Otherwise, null.",
            "type": "number"
          },
          "base_row_total": {
            "description": "Row total in base currency.",
            "type": "number"
          },
          "base_row_total_incl_tax": {
            "description": "Row total including tax in base currency. Otherwise, null.",
            "type": "number"
          },
          "base_tax_amount": {
            "description": "Tax amount in base currency. Otherwise, null.",
            "type": "number"
          },
          "discount_amount": {
            "description": "Discount amount in quote currency. Otherwise, null.",
            "type": "number"
          },
          "discount_percent": {
            "description": "Discount percent. Otherwise, null.",
            "type": "number"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/quote-data-totals-item-extension-interface"
          },
          "item_id": {
            "description": "Item id",
            "type": "integer"
          },
          "name": {
            "description": "Product name. Otherwise, null.",
            "type": "string"
          },
          "options": {
            "description": "Item price in quote currency.",
            "type": "string"
          },
          "price": {
            "description": "Item price in quote currency.",
            "type": "number"
          },
          "price_incl_tax": {
            "description": "Price including tax in quote currency. Otherwise, null.",
            "type": "number"
          },
          "qty": {
            "description": "Item quantity.",
            "type": "number"
          },
          "row_total": {
            "description": "Row total in quote currency.",
            "type": "number"
          },
          "row_total_incl_tax": {
            "description": "Row total including tax in quote currency. Otherwise, null.",
            "type": "number"
          },
          "row_total_with_discount": {
            "description": "Row total with discount in quote currency. Otherwise, null.",
            "type": "number"
          },
          "tax_amount": {
            "description": "Tax amount in quote currency. Otherwise, null.",
            "type": "number"
          },
          "tax_percent": {
            "description": "Tax percent. Otherwise, null.",
            "type": "number"
          },
          "weee_tax_applied": {
            "description": "Item weee tax applied in quote currency.",
            "type": "string"
          },
          "weee_tax_applied_amount": {
            "description": "Item weee tax applied amount in quote currency.",
            "type": "number"
          }
        },
        "required": [
          "item_id",
          "price",
          "base_price",
          "qty",
          "row_total",
          "base_row_total",
          "options",
          "weee_tax_applied_amount",
          "weee_tax_applied"
        ],
        "type": "object"
      },
      "requisition-list-data-requisition-list-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\RequisitionList\\Api\\Data\\RequisitionListInterface",
        "type": "object"
      },
      "requisition-list-data-requisition-list-interface": {
        "description": "Interface RequisitionListInterface",
        "properties": {
          "customer_id": {
            "description": "Customer ID",
            "type": "integer"
          },
          "description": {
            "description": "Requisition List Description",
            "type": "string"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/requisition-list-data-requisition-list-extension-interface"
          },
          "id": {
            "description": "Requisition List ID",
            "type": "integer"
          },
          "items": {
            "description": "Requisition List Items",
            "items": {
              "$ref": "#/components/schemas/requisition-list-data-requisition-list-item-interface"
            },
            "type": "array"
          },
          "name": {
            "description": "Requisition List Name",
            "type": "string"
          },
          "updated_at": {
            "description": "Requisition List Update Time",
            "type": "string"
          }
        },
        "required": [
          "id",
          "customer_id",
          "name",
          "updated_at",
          "description",
          "items"
        ],
        "type": "object"
      },
      "requisition-list-data-requisition-list-item-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\RequisitionList\\Api\\Data\\RequisitionListItemInterface",
        "type": "object"
      },
      "requisition-list-data-requisition-list-item-interface": {
        "description": "Interface RequisitionListItemInterface",
        "properties": {
          "added_at": {
            "description": "Added_at value.",
            "type": "string"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/requisition-list-data-requisition-list-item-extension-interface"
          },
          "id": {
            "description": "Requisition List ID.",
            "type": "integer"
          },
          "options": {
            "description": "Requisition list item options.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "qty": {
            "description": "Product Qty.",
            "type": "number"
          },
          "requisition_list_id": {
            "description": "Requisition List ID.",
            "type": "integer"
          },
          "sku": {
            "description": "Product SKU.",
            "type": "string"
          },
          "store_id": {
            "description": "Store ID.",
            "type": "integer"
          }
        },
        "required": [
          "id",
          "sku",
          "requisition_list_id",
          "qty",
          "options",
          "store_id",
          "added_at"
        ],
        "type": "object"
      },
      "rma-data-comment-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\Rma\\Api\\Data\\CommentInterface",
        "type": "object"
      },
      "rma-data-comment-interface": {
        "description": "Interface CommentInterface",
        "properties": {
          "admin": {
            "description": "Is_admin",
            "type": "boolean"
          },
          "comment": {
            "description": "Comment",
            "type": "string"
          },
          "created_at": {
            "description": "Created_at",
            "type": "string"
          },
          "custom_attributes": {
            "description": "Custom attributes values.",
            "items": {
              "$ref": "#/components/schemas/framework-attribute-interface"
            },
            "type": "array"
          },
          "customer_notified": {
            "description": "Is_customer_notified",
            "type": "boolean"
          },
          "entity_id": {
            "description": "Entity_id",
            "type": "integer"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/rma-data-comment-extension-interface"
          },
          "rma_entity_id": {
            "description": "Rma Id",
            "type": "integer"
          },
          "status": {
            "description": "Status",
            "type": "string"
          },
          "visible_on_front": {
            "description": "Is_visible_on_front",
            "type": "boolean"
          }
        },
        "required": [
          "comment",
          "rma_entity_id",
          "created_at",
          "entity_id",
          "customer_notified",
          "visible_on_front",
          "status",
          "admin"
        ],
        "type": "object"
      },
      "rma-data-comment-search-result-interface": {
        "description": "Interface CommentSearchResultInterface",
        "properties": {
          "items": {
            "description": "Rma Status History list",
            "items": {
              "$ref": "#/components/schemas/rma-data-comment-interface"
            },
            "type": "array"
          },
          "search_criteria": {
            "$ref": "#/components/schemas/framework-search-criteria-interface"
          },
          "total_count": {
            "description": "Total count.",
            "type": "integer"
          }
        },
        "required": [
          "items",
          "search_criteria",
          "total_count"
        ],
        "type": "object"
      },
      "rma-data-item-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\Rma\\Api\\Data\\ItemInterface",
        "type": "object"
      },
      "rma-data-item-interface": {
        "description": "Interface CategoryInterface",
        "properties": {
          "condition": {
            "description": "Condition",
            "type": "string"
          },
          "entity_id": {
            "description": "Id",
            "type": "integer"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/rma-data-item-extension-interface"
          },
          "order_item_id": {
            "description": "Order_item_id",
            "type": "integer"
          },
          "qty_approved": {
            "description": "Qty_approved",
            "type": "integer"
          },
          "qty_authorized": {
            "description": "Qty_authorized",
            "type": "integer"
          },
          "qty_requested": {
            "description": "Qty_requested",
            "type": "integer"
          },
          "qty_returned": {
            "description": "Qty_returned",
            "type": "integer"
          },
          "reason": {
            "description": "Reason",
            "type": "string"
          },
          "resolution": {
            "description": "Resolution",
            "type": "string"
          },
          "rma_entity_id": {
            "description": "RMA id",
            "type": "integer"
          },
          "status": {
            "description": "Status",
            "type": "string"
          }
        },
        "required": [
          "entity_id",
          "rma_entity_id",
          "order_item_id",
          "qty_requested",
          "qty_authorized",
          "qty_approved",
          "qty_returned",
          "reason",
          "condition",
          "resolution",
          "status"
        ],
        "type": "object"
      },
      "rma-data-rma-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\Rma\\Api\\Data\\RmaInterface",
        "type": "object"
      },
      "rma-data-rma-interface": {
        "description": "Interface RmaInterface",
        "properties": {
          "comments": {
            "description": "Comments list",
            "items": {
              "$ref": "#/components/schemas/rma-data-comment-interface"
            },
            "type": "array"
          },
          "custom_attributes": {
            "description": "Custom attributes values.",
            "items": {
              "$ref": "#/components/schemas/framework-attribute-interface"
            },
            "type": "array"
          },
          "customer_custom_email": {
            "description": "Customer_custom_email",
            "type": "string"
          },
          "customer_id": {
            "description": "Customer_id",
            "type": "integer"
          },
          "date_requested": {
            "description": "Date_requested",
            "type": "string"
          },
          "entity_id": {
            "description": "Entity_id",
            "type": "integer"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/rma-data-rma-extension-interface"
          },
          "increment_id": {
            "description": "Entity_id",
            "type": "string"
          },
          "items": {
            "description": "Items",
            "items": {
              "$ref": "#/components/schemas/rma-data-item-interface"
            },
            "type": "array"
          },
          "order_id": {
            "description": "Order_id",
            "type": "integer"
          },
          "order_increment_id": {
            "description": "Order_increment_id",
            "type": "string"
          },
          "status": {
            "description": "Status",
            "type": "string"
          },
          "store_id": {
            "description": "Store_id",
            "type": "integer"
          },
          "tracks": {
            "description": "Tracks list",
            "items": {
              "$ref": "#/components/schemas/rma-data-track-interface"
            },
            "type": "array"
          }
        },
        "required": [
          "increment_id",
          "entity_id",
          "order_id",
          "order_increment_id",
          "store_id",
          "customer_id",
          "date_requested",
          "customer_custom_email",
          "items",
          "status",
          "comments",
          "tracks"
        ],
        "type": "object"
      },
      "rma-data-rma-search-result-interface": {
        "description": "Interface RmaSearchResultInterface",
        "properties": {
          "items": {
            "description": "Rma list",
            "items": {
              "$ref": "#/components/schemas/rma-data-rma-interface"
            },
            "type": "array"
          },
          "search_criteria": {
            "$ref": "#/components/schemas/framework-search-criteria-interface"
          },
          "total_count": {
            "description": "Total count.",
            "type": "integer"
          }
        },
        "required": [
          "items",
          "search_criteria",
          "total_count"
        ],
        "type": "object"
      },
      "rma-data-track-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\Rma\\Api\\Data\\TrackInterface",
        "type": "object"
      },
      "rma-data-track-interface": {
        "description": "Interface TrackInterface",
        "properties": {
          "carrier_code": {
            "description": "Carrier code",
            "type": "string"
          },
          "carrier_title": {
            "description": "Carrier title",
            "type": "string"
          },
          "entity_id": {
            "description": "Entity id",
            "type": "integer"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/rma-data-track-extension-interface"
          },
          "rma_entity_id": {
            "description": "Rma entity id",
            "type": "integer"
          },
          "track_number": {
            "description": "Track number",
            "type": "string"
          }
        },
        "required": [
          "entity_id",
          "rma_entity_id",
          "track_number",
          "carrier_title",
          "carrier_code"
        ],
        "type": "object"
      },
      "rma-data-track-search-result-interface": {
        "description": "Interface TrackSearchResultInterface",
        "properties": {
          "items": {
            "description": "Rma list",
            "items": {
              "$ref": "#/components/schemas/rma-data-track-interface"
            },
            "type": "array"
          },
          "search_criteria": {
            "$ref": "#/components/schemas/framework-search-criteria-interface"
          },
          "total_count": {
            "description": "Total count.",
            "type": "integer"
          }
        },
        "required": [
          "items",
          "search_criteria",
          "total_count"
        ],
        "type": "object"
      },
      "sales-data-creditmemo-comment-creation-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\Sales\\Api\\Data\\CreditmemoCommentCreationInterface",
        "type": "object"
      },
      "sales-data-creditmemo-comment-creation-interface": {
        "description": "Interface CreditmemoCommentCreationInterface",
        "properties": {
          "comment": {
            "description": "Comment.",
            "type": "string"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/sales-data-creditmemo-comment-creation-extension-interface"
          },
          "is_visible_on_front": {
            "description": "Is-visible-on-storefront flag value.",
            "type": "integer"
          }
        },
        "required": [
          "comment",
          "is_visible_on_front"
        ],
        "type": "object"
      },
      "sales-data-creditmemo-comment-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\Sales\\Api\\Data\\CreditmemoCommentInterface",
        "type": "object"
      },
      "sales-data-creditmemo-comment-interface": {
        "description": "Credit memo comment interface. After a customer places and pays for an order and an invoice has been issued, the merchant can create a credit memo to refund all or part of the amount paid for any returned or undelivered items. The memo restores funds to the customer account so that the customer can make future purchases. A credit memo usually includes comments that detail why the credit memo amount was credited to the customer.",
        "properties": {
          "comment": {
            "description": "Comment.",
            "type": "string"
          },
          "created_at": {
            "description": "Created-at timestamp.",
            "type": "string"
          },
          "entity_id": {
            "description": "Credit memo ID.",
            "type": "integer"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/sales-data-creditmemo-comment-extension-interface"
          },
          "is_customer_notified": {
            "description": "Is-customer-notified flag value.",
            "type": "integer"
          },
          "is_visible_on_front": {
            "description": "Is-visible-on-storefront flag value.",
            "type": "integer"
          },
          "parent_id": {
            "description": "Parent ID.",
            "type": "integer"
          }
        },
        "required": [
          "comment",
          "is_customer_notified",
          "is_visible_on_front",
          "parent_id"
        ],
        "type": "object"
      },
      "sales-data-creditmemo-comment-search-result-interface": {
        "description": "Credit memo comment search result interface. After a customer places and pays for an order and an invoice has been issued, the merchant can create a credit memo to refund all or part of the amount paid for any returned or undelivered items. The memo restores funds to the customer account so that the customer can make future purchases. A credit memo usually includes comments that detail why the credit memo amount was credited to the customer.",
        "properties": {
          "items": {
            "description": "Array of collection items.",
            "items": {
              "$ref": "#/components/schemas/sales-data-creditmemo-comment-interface"
            },
            "type": "array"
          },
          "search_criteria": {
            "$ref": "#/components/schemas/framework-search-criteria-interface"
          },
          "total_count": {
            "description": "Total count.",
            "type": "integer"
          }
        },
        "required": [
          "items",
          "search_criteria",
          "total_count"
        ],
        "type": "object"
      },
      "sales-data-creditmemo-creation-arguments-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\Sales\\Api\\Data\\CreditmemoCreationArgumentsInterface",
        "properties": {
          "return_to_stock_items": {
            "items": {
              "type": "integer"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "sales-data-creditmemo-creation-arguments-interface": {
        "description": "Interface CreditmemoCreationArgumentsInterface",
        "properties": {
          "adjustment_negative": {
            "description": "Credit memo negative adjustment.",
            "type": "number"
          },
          "adjustment_positive": {
            "description": "Credit memo positive adjustment.",
            "type": "number"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/sales-data-creditmemo-creation-arguments-extension-interface"
          },
          "shipping_amount": {
            "description": "Credit memo shipping amount.",
            "type": "number"
          }
        },
        "type": "object"
      },
      "sales-data-creditmemo-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\Sales\\Api\\Data\\CreditmemoInterface",
        "properties": {
          "base_customer_balance_amount": {
            "type": "number"
          },
          "base_gift_cards_amount": {
            "type": "number"
          },
          "customer_balance_amount": {
            "type": "number"
          },
          "gift_cards_amount": {
            "type": "number"
          },
          "gw_base_price": {
            "type": "string"
          },
          "gw_base_tax_amount": {
            "type": "string"
          },
          "gw_card_base_price": {
            "type": "string"
          },
          "gw_card_base_tax_amount": {
            "type": "string"
          },
          "gw_card_price": {
            "type": "string"
          },
          "gw_card_tax_amount": {
            "type": "string"
          },
          "gw_items_base_price": {
            "type": "string"
          },
          "gw_items_base_tax_amount": {
            "type": "string"
          },
          "gw_items_price": {
            "type": "string"
          },
          "gw_items_tax_amount": {
            "type": "string"
          },
          "gw_price": {
            "type": "string"
          },
          "gw_tax_amount": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "sales-data-creditmemo-interface": {
        "description": "Credit memo interface. After a customer places and pays for an order and an invoice has been issued, the merchant can create a credit memo to refund all or part of the amount paid for any returned or undelivered items. The memo restores funds to the customer account so that the customer can make future purchases.",
        "properties": {
          "adjustment": {
            "description": "Credit memo adjustment.",
            "type": "number"
          },
          "adjustment_negative": {
            "description": "Credit memo negative adjustment.",
            "type": "number"
          },
          "adjustment_positive": {
            "description": "Credit memo positive adjustment.",
            "type": "number"
          },
          "base_adjustment": {
            "description": "Credit memo base adjustment.",
            "type": "number"
          },
          "base_adjustment_negative": {
            "description": "Credit memo negative base adjustment.",
            "type": "number"
          },
          "base_adjustment_positive": {
            "description": "Credit memo positive base adjustment.",
            "type": "number"
          },
          "base_currency_code": {
            "description": "Credit memo base currency code.",
            "type": "string"
          },
          "base_discount_amount": {
            "description": "Credit memo base discount amount.",
            "type": "number"
          },
          "base_discount_tax_compensation_amount": {
            "description": "Credit memo base discount tax compensation amount.",
            "type": "number"
          },
          "base_grand_total": {
            "description": "Credit memo base grand total.",
            "type": "number"
          },
          "base_shipping_amount": {
            "description": "Credit memo base shipping amount.",
            "type": "number"
          },
          "base_shipping_discount_tax_compensation_amnt": {
            "description": "Credit memo base shipping discount tax compensation amount.",
            "type": "number"
          },
          "base_shipping_incl_tax": {
            "description": "Credit memo base shipping including tax.",
            "type": "number"
          },
          "base_shipping_tax_amount": {
            "description": "Credit memo base shipping tax amount.",
            "type": "number"
          },
          "base_subtotal": {
            "description": "Credit memo base subtotal.",
            "type": "number"
          },
          "base_subtotal_incl_tax": {
            "description": "Credit memo base subtotal including tax.",
            "type": "number"
          },
          "base_tax_amount": {
            "description": "Credit memo base tax amount.",
            "type": "number"
          },
          "base_to_global_rate": {
            "description": "Credit memo base-to-global rate.",
            "type": "number"
          },
          "base_to_order_rate": {
            "description": "Credit memo base-to-order rate.",
            "type": "number"
          },
          "billing_address_id": {
            "description": "Credit memo billing address ID.",
            "type": "integer"
          },
          "comments": {
            "description": "Array of any credit memo comments. Otherwise, null.",
            "items": {
              "$ref": "#/components/schemas/sales-data-creditmemo-comment-interface"
            },
            "type": "array"
          },
          "created_at": {
            "description": "Credit memo created-at timestamp.",
            "type": "string"
          },
          "creditmemo_status": {
            "description": "Credit memo status.",
            "type": "integer"
          },
          "discount_amount": {
            "description": "Credit memo discount amount.",
            "type": "number"
          },
          "discount_description": {
            "description": "Credit memo discount description.",
            "type": "string"
          },
          "discount_tax_compensation_amount": {
            "description": "Credit memo discount tax compensation amount.",
            "type": "number"
          },
          "email_sent": {
            "description": "Credit memo email sent flag value.",
            "type": "integer"
          },
          "entity_id": {
            "description": "Credit memo ID.",
            "type": "integer"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/sales-data-creditmemo-extension-interface"
          },
          "global_currency_code": {
            "description": "Credit memo global currency code.",
            "type": "string"
          },
          "grand_total": {
            "description": "Credit memo grand total.",
            "type": "number"
          },
          "increment_id": {
            "description": "Credit memo increment ID.",
            "type": "string"
          },
          "invoice_id": {
            "description": "Credit memo invoice ID.",
            "type": "integer"
          },
          "items": {
            "description": "Array of credit memo items.",
            "items": {
              "$ref": "#/components/schemas/sales-data-creditmemo-item-interface"
            },
            "type": "array"
          },
          "order_currency_code": {
            "description": "Credit memo order currency code.",
            "type": "string"
          },
          "order_id": {
            "description": "Credit memo order ID.",
            "type": "integer"
          },
          "shipping_address_id": {
            "description": "Credit memo shipping address ID.",
            "type": "integer"
          },
          "shipping_amount": {
            "description": "Credit memo shipping amount.",
            "type": "number"
          },
          "shipping_discount_tax_compensation_amount": {
            "description": "Credit memo shipping discount tax compensation amount.",
            "type": "number"
          },
          "shipping_incl_tax": {
            "description": "Credit memo shipping including tax.",
            "type": "number"
          },
          "shipping_tax_amount": {
            "description": "Credit memo shipping tax amount.",
            "type": "number"
          },
          "state": {
            "description": "Credit memo state.",
            "type": "integer"
          },
          "store_currency_code": {
            "description": "Credit memo store currency code.",
            "type": "string"
          },
          "store_id": {
            "description": "Credit memo store ID.",
            "type": "integer"
          },
          "store_to_base_rate": {
            "description": "Credit memo store-to-base rate.",
            "type": "number"
          },
          "store_to_order_rate": {
            "description": "Credit memo store-to-order rate.",
            "type": "number"
          },
          "subtotal": {
            "description": "Credit memo subtotal.",
            "type": "number"
          },
          "subtotal_incl_tax": {
            "description": "Credit memo subtotal including tax.",
            "type": "number"
          },
          "tax_amount": {
            "description": "Credit memo tax amount.",
            "type": "number"
          },
          "transaction_id": {
            "description": "Credit memo transaction ID.",
            "type": "string"
          },
          "updated_at": {
            "description": "Credit memo updated-at timestamp.",
            "type": "string"
          }
        },
        "required": [
          "order_id",
          "items"
        ],
        "type": "object"
      },
      "sales-data-creditmemo-item-creation-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\Sales\\Api\\Data\\CreditmemoItemCreationInterface",
        "type": "object"
      },
      "sales-data-creditmemo-item-creation-interface": {
        "description": "Interface CreditmemoItemCreationInterface",
        "properties": {
          "extension_attributes": {
            "$ref": "#/components/schemas/sales-data-creditmemo-item-creation-extension-interface"
          },
          "order_item_id": {
            "description": "Order item ID.",
            "type": "integer"
          },
          "qty": {
            "description": "Quantity.",
            "type": "number"
          }
        },
        "required": [
          "order_item_id",
          "qty"
        ],
        "type": "object"
      },
      "sales-data-creditmemo-item-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\Sales\\Api\\Data\\CreditmemoItemInterface",
        "properties": {
          "invoice_text_codes": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "tax_codes": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "vertex_tax_codes": {
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "sales-data-creditmemo-item-interface": {
        "description": "Credit memo item interface. After a customer places and pays for an order and an invoice has been issued, the merchant can create a credit memo to refund all or part of the amount paid for any returned or undelivered items. The memo restores funds to the customer account so that the customer can make future purchases. A credit memo item is an invoiced item for which a merchant creates a credit memo.",
        "properties": {
          "additional_data": {
            "description": "Additional data.",
            "type": "string"
          },
          "base_cost": {
            "description": "The base cost for a credit memo item.",
            "type": "number"
          },
          "base_discount_amount": {
            "description": "The base discount amount for a credit memo item.",
            "type": "number"
          },
          "base_discount_tax_compensation_amount": {
            "description": "The base discount tax compensation amount for a credit memo item.",
            "type": "number"
          },
          "base_price": {
            "description": "The base price for a credit memo item.",
            "type": "number"
          },
          "base_price_incl_tax": {
            "description": "Base price including tax.",
            "type": "number"
          },
          "base_row_total": {
            "description": "Base row total.",
            "type": "number"
          },
          "base_row_total_incl_tax": {
            "description": "Base row total including tax.",
            "type": "number"
          },
          "base_tax_amount": {
            "description": "Base tax amount.",
            "type": "number"
          },
          "base_weee_tax_applied_amount": {
            "description": "Base WEEE tax applied amount.",
            "type": "number"
          },
          "base_weee_tax_applied_row_amnt": {
            "description": "Base WEEE tax applied row amount.",
            "type": "number"
          },
          "base_weee_tax_disposition": {
            "description": "Base WEEE tax disposition.",
            "type": "number"
          },
          "base_weee_tax_row_disposition": {
            "description": "Base WEEE tax row disposition.",
            "type": "number"
          },
          "description": {
            "description": "Description.",
            "type": "string"
          },
          "discount_amount": {
            "description": "Discount amount.",
            "type": "number"
          },
          "discount_tax_compensation_amount": {
            "description": "Discount tax compensation amount.",
            "type": "number"
          },
          "entity_id": {
            "description": "Credit memo item ID.",
            "type": "integer"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/sales-data-creditmemo-item-extension-interface"
          },
          "name": {
            "description": "Name.",
            "type": "string"
          },
          "order_item_id": {
            "description": "Order item ID.",
            "type": "integer"
          },
          "parent_id": {
            "description": "Parent ID.",
            "type": "integer"
          },
          "price": {
            "description": "Price.",
            "type": "number"
          },
          "price_incl_tax": {
            "description": "Price including tax.",
            "type": "number"
          },
          "product_id": {
            "description": "Product ID.",
            "type": "integer"
          },
          "qty": {
            "description": "Quantity.",
            "type": "number"
          },
          "row_total": {
            "description": "Row total.",
            "type": "number"
          },
          "row_total_incl_tax": {
            "description": "Row total including tax.",
            "type": "number"
          },
          "sku": {
            "description": "SKU.",
            "type": "string"
          },
          "tax_amount": {
            "description": "Tax amount.",
            "type": "number"
          },
          "weee_tax_applied": {
            "description": "WEEE tax applied.",
            "type": "string"
          },
          "weee_tax_applied_amount": {
            "description": "WEEE tax applied amount.",
            "type": "number"
          },
          "weee_tax_applied_row_amount": {
            "description": "WEEE tax applied row amount.",
            "type": "number"
          },
          "weee_tax_disposition": {
            "description": "WEEE tax disposition.",
            "type": "number"
          },
          "weee_tax_row_disposition": {
            "description": "WEEE tax row disposition.",
            "type": "number"
          }
        },
        "required": [
          "base_cost",
          "base_price",
          "entity_id",
          "order_item_id",
          "qty"
        ],
        "type": "object"
      },
      "sales-data-creditmemo-search-result-interface": {
        "description": "Credit memo search result interface. After a customer places and pays for an order and an invoice has been issued, the merchant can create a credit memo to refund all or part of the amount paid for any returned or undelivered items. The memo restores funds to the customer account so that the customer can make future purchases.",
        "properties": {
          "items": {
            "description": "Array of collection items.",
            "items": {
              "$ref": "#/components/schemas/sales-data-creditmemo-interface"
            },
            "type": "array"
          },
          "search_criteria": {
            "$ref": "#/components/schemas/framework-search-criteria-interface"
          },
          "total_count": {
            "description": "Total count.",
            "type": "integer"
          }
        },
        "required": [
          "items",
          "search_criteria",
          "total_count"
        ],
        "type": "object"
      },
      "sales-data-invoice-comment-creation-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\Sales\\Api\\Data\\InvoiceCommentCreationInterface",
        "type": "object"
      },
      "sales-data-invoice-comment-creation-interface": {
        "description": "Interface InvoiceCommentCreationInterface",
        "properties": {
          "comment": {
            "description": "Comment.",
            "type": "string"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/sales-data-invoice-comment-creation-extension-interface"
          },
          "is_visible_on_front": {
            "description": "Is-visible-on-storefront flag value.",
            "type": "integer"
          }
        },
        "required": [
          "comment",
          "is_visible_on_front"
        ],
        "type": "object"
      },
      "sales-data-invoice-comment-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\Sales\\Api\\Data\\InvoiceCommentInterface",
        "type": "object"
      },
      "sales-data-invoice-comment-interface": {
        "description": "Invoice comment interface. An invoice is a record of the receipt of payment for an order. An invoice can include comments that detail the invoice history.",
        "properties": {
          "comment": {
            "description": "Comment.",
            "type": "string"
          },
          "created_at": {
            "description": "Created-at timestamp.",
            "type": "string"
          },
          "entity_id": {
            "description": "Invoice ID.",
            "type": "integer"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/sales-data-invoice-comment-extension-interface"
          },
          "is_customer_notified": {
            "description": "Is-customer-notified flag value.",
            "type": "integer"
          },
          "is_visible_on_front": {
            "description": "Is-visible-on-storefront flag value.",
            "type": "integer"
          },
          "parent_id": {
            "description": "Parent ID.",
            "type": "integer"
          }
        },
        "required": [
          "is_customer_notified",
          "parent_id",
          "comment",
          "is_visible_on_front"
        ],
        "type": "object"
      },
      "sales-data-invoice-comment-search-result-interface": {
        "description": "Invoice comment search result interface. An invoice is a record of the receipt of payment for an order. An invoice can include comments that detail the invoice history.",
        "properties": {
          "items": {
            "description": "Array of collection items.",
            "items": {
              "$ref": "#/components/schemas/sales-data-invoice-comment-interface"
            },
            "type": "array"
          },
          "search_criteria": {
            "$ref": "#/components/schemas/framework-search-criteria-interface"
          },
          "total_count": {
            "description": "Total count.",
            "type": "integer"
          }
        },
        "required": [
          "items",
          "search_criteria",
          "total_count"
        ],
        "type": "object"
      },
      "sales-data-invoice-creation-arguments-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\Sales\\Api\\Data\\InvoiceCreationArgumentsInterface",
        "type": "object"
      },
      "sales-data-invoice-creation-arguments-interface": {
        "description": "Interface for creation arguments for Invoice.",
        "properties": {
          "extension_attributes": {
            "$ref": "#/components/schemas/sales-data-invoice-creation-arguments-extension-interface"
          }
        },
        "type": "object"
      },
      "sales-data-invoice-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\Sales\\Api\\Data\\InvoiceInterface",
        "properties": {
          "base_customer_balance_amount": {
            "type": "number"
          },
          "base_gift_cards_amount": {
            "type": "number"
          },
          "customer_balance_amount": {
            "type": "number"
          },
          "gift_cards_amount": {
            "type": "number"
          },
          "gw_base_price": {
            "type": "string"
          },
          "gw_base_tax_amount": {
            "type": "string"
          },
          "gw_card_base_price": {
            "type": "string"
          },
          "gw_card_base_tax_amount": {
            "type": "string"
          },
          "gw_card_price": {
            "type": "string"
          },
          "gw_card_tax_amount": {
            "type": "string"
          },
          "gw_items_base_price": {
            "type": "string"
          },
          "gw_items_base_tax_amount": {
            "type": "string"
          },
          "gw_items_price": {
            "type": "string"
          },
          "gw_items_tax_amount": {
            "type": "string"
          },
          "gw_price": {
            "type": "string"
          },
          "gw_tax_amount": {
            "type": "string"
          },
          "vertex_tax_calculation_billing_address": {
            "$ref": "#/components/schemas/sales-data-order-address-interface"
          },
          "vertex_tax_calculation_order": {
            "$ref": "#/components/schemas/sales-data-order-interface"
          },
          "vertex_tax_calculation_shipping_address": {
            "$ref": "#/components/schemas/sales-data-order-address-interface"
          }
        },
        "type": "object"
      },
      "sales-data-invoice-interface": {
        "description": "Invoice interface. An invoice is a record of the receipt of payment for an order.",
        "properties": {
          "base_currency_code": {
            "description": "Base currency code.",
            "type": "string"
          },
          "base_discount_amount": {
            "description": "Base discount amount.",
            "type": "number"
          },
          "base_discount_tax_compensation_amount": {
            "description": "Base discount tax compensation amount.",
            "type": "number"
          },
          "base_grand_total": {
            "description": "Base grand total.",
            "type": "number"
          },
          "base_shipping_amount": {
            "description": "Base shipping amount.",
            "type": "number"
          },
          "base_shipping_discount_tax_compensation_amnt": {
            "description": "Base shipping discount tax compensation amount.",
            "type": "number"
          },
          "base_shipping_incl_tax": {
            "description": "Base shipping including tax.",
            "type": "number"
          },
          "base_shipping_tax_amount": {
            "description": "Base shipping tax amount.",
            "type": "number"
          },
          "base_subtotal": {
            "description": "Base subtotal.",
            "type": "number"
          },
          "base_subtotal_incl_tax": {
            "description": "Base subtotal including tax.",
            "type": "number"
          },
          "base_tax_amount": {
            "description": "Base tax amount.",
            "type": "number"
          },
          "base_to_global_rate": {
            "description": "Base-to-global rate.",
            "type": "number"
          },
          "base_to_order_rate": {
            "description": "Base-to-order rate.",
            "type": "number"
          },
          "base_total_refunded": {
            "description": "Base total refunded.",
            "type": "number"
          },
          "billing_address_id": {
            "description": "Billing address ID.",
            "type": "integer"
          },
          "can_void_flag": {
            "description": "Can void flag value.",
            "type": "integer"
          },
          "comments": {
            "description": "Array of any invoice comments. Otherwise, null.",
            "items": {
              "$ref": "#/components/schemas/sales-data-invoice-comment-interface"
            },
            "type": "array"
          },
          "created_at": {
            "description": "Created-at timestamp.",
            "type": "string"
          },
          "discount_amount": {
            "description": "Discount amount.",
            "type": "number"
          },
          "discount_description": {
            "description": "Discount description.",
            "type": "string"
          },
          "discount_tax_compensation_amount": {
            "description": "Discount tax compensation amount.",
            "type": "number"
          },
          "email_sent": {
            "description": "Email-sent flag value.",
            "type": "integer"
          },
          "entity_id": {
            "description": "Invoice ID.",
            "type": "integer"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/sales-data-invoice-extension-interface"
          },
          "global_currency_code": {
            "description": "Global currency code.",
            "type": "string"
          },
          "grand_total": {
            "description": "Grand total.",
            "type": "number"
          },
          "increment_id": {
            "description": "Increment ID.",
            "type": "string"
          },
          "is_used_for_refund": {
            "description": "Is-used-for-refund flag value.",
            "type": "integer"
          },
          "items": {
            "description": "Array of invoice items.",
            "items": {
              "$ref": "#/components/schemas/sales-data-invoice-item-interface"
            },
            "type": "array"
          },
          "order_currency_code": {
            "description": "Order currency code.",
            "type": "string"
          },
          "order_id": {
            "description": "Order ID.",
            "type": "integer"
          },
          "shipping_address_id": {
            "description": "Shipping address ID.",
            "type": "integer"
          },
          "shipping_amount": {
            "description": "Shipping amount.",
            "type": "number"
          },
          "shipping_discount_tax_compensation_amount": {
            "description": "Shipping discount tax compensation amount.",
            "type": "number"
          },
          "shipping_incl_tax": {
            "description": "Shipping including tax.",
            "type": "number"
          },
          "shipping_tax_amount": {
            "description": "Shipping tax amount.",
            "type": "number"
          },
          "state": {
            "description": "State.",
            "type": "integer"
          },
          "store_currency_code": {
            "description": "Store currency code.",
            "type": "string"
          },
          "store_id": {
            "description": "Store ID.",
            "type": "integer"
          },
          "store_to_base_rate": {
            "description": "Store-to-base rate.",
            "type": "number"
          },
          "store_to_order_rate": {
            "description": "Store-to-order rate.",
            "type": "number"
          },
          "subtotal": {
            "description": "Subtotal.",
            "type": "number"
          },
          "subtotal_incl_tax": {
            "description": "Subtotal including tax.",
            "type": "number"
          },
          "tax_amount": {
            "description": "Tax amount.",
            "type": "number"
          },
          "total_qty": {
            "description": "Total quantity.",
            "type": "number"
          },
          "transaction_id": {
            "description": "Transaction ID.",
            "type": "string"
          },
          "updated_at": {
            "description": "Updated-at timestamp.",
            "type": "string"
          }
        },
        "required": [
          "order_id",
          "total_qty",
          "items"
        ],
        "type": "object"
      },
      "sales-data-invoice-item-creation-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\Sales\\Api\\Data\\InvoiceItemCreationInterface",
        "type": "object"
      },
      "sales-data-invoice-item-creation-interface": {
        "description": "Input argument for invoice creation Interface InvoiceItemCreationInterface",
        "properties": {
          "extension_attributes": {
            "$ref": "#/components/schemas/sales-data-invoice-item-creation-extension-interface"
          },
          "order_item_id": {
            "description": "Order item ID.",
            "type": "integer"
          },
          "qty": {
            "description": "Quantity.",
            "type": "number"
          }
        },
        "required": [
          "order_item_id",
          "qty"
        ],
        "type": "object"
      },
      "sales-data-invoice-item-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\Sales\\Api\\Data\\InvoiceItemInterface",
        "properties": {
          "invoice_text_codes": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "tax_codes": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "vertex_tax_codes": {
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "sales-data-invoice-item-interface": {
        "description": "Invoice item interface. An invoice is a record of the receipt of payment for an order. An invoice item is a purchased item in an invoice.",
        "properties": {
          "additional_data": {
            "description": "Additional data.",
            "type": "string"
          },
          "base_cost": {
            "description": "Base cost.",
            "type": "number"
          },
          "base_discount_amount": {
            "description": "Base discount amount.",
            "type": "number"
          },
          "base_discount_tax_compensation_amount": {
            "description": "Base discount tax compensation amount.",
            "type": "number"
          },
          "base_price": {
            "description": "Base price.",
            "type": "number"
          },
          "base_price_incl_tax": {
            "description": "Base price including tax.",
            "type": "number"
          },
          "base_row_total": {
            "description": "Base row total.",
            "type": "number"
          },
          "base_row_total_incl_tax": {
            "description": "Base row total including tax.",
            "type": "number"
          },
          "base_tax_amount": {
            "description": "Base tax amount.",
            "type": "number"
          },
          "description": {
            "description": "Description.",
            "type": "string"
          },
          "discount_amount": {
            "description": "Discount amount.",
            "type": "number"
          },
          "discount_tax_compensation_amount": {
            "description": "Discount tax compensation amount.",
            "type": "number"
          },
          "entity_id": {
            "description": "Invoice item ID.",
            "type": "integer"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/sales-data-invoice-item-extension-interface"
          },
          "name": {
            "description": "Name.",
            "type": "string"
          },
          "order_item_id": {
            "description": "Order item ID.",
            "type": "integer"
          },
          "parent_id": {
            "description": "Parent ID.",
            "type": "integer"
          },
          "price": {
            "description": "Price.",
            "type": "number"
          },
          "price_incl_tax": {
            "description": "Price including tax.",
            "type": "number"
          },
          "product_id": {
            "description": "Product ID.",
            "type": "integer"
          },
          "qty": {
            "description": "Quantity.",
            "type": "number"
          },
          "row_total": {
            "description": "Row total.",
            "type": "number"
          },
          "row_total_incl_tax": {
            "description": "Row total including tax.",
            "type": "number"
          },
          "sku": {
            "description": "SKU.",
            "type": "string"
          },
          "tax_amount": {
            "description": "Tax amount.",
            "type": "number"
          }
        },
        "required": [
          "sku",
          "order_item_id",
          "qty"
        ],
        "type": "object"
      },
      "sales-data-invoice-search-result-interface": {
        "description": "Invoice search result interface. An invoice is a record of the receipt of payment for an order.",
        "properties": {
          "items": {
            "description": "Array of collection items.",
            "items": {
              "$ref": "#/components/schemas/sales-data-invoice-interface"
            },
            "type": "array"
          },
          "search_criteria": {
            "$ref": "#/components/schemas/framework-search-criteria-interface"
          },
          "total_count": {
            "description": "Total count.",
            "type": "integer"
          }
        },
        "required": [
          "items",
          "search_criteria",
          "total_count"
        ],
        "type": "object"
      },
      "sales-data-order-address-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\Sales\\Api\\Data\\OrderAddressInterface",
        "properties": {
          "checkout_fields": {
            "items": {
              "$ref": "#/components/schemas/framework-attribute-interface"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "sales-data-order-address-interface": {
        "description": "Order address interface. An order is a document that a web store issues to a customer. Magento generates a sales order that lists the product items, billing and shipping addresses, and shipping and payment methods. A corresponding external document, known as a purchase order, is emailed to the customer.",
        "properties": {
          "address_type": {
            "description": "Address type.",
            "type": "string"
          },
          "city": {
            "description": "City.",
            "type": "string"
          },
          "company": {
            "description": "Company.",
            "type": "string"
          },
          "country_id": {
            "description": "Country ID.",
            "type": "string"
          },
          "customer_address_id": {
            "description": "Country address ID.",
            "type": "integer"
          },
          "customer_id": {
            "description": "Customer ID.",
            "type": "integer"
          },
          "email": {
            "description": "Email address.",
            "type": "string"
          },
          "entity_id": {
            "description": "Order address ID.",
            "type": "integer"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/sales-data-order-address-extension-interface"
          },
          "fax": {
            "description": "Fax number.",
            "type": "string"
          },
          "firstname": {
            "description": "First name.",
            "type": "string"
          },
          "lastname": {
            "description": "Last name.",
            "type": "string"
          },
          "middlename": {
            "description": "Middle name.",
            "type": "string"
          },
          "parent_id": {
            "description": "Parent ID.",
            "type": "integer"
          },
          "postcode": {
            "description": "Postal code.",
            "type": "string"
          },
          "prefix": {
            "description": "Prefix.",
            "type": "string"
          },
          "region": {
            "description": "Region.",
            "type": "string"
          },
          "region_code": {
            "description": "Region code.",
            "type": "string"
          },
          "region_id": {
            "description": "Region ID.",
            "type": "integer"
          },
          "street": {
            "description": "Array of any street values. Otherwise, null.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "suffix": {
            "description": "Suffix.",
            "type": "string"
          },
          "telephone": {
            "description": "Telephone number.",
            "type": "string"
          },
          "vat_id": {
            "description": "VAT ID.",
            "type": "string"
          },
          "vat_is_valid": {
            "description": "VAT-is-valid flag value.",
            "type": "integer"
          },
          "vat_request_date": {
            "description": "VAT request date.",
            "type": "string"
          },
          "vat_request_id": {
            "description": "VAT request ID.",
            "type": "string"
          },
          "vat_request_success": {
            "description": "VAT-request-success flag value.",
            "type": "integer"
          }
        },
        "required": [
          "address_type",
          "city",
          "country_id",
          "firstname",
          "lastname",
          "postcode",
          "telephone"
        ],
        "type": "object"
      },
      "sales-data-order-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\Sales\\Api\\Data\\OrderInterface",
        "properties": {
          "amazon_order_reference_id": {
            "type": "string"
          },
          "applied_taxes": {
            "items": {
              "$ref": "#/components/schemas/tax-data-order-tax-details-applied-tax-interface"
            },
            "type": "array"
          },
          "base_customer_balance_amount": {
            "type": "number"
          },
          "base_customer_balance_invoiced": {
            "type": "number"
          },
          "base_customer_balance_refunded": {
            "type": "number"
          },
          "base_customer_balance_total_refunded": {
            "type": "number"
          },
          "base_gift_cards_amount": {
            "type": "number"
          },
          "base_gift_cards_invoiced": {
            "type": "number"
          },
          "base_gift_cards_refunded": {
            "type": "number"
          },
          "base_reward_currency_amount": {
            "type": "number"
          },
          "company_order_attributes": {
            "$ref": "#/components/schemas/company-data-company-order-interface"
          },
          "converting_from_quote": {
            "type": "boolean"
          },
          "customer_balance_amount": {
            "type": "number"
          },
          "customer_balance_invoiced": {
            "type": "number"
          },
          "customer_balance_refunded": {
            "type": "number"
          },
          "customer_balance_total_refunded": {
            "type": "number"
          },
          "gift_cards": {
            "items": {
              "$ref": "#/components/schemas/gift-card-account-data-gift-card-interface"
            },
            "type": "array"
          },
          "gift_cards_amount": {
            "type": "number"
          },
          "gift_cards_invoiced": {
            "type": "number"
          },
          "gift_cards_refunded": {
            "type": "number"
          },
          "gift_message": {
            "$ref": "#/components/schemas/gift-message-data-message-interface"
          },
          "gw_add_card": {
            "type": "string"
          },
          "gw_allow_gift_receipt": {
            "type": "string"
          },
          "gw_base_price": {
            "type": "string"
          },
          "gw_base_price_incl_tax": {
            "type": "string"
          },
          "gw_base_price_invoiced": {
            "type": "string"
          },
          "gw_base_price_refunded": {
            "type": "string"
          },
          "gw_base_tax_amount": {
            "type": "string"
          },
          "gw_base_tax_amount_invoiced": {
            "type": "string"
          },
          "gw_base_tax_amount_refunded": {
            "type": "string"
          },
          "gw_card_base_price": {
            "type": "string"
          },
          "gw_card_base_price_incl_tax": {
            "type": "string"
          },
          "gw_card_base_price_invoiced": {
            "type": "string"
          },
          "gw_card_base_price_refunded": {
            "type": "string"
          },
          "gw_card_base_tax_amount": {
            "type": "string"
          },
          "gw_card_base_tax_invoiced": {
            "type": "string"
          },
          "gw_card_base_tax_refunded": {
            "type": "string"
          },
          "gw_card_price": {
            "type": "string"
          },
          "gw_card_price_incl_tax": {
            "type": "string"
          },
          "gw_card_price_invoiced": {
            "type": "string"
          },
          "gw_card_price_refunded": {
            "type": "string"
          },
          "gw_card_tax_amount": {
            "type": "string"
          },
          "gw_card_tax_invoiced": {
            "type": "string"
          },
          "gw_card_tax_refunded": {
            "type": "string"
          },
          "gw_id": {
            "type": "string"
          },
          "gw_items_base_price": {
            "type": "string"
          },
          "gw_items_base_price_incl_tax": {
            "type": "string"
          },
          "gw_items_base_price_invoiced": {
            "type": "string"
          },
          "gw_items_base_price_refunded": {
            "type": "string"
          },
          "gw_items_base_tax_amount": {
            "type": "string"
          },
          "gw_items_base_tax_invoiced": {
            "type": "string"
          },
          "gw_items_base_tax_refunded": {
            "type": "string"
          },
          "gw_items_price": {
            "type": "string"
          },
          "gw_items_price_incl_tax": {
            "type": "string"
          },
          "gw_items_price_invoiced": {
            "type": "string"
          },
          "gw_items_price_refunded": {
            "type": "string"
          },
          "gw_items_tax_amount": {
            "type": "string"
          },
          "gw_items_tax_invoiced": {
            "type": "string"
          },
          "gw_items_tax_refunded": {
            "type": "string"
          },
          "gw_price": {
            "type": "string"
          },
          "gw_price_incl_tax": {
            "type": "string"
          },
          "gw_price_invoiced": {
            "type": "string"
          },
          "gw_price_refunded": {
            "type": "string"
          },
          "gw_tax_amount": {
            "type": "string"
          },
          "gw_tax_amount_invoiced": {
            "type": "string"
          },
          "gw_tax_amount_refunded": {
            "type": "string"
          },
          "item_applied_taxes": {
            "items": {
              "$ref": "#/components/schemas/tax-data-order-tax-details-item-interface"
            },
            "type": "array"
          },
          "payment_additional_info": {
            "items": {
              "$ref": "#/components/schemas/payment-data-payment-additional-info-interface"
            },
            "type": "array"
          },
          "reward_currency_amount": {
            "type": "number"
          },
          "reward_points_balance": {
            "type": "integer"
          },
          "shipping_assignments": {
            "items": {
              "$ref": "#/components/schemas/sales-data-shipping-assignment-interface"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "sales-data-order-interface": {
        "description": "Order interface. An order is a document that a web store issues to a customer. Magento generates a sales order that lists the product items, billing and shipping addresses, and shipping and payment methods. A corresponding external document, known as a purchase order, is emailed to the customer.",
        "properties": {
          "adjustment_negative": {
            "description": "Negative adjustment value.",
            "type": "number"
          },
          "adjustment_positive": {
            "description": "Positive adjustment value.",
            "type": "number"
          },
          "applied_rule_ids": {
            "description": "Applied rule IDs.",
            "type": "string"
          },
          "base_adjustment_negative": {
            "description": "Base negative adjustment value.",
            "type": "number"
          },
          "base_adjustment_positive": {
            "description": "Base positive adjustment value.",
            "type": "number"
          },
          "base_currency_code": {
            "description": "Base currency code.",
            "type": "string"
          },
          "base_discount_amount": {
            "description": "Base discount amount.",
            "type": "number"
          },
          "base_discount_canceled": {
            "description": "Base discount canceled.",
            "type": "number"
          },
          "base_discount_invoiced": {
            "description": "Base discount invoiced.",
            "type": "number"
          },
          "base_discount_refunded": {
            "description": "Base discount refunded.",
            "type": "number"
          },
          "base_discount_tax_compensation_amount": {
            "description": "Base discount tax compensation amount.",
            "type": "number"
          },
          "base_discount_tax_compensation_invoiced": {
            "description": "Base discount tax compensation invoiced.",
            "type": "number"
          },
          "base_discount_tax_compensation_refunded": {
            "description": "Base discount tax compensation refunded.",
            "type": "number"
          },
          "base_grand_total": {
            "description": "Base grand total.",
            "type": "number"
          },
          "base_shipping_amount": {
            "description": "Base shipping amount.",
            "type": "number"
          },
          "base_shipping_canceled": {
            "description": "Base shipping canceled.",
            "type": "number"
          },
          "base_shipping_discount_amount": {
            "description": "Base shipping discount amount.",
            "type": "number"
          },
          "base_shipping_discount_tax_compensation_amnt": {
            "description": "Base shipping discount tax compensation amount.",
            "type": "number"
          },
          "base_shipping_incl_tax": {
            "description": "Base shipping including tax.",
            "type": "number"
          },
          "base_shipping_invoiced": {
            "description": "Base shipping invoiced.",
            "type": "number"
          },
          "base_shipping_refunded": {
            "description": "Base shipping refunded.",
            "type": "number"
          },
          "base_shipping_tax_amount": {
            "description": "Base shipping tax amount.",
            "type": "number"
          },
          "base_shipping_tax_refunded": {
            "description": "Base shipping tax refunded.",
            "type": "number"
          },
          "base_subtotal": {
            "description": "Base subtotal.",
            "type": "number"
          },
          "base_subtotal_canceled": {
            "description": "Base subtotal canceled.",
            "type": "number"
          },
          "base_subtotal_incl_tax": {
            "description": "Base subtotal including tax.",
            "type": "number"
          },
          "base_subtotal_invoiced": {
            "description": "Base subtotal invoiced.",
            "type": "number"
          },
          "base_subtotal_refunded": {
            "description": "Base subtotal refunded.",
            "type": "number"
          },
          "base_tax_amount": {
            "description": "Base tax amount.",
            "type": "number"
          },
          "base_tax_canceled": {
            "description": "Base tax canceled.",
            "type": "number"
          },
          "base_tax_invoiced": {
            "description": "Base tax invoiced.",
            "type": "number"
          },
          "base_tax_refunded": {
            "description": "Base tax refunded.",
            "type": "number"
          },
          "base_to_global_rate": {
            "description": "Base-to-global rate.",
            "type": "number"
          },
          "base_to_order_rate": {
            "description": "Base-to-order rate.",
            "type": "number"
          },
          "base_total_canceled": {
            "description": "Base total canceled.",
            "type": "number"
          },
          "base_total_due": {
            "description": "Base total due.",
            "type": "number"
          },
          "base_total_invoiced": {
            "description": "Base total invoiced.",
            "type": "number"
          },
          "base_total_invoiced_cost": {
            "description": "Base total invoiced cost.",
            "type": "number"
          },
          "base_total_offline_refunded": {
            "description": "Base total offline refunded.",
            "type": "number"
          },
          "base_total_online_refunded": {
            "description": "Base total online refunded.",
            "type": "number"
          },
          "base_total_paid": {
            "description": "Base total paid.",
            "type": "number"
          },
          "base_total_qty_ordered": {
            "description": "Base total quantity ordered.",
            "type": "number"
          },
          "base_total_refunded": {
            "description": "Base total refunded.",
            "type": "number"
          },
          "billing_address": {
            "$ref": "#/components/schemas/sales-data-order-address-interface"
          },
          "billing_address_id": {
            "description": "Billing address ID.",
            "type": "integer"
          },
          "can_ship_partially": {
            "description": "Can-ship-partially flag value.",
            "type": "integer"
          },
          "can_ship_partially_item": {
            "description": "Can-ship-partially-item flag value.",
            "type": "integer"
          },
          "coupon_code": {
            "description": "Coupon code.",
            "type": "string"
          },
          "created_at": {
            "description": "Created-at timestamp.",
            "type": "string"
          },
          "customer_dob": {
            "description": "Customer date-of-birth (DOB).",
            "type": "string"
          },
          "customer_email": {
            "description": "Customer email address.",
            "type": "string"
          },
          "customer_firstname": {
            "description": "Customer first name.",
            "type": "string"
          },
          "customer_gender": {
            "description": "Customer gender.",
            "type": "integer"
          },
          "customer_group_id": {
            "description": "Customer group ID.",
            "type": "integer"
          },
          "customer_id": {
            "description": "Customer ID.",
            "type": "integer"
          },
          "customer_is_guest": {
            "description": "Customer-is-guest flag value.",
            "type": "integer"
          },
          "customer_lastname": {
            "description": "Customer last name.",
            "type": "string"
          },
          "customer_middlename": {
            "description": "Customer middle name.",
            "type": "string"
          },
          "customer_note": {
            "description": "Customer note.",
            "type": "string"
          },
          "customer_note_notify": {
            "description": "Customer-note-notify flag value.",
            "type": "integer"
          },
          "customer_prefix": {
            "description": "Customer prefix.",
            "type": "string"
          },
          "customer_suffix": {
            "description": "Customer suffix.",
            "type": "string"
          },
          "customer_taxvat": {
            "description": "Customer value-added tax (VAT).",
            "type": "string"
          },
          "discount_amount": {
            "description": "Discount amount.",
            "type": "number"
          },
          "discount_canceled": {
            "description": "Discount canceled.",
            "type": "number"
          },
          "discount_description": {
            "description": "Discount description.",
            "type": "string"
          },
          "discount_invoiced": {
            "description": "Discount invoiced.",
            "type": "number"
          },
          "discount_refunded": {
            "description": "Discount refunded amount.",
            "type": "number"
          },
          "discount_tax_compensation_amount": {
            "description": "Discount tax compensation amount.",
            "type": "number"
          },
          "discount_tax_compensation_invoiced": {
            "description": "Discount tax compensation invoiced amount.",
            "type": "number"
          },
          "discount_tax_compensation_refunded": {
            "description": "Discount tax compensation refunded amount.",
            "type": "number"
          },
          "edit_increment": {
            "description": "Edit increment value.",
            "type": "integer"
          },
          "email_sent": {
            "description": "Email-sent flag value.",
            "type": "integer"
          },
          "entity_id": {
            "description": "Order ID.",
            "type": "integer"
          },
          "ext_customer_id": {
            "description": "External customer ID.",
            "type": "string"
          },
          "ext_order_id": {
            "description": "External order ID.",
            "type": "string"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/sales-data-order-extension-interface"
          },
          "forced_shipment_with_invoice": {
            "description": "Forced-shipment-with-invoice flag value.",
            "type": "integer"
          },
          "global_currency_code": {
            "description": "Global currency code.",
            "type": "string"
          },
          "grand_total": {
            "description": "Grand total.",
            "type": "number"
          },
          "hold_before_state": {
            "description": "Hold before state.",
            "type": "string"
          },
          "hold_before_status": {
            "description": "Hold before status.",
            "type": "string"
          },
          "increment_id": {
            "description": "Increment ID.",
            "type": "string"
          },
          "is_virtual": {
            "description": "Is-virtual flag value.",
            "type": "integer"
          },
          "items": {
            "description": "Array of items.",
            "items": {
              "$ref": "#/components/schemas/sales-data-order-item-interface"
            },
            "type": "array"
          },
          "order_currency_code": {
            "description": "Order currency code.",
            "type": "string"
          },
          "original_increment_id": {
            "description": "Original increment ID.",
            "type": "string"
          },
          "payment": {
            "$ref": "#/components/schemas/sales-data-order-payment-interface"
          },
          "payment_auth_expiration": {
            "description": "Payment authorization expiration date.",
            "type": "integer"
          },
          "payment_authorization_amount": {
            "description": "Payment authorization amount.",
            "type": "number"
          },
          "protect_code": {
            "description": "Protect code.",
            "type": "string"
          },
          "quote_address_id": {
            "description": "Quote address ID.",
            "type": "integer"
          },
          "quote_id": {
            "description": "Quote ID.",
            "type": "integer"
          },
          "relation_child_id": {
            "description": "Relation child ID.",
            "type": "string"
          },
          "relation_child_real_id": {
            "description": "Relation child real ID.",
            "type": "string"
          },
          "relation_parent_id": {
            "description": "Relation parent ID.",
            "type": "string"
          },
          "relation_parent_real_id": {
            "description": "Relation parent real ID.",
            "type": "string"
          },
          "remote_ip": {
            "description": "Remote IP address.",
            "type": "string"
          },
          "shipping_amount": {
            "description": "Shipping amount.",
            "type": "number"
          },
          "shipping_canceled": {
            "description": "Shipping canceled amount.",
            "type": "number"
          },
          "shipping_description": {
            "description": "Shipping description.",
            "type": "string"
          },
          "shipping_discount_amount": {
            "description": "Shipping discount amount.",
            "type": "number"
          },
          "shipping_discount_tax_compensation_amount": {
            "description": "Shipping discount tax compensation amount.",
            "type": "number"
          },
          "shipping_incl_tax": {
            "description": "Shipping including tax amount.",
            "type": "number"
          },
          "shipping_invoiced": {
            "description": "Shipping invoiced amount.",
            "type": "number"
          },
          "shipping_refunded": {
            "description": "Shipping refunded amount.",
            "type": "number"
          },
          "shipping_tax_amount": {
            "description": "Shipping tax amount.",
            "type": "number"
          },
          "shipping_tax_refunded": {
            "description": "Shipping tax refunded amount.",
            "type": "number"
          },
          "state": {
            "description": "State.",
            "type": "string"
          },
          "status": {
            "description": "Status.",
            "type": "string"
          },
          "status_histories": {
            "description": "Array of status histories.",
            "items": {
              "$ref": "#/components/schemas/sales-data-order-status-history-interface"
            },
            "type": "array"
          },
          "store_currency_code": {
            "description": "Store currency code.",
            "type": "string"
          },
          "store_id": {
            "description": "Store ID.",
            "type": "integer"
          },
          "store_name": {
            "description": "Store name.",
            "type": "string"
          },
          "store_to_base_rate": {
            "description": "Store-to-base rate.",
            "type": "number"
          },
          "store_to_order_rate": {
            "description": "Store-to-order rate.",
            "type": "number"
          },
          "subtotal": {
            "description": "Subtotal.",
            "type": "number"
          },
          "subtotal_canceled": {
            "description": "Subtotal canceled amount.",
            "type": "number"
          },
          "subtotal_incl_tax": {
            "description": "Subtotal including tax amount.",
            "type": "number"
          },
          "subtotal_invoiced": {
            "description": "Subtotal invoiced amount.",
            "type": "number"
          },
          "subtotal_refunded": {
            "description": "Subtotal refunded amount.",
            "type": "number"
          },
          "tax_amount": {
            "description": "Tax amount.",
            "type": "number"
          },
          "tax_canceled": {
            "description": "Tax canceled amount.",
            "type": "number"
          },
          "tax_invoiced": {
            "description": "Tax invoiced amount.",
            "type": "number"
          },
          "tax_refunded": {
            "description": "Tax refunded amount.",
            "type": "number"
          },
          "total_canceled": {
            "description": "Total canceled.",
            "type": "number"
          },
          "total_due": {
            "description": "Total due.",
            "type": "number"
          },
          "total_invoiced": {
            "description": "Total invoiced amount.",
            "type": "number"
          },
          "total_item_count": {
            "description": "Total item count.",
            "type": "integer"
          },
          "total_offline_refunded": {
            "description": "Total offline refunded amount.",
            "type": "number"
          },
          "total_online_refunded": {
            "description": "Total online refunded amount.",
            "type": "number"
          },
          "total_paid": {
            "description": "Total paid.",
            "type": "number"
          },
          "total_qty_ordered": {
            "description": "Total quantity ordered.",
            "type": "number"
          },
          "total_refunded": {
            "description": "Total amount refunded.",
            "type": "number"
          },
          "updated_at": {
            "description": "Updated-at timestamp.",
            "type": "string"
          },
          "weight": {
            "description": "Weight.",
            "type": "number"
          },
          "x_forwarded_for": {
            "description": "X-Forwarded-For field value.",
            "type": "string"
          }
        },
        "required": [
          "base_grand_total",
          "customer_email",
          "grand_total",
          "items"
        ],
        "type": "object"
      },
      "sales-data-order-item-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\Sales\\Api\\Data\\OrderItemInterface",
        "properties": {
          "gift_message": {
            "$ref": "#/components/schemas/gift-message-data-message-interface"
          },
          "gw_base_price": {
            "type": "string"
          },
          "gw_base_price_invoiced": {
            "type": "string"
          },
          "gw_base_price_refunded": {
            "type": "string"
          },
          "gw_base_tax_amount": {
            "type": "string"
          },
          "gw_base_tax_amount_invoiced": {
            "type": "string"
          },
          "gw_base_tax_amount_refunded": {
            "type": "string"
          },
          "gw_id": {
            "type": "string"
          },
          "gw_price": {
            "type": "string"
          },
          "gw_price_invoiced": {
            "type": "string"
          },
          "gw_price_refunded": {
            "type": "string"
          },
          "gw_tax_amount": {
            "type": "string"
          },
          "gw_tax_amount_invoiced": {
            "type": "string"
          },
          "gw_tax_amount_refunded": {
            "type": "string"
          },
          "invoice_text_codes": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "tax_codes": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "vertex_tax_codes": {
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "sales-data-order-item-interface": {
        "description": "Order item interface. An order is a document that a web store issues to a customer. Magento generates a sales order that lists the product items, billing and shipping addresses, and shipping and payment methods. A corresponding external document, known as a purchase order, is emailed to the customer.",
        "properties": {
          "additional_data": {
            "description": "Additional data.",
            "type": "string"
          },
          "amount_refunded": {
            "description": "Amount refunded.",
            "type": "number"
          },
          "applied_rule_ids": {
            "description": "Applied rule IDs.",
            "type": "string"
          },
          "base_amount_refunded": {
            "description": "Base amount refunded.",
            "type": "number"
          },
          "base_cost": {
            "description": "Base cost.",
            "type": "number"
          },
          "base_discount_amount": {
            "description": "Base discount amount.",
            "type": "number"
          },
          "base_discount_invoiced": {
            "description": "Base discount invoiced.",
            "type": "number"
          },
          "base_discount_refunded": {
            "description": "Base discount refunded.",
            "type": "number"
          },
          "base_discount_tax_compensation_amount": {
            "description": "Base discount tax compensation amount.",
            "type": "number"
          },
          "base_discount_tax_compensation_invoiced": {
            "description": "Base discount tax compensation invoiced.",
            "type": "number"
          },
          "base_discount_tax_compensation_refunded": {
            "description": "Base discount tax compensation refunded.",
            "type": "number"
          },
          "base_original_price": {
            "description": "Base original price.",
            "type": "number"
          },
          "base_price": {
            "description": "Base price.",
            "type": "number"
          },
          "base_price_incl_tax": {
            "description": "Base price including tax.",
            "type": "number"
          },
          "base_row_invoiced": {
            "description": "Base row invoiced.",
            "type": "number"
          },
          "base_row_total": {
            "description": "Base row total.",
            "type": "number"
          },
          "base_row_total_incl_tax": {
            "description": "Base row total including tax.",
            "type": "number"
          },
          "base_tax_amount": {
            "description": "Base tax amount.",
            "type": "number"
          },
          "base_tax_before_discount": {
            "description": "Base tax before discount.",
            "type": "number"
          },
          "base_tax_invoiced": {
            "description": "Base tax invoiced.",
            "type": "number"
          },
          "base_tax_refunded": {
            "description": "Base tax refunded.",
            "type": "number"
          },
          "base_weee_tax_applied_amount": {
            "description": "Base WEEE tax applied amount.",
            "type": "number"
          },
          "base_weee_tax_applied_row_amnt": {
            "description": "Base WEEE tax applied row amount.",
            "type": "number"
          },
          "base_weee_tax_disposition": {
            "description": "Base WEEE tax disposition.",
            "type": "number"
          },
          "base_weee_tax_row_disposition": {
            "description": "Base WEEE tax row disposition.",
            "type": "number"
          },
          "created_at": {
            "description": "Created-at timestamp.",
            "type": "string"
          },
          "description": {
            "description": "Description.",
            "type": "string"
          },
          "discount_amount": {
            "description": "Discount amount.",
            "type": "number"
          },
          "discount_invoiced": {
            "description": "Discount invoiced.",
            "type": "number"
          },
          "discount_percent": {
            "description": "Discount percent.",
            "type": "number"
          },
          "discount_refunded": {
            "description": "Discount refunded.",
            "type": "number"
          },
          "discount_tax_compensation_amount": {
            "description": "Discount tax compensation amount.",
            "type": "number"
          },
          "discount_tax_compensation_canceled": {
            "description": "Discount tax compensation canceled.",
            "type": "number"
          },
          "discount_tax_compensation_invoiced": {
            "description": "Discount tax compensation invoiced.",
            "type": "number"
          },
          "discount_tax_compensation_refunded": {
            "description": "Discount tax compensation refunded.",
            "type": "number"
          },
          "event_id": {
            "description": "Event ID.",
            "type": "integer"
          },
          "ext_order_item_id": {
            "description": "External order item ID.",
            "type": "string"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/sales-data-order-item-extension-interface"
          },
          "free_shipping": {
            "description": "Free-shipping flag value.",
            "type": "integer"
          },
          "gw_base_price": {
            "description": "GW base price.",
            "type": "number"
          },
          "gw_base_price_invoiced": {
            "description": "GW base price invoiced.",
            "type": "number"
          },
          "gw_base_price_refunded": {
            "description": "GW base price refunded.",
            "type": "number"
          },
          "gw_base_tax_amount": {
            "description": "GW base tax amount.",
            "type": "number"
          },
          "gw_base_tax_amount_invoiced": {
            "description": "GW base tax amount invoiced.",
            "type": "number"
          },
          "gw_base_tax_amount_refunded": {
            "description": "GW base tax amount refunded.",
            "type": "number"
          },
          "gw_id": {
            "description": "GW ID.",
            "type": "integer"
          },
          "gw_price": {
            "description": "GW price.",
            "type": "number"
          },
          "gw_price_invoiced": {
            "description": "GW price invoiced.",
            "type": "number"
          },
          "gw_price_refunded": {
            "description": "GW price refunded.",
            "type": "number"
          },
          "gw_tax_amount": {
            "description": "GW tax amount.",
            "type": "number"
          },
          "gw_tax_amount_invoiced": {
            "description": "GW tax amount invoiced.",
            "type": "number"
          },
          "gw_tax_amount_refunded": {
            "description": "GW tax amount refunded.",
            "type": "number"
          },
          "is_qty_decimal": {
            "description": "Is-quantity-decimal flag value.",
            "type": "integer"
          },
          "is_virtual": {
            "description": "Is-virtual flag value.",
            "type": "integer"
          },
          "item_id": {
            "description": "Item ID.",
            "type": "integer"
          },
          "locked_do_invoice": {
            "description": "Locked DO invoice flag value.",
            "type": "integer"
          },
          "locked_do_ship": {
            "description": "Locked DO ship flag value.",
            "type": "integer"
          },
          "name": {
            "description": "Name.",
            "type": "string"
          },
          "no_discount": {
            "description": "No-discount flag value.",
            "type": "integer"
          },
          "order_id": {
            "description": "Order ID.",
            "type": "integer"
          },
          "original_price": {
            "description": "Original price.",
            "type": "number"
          },
          "parent_item": {
            "$ref": "#/components/schemas/sales-data-order-item-interface"
          },
          "parent_item_id": {
            "description": "Parent item ID.",
            "type": "integer"
          },
          "price": {
            "description": "Price.",
            "type": "number"
          },
          "price_incl_tax": {
            "description": "Price including tax.",
            "type": "number"
          },
          "product_id": {
            "description": "Product ID.",
            "type": "integer"
          },
          "product_option": {
            "$ref": "#/components/schemas/catalog-data-product-option-interface"
          },
          "product_type": {
            "description": "Product type.",
            "type": "string"
          },
          "qty_backordered": {
            "description": "Quantity backordered.",
            "type": "number"
          },
          "qty_canceled": {
            "description": "Quantity canceled.",
            "type": "number"
          },
          "qty_invoiced": {
            "description": "Quantity invoiced.",
            "type": "number"
          },
          "qty_ordered": {
            "description": "Quantity ordered.",
            "type": "number"
          },
          "qty_refunded": {
            "description": "Quantity refunded.",
            "type": "number"
          },
          "qty_returned": {
            "description": "Quantity returned.",
            "type": "number"
          },
          "qty_shipped": {
            "description": "Quantity shipped.",
            "type": "number"
          },
          "quote_item_id": {
            "description": "Quote item ID.",
            "type": "integer"
          },
          "row_invoiced": {
            "description": "Row invoiced.",
            "type": "number"
          },
          "row_total": {
            "description": "Row total.",
            "type": "number"
          },
          "row_total_incl_tax": {
            "description": "Row total including tax.",
            "type": "number"
          },
          "row_weight": {
            "description": "Row weight.",
            "type": "number"
          },
          "sku": {
            "description": "SKU.",
            "type": "string"
          },
          "store_id": {
            "description": "Store ID.",
            "type": "integer"
          },
          "tax_amount": {
            "description": "Tax amount.",
            "type": "number"
          },
          "tax_before_discount": {
            "description": "Tax before discount.",
            "type": "number"
          },
          "tax_canceled": {
            "description": "Tax canceled.",
            "type": "number"
          },
          "tax_invoiced": {
            "description": "Tax invoiced.",
            "type": "number"
          },
          "tax_percent": {
            "description": "Tax percent.",
            "type": "number"
          },
          "tax_refunded": {
            "description": "Tax refunded.",
            "type": "number"
          },
          "updated_at": {
            "description": "Updated-at timestamp.",
            "type": "string"
          },
          "weee_tax_applied": {
            "description": "WEEE tax applied.",
            "type": "string"
          },
          "weee_tax_applied_amount": {
            "description": "WEEE tax applied amount.",
            "type": "number"
          },
          "weee_tax_applied_row_amount": {
            "description": "WEEE tax applied row amount.",
            "type": "number"
          },
          "weee_tax_disposition": {
            "description": "WEEE tax disposition.",
            "type": "number"
          },
          "weee_tax_row_disposition": {
            "description": "WEEE tax row disposition.",
            "type": "number"
          },
          "weight": {
            "description": "Weight.",
            "type": "number"
          }
        },
        "required": [
          "sku"
        ],
        "type": "object"
      },
      "sales-data-order-item-search-result-interface": {
        "description": "Order item search result interface. An order is a document that a web store issues to a customer. Magento generates a sales order that lists the product items, billing and shipping addresses, and shipping and payment methods. A corresponding external document, known as a purchase order, is emailed to the customer.",
        "properties": {
          "items": {
            "description": "Array of collection items.",
            "items": {
              "$ref": "#/components/schemas/sales-data-order-item-interface"
            },
            "type": "array"
          },
          "search_criteria": {
            "$ref": "#/components/schemas/framework-search-criteria-interface"
          },
          "total_count": {
            "description": "Total count.",
            "type": "integer"
          }
        },
        "required": [
          "items",
          "search_criteria",
          "total_count"
        ],
        "type": "object"
      },
      "sales-data-order-payment-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\Sales\\Api\\Data\\OrderPaymentInterface",
        "properties": {
          "vault_payment_token": {
            "$ref": "#/components/schemas/vault-data-payment-token-interface"
          }
        },
        "type": "object"
      },
      "sales-data-order-payment-interface": {
        "description": "Order payment interface. An order is a document that a web store issues to a customer. Magento generates a sales order that lists the product items, billing and shipping addresses, and shipping and payment methods. A corresponding external document, known as a purchase order, is emailed to the customer.",
        "properties": {
          "account_status": {
            "description": "Account status.",
            "type": "string"
          },
          "additional_data": {
            "description": "Additional data.",
            "type": "string"
          },
          "additional_information": {
            "description": "Array of additional information.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "address_status": {
            "description": "Address status.",
            "type": "string"
          },
          "amount_authorized": {
            "description": "Amount authorized.",
            "type": "number"
          },
          "amount_canceled": {
            "description": "Amount canceled.",
            "type": "number"
          },
          "amount_ordered": {
            "description": "Amount ordered.",
            "type": "number"
          },
          "amount_paid": {
            "description": "Amount paid.",
            "type": "number"
          },
          "amount_refunded": {
            "description": "Amount refunded.",
            "type": "number"
          },
          "anet_trans_method": {
            "description": "Anet transaction method.",
            "type": "string"
          },
          "base_amount_authorized": {
            "description": "Base amount authorized.",
            "type": "number"
          },
          "base_amount_canceled": {
            "description": "Base amount canceled.",
            "type": "number"
          },
          "base_amount_ordered": {
            "description": "Base amount ordered.",
            "type": "number"
          },
          "base_amount_paid": {
            "description": "Base amount paid.",
            "type": "number"
          },
          "base_amount_paid_online": {
            "description": "Base amount paid online.",
            "type": "number"
          },
          "base_amount_refunded": {
            "description": "Base amount refunded.",
            "type": "number"
          },
          "base_amount_refunded_online": {
            "description": "Base amount refunded online.",
            "type": "number"
          },
          "base_shipping_amount": {
            "description": "Base shipping amount.",
            "type": "number"
          },
          "base_shipping_captured": {
            "description": "Base shipping captured amount.",
            "type": "number"
          },
          "base_shipping_refunded": {
            "description": "Base shipping refunded amount.",
            "type": "number"
          },
          "cc_approval": {
            "description": "Credit card approval.",
            "type": "string"
          },
          "cc_avs_status": {
            "description": "Credit card avs status.",
            "type": "string"
          },
          "cc_cid_status": {
            "description": "Credit card CID status.",
            "type": "string"
          },
          "cc_debug_request_body": {
            "description": "Credit card debug request body.",
            "type": "string"
          },
          "cc_debug_response_body": {
            "description": "Credit card debug response body.",
            "type": "string"
          },
          "cc_debug_response_serialized": {
            "description": "Credit card debug response serialized.",
            "type": "string"
          },
          "cc_exp_month": {
            "description": "Credit card expiration month.",
            "type": "string"
          },
          "cc_exp_year": {
            "description": "Credit card expiration year.",
            "type": "string"
          },
          "cc_last4": {
            "description": "Last four digits of the credit card.",
            "type": "string"
          },
          "cc_number_enc": {
            "description": "Encrypted credit card number.",
            "type": "string"
          },
          "cc_owner": {
            "description": "Credit card number.",
            "type": "string"
          },
          "cc_secure_verify": {
            "description": "Credit card secure verify.",
            "type": "string"
          },
          "cc_ss_issue": {
            "description": "Credit card SS issue.",
            "type": "string"
          },
          "cc_ss_start_month": {
            "description": "Credit card SS start month.",
            "type": "string"
          },
          "cc_ss_start_year": {
            "description": "Credit card SS start year.",
            "type": "string"
          },
          "cc_status": {
            "description": "Credit card status.",
            "type": "string"
          },
          "cc_status_description": {
            "description": "Credit card status description.",
            "type": "string"
          },
          "cc_trans_id": {
            "description": "Credit card transaction ID.",
            "type": "string"
          },
          "cc_type": {
            "description": "Credit card type.",
            "type": "string"
          },
          "echeck_account_name": {
            "description": "eCheck account name.",
            "type": "string"
          },
          "echeck_account_type": {
            "description": "eCheck account type.",
            "type": "string"
          },
          "echeck_bank_name": {
            "description": "eCheck bank name.",
            "type": "string"
          },
          "echeck_routing_number": {
            "description": "eCheck routing number.",
            "type": "string"
          },
          "echeck_type": {
            "description": "eCheck type.",
            "type": "string"
          },
          "entity_id": {
            "description": "Entity ID.",
            "type": "integer"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/sales-data-order-payment-extension-interface"
          },
          "last_trans_id": {
            "description": "Last transaction ID.",
            "type": "string"
          },
          "method": {
            "description": "Method.",
            "type": "string"
          },
          "parent_id": {
            "description": "Parent ID.",
            "type": "integer"
          },
          "po_number": {
            "description": "PO number.",
            "type": "string"
          },
          "protection_eligibility": {
            "description": "Protection eligibility.",
            "type": "string"
          },
          "quote_payment_id": {
            "description": "Quote payment ID.",
            "type": "integer"
          },
          "shipping_amount": {
            "description": "Shipping amount.",
            "type": "number"
          },
          "shipping_captured": {
            "description": "Shipping captured.",
            "type": "number"
          },
          "shipping_refunded": {
            "description": "Shipping refunded.",
            "type": "number"
          }
        },
        "required": [
          "account_status",
          "additional_information",
          "cc_last4",
          "method"
        ],
        "type": "object"
      },
      "sales-data-order-search-result-interface": {
        "description": "Order search result interface. An order is a document that a web store issues to a customer. Magento generates a sales order that lists the product items, billing and shipping addresses, and shipping and payment methods. A corresponding external document, known as a purchase order, is emailed to the customer.",
        "properties": {
          "items": {
            "description": "Array of collection items.",
            "items": {
              "$ref": "#/components/schemas/sales-data-order-interface"
            },
            "type": "array"
          },
          "search_criteria": {
            "$ref": "#/components/schemas/framework-search-criteria-interface"
          },
          "total_count": {
            "description": "Total count.",
            "type": "integer"
          }
        },
        "required": [
          "items",
          "search_criteria",
          "total_count"
        ],
        "type": "object"
      },
      "sales-data-order-status-history-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\Sales\\Api\\Data\\OrderStatusHistoryInterface",
        "type": "object"
      },
      "sales-data-order-status-history-interface": {
        "description": "Order status history interface. An order is a document that a web store issues to a customer. Magento generates a sales order that lists the product items, billing and shipping addresses, and shipping and payment methods. A corresponding external document, known as a purchase order, is emailed to the customer.",
        "properties": {
          "comment": {
            "description": "Comment.",
            "type": "string"
          },
          "created_at": {
            "description": "Created-at timestamp.",
            "type": "string"
          },
          "entity_id": {
            "description": "Order status history ID.",
            "type": "integer"
          },
          "entity_name": {
            "description": "Entity name.",
            "type": "string"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/sales-data-order-status-history-extension-interface"
          },
          "is_customer_notified": {
            "description": "Is-customer-notified flag value.",
            "type": "integer"
          },
          "is_visible_on_front": {
            "description": "Is-visible-on-storefront flag value.",
            "type": "integer"
          },
          "parent_id": {
            "description": "Parent ID.",
            "type": "integer"
          },
          "status": {
            "description": "Status.",
            "type": "string"
          }
        },
        "required": [
          "comment",
          "is_customer_notified",
          "is_visible_on_front",
          "parent_id"
        ],
        "type": "object"
      },
      "sales-data-order-status-history-search-result-interface": {
        "description": "Order status history search result interface. An order is a document that a web store issues to a customer. Magento generates a sales order that lists the product items, billing and shipping addresses, and shipping and payment methods. A corresponding external document, known as a purchase order, is emailed to the customer.",
        "properties": {
          "items": {
            "description": "Array of collection items.",
            "items": {
              "$ref": "#/components/schemas/sales-data-order-status-history-interface"
            },
            "type": "array"
          },
          "search_criteria": {
            "$ref": "#/components/schemas/framework-search-criteria-interface"
          },
          "total_count": {
            "description": "Total count.",
            "type": "integer"
          }
        },
        "required": [
          "items",
          "search_criteria",
          "total_count"
        ],
        "type": "object"
      },
      "sales-data-shipment-comment-creation-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\Sales\\Api\\Data\\ShipmentCommentCreationInterface",
        "type": "object"
      },
      "sales-data-shipment-comment-creation-interface": {
        "description": "Interface ShipmentCommentCreationInterface",
        "properties": {
          "comment": {
            "description": "Comment.",
            "type": "string"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/sales-data-shipment-comment-creation-extension-interface"
          },
          "is_visible_on_front": {
            "description": "Is-visible-on-storefront flag value.",
            "type": "integer"
          }
        },
        "required": [
          "comment",
          "is_visible_on_front"
        ],
        "type": "object"
      },
      "sales-data-shipment-comment-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\Sales\\Api\\Data\\ShipmentCommentInterface",
        "type": "object"
      },
      "sales-data-shipment-comment-interface": {
        "description": "Shipment comment interface. A shipment is a delivery package that contains products. A shipment document accompanies the shipment. This document lists the products and their quantities in the delivery package. A shipment document can contain comments.",
        "properties": {
          "comment": {
            "description": "Comment.",
            "type": "string"
          },
          "created_at": {
            "description": "Created-at timestamp.",
            "type": "string"
          },
          "entity_id": {
            "description": "Invoice ID.",
            "type": "integer"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/sales-data-shipment-comment-extension-interface"
          },
          "is_customer_notified": {
            "description": "Is-customer-notified flag value.",
            "type": "integer"
          },
          "is_visible_on_front": {
            "description": "Is-visible-on-storefront flag value.",
            "type": "integer"
          },
          "parent_id": {
            "description": "Parent ID.",
            "type": "integer"
          }
        },
        "required": [
          "is_customer_notified",
          "parent_id",
          "comment",
          "is_visible_on_front"
        ],
        "type": "object"
      },
      "sales-data-shipment-comment-search-result-interface": {
        "description": "Shipment comment search result interface. A shipment is a delivery package that contains products. A shipment document accompanies the shipment. This document lists the products and their quantities in the delivery package. A shipment document can contain comments.",
        "properties": {
          "items": {
            "description": "Array of collection items.",
            "items": {
              "$ref": "#/components/schemas/sales-data-shipment-comment-interface"
            },
            "type": "array"
          },
          "search_criteria": {
            "$ref": "#/components/schemas/framework-search-criteria-interface"
          },
          "total_count": {
            "description": "Total count.",
            "type": "integer"
          }
        },
        "required": [
          "items",
          "search_criteria",
          "total_count"
        ],
        "type": "object"
      },
      "sales-data-shipment-creation-arguments-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\Sales\\Api\\Data\\ShipmentCreationArgumentsInterface",
        "properties": {
          "ext_location_id": {
            "type": "string"
          },
          "ext_return_shipment_id": {
            "type": "string"
          },
          "ext_shipment_id": {
            "type": "string"
          },
          "ext_tracking_reference": {
            "type": "string"
          },
          "ext_tracking_url": {
            "type": "string"
          },
          "shipping_label": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "sales-data-shipment-creation-arguments-interface": {
        "description": "Interface for creation arguments for Shipment.",
        "properties": {
          "extension_attributes": {
            "$ref": "#/components/schemas/sales-data-shipment-creation-arguments-extension-interface"
          }
        },
        "type": "object"
      },
      "sales-data-shipment-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\Sales\\Api\\Data\\ShipmentInterface",
        "properties": {
          "ext_location_id": {
            "type": "string"
          },
          "ext_return_shipment_id": {
            "type": "string"
          },
          "ext_shipment_id": {
            "type": "string"
          },
          "ext_tracking_reference": {
            "type": "string"
          },
          "ext_tracking_url": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "sales-data-shipment-interface": {
        "description": "Shipment interface. A shipment is a delivery package that contains products. A shipment document accompanies the shipment. This document lists the products and their quantities in the delivery package.",
        "properties": {
          "billing_address_id": {
            "description": "Billing address ID.",
            "type": "integer"
          },
          "comments": {
            "description": "Array of comments.",
            "items": {
              "$ref": "#/components/schemas/sales-data-shipment-comment-interface"
            },
            "type": "array"
          },
          "created_at": {
            "description": "Created-at timestamp.",
            "type": "string"
          },
          "customer_id": {
            "description": "Customer ID.",
            "type": "integer"
          },
          "email_sent": {
            "description": "Email-sent flag value.",
            "type": "integer"
          },
          "entity_id": {
            "description": "Shipment ID.",
            "type": "integer"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/sales-data-shipment-extension-interface"
          },
          "increment_id": {
            "description": "Increment ID.",
            "type": "string"
          },
          "items": {
            "description": "Array of items.",
            "items": {
              "$ref": "#/components/schemas/sales-data-shipment-item-interface"
            },
            "type": "array"
          },
          "order_id": {
            "description": "Order ID.",
            "type": "integer"
          },
          "packages": {
            "description": "Array of packages, if any. Otherwise, null.",
            "items": {
              "$ref": "#/components/schemas/sales-data-shipment-package-interface"
            },
            "type": "array"
          },
          "shipment_status": {
            "description": "Shipment status.",
            "type": "integer"
          },
          "shipping_address_id": {
            "description": "Shipping address ID.",
            "type": "integer"
          },
          "shipping_label": {
            "description": "Shipping label.",
            "type": "string"
          },
          "store_id": {
            "description": "Store ID.",
            "type": "integer"
          },
          "total_qty": {
            "description": "Total quantity.",
            "type": "number"
          },
          "total_weight": {
            "description": "Total weight.",
            "type": "number"
          },
          "tracks": {
            "description": "Array of tracks.",
            "items": {
              "$ref": "#/components/schemas/sales-data-shipment-track-interface"
            },
            "type": "array"
          },
          "updated_at": {
            "description": "Updated-at timestamp.",
            "type": "string"
          }
        },
        "required": [
          "order_id",
          "items",
          "tracks",
          "comments"
        ],
        "type": "object"
      },
      "sales-data-shipment-item-creation-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\Sales\\Api\\Data\\ShipmentItemCreationInterface",
        "type": "object"
      },
      "sales-data-shipment-item-creation-interface": {
        "description": "Input argument for shipment item creation Interface ShipmentItemCreationInterface",
        "properties": {
          "extension_attributes": {
            "$ref": "#/components/schemas/sales-data-shipment-item-creation-extension-interface"
          },
          "order_item_id": {
            "description": "Order item ID.",
            "type": "integer"
          },
          "qty": {
            "description": "Quantity.",
            "type": "number"
          }
        },
        "required": [
          "order_item_id",
          "qty"
        ],
        "type": "object"
      },
      "sales-data-shipment-item-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\Sales\\Api\\Data\\ShipmentItemInterface",
        "type": "object"
      },
      "sales-data-shipment-item-interface": {
        "description": "Shipment item interface. A shipment is a delivery package that contains products. A shipment document accompanies the shipment. This document lists the products and their quantities in the delivery package. A product is an item in a shipment.",
        "properties": {
          "additional_data": {
            "description": "Additional data.",
            "type": "string"
          },
          "description": {
            "description": "Description.",
            "type": "string"
          },
          "entity_id": {
            "description": "Shipment item ID.",
            "type": "integer"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/sales-data-shipment-item-extension-interface"
          },
          "name": {
            "description": "Name.",
            "type": "string"
          },
          "order_item_id": {
            "description": "Order item ID.",
            "type": "integer"
          },
          "parent_id": {
            "description": "Parent ID.",
            "type": "integer"
          },
          "price": {
            "description": "Price.",
            "type": "number"
          },
          "product_id": {
            "description": "Product ID.",
            "type": "integer"
          },
          "qty": {
            "description": "Quantity.",
            "type": "number"
          },
          "row_total": {
            "description": "Row total.",
            "type": "number"
          },
          "sku": {
            "description": "SKU.",
            "type": "string"
          },
          "weight": {
            "description": "Weight.",
            "type": "number"
          }
        },
        "required": [
          "order_item_id",
          "qty"
        ],
        "type": "object"
      },
      "sales-data-shipment-package-creation-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\Sales\\Api\\Data\\ShipmentPackageCreationInterface",
        "type": "object"
      },
      "sales-data-shipment-package-creation-interface": {
        "description": "Shipment package interface. A shipment is a delivery package that contains products. A shipment document accompanies the shipment. This document lists the products and their quantities in the delivery package.",
        "properties": {
          "extension_attributes": {
            "$ref": "#/components/schemas/sales-data-shipment-package-creation-extension-interface"
          }
        },
        "type": "object"
      },
      "sales-data-shipment-package-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\Sales\\Api\\Data\\ShipmentPackageInterface",
        "type": "object"
      },
      "sales-data-shipment-package-interface": {
        "description": "Shipment package interface. A shipment is a delivery package that contains products. A shipment document accompanies the shipment. This document lists the products and their quantities in the delivery package.",
        "properties": {
          "extension_attributes": {
            "$ref": "#/components/schemas/sales-data-shipment-package-extension-interface"
          }
        },
        "type": "object"
      },
      "sales-data-shipment-search-result-interface": {
        "description": "Shipment search result interface. A shipment is a delivery package that contains products. A shipment document accompanies the shipment. This document lists the products and their quantities in the delivery package.",
        "properties": {
          "items": {
            "description": "Array of collection items.",
            "items": {
              "$ref": "#/components/schemas/sales-data-shipment-interface"
            },
            "type": "array"
          },
          "search_criteria": {
            "$ref": "#/components/schemas/framework-search-criteria-interface"
          },
          "total_count": {
            "description": "Total count.",
            "type": "integer"
          }
        },
        "required": [
          "items",
          "search_criteria",
          "total_count"
        ],
        "type": "object"
      },
      "sales-data-shipment-track-creation-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\Sales\\Api\\Data\\ShipmentTrackCreationInterface",
        "type": "object"
      },
      "sales-data-shipment-track-creation-interface": {
        "description": "Shipment Track Creation interface.",
        "properties": {
          "carrier_code": {
            "description": "Carrier code.",
            "type": "string"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/sales-data-shipment-track-creation-extension-interface"
          },
          "title": {
            "description": "Title.",
            "type": "string"
          },
          "track_number": {
            "description": "Track number.",
            "type": "string"
          }
        },
        "required": [
          "track_number",
          "title",
          "carrier_code"
        ],
        "type": "object"
      },
      "sales-data-shipment-track-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\Sales\\Api\\Data\\ShipmentTrackInterface",
        "type": "object"
      },
      "sales-data-shipment-track-interface": {
        "description": "Shipment track interface. A shipment is a delivery package that contains products. A shipment document accompanies the shipment. This document lists the products and their quantities in the delivery package. Merchants and customers can track shipments.",
        "properties": {
          "carrier_code": {
            "description": "Carrier code.",
            "type": "string"
          },
          "created_at": {
            "description": "Created-at timestamp.",
            "type": "string"
          },
          "description": {
            "description": "Description.",
            "type": "string"
          },
          "entity_id": {
            "description": "Shipment package ID.",
            "type": "integer"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/sales-data-shipment-track-extension-interface"
          },
          "order_id": {
            "description": "The order_id for the shipment package.",
            "type": "integer"
          },
          "parent_id": {
            "description": "Parent ID.",
            "type": "integer"
          },
          "qty": {
            "description": "Quantity.",
            "type": "number"
          },
          "title": {
            "description": "Title.",
            "type": "string"
          },
          "track_number": {
            "description": "Track number.",
            "type": "string"
          },
          "updated_at": {
            "description": "Updated-at timestamp.",
            "type": "string"
          },
          "weight": {
            "description": "Weight.",
            "type": "number"
          }
        },
        "required": [
          "order_id",
          "parent_id",
          "weight",
          "qty",
          "description",
          "track_number",
          "title",
          "carrier_code"
        ],
        "type": "object"
      },
      "sales-data-shipping-assignment-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\Sales\\Api\\Data\\ShippingAssignmentInterface",
        "type": "object"
      },
      "sales-data-shipping-assignment-interface": {
        "description": "Interface ShippingAssignmentInterface",
        "properties": {
          "extension_attributes": {
            "$ref": "#/components/schemas/sales-data-shipping-assignment-extension-interface"
          },
          "items": {
            "description": "Order items of shipping assignment",
            "items": {
              "$ref": "#/components/schemas/sales-data-order-item-interface"
            },
            "type": "array"
          },
          "shipping": {
            "$ref": "#/components/schemas/sales-data-shipping-interface"
          },
          "stock_id": {
            "description": "Stock id",
            "type": "integer"
          }
        },
        "required": [
          "shipping",
          "items"
        ],
        "type": "object"
      },
      "sales-data-shipping-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\Sales\\Api\\Data\\ShippingInterface",
        "properties": {
          "collection_point": {
            "$ref": "#/components/schemas/temando-shipping-data-collection-point-order-collection-point-interface"
          },
          "ext_order_id": {
            "type": "string"
          },
          "shipping_experience": {
            "$ref": "#/components/schemas/temando-shipping-data-order-shipping-experience-interface"
          }
        },
        "type": "object"
      },
      "sales-data-shipping-interface": {
        "description": "Interface ShippingInterface",
        "properties": {
          "address": {
            "$ref": "#/components/schemas/sales-data-order-address-interface"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/sales-data-shipping-extension-interface"
          },
          "method": {
            "description": "Shipping method",
            "type": "string"
          },
          "total": {
            "$ref": "#/components/schemas/sales-data-total-interface"
          }
        },
        "type": "object"
      },
      "sales-data-total-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\Sales\\Api\\Data\\TotalInterface",
        "type": "object"
      },
      "sales-data-total-interface": {
        "description": "Interface TotalInterface",
        "properties": {
          "base_shipping_amount": {
            "description": "Base shipping amount.",
            "type": "number"
          },
          "base_shipping_canceled": {
            "description": "Base shipping canceled.",
            "type": "number"
          },
          "base_shipping_discount_amount": {
            "description": "Base shipping discount amount.",
            "type": "number"
          },
          "base_shipping_discount_tax_compensation_amnt": {
            "description": "Base shipping discount tax compensation amount.",
            "type": "number"
          },
          "base_shipping_incl_tax": {
            "description": "Base shipping including tax.",
            "type": "number"
          },
          "base_shipping_invoiced": {
            "description": "Base shipping invoiced.",
            "type": "number"
          },
          "base_shipping_refunded": {
            "description": "Base shipping refunded.",
            "type": "number"
          },
          "base_shipping_tax_amount": {
            "description": "Base shipping tax amount.",
            "type": "number"
          },
          "base_shipping_tax_refunded": {
            "description": "Base shipping tax refunded.",
            "type": "number"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/sales-data-total-extension-interface"
          },
          "shipping_amount": {
            "description": "Shipping amount.",
            "type": "number"
          },
          "shipping_canceled": {
            "description": "Shipping canceled amount.",
            "type": "number"
          },
          "shipping_discount_amount": {
            "description": "Shipping discount amount.",
            "type": "number"
          },
          "shipping_discount_tax_compensation_amount": {
            "description": "Shipping discount tax compensation amount.",
            "type": "number"
          },
          "shipping_incl_tax": {
            "description": "Shipping including tax amount.",
            "type": "number"
          },
          "shipping_invoiced": {
            "description": "Shipping invoiced amount.",
            "type": "number"
          },
          "shipping_refunded": {
            "description": "Shipping refunded amount.",
            "type": "number"
          },
          "shipping_tax_amount": {
            "description": "Shipping tax amount.",
            "type": "number"
          },
          "shipping_tax_refunded": {
            "description": "Shipping tax refunded amount.",
            "type": "number"
          }
        },
        "type": "object"
      },
      "sales-data-transaction-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\Sales\\Api\\Data\\TransactionInterface",
        "type": "object"
      },
      "sales-data-transaction-interface": {
        "description": "Transaction interface. A transaction is an interaction between a merchant and a customer such as a purchase, a credit, a refund, and so on.",
        "properties": {
          "additional_information": {
            "description": "Array of additional information. Otherwise, null.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "child_transactions": {
            "description": "Array of child transactions.",
            "items": {
              "$ref": "#/components/schemas/sales-data-transaction-interface"
            },
            "type": "array"
          },
          "created_at": {
            "description": "Created-at timestamp.",
            "type": "string"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/sales-data-transaction-extension-interface"
          },
          "is_closed": {
            "description": "Is-closed flag value.",
            "type": "integer"
          },
          "order_id": {
            "description": "Order ID.",
            "type": "integer"
          },
          "parent_id": {
            "description": "The parent ID for the transaction. Otherwise, null.",
            "type": "integer"
          },
          "parent_txn_id": {
            "description": "Parent transaction business ID.",
            "type": "string"
          },
          "payment_id": {
            "description": "Payment ID.",
            "type": "integer"
          },
          "transaction_id": {
            "description": "Transaction ID.",
            "type": "integer"
          },
          "txn_id": {
            "description": "Transaction business ID.",
            "type": "string"
          },
          "txn_type": {
            "description": "Transaction type.",
            "type": "string"
          }
        },
        "required": [
          "transaction_id",
          "order_id",
          "payment_id",
          "txn_id",
          "parent_txn_id",
          "txn_type",
          "is_closed",
          "created_at",
          "child_transactions"
        ],
        "type": "object"
      },
      "sales-data-transaction-search-result-interface": {
        "description": "Transaction search result interface. A transaction is an interaction between a merchant and a customer such as a purchase, a credit, a refund, and so on.",
        "properties": {
          "items": {
            "description": "Array of collection items.",
            "items": {
              "$ref": "#/components/schemas/sales-data-transaction-interface"
            },
            "type": "array"
          },
          "search_criteria": {
            "$ref": "#/components/schemas/framework-search-criteria-interface"
          },
          "total_count": {
            "description": "Total count.",
            "type": "integer"
          }
        },
        "required": [
          "items",
          "search_criteria",
          "total_count"
        ],
        "type": "object"
      },
      "sales-rule-data-condition-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\SalesRule\\Api\\Data\\ConditionInterface",
        "type": "object"
      },
      "sales-rule-data-condition-interface": {
        "description": "Interface ConditionInterface",
        "properties": {
          "aggregator_type": {
            "description": "The aggregator type",
            "type": "string"
          },
          "attribute_name": {
            "description": "The attribute name of the condition",
            "type": "string"
          },
          "condition_type": {
            "description": "Condition type",
            "type": "string"
          },
          "conditions": {
            "description": "List of conditions",
            "items": {
              "$ref": "#/components/schemas/sales-rule-data-condition-interface"
            },
            "type": "array"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/sales-rule-data-condition-extension-interface"
          },
          "operator": {
            "description": "The operator of the condition",
            "type": "string"
          },
          "value": {
            "description": "The value of the condition",
            "type": "string"
          }
        },
        "required": [
          "condition_type",
          "operator",
          "value"
        ],
        "type": "object"
      },
      "sales-rule-data-coupon-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\SalesRule\\Api\\Data\\CouponInterface",
        "type": "object"
      },
      "sales-rule-data-coupon-generation-spec-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\SalesRule\\Api\\Data\\CouponGenerationSpecInterface",
        "type": "object"
      },
      "sales-rule-data-coupon-generation-spec-interface": {
        "description": "CouponGenerationSpecInterface",
        "properties": {
          "delimiter": {
            "description": "The delimiter",
            "type": "string"
          },
          "delimiter_at_every": {
            "description": "The spacing where the delimiter should exist",
            "type": "integer"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/sales-rule-data-coupon-generation-spec-extension-interface"
          },
          "format": {
            "description": "Format of generated coupon code",
            "type": "string"
          },
          "length": {
            "description": "Length of coupon code",
            "type": "integer"
          },
          "prefix": {
            "description": "The prefix",
            "type": "string"
          },
          "quantity": {
            "description": "Of coupons to generate",
            "type": "integer"
          },
          "rule_id": {
            "description": "The id of the rule associated with the coupon",
            "type": "integer"
          },
          "suffix": {
            "description": "The suffix",
            "type": "string"
          }
        },
        "required": [
          "rule_id",
          "format",
          "quantity",
          "length"
        ],
        "type": "object"
      },
      "sales-rule-data-coupon-interface": {
        "description": "Interface CouponInterface",
        "properties": {
          "code": {
            "description": "Coupon code",
            "type": "string"
          },
          "coupon_id": {
            "description": "Coupon id",
            "type": "integer"
          },
          "created_at": {
            "description": "When the coupon is created",
            "type": "string"
          },
          "expiration_date": {
            "description": "Expiration date",
            "type": "string"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/sales-rule-data-coupon-extension-interface"
          },
          "is_primary": {
            "description": "The coupon is primary coupon for the rule that it's associated with",
            "type": "boolean"
          },
          "rule_id": {
            "description": "The id of the rule associated with the coupon",
            "type": "integer"
          },
          "times_used": {
            "description": "The number of times the coupon has been used",
            "type": "integer"
          },
          "type": {
            "description": "Of coupon",
            "type": "integer"
          },
          "usage_limit": {
            "description": "Usage limit",
            "type": "integer"
          },
          "usage_per_customer": {
            "description": "Usage limit per customer",
            "type": "integer"
          }
        },
        "required": [
          "rule_id",
          "times_used",
          "is_primary"
        ],
        "type": "object"
      },
      "sales-rule-data-coupon-mass-delete-result-interface": {
        "description": "Coupon mass delete results interface.",
        "properties": {
          "failed_items": {
            "description": "List of failed items.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "missing_items": {
            "description": "List of missing items.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "failed_items",
          "missing_items"
        ],
        "type": "object"
      },
      "sales-rule-data-coupon-search-result-interface": {
        "description": "",
        "properties": {
          "items": {
            "description": "Rules.",
            "items": {
              "$ref": "#/components/schemas/sales-rule-data-coupon-interface"
            },
            "type": "array"
          },
          "search_criteria": {
            "$ref": "#/components/schemas/framework-search-criteria-interface"
          },
          "total_count": {
            "description": "Total count.",
            "type": "integer"
          }
        },
        "required": [
          "items",
          "search_criteria",
          "total_count"
        ],
        "type": "object"
      },
      "sales-rule-data-rule-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\SalesRule\\Api\\Data\\RuleInterface",
        "properties": {
          "reward_points_delta": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "sales-rule-data-rule-interface": {
        "description": "Interface RuleInterface",
        "properties": {
          "action_condition": {
            "$ref": "#/components/schemas/sales-rule-data-condition-interface"
          },
          "apply_to_shipping": {
            "description": "The rule applies to shipping",
            "type": "boolean"
          },
          "condition": {
            "$ref": "#/components/schemas/sales-rule-data-condition-interface"
          },
          "coupon_type": {
            "description": "Coupon type",
            "type": "string"
          },
          "customer_group_ids": {
            "description": "Ids of customer groups that the rule applies to",
            "items": {
              "type": "integer"
            },
            "type": "array"
          },
          "description": {
            "description": "Description",
            "type": "string"
          },
          "discount_amount": {
            "description": "Discount amount",
            "type": "number"
          },
          "discount_qty": {
            "description": "Maximum qty discount is applied",
            "type": "number"
          },
          "discount_step": {
            "description": "Discount step",
            "type": "integer"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/sales-rule-data-rule-extension-interface"
          },
          "from_date": {
            "description": "The start date when the coupon is active",
            "type": "string"
          },
          "is_active": {
            "description": "The coupon is active",
            "type": "boolean"
          },
          "is_advanced": {
            "description": "Is this field needed",
            "type": "boolean"
          },
          "is_rss": {
            "description": "Whether the rule is in RSS",
            "type": "boolean"
          },
          "name": {
            "description": "Rule name",
            "type": "string"
          },
          "product_ids": {
            "description": "Product ids",
            "items": {
              "type": "integer"
            },
            "type": "array"
          },
          "rule_id": {
            "description": "Rule id",
            "type": "integer"
          },
          "simple_action": {
            "description": "Simple action of the rule",
            "type": "string"
          },
          "simple_free_shipping": {
            "description": "To grant free shipping",
            "type": "string"
          },
          "sort_order": {
            "description": "Sort order",
            "type": "integer"
          },
          "stop_rules_processing": {
            "description": "To stop rule processing",
            "type": "boolean"
          },
          "store_labels": {
            "description": "Display label",
            "items": {
              "$ref": "#/components/schemas/sales-rule-data-rule-label-interface"
            },
            "type": "array"
          },
          "times_used": {
            "description": "How many times the rule has been used",
            "type": "integer"
          },
          "to_date": {
            "description": "The end date when the coupon is active",
            "type": "string"
          },
          "use_auto_generation": {
            "description": "To auto generate coupon",
            "type": "boolean"
          },
          "uses_per_coupon": {
            "description": "Limit of uses per coupon",
            "type": "integer"
          },
          "uses_per_customer": {
            "description": "Number of uses per customer",
            "type": "integer"
          },
          "website_ids": {
            "description": "A list of websites the rule applies to",
            "items": {
              "type": "integer"
            },
            "type": "array"
          }
        },
        "required": [
          "website_ids",
          "customer_group_ids",
          "uses_per_customer",
          "is_active",
          "stop_rules_processing",
          "is_advanced",
          "sort_order",
          "discount_amount",
          "discount_step",
          "apply_to_shipping",
          "times_used",
          "is_rss",
          "coupon_type",
          "use_auto_generation",
          "uses_per_coupon"
        ],
        "type": "object"
      },
      "sales-rule-data-rule-label-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\SalesRule\\Api\\Data\\RuleLabelInterface",
        "type": "object"
      },
      "sales-rule-data-rule-label-interface": {
        "description": "Interface RuleLabelInterface",
        "properties": {
          "extension_attributes": {
            "$ref": "#/components/schemas/sales-rule-data-rule-label-extension-interface"
          },
          "store_id": {
            "description": "StoreId",
            "type": "integer"
          },
          "store_label": {
            "description": "The label for the store",
            "type": "string"
          }
        },
        "required": [
          "store_id",
          "store_label"
        ],
        "type": "object"
      },
      "sales-rule-data-rule-search-result-interface": {
        "description": "",
        "properties": {
          "items": {
            "description": "Rules.",
            "items": {
              "$ref": "#/components/schemas/sales-rule-data-rule-interface"
            },
            "type": "array"
          },
          "search_criteria": {
            "$ref": "#/components/schemas/framework-search-criteria-interface"
          },
          "total_count": {
            "description": "Total count.",
            "type": "integer"
          }
        },
        "required": [
          "items",
          "search_criteria",
          "total_count"
        ],
        "type": "object"
      },
      "shared-catalog-data-search-results-interface": {
        "description": "Interface for Shared Catalog search results.",
        "properties": {
          "items": {
            "description": "Shared Catalog list.",
            "items": {
              "$ref": "#/components/schemas/shared-catalog-data-shared-catalog-interface"
            },
            "type": "array"
          },
          "search_criteria": {
            "$ref": "#/components/schemas/framework-search-criteria-interface"
          },
          "total_count": {
            "description": "Total count.",
            "type": "integer"
          }
        },
        "required": [
          "items",
          "search_criteria",
          "total_count"
        ],
        "type": "object"
      },
      "shared-catalog-data-shared-catalog-interface": {
        "description": "SharedCatalogInterface interface.",
        "properties": {
          "created_at": {
            "description": "Created time for Shared Catalog.",
            "type": "string"
          },
          "created_by": {
            "description": "Admin id for Shared Catalog.",
            "type": "integer"
          },
          "customer_group_id": {
            "description": "Customer Group Id.",
            "type": "integer"
          },
          "description": {
            "description": "Shared Catalog description.",
            "type": "string"
          },
          "id": {
            "description": "ID.",
            "type": "integer"
          },
          "name": {
            "description": "Shared Catalog name.",
            "type": "string"
          },
          "store_id": {
            "description": "Store id for Shared Catalog.",
            "type": "integer"
          },
          "tax_class_id": {
            "description": "Tax class id.",
            "type": "integer"
          },
          "type": {
            "description": "Shared Catalog type.",
            "type": "integer"
          }
        },
        "required": [
          "name",
          "description",
          "customer_group_id",
          "type",
          "created_at",
          "created_by",
          "store_id",
          "tax_class_id"
        ],
        "type": "object"
      },
      "store-data-group-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\Store\\Api\\Data\\GroupInterface",
        "type": "object"
      },
      "store-data-group-interface": {
        "description": "Group interface",
        "properties": {
          "code": {
            "description": "Group code.",
            "type": "string"
          },
          "default_store_id": {
            "type": "integer"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/store-data-group-extension-interface"
          },
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "root_category_id": {
            "type": "integer"
          },
          "website_id": {
            "type": "integer"
          }
        },
        "required": [
          "id",
          "website_id",
          "root_category_id",
          "default_store_id",
          "name",
          "code"
        ],
        "type": "object"
      },
      "store-data-store-config-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\Store\\Api\\Data\\StoreConfigInterface",
        "type": "object"
      },
      "store-data-store-config-interface": {
        "description": "StoreConfig interface",
        "properties": {
          "base_currency_code": {
            "description": "Base currency code",
            "type": "string"
          },
          "base_link_url": {
            "description": "Base link URL for the store",
            "type": "string"
          },
          "base_media_url": {
            "description": "Base media URL for the store",
            "type": "string"
          },
          "base_static_url": {
            "description": "Base static URL for the store",
            "type": "string"
          },
          "base_url": {
            "description": "Base URL for the store",
            "type": "string"
          },
          "code": {
            "description": "Store code",
            "type": "string"
          },
          "default_display_currency_code": {
            "description": "Default display currency code",
            "type": "string"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/store-data-store-config-extension-interface"
          },
          "id": {
            "description": "Store id",
            "type": "integer"
          },
          "locale": {
            "description": "Store locale",
            "type": "string"
          },
          "secure_base_link_url": {
            "description": "Secure base link URL for the store",
            "type": "string"
          },
          "secure_base_media_url": {
            "description": "Secure base media URL for the store",
            "type": "string"
          },
          "secure_base_static_url": {
            "description": "Secure base static URL for the store",
            "type": "string"
          },
          "secure_base_url": {
            "description": "Secure base URL for the store",
            "type": "string"
          },
          "timezone": {
            "description": "Timezone of the store",
            "type": "string"
          },
          "website_id": {
            "description": "Website id of the store",
            "type": "integer"
          },
          "weight_unit": {
            "description": "The unit of weight",
            "type": "string"
          }
        },
        "required": [
          "id",
          "code",
          "website_id",
          "locale",
          "base_currency_code",
          "default_display_currency_code",
          "timezone",
          "weight_unit",
          "base_url",
          "base_link_url",
          "base_static_url",
          "base_media_url",
          "secure_base_url",
          "secure_base_link_url",
          "secure_base_static_url",
          "secure_base_media_url"
        ],
        "type": "object"
      },
      "store-data-store-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\Store\\Api\\Data\\StoreInterface",
        "type": "object"
      },
      "store-data-store-interface": {
        "description": "Store interface",
        "properties": {
          "code": {
            "type": "string"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/store-data-store-extension-interface"
          },
          "id": {
            "type": "integer"
          },
          "name": {
            "description": "Store name",
            "type": "string"
          },
          "store_group_id": {
            "type": "integer"
          },
          "website_id": {
            "type": "integer"
          }
        },
        "required": [
          "id",
          "code",
          "name",
          "website_id",
          "store_group_id"
        ],
        "type": "object"
      },
      "store-data-website-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\Store\\Api\\Data\\WebsiteInterface",
        "type": "object"
      },
      "store-data-website-interface": {
        "description": "Website interface",
        "properties": {
          "code": {
            "type": "string"
          },
          "default_group_id": {
            "type": "integer"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/store-data-website-extension-interface"
          },
          "id": {
            "type": "integer"
          },
          "name": {
            "description": "Website name",
            "type": "string"
          }
        },
        "required": [
          "id",
          "code",
          "name",
          "default_group_id"
        ],
        "type": "object"
      },
      "tax-data-applied-tax-rate-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\Tax\\Api\\Data\\AppliedTaxRateInterface",
        "type": "object"
      },
      "tax-data-applied-tax-rate-interface": {
        "description": "Applied tax rate interface.",
        "properties": {
          "code": {
            "description": "Code",
            "type": "string"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/tax-data-applied-tax-rate-extension-interface"
          },
          "percent": {
            "description": "Tax Percent",
            "type": "number"
          },
          "title": {
            "description": "Title",
            "type": "string"
          }
        },
        "type": "object"
      },
      "tax-data-grand-total-details-interface": {
        "description": "Interface GrandTotalDetailsInterface",
        "properties": {
          "amount": {
            "description": "Tax amount value",
            "type": "number"
          },
          "group_id": {
            "description": "Group identifier",
            "type": "integer"
          },
          "rates": {
            "description": "Tax rates info",
            "items": {
              "$ref": "#/components/schemas/tax-data-grand-total-rates-interface"
            },
            "type": "array"
          }
        },
        "required": [
          "amount",
          "rates",
          "group_id"
        ],
        "type": "object"
      },
      "tax-data-grand-total-rates-interface": {
        "description": "Interface GrandTotalRatesInterface",
        "properties": {
          "percent": {
            "description": "Tax percentage value",
            "type": "string"
          },
          "title": {
            "description": "Rate title",
            "type": "string"
          }
        },
        "required": [
          "percent",
          "title"
        ],
        "type": "object"
      },
      "tax-data-order-tax-details-applied-tax-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\Tax\\Api\\Data\\OrderTaxDetailsAppliedTaxInterface",
        "properties": {
          "rates": {
            "items": {
              "$ref": "#/components/schemas/tax-data-applied-tax-rate-interface"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "tax-data-order-tax-details-applied-tax-interface": {
        "description": "Interface OrderTaxDetailsAppliedTaxInterface",
        "properties": {
          "amount": {
            "description": "Tax amount",
            "type": "number"
          },
          "base_amount": {
            "description": "Tax amount in base currency",
            "type": "number"
          },
          "code": {
            "description": "Code",
            "type": "string"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/tax-data-order-tax-details-applied-tax-extension-interface"
          },
          "percent": {
            "description": "Tax Percent",
            "type": "number"
          },
          "title": {
            "description": "Title",
            "type": "string"
          }
        },
        "required": [
          "amount",
          "base_amount"
        ],
        "type": "object"
      },
      "tax-data-order-tax-details-item-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\Tax\\Api\\Data\\OrderTaxDetailsItemInterface",
        "type": "object"
      },
      "tax-data-order-tax-details-item-interface": {
        "description": "Interface OrderTaxDetailsItemInterface",
        "properties": {
          "applied_taxes": {
            "description": "Applied taxes",
            "items": {
              "$ref": "#/components/schemas/tax-data-order-tax-details-applied-tax-interface"
            },
            "type": "array"
          },
          "associated_item_id": {
            "description": "Associated item id if this item is associated with another item, null otherwise",
            "type": "integer"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/tax-data-order-tax-details-item-extension-interface"
          },
          "item_id": {
            "description": "Item id if this item is a product",
            "type": "integer"
          },
          "type": {
            "description": "Type (shipping, product, weee, gift wrapping, etc)",
            "type": "string"
          }
        },
        "type": "object"
      },
      "tax-data-tax-class-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\Tax\\Api\\Data\\TaxClassInterface",
        "type": "object"
      },
      "tax-data-tax-class-interface": {
        "description": "Tax class interface.",
        "properties": {
          "class_id": {
            "description": "Tax class ID.",
            "type": "integer"
          },
          "class_name": {
            "description": "Tax class name.",
            "type": "string"
          },
          "class_type": {
            "description": "Tax class type.",
            "type": "string"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/tax-data-tax-class-extension-interface"
          }
        },
        "required": [
          "class_name",
          "class_type"
        ],
        "type": "object"
      },
      "tax-data-tax-class-search-results-interface": {
        "description": "Interface for tax class search results.",
        "properties": {
          "items": {
            "description": "Items",
            "items": {
              "$ref": "#/components/schemas/tax-data-tax-class-interface"
            },
            "type": "array"
          },
          "search_criteria": {
            "$ref": "#/components/schemas/framework-search-criteria-interface"
          },
          "total_count": {
            "description": "Total count.",
            "type": "integer"
          }
        },
        "required": [
          "items",
          "search_criteria",
          "total_count"
        ],
        "type": "object"
      },
      "tax-data-tax-rate-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\Tax\\Api\\Data\\TaxRateInterface",
        "type": "object"
      },
      "tax-data-tax-rate-interface": {
        "description": "Tax rate interface.",
        "properties": {
          "code": {
            "description": "Tax rate code",
            "type": "string"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/tax-data-tax-rate-extension-interface"
          },
          "id": {
            "description": "Id",
            "type": "integer"
          },
          "rate": {
            "description": "Tax rate in percentage",
            "type": "number"
          },
          "region_name": {
            "description": "Region name",
            "type": "string"
          },
          "tax_country_id": {
            "description": "Country id",
            "type": "string"
          },
          "tax_postcode": {
            "description": "Postcode",
            "type": "string"
          },
          "tax_region_id": {
            "description": "Region id",
            "type": "integer"
          },
          "titles": {
            "description": "Tax rate titles",
            "items": {
              "$ref": "#/components/schemas/tax-data-tax-rate-title-interface"
            },
            "type": "array"
          },
          "zip_from": {
            "description": "Zip range from",
            "type": "integer"
          },
          "zip_is_range": {
            "description": "Zip is range",
            "type": "integer"
          },
          "zip_to": {
            "description": "Zip range to",
            "type": "integer"
          }
        },
        "required": [
          "tax_country_id",
          "rate",
          "code"
        ],
        "type": "object"
      },
      "tax-data-tax-rate-search-results-interface": {
        "description": "Interface for tax rate search results.",
        "properties": {
          "items": {
            "description": "Items",
            "items": {
              "$ref": "#/components/schemas/tax-data-tax-rate-interface"
            },
            "type": "array"
          },
          "search_criteria": {
            "$ref": "#/components/schemas/framework-search-criteria-interface"
          },
          "total_count": {
            "description": "Total count.",
            "type": "integer"
          }
        },
        "required": [
          "items",
          "search_criteria",
          "total_count"
        ],
        "type": "object"
      },
      "tax-data-tax-rate-title-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\Tax\\Api\\Data\\TaxRateTitleInterface",
        "type": "object"
      },
      "tax-data-tax-rate-title-interface": {
        "description": "Tax rate title interface.",
        "properties": {
          "extension_attributes": {
            "$ref": "#/components/schemas/tax-data-tax-rate-title-extension-interface"
          },
          "store_id": {
            "description": "Store id",
            "type": "string"
          },
          "value": {
            "description": "Title value",
            "type": "string"
          }
        },
        "required": [
          "store_id",
          "value"
        ],
        "type": "object"
      },
      "tax-data-tax-rule-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\Tax\\Api\\Data\\TaxRuleInterface",
        "type": "object"
      },
      "tax-data-tax-rule-interface": {
        "description": "Tax rule interface.",
        "properties": {
          "calculate_subtotal": {
            "description": "Calculate subtotal.",
            "type": "boolean"
          },
          "code": {
            "description": "Tax rule code",
            "type": "string"
          },
          "customer_tax_class_ids": {
            "description": "Customer tax class id",
            "items": {
              "type": "integer"
            },
            "type": "array"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/tax-data-tax-rule-extension-interface"
          },
          "id": {
            "description": "Id",
            "type": "integer"
          },
          "position": {
            "description": "Sort order.",
            "type": "integer"
          },
          "priority": {
            "description": "Priority",
            "type": "integer"
          },
          "product_tax_class_ids": {
            "description": "Product tax class id",
            "items": {
              "type": "integer"
            },
            "type": "array"
          },
          "tax_rate_ids": {
            "description": "Tax rate ids",
            "items": {
              "type": "integer"
            },
            "type": "array"
          }
        },
        "required": [
          "code",
          "priority",
          "position",
          "customer_tax_class_ids",
          "product_tax_class_ids",
          "tax_rate_ids"
        ],
        "type": "object"
      },
      "tax-data-tax-rule-search-results-interface": {
        "description": "Interface for tax rule search results.",
        "properties": {
          "items": {
            "description": "Items",
            "items": {
              "$ref": "#/components/schemas/tax-data-tax-rule-interface"
            },
            "type": "array"
          },
          "search_criteria": {
            "$ref": "#/components/schemas/framework-search-criteria-interface"
          },
          "total_count": {
            "description": "Total count.",
            "type": "integer"
          }
        },
        "required": [
          "items",
          "search_criteria",
          "total_count"
        ],
        "type": "object"
      },
      "temando-shipping-data-collection-point-order-collection-point-interface": {
        "description": "Temando Order Collection Point Interface – Order Details/Fulfillment",
        "properties": {
          "city": {
            "type": "string"
          },
          "collection_point_id": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "postcode": {
            "type": "string"
          },
          "recipient_address_id": {
            "type": "integer"
          },
          "region": {
            "type": "string"
          },
          "street": {
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "recipient_address_id",
          "collection_point_id",
          "name",
          "country",
          "region",
          "postcode",
          "city",
          "street"
        ],
        "type": "object"
      },
      "temando-shipping-data-collection-point-quote-collection-point-interface": {
        "description": "Temando Quote Collection Point Interface – Checkout/Quoting",
        "properties": {
          "city": {
            "type": "string"
          },
          "collection_point_id": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "entity_id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "opening_hours": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "postcode": {
            "type": "string"
          },
          "recipient_address_id": {
            "type": "integer"
          },
          "region": {
            "type": "string"
          },
          "selected": {
            "type": "boolean"
          },
          "shipping_experiences": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "street": {
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "entity_id",
          "collection_point_id",
          "recipient_address_id",
          "name",
          "country",
          "region",
          "postcode",
          "city",
          "street",
          "opening_hours",
          "shipping_experiences",
          "selected"
        ],
        "type": "object"
      },
      "temando-shipping-data-collection-point-search-request-interface": {
        "description": "Temando Collection Point Search Request Interface",
        "properties": {
          "country_id": {
            "type": "string"
          },
          "pending": {
            "type": "boolean"
          },
          "postcode": {
            "type": "string"
          },
          "shipping_address_id": {
            "type": "integer"
          }
        },
        "required": [
          "shipping_address_id",
          "country_id",
          "postcode",
          "pending"
        ],
        "type": "object"
      },
      "temando-shipping-data-order-shipping-experience-interface": {
        "description": "Temando Shipping Experience Interface Local representation of a shipping rate in checkout. A set of shipping experiences is the result of creating an order at the Temando platform. (!) Needs to reside in Api namespace because selected shipping experience is exposed to public as a ShippingInterface extension attribute.",
        "properties": {
          "code": {
            "type": "string"
          },
          "cost": {
            "type": "number"
          },
          "label": {
            "type": "string"
          }
        },
        "required": [
          "label",
          "code",
          "cost"
        ],
        "type": "object"
      },
      "vault-data-payment-token-interface": {
        "description": "Gateway vault payment token interface.",
        "properties": {
          "created_at": {
            "description": "Token creation timestamp",
            "type": "string"
          },
          "customer_id": {
            "description": "Customer ID.",
            "type": "integer"
          },
          "entity_id": {
            "description": "Entity ID.",
            "type": "integer"
          },
          "expires_at": {
            "description": "Token expiration timestamp",
            "type": "string"
          },
          "gateway_token": {
            "description": "Gateway token ID",
            "type": "string"
          },
          "is_active": {
            "description": "Is active.",
            "type": "boolean"
          },
          "is_visible": {
            "description": "Is visible.",
            "type": "boolean"
          },
          "payment_method_code": {
            "description": "Payment method code",
            "type": "string"
          },
          "public_hash": {
            "description": "Public hash",
            "type": "string"
          },
          "token_details": {
            "description": "Token details",
            "type": "string"
          },
          "type": {
            "description": "Type",
            "type": "string"
          }
        },
        "required": [
          "public_hash",
          "payment_method_code",
          "type",
          "gateway_token",
          "token_details",
          "is_active",
          "is_visible"
        ],
        "type": "object"
      },
      "weee-data-product-render-weee-adjustment-attribute-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\Weee\\Api\\Data\\ProductRender\\WeeeAdjustmentAttributeInterface",
        "type": "object"
      },
      "weee-data-product-render-weee-adjustment-attribute-interface": {
        "description": "List of all weee attributes, their amounts, etc.., that product has",
        "properties": {
          "amount": {
            "description": "Weee attribute amount",
            "type": "string"
          },
          "amount_excl_tax": {
            "description": "Product amount exclude tax",
            "type": "string"
          },
          "attribute_code": {
            "description": "Weee attribute code",
            "type": "string"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/weee-data-product-render-weee-adjustment-attribute-extension-interface"
          },
          "tax_amount": {
            "description": "Tax which is calculated to fixed product tax attribute",
            "type": "string"
          },
          "tax_amount_incl_tax": {
            "description": "Tax amount of weee attribute",
            "type": "string"
          }
        },
        "required": [
          "amount",
          "tax_amount",
          "tax_amount_incl_tax",
          "amount_excl_tax",
          "attribute_code",
          "extension_attributes"
        ],
        "type": "object"
      }
    }
  },
  "x-tagGroups": [
    {
      "name": "addresses",
      "tags": [
        "addresses/{addressId}"
      ]
    },
    {
      "name": "amazon billing address",
      "tags": [
        "amazon-billing-address/{amazonOrderReferenceId}"
      ]
    },
    {
      "name": "amazon shipping address",
      "tags": [
        "amazon-shipping-address/{amazonOrderReferenceId}"
      ]
    },
    {
      "name": "amazon",
      "tags": [
        "amazon/order-ref"
      ]
    },
    {
      "name": "analytics",
      "tags": [
        "analytics/link"
      ]
    },
    {
      "name": "attributeMetadata",
      "tags": [
        "attributeMetadata/customer",
        "attributeMetadata/customer/attribute/{attributeCode}",
        "attributeMetadata/customer/custom",
        "attributeMetadata/customer/form/{formCode}",
        "attributeMetadata/customerAddress",
        "attributeMetadata/customerAddress/attribute/{attributeCode}",
        "attributeMetadata/customerAddress/custom",
        "attributeMetadata/customerAddress/form/{formCode}"
      ]
    },
    {
      "name": "bulk",
      "tags": [
        "bulk/{bulkUuid}/detailed-status",
        "bulk/{bulkUuid}/operation-status/{status}",
        "bulk/{bulkUuid}/status"
      ]
    },
    {
      "name": "bundle products",
      "tags": [
        "bundle-products/options/add",
        "bundle-products/options/types",
        "bundle-products/options/{optionId}",
        "bundle-products/{productSku}/children",
        "bundle-products/{sku}/links/{id}",
        "bundle-products/{sku}/links/{optionId}",
        "bundle-products/{sku}/options/all",
        "bundle-products/{sku}/options/{optionId}",
        "bundle-products/{sku}/options/{optionId}/children/{childSku}"
      ]
    },
    {
      "name": "carts",
      "tags": [
        "carts/",
        "carts/guest-carts/{cartId}/checkGiftCard/{giftCardCode}",
        "carts/guest-carts/{cartId}/giftCards",
        "carts/guest-carts/{cartId}/giftCards/{giftCardCode}",
        "carts/licence",
        "carts/mine",
        "carts/mine/balance/apply",
        "carts/mine/balance/unapply",
        "carts/mine/billing-address",
        "carts/mine/checkGiftCard/{giftCardCode}",
        "carts/mine/checkout-fields",
        "carts/mine/collect-totals",
        "carts/mine/collection-point/search-request",
        "carts/mine/collection-point/search-result",
        "carts/mine/collection-point/select",
        "carts/mine/coupons",
        "carts/mine/coupons/{couponCode}",
        "carts/mine/delivery-option",
        "carts/mine/estimate-shipping-methods",
        "carts/mine/estimate-shipping-methods-by-address-id",
        "carts/mine/gift-message",
        "carts/mine/gift-message/{itemId}",
        "carts/mine/giftCards",
        "carts/mine/giftCards/{giftCardCode}",
        "carts/mine/items",
        "carts/mine/items/{itemId}",
        "carts/mine/order",
        "carts/mine/payment-information",
        "carts/mine/payment-methods",
        "carts/mine/selected-payment-method",
        "carts/mine/set-payment-information",
        "carts/mine/shipping-information",
        "carts/mine/shipping-methods",
        "carts/mine/totals",
        "carts/mine/totals-information",
        "carts/search",
        "carts/{cartId}",
        "carts/{cartId}/billing-address",
        "carts/{cartId}/coupons",
        "carts/{cartId}/coupons/{couponCode}",
        "carts/{cartId}/estimate-shipping-methods",
        "carts/{cartId}/estimate-shipping-methods-by-address-id",
        "carts/{cartId}/gift-message",
        "carts/{cartId}/gift-message/{itemId}",
        "carts/{cartId}/giftCards",
        "carts/{cartId}/giftCards/{giftCardCode}",
        "carts/{cartId}/items",
        "carts/{cartId}/items/{itemId}",
        "carts/{cartId}/order",
        "carts/{cartId}/payment-methods",
        "carts/{cartId}/selected-payment-method",
        "carts/{cartId}/shipping-information",
        "carts/{cartId}/shipping-methods",
        "carts/{cartId}/totals",
        "carts/{cartId}/totals-information",
        "carts/{quoteId}/giftCards",
        "carts/{quoteId}/items"
      ]
    },
    {
      "name": "categories",
      "tags": [
        "categories",
        "categories/attributes",
        "categories/attributes/{attributeCode}",
        "categories/attributes/{attributeCode}/options",
        "categories/list",
        "categories/{categoryId}",
        "categories/{categoryId}/move",
        "categories/{categoryId}/products",
        "categories/{categoryId}/products/{sku}",
        "categories/{id}"
      ]
    },
    {
      "name": "cmsBlock",
      "tags": [
        "cmsBlock",
        "cmsBlock/search",
        "cmsBlock/{blockId}",
        "cmsBlock/{id}"
      ]
    },
    {
      "name": "cmsPage",
      "tags": [
        "cmsPage",
        "cmsPage/search",
        "cmsPage/{id}",
        "cmsPage/{pageId}"
      ]
    },
    {
      "name": "company",
      "tags": [
        "company/",
        "company/assignRoles",
        "company/role/",
        "company/role/{id}",
        "company/role/{roleId}",
        "company/role/{roleId}/users",
        "company/{companyId}"
      ]
    },
    {
      "name": "companyCredits",
      "tags": [
        "companyCredits/",
        "companyCredits/company/{companyId}",
        "companyCredits/history",
        "companyCredits/history/{historyId}",
        "companyCredits/{creditId}",
        "companyCredits/{creditId}/decreaseBalance",
        "companyCredits/{creditId}/increaseBalance",
        "companyCredits/{id}"
      ]
    },
    {
      "name": "configurable products",
      "tags": [
        "configurable-products/variation",
        "configurable-products/{sku}/child",
        "configurable-products/{sku}/children",
        "configurable-products/{sku}/children/{childSku}",
        "configurable-products/{sku}/options",
        "configurable-products/{sku}/options/all",
        "configurable-products/{sku}/options/{id}"
      ]
    },
    {
      "name": "coupons",
      "tags": [
        "coupons",
        "coupons/deleteByCodes",
        "coupons/deleteByIds",
        "coupons/generate",
        "coupons/search",
        "coupons/{couponId}"
      ]
    },
    {
      "name": "creditmemo",
      "tags": [
        "creditmemo",
        "creditmemo/refund",
        "creditmemo/{id}",
        "creditmemo/{id}/comments",
        "creditmemo/{id}/emails"
      ]
    },
    {
      "name": "creditmemos",
      "tags": [
        "creditmemos"
      ]
    },
    {
      "name": "customerGroups",
      "tags": [
        "customerGroups",
        "customerGroups/default",
        "customerGroups/default/{id}",
        "customerGroups/default/{storeId}",
        "customerGroups/search",
        "customerGroups/{id}",
        "customerGroups/{id}/permissions"
      ]
    },
    {
      "name": "customers",
      "tags": [
        "customers",
        "customers/addresses/{addressId}",
        "customers/confirm",
        "customers/isEmailAvailable",
        "customers/me",
        "customers/me/activate",
        "customers/me/billingAddress",
        "customers/me/password",
        "customers/me/shippingAddress",
        "customers/password",
        "customers/resetPassword",
        "customers/search",
        "customers/validate",
        "customers/{customerId}",
        "customers/{customerId}/billingAddress",
        "customers/{customerId}/carts",
        "customers/{customerId}/confirm",
        "customers/{customerId}/password/resetLinkToken/{resetPasswordLinkToken}",
        "customers/{customerId}/permissions/readonly",
        "customers/{customerId}/shippingAddress",
        "customers/{email}/activate"
      ]
    },
    {
      "name": "directory",
      "tags": [
        "directory/countries",
        "directory/countries/{countryId}",
        "directory/currency"
      ]
    },
    {
      "name": "eav",
      "tags": [
        "eav/attribute-sets",
        "eav/attribute-sets/list",
        "eav/attribute-sets/{attributeSetId}"
      ]
    },
    {
      "name": "gift wrappings",
      "tags": [
        "gift-wrappings",
        "gift-wrappings/{id}",
        "gift-wrappings/{wrappingId}"
      ]
    },
    {
      "name": "giftregistry",
      "tags": [
        "giftregistry/mine/estimate-shipping-methods"
      ]
    },
    {
      "name": "guest carts",
      "tags": [
        "guest-carts",
        "guest-carts/{cartId}",
        "guest-carts/{cartId}/billing-address",
        "guest-carts/{cartId}/checkout-fields",
        "guest-carts/{cartId}/collect-totals",
        "guest-carts/{cartId}/collection-point/search-request",
        "guest-carts/{cartId}/collection-point/search-result",
        "guest-carts/{cartId}/collection-point/select",
        "guest-carts/{cartId}/coupons",
        "guest-carts/{cartId}/coupons/{couponCode}",
        "guest-carts/{cartId}/delivery-option",
        "guest-carts/{cartId}/estimate-shipping-methods",
        "guest-carts/{cartId}/gift-message",
        "guest-carts/{cartId}/gift-message/{itemId}",
        "guest-carts/{cartId}/items",
        "guest-carts/{cartId}/items/{itemId}",
        "guest-carts/{cartId}/order",
        "guest-carts/{cartId}/payment-information",
        "guest-carts/{cartId}/payment-methods",
        "guest-carts/{cartId}/selected-payment-method",
        "guest-carts/{cartId}/set-payment-information",
        "guest-carts/{cartId}/shipping-information",
        "guest-carts/{cartId}/shipping-methods",
        "guest-carts/{cartId}/totals",
        "guest-carts/{cartId}/totals-information"
      ]
    },
    {
      "name": "guest giftregistry",
      "tags": [
        "guest-giftregistry/{cartId}/estimate-shipping-methods"
      ]
    },
    {
      "name": "hierarchy",
      "tags": [
        "hierarchy/move/{id}",
        "hierarchy/{id}"
      ]
    },
    {
      "name": "integration",
      "tags": [
        "integration/admin/token",
        "integration/customer/token"
      ]
    },
    {
      "name": "invoice",
      "tags": [
        "invoice/{invoiceId}/refund"
      ]
    },
    {
      "name": "invoices",
      "tags": [
        "invoices",
        "invoices/",
        "invoices/comments",
        "invoices/{id}",
        "invoices/{id}/capture",
        "invoices/{id}/comments",
        "invoices/{id}/emails",
        "invoices/{id}/void"
      ]
    },
    {
      "name": "modules",
      "tags": [
        "modules"
      ]
    },
    {
      "name": "negotiable carts",
      "tags": [
        "negotiable-carts/{cartId}/billing-address",
        "negotiable-carts/{cartId}/coupons",
        "negotiable-carts/{cartId}/coupons/{couponCode}",
        "negotiable-carts/{cartId}/estimate-shipping-methods",
        "negotiable-carts/{cartId}/estimate-shipping-methods-by-address-id",
        "negotiable-carts/{cartId}/giftCards",
        "negotiable-carts/{cartId}/giftCards/{giftCardCode}",
        "negotiable-carts/{cartId}/payment-information",
        "negotiable-carts/{cartId}/set-payment-information",
        "negotiable-carts/{cartId}/shipping-information",
        "negotiable-carts/{cartId}/totals"
      ]
    },
    {
      "name": "negotiableQuote",
      "tags": [
        "negotiableQuote/attachmentContent",
        "negotiableQuote/decline",
        "negotiableQuote/pricesUpdated",
        "negotiableQuote/request",
        "negotiableQuote/submitToCustomer",
        "negotiableQuote/{quoteId}",
        "negotiableQuote/{quoteId}/comments",
        "negotiableQuote/{quoteId}/shippingMethod"
      ]
    },
    {
      "name": "order",
      "tags": [
        "order/{orderId}/invoice",
        "order/{orderId}/refund",
        "order/{orderId}/ship"
      ]
    },
    {
      "name": "orders",
      "tags": [
        "orders",
        "orders/",
        "orders/create",
        "orders/items",
        "orders/items/{id}",
        "orders/{id}",
        "orders/{id}/cancel",
        "orders/{id}/comments",
        "orders/{id}/emails",
        "orders/{id}/hold",
        "orders/{id}/statuses",
        "orders/{id}/unhold",
        "orders/{parent_id}"
      ]
    },
    {
      "name": "products",
      "tags": [
        "products",
        "products/attribute-sets",
        "products/attribute-sets/attributes",
        "products/attribute-sets/groups",
        "products/attribute-sets/groups/list",
        "products/attribute-sets/groups/{groupId}",
        "products/attribute-sets/sets/list",
        "products/attribute-sets/{attributeSetId}",
        "products/attribute-sets/{attributeSetId}/attributes",
        "products/attribute-sets/{attributeSetId}/attributes/{attributeCode}",
        "products/attribute-sets/{attributeSetId}/groups",
        "products/attributes",
        "products/attributes/types",
        "products/attributes/{attributeCode}",
        "products/attributes/{attributeCode}/options",
        "products/attributes/{attributeCode}/options/{optionId}",
        "products/base-prices",
        "products/base-prices-information",
        "products/cost",
        "products/cost-delete",
        "products/cost-information",
        "products/downloadable-links/samples/{id}",
        "products/downloadable-links/{id}",
        "products/links/types",
        "products/links/{type}/attributes",
        "products/media/types/{attributeSetName}",
        "products/options",
        "products/options/types",
        "products/options/{optionId}",
        "products/special-price",
        "products/special-price-delete",
        "products/special-price-information",
        "products/tier-prices",
        "products/tier-prices-delete",
        "products/tier-prices-information",
        "products/types",
        "products/{productSku}/stockItems/{itemId}",
        "products/{sku}",
        "products/{sku}/downloadable-links",
        "products/{sku}/downloadable-links/samples",
        "products/{sku}/downloadable-links/samples/{id}",
        "products/{sku}/downloadable-links/{id}",
        "products/{sku}/group-prices/{customerGroupId}/tiers",
        "products/{sku}/group-prices/{customerGroupId}/tiers/{qty}",
        "products/{sku}/group-prices/{customerGroupId}/tiers/{qty}/price/{price}",
        "products/{sku}/links",
        "products/{sku}/links/{type}",
        "products/{sku}/links/{type}/{linkedProductSku}",
        "products/{sku}/media",
        "products/{sku}/media/{entryId}",
        "products/{sku}/options",
        "products/{sku}/options/{optionId}",
        "products/{sku}/websites",
        "products/{sku}/websites/{websiteId}"
      ]
    },
    {
      "name": "products render info",
      "tags": [
        "products-render-info"
      ]
    },
    {
      "name": "requisition_lists",
      "tags": [
        "requisition_lists"
      ]
    },
    {
      "name": "returns",
      "tags": [
        "returns",
        "returns/{id}",
        "returns/{id}/comments",
        "returns/{id}/labels",
        "returns/{id}/tracking-numbers",
        "returns/{id}/tracking-numbers/{trackId}"
      ]
    },
    {
      "name": "returnsAttributeMetadata",
      "tags": [
        "returnsAttributeMetadata",
        "returnsAttributeMetadata/custom",
        "returnsAttributeMetadata/form/{formCode}",
        "returnsAttributeMetadata/{attributeCode}"
      ]
    },
    {
      "name": "reward",
      "tags": [
        "reward/mine/use-reward"
      ]
    },
    {
      "name": "salesRules",
      "tags": [
        "salesRules",
        "salesRules/search",
        "salesRules/{ruleId}"
      ]
    },
    {
      "name": "search",
      "tags": [
        "search"
      ]
    },
    {
      "name": "sharedCatalog",
      "tags": [
        "sharedCatalog",
        "sharedCatalog/",
        "sharedCatalog/{id}",
        "sharedCatalog/{id}/assignCategories",
        "sharedCatalog/{id}/assignProducts",
        "sharedCatalog/{id}/categories",
        "sharedCatalog/{id}/products",
        "sharedCatalog/{id}/unassignCategories",
        "sharedCatalog/{id}/unassignProducts",
        "sharedCatalog/{sharedCatalogId}",
        "sharedCatalog/{sharedCatalogId}/assignCompanies",
        "sharedCatalog/{sharedCatalogId}/companies",
        "sharedCatalog/{sharedCatalogId}/unassignCompanies"
      ]
    },
    {
      "name": "shipment",
      "tags": [
        "shipment/",
        "shipment/track",
        "shipment/track/{id}",
        "shipment/{id}",
        "shipment/{id}/comments",
        "shipment/{id}/emails",
        "shipment/{id}/label"
      ]
    },
    {
      "name": "shipments",
      "tags": [
        "shipments"
      ]
    },
    {
      "name": "stockItems",
      "tags": [
        "stockItems/lowStock/",
        "stockItems/{productSku}"
      ]
    },
    {
      "name": "stockStatuses",
      "tags": [
        "stockStatuses/{productSku}"
      ]
    },
    {
      "name": "store",
      "tags": [
        "store/storeConfigs",
        "store/storeGroups",
        "store/storeViews",
        "store/websites"
      ]
    },
    {
      "name": "taxClasses",
      "tags": [
        "taxClasses",
        "taxClasses/search",
        "taxClasses/{classId}",
        "taxClasses/{taxClassId}"
      ]
    },
    {
      "name": "taxRates",
      "tags": [
        "taxRates",
        "taxRates/search",
        "taxRates/{rateId}"
      ]
    },
    {
      "name": "taxRules",
      "tags": [
        "taxRules",
        "taxRules/search",
        "taxRules/{ruleId}"
      ]
    },
    {
      "name": "team",
      "tags": [
        "team/",
        "team/{companyId}",
        "team/{teamId}"
      ]
    },
    {
      "name": "temando",
      "tags": [
        "temando/rma/{rmaId}/shipments"
      ]
    },
    {
      "name": "transactions",
      "tags": [
        "transactions",
        "transactions/{id}"
      ]
    },
    {
      "name": "worldpay guest carts",
      "tags": [
        "worldpay-guest-carts/{cartId}/payment-information"
      ]
    }
  ]
}