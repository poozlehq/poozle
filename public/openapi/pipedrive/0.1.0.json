{
  "openapi": "3.0.1",
  "info": { "title": "Pipedrive API v1", "version": "1.0.0" },
  "servers": [ { "url": "https://api.pipedrive.com/v1" } ],
  "tags": [
    {
      "name": "Activities",
      "description": "Activities are appointments/tasks/events on a calendar that can be associated with a deal, a lead, a person and an organization. Activities can be of different type (such as call, meeting, lunch or a custom type - see ActivityTypes object) and can be assigned to a particular user. Note that activities can also be created without a specific date/time.\n"
    },
    {
      "name": "ActivityFields",
      "description": "Activity fields represent different fields that an activity has.\n"
    },
    {
      "name": "ActivityTypes",
      "description": "Activity types represent different kinds of activities that can be stored. Each activity type is presented to the user with an icon and a name. Additionally, a color can be defined (not implemented in the Pipedrive app as of today). Activity types are linked to activities via `ActivityType.key_string = Activity.type`. The `key_string` will be generated by the API based on the given name of the activity type upon creation, and cannot be changed. Activity types should be presented to the user in an ordered manner, using the `ActivityType.order_nr` value.\n"
    },
    {
      "name": "Billing",
      "description": "Billing is responsible for handling your subscriptions, payments, plans and add-ons.\n"
    },
    {
      "name": "CallLogs",
      "description": "Call logs describe the outcome of a phone call managed by an integrated provider. Since these logs are also considered activities, they can be associated with a deal, a person and/or an organization. Call logs do differ from other activities, as they only receive the information needed to describe the phone call.\n"
    },
    {
      "name": "Channels",
      "description": "Channels API allows you to integrate your existing messaging channels into Pipedrive through [Messaging app extension](https://pipedrive.readme.io/docs/messaging-app-extension). It enables you to manage and interact with the channel’s conversations, participants and messages inside Pipedrive Messaging inbox: get the historical conversation, receive and send new messages. These endpoints are accessible only through **Messengers integration** OAuth scope together with Messaging manifest in building the [Messaging app extension](https://pipedrive.readme.io/docs/messaging-app-extension).\n"
    },
    {
      "name": "Currencies",
      "description": "Supported currencies which can be used to represent the monetary value of a deal, or a value of any monetary type custom field. The `Currency.code` field must be used to point to a currency. `Currency.code` is the ISO-4217 format currency code for non-custom currencies. You can differentiate custom and non-custom currencies using the `is_custom_flag` property. For custom currencies, it is intended that the formatted sums are displayed in the UI using the following format: [sum][non-breaking space character][currency.symbol], for example: 500 users. Custom currencies cannot be added or removed via the API yet — rather the admin users of the account must configure them from the Pipedrive app.\n"
    },
    {
      "name": "DealFields",
      "description": "Deal fields represent the near-complete schema for a deal in the context of the company of the authorized user. Each company can have a different schema for their deals, with various custom fields. In the context of using deal fields as a schema for defining the data fields of a deal, it must be kept in mind that some types of custom fields can have additional data fields which are not separate deal fields per se. Such is the case with monetary, daterange and timerange fields – each of these fields will have one additional data field in addition to the one presented in the context of deal fields. For example, if there is a monetary field with the key `ffk9s9` stored on the account, `ffk9s9` would hold the numeric value of the field, and `ffk9s9_currency` would hold the ISO currency code that goes along with the numeric value. To find out which data fields are available, fetch one deal and list its keys.\n"
    },
    {
      "name": "Deals",
      "description": "Deals represent ongoing, lost or won sales to an organization or to a person. Each deal has a monetary value and must be placed in a stage. Deals can be owned by a user, and followed by one or many users. Each deal consists of standard data fields but can also contain a number of custom fields. The custom fields can be recognized by long hashes as keys. These hashes can be mapped against `DealField.key`. The corresponding label for each such custom field can be obtained from `DealField.name`.\n"
    },
    {
      "name": "Files",
      "description": "Files are documents of any kind (images, spreadsheets, text files, etc.) that are uploaded to Pipedrive, and usually associated with a particular deal, person, organization, product, note or activity. Remote files can only be associated with a particular deal, person or organization. Note that the API currently does not support downloading files although it lets you retrieve a file’s meta-info along with a URL which can be used to download the file by using a standard HTTP GET request.\n"
    },
    {
      "name": "Filters",
      "description": "Each filter is essentially a set of data validation conditions. A filter of the same kind can be applied when fetching a list of deals, leads, persons, organizations or products in the context of a pipeline. Filters are limited to a maximum of 16 conditions. When applied, only items matching the conditions of the filter are returned. Detailed definitions of filter conditions and additional functionality is not yet available.\n"
    },
    {
      "name": "Goals",
      "description": "Goals help your team meet your sales targets. There are three types of goals - company, team and user.\n"
    },
    {
      "name": "ItemSearch",
      "description": "Ordered reference objects, pointing to either deals, persons, organizations, leads, products, files or mail attachments.\n"
    },
    {
      "name": "LeadLabels",
      "description": "Lead labels allow you to visually categorize your leads. There are three default lead labels: hot, cold, and warm, but you can add as many new custom labels as you want.\n"
    },
    {
      "name": "LeadSources",
      "description": "A lead source indicates where your lead came from. Currently, these are the possible lead sources: `Manually created`, `Deal`, `Web forms`, `Prospector`, `Leadbooster`, `Live chat`, `Import`, `Website visitors`, `Workflow automation`, and `API`. Lead sources are pre-defined and cannot be edited. Please note that leads sourced from the Chatbot feature are assigned the value `Leadbooster`. Please also note that this list is not final and new sources may be added as needed.\n"
    },
    {
      "name": "Leads",
      "description": "Leads are potential deals stored in Leads Inbox before they are archived or converted to a deal. Each lead needs to be named (using the `title` field) and be linked to a person or an organization. In addition to that, a lead can contain most of the fields a deal can (such as `value` or `expected_close_date`).\n"
    },
    {
      "name": "LegacyTeams",
      "description": "Legacy teams allow you to form groups of users withing the organization for more efficient management. Previously Legacy Teams were called Teams and occupied the `v1/teams*` path. They're being deprecated because we are preparing for an upgraded version of the Teams API, which requires migrating the current functionality to a new path URL `v1/legacyTeams*`. The functionality and [OAuth scopes](https://pipedrive.readme.io/docs/marketplace-scopes-and-permissions-explanations) of all the Teams API endpoints will remain the same.\n"
    },
    {
      "name": "Mailbox",
      "description": "Mailbox was designed to be the email control hub inside Pipedrive. Pipedrive supports all major providers (including Gmail, Outlook and also custom IMAP/SMTP). There are 2 options for syncing user emails: 2-way sync: Mail Connection is established with the mail provider (example Gmail). There can be only 1 active Mail Connection per user in company. 1-way sync: SmartBCC feature which stores the copies of email messages to Pipedrive by adding the SmartBCC specific address to mail recipients.\n"
    },
    {
      "name": "NoteFields",
      "description": "Note fields represent different fields that a note has.\n"
    },
    {
      "name": "Notes",
      "description": "Notes are pieces of textual (HTML-formatted) information that can be attached to deals, persons and organizations. Notes are usually displayed in the UI in chronological order – newest first – and in context with other updates regarding the item they are attached to. The maximum note size is approximately 3,000,000 characters (or 3MB per note).\n"
    },
    {
      "name": "OrganizationFields",
      "description": "Organization fields represent the near-complete schema for an organization in the context of the company of the authorized user. Each company can have a different schema for their organizations, with various custom fields. In the context of using organization fields as a schema for defining the data fields of an organization, it must be kept in mind that some types of custom fields can have additional data fields which are not separate organization fields per se. Such is the case with monetary, daterange and timerange fields – each of these fields will have one additional data field in addition to the one presented in the context of organization fields. For example, if there is a monetary field with the key `ffk9s9` stored on the account, `ffk9s9` would hold the numeric value of the field, and `ffk9s9_currency` would hold the ISO currency code that goes along with the numeric value. To find out which data fields are available, fetch one organization and list its keys.\n"
    },
    { "name": "OrganizationRelationships" },
    {
      "name": "Organizations",
      "description": "Organizations are companies and other kinds of organizations you are making deals with. Persons can be associated with organizations so that each organization can contain one or more persons.\n"
    },
    {
      "name": "PermissionSets",
      "description": "Permission sets define what users in the account can do: which actions they are allowed to perform and which features they can access. Permission sets are app-specific, where apps are large parts of functionality, e.g., sales app, which allows accessing sales data, global permissions, which oversee cross-product features (for example contacts, insights, products) or account settings, which provides access to billing, user management, company settings and security center. Some permission sets with types such as admin and regular are pre-created for the account, while other custom ones can be created by users (depending on the tier the account is on).\n"
    },
    {
      "name": "PersonFields",
      "description": "Person fields represent the near-complete schema for a person in the context of the company of the authorized user. Each company can have a different schema for their persons, with various custom fields. In the context of using person fields as a schema for defining the data fields of a person, it must be kept in mind that some types of custom fields can have additional data fields which are not separate person fields per se. Such is the case with monetary, daterange and timerange fields – each of these fields will have one additional data field in addition to the one presented in the context of person fields. For example, if there is a monetary field with the key `ffk9s9` stored on the account, `ffk9s9` would hold the numeric value of the field, and `ffk9s9_currency` would hold the ISO currency code that goes along with the numeric value. To find out which data fields are available, fetch one person and list its keys.\n"
    },
    {
      "name": "Persons",
      "description": "Persons are your contacts, the customers you are doing deals with. Each person can belong to an organization. Persons should not be confused with users.\n"
    },
    {
      "name": "Pipelines",
      "description": "Pipelines are essentially ordered collections of stages.\n"
    },
    {
      "name": "ProductFields",
      "description": "Product fields represent the near-complete schema for a product in the context of the company of the authorized user. Each company can have a different schema for their products, with various custom fields. In the context of using product fields as a schema for defining the data fields of a product, it must be kept in mind that some types of custom fields can have additional data fields which are not separate product fields per se. Such is the case with monetary, daterange and timerange fields – each of these fields will have one additional data field in addition to the one presented in the context of product fields. For example, if there is a monetary field with the key `ffk9s9` stored on the account, `ffk9s9` would hold the numeric value of the field, and `ffk9s9_currency` would hold the ISO currency code that goes along with the numeric value. To find out which data fields are available, fetch one product and list its keys.\n"
    },
    {
      "name": "Products",
      "description": "Products are the goods or services you are dealing with. Each product can have N different price points - firstly, each product can have a price in N different currencies, and secondly, each product can have N variations of itself, each having N prices in different currencies. Note that only one price per variation per currency is supported. Products can be instantiated to deals. In the context of instatiation, a custom price, quantity, duration and discount can be applied.\n"
    },
    {
      "name": "Recents",
      "description": "Recent changes across all item types in Pipedrive (deals, persons, etc).\n"
    },
    {
      "name": "Roles",
      "description": "Roles are a part of the Visibility groups’ feature that allow the admin user to categorize other users and dictate what items they will be allowed access to see.\n"
    },
    {
      "name": "Stages",
      "description": "Stage is a logical component of a pipeline, and essentially a bucket that can hold a number of deals. In the context of the pipeline a stage belongs to, it has an order number which defines the order of stages in that pipeline.\n"
    },
    {
      "name": "Subscriptions",
      "description": "Subscriptions represent the revenue that is occurring over time with payments of varying amounts and payment dates (installment subscription) or over fixed intervals of time with payments of the same amount (recurring subscription).\n"
    },
    { "name": "UserConnections", "description": "Manage user connections.\n" },
    { "name": "UserSettings", "description": "View user settings.\n" },
    {
      "name": "Users",
      "description": "Users are people with access to your Pipedrive account. A user may belong to one or many Pipedrive accounts, so deleting a user from one Pipedrive account will not remove the user from the data store if he/she is connected to multiple accounts. Users should not be confused with persons.\n"
    },
    {
      "name": "Webhooks",
      "description": "See <a href=\"https://pipedrive.readme.io/docs/guide-for-webhooks?ref=api_reference\" target=\"_blank\" rel=\"noopener noreferrer\">the guide for Webhooks</a> for more information."
    }
  ],
  "paths": {
    "/activities": {
      "delete": {
        "summary": "Delete multiple activities in bulk",
        "description": "Marks multiple activities as deleted. After 30 days, the activities will be permanently deleted.",
        "operationId": "deleteActivities",
        "tags": [ "Activities" ],
        "parameters": [
          {
            "in": "query",
            "name": "ids",
            "required": true,
            "description": "The comma-separated IDs of activities that will be deleted",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "The activities were successfully deleted",
            "content": {
              "application/json": {
                "schema": {
                  "title": "deleteActivities",
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean" },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "array",
                          "description": "An array of the IDs of activities that were deleted",
                          "items": { "type": "integer" }
                        }
                      }
                    }
                  }
                },
                "example": { "success": true, "data": { "id": [ 625, 627 ] } }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get all activities assigned to a particular user",
        "description": "Returns all activities assigned to a particular user.",
        "operationId": "getActivities",
        "tags": [ "Activities" ],
        "parameters": [
          {
            "in": "query",
            "name": "user_id",
            "required": false,
            "schema": { "type": "integer" },
            "description": "The ID of the user whose activities will be fetched. If omitted, the user associated with the API token will be used. If 0, activities for all company users will be fetched based on the permission sets."
          },
          {
            "in": "query",
            "name": "filter_id",
            "required": false,
            "schema": { "type": "integer" },
            "description": "The ID of the filter to use (will narrow down results if used together with `user_id` parameter)"
          },
          {
            "in": "query",
            "name": "type",
            "required": false,
            "schema": { "type": "string" },
            "description": "The type of the activity, can be one type or multiple types separated by a comma. This is in correlation with the `key_string` parameter of ActivityTypes."
          },
          {
            "in": "query",
            "name": "limit",
            "description": "For pagination, the limit of entries to be returned. If not provided, 100 items will be returned.",
            "schema": { "type": "integer", "example": 100 }
          },
          {
            "in": "query",
            "name": "start",
            "description": "For pagination, the position that represents the first result for the page",
            "schema": { "type": "integer", "example": 0 }
          },
          {
            "in": "query",
            "name": "start_date",
            "required": false,
            "schema": { "type": "string", "format": "date" },
            "description": "Use the activity due date where you wish to begin fetching activities from. Insert due date in YYYY-MM-DD format."
          },
          {
            "in": "query",
            "name": "end_date",
            "required": false,
            "schema": { "type": "string", "format": "date" },
            "description": "Use the activity due date where you wish to stop fetching activities from. Insert due date in YYYY-MM-DD format."
          },
          {
            "in": "query",
            "name": "done",
            "schema": {
              "title": "numberBoolean",
              "type": "number",
              "enum": [ 0, 1 ]
            },
            "description": "Whether the activity is done or not. 0 = Not done, 1 = Done. If omitted returns both done and not done activities."
          }
        ],
        "responses": {
          "200": {
            "description": "A list of activities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "getActivities",
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean" },
                    "data": {
                      "type": "array",
                      "items": {
                        "title": "activityResponseObject",
                        "allOf": [
                          {
                            "type": "object",
                            "properties": {
                              "due_date": {
                                "description": "The due date of the activity. Format: YYYY-MM-DD",
                                "type": "string",
                                "format": "date"
                              },
                              "due_time": {
                                "description": "The due time of the activity in UTC. Format: HH:MM",
                                "type": "string"
                              },
                              "duration": {
                                "description": "The duration of the activity. Format: HH:MM",
                                "type": "string"
                              },
                              "deal_id": {
                                "description": "The ID of the deal this activity is associated with",
                                "type": "integer"
                              },
                              "lead_id": {
                                "description": "The ID of the lead this activity is associated with",
                                "type": "string"
                              },
                              "person_id": {
                                "description": "The ID of the person this activity is associated with",
                                "type": "integer"
                              },
                              "org_id": {
                                "description": "The ID of the organization this activity is associated with",
                                "type": "integer"
                              },
                              "note": {
                                "description": "The note of the activity (HTML format)",
                                "type": "string"
                              },
                              "location": {
                                "description": "The address of the activity. Pipedrive will automatically check if the location matches a geo-location on Google maps.",
                                "type": "string"
                              },
                              "public_description": {
                                "description": "Additional details about the activity that is synced to your external calendar. Unlike the note added to the activity, the description is publicly visible to any guests added to the activity.",
                                "type": "string"
                              }
                            }
                          },
                          {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer",
                                "description": "The activity ID, generated when the activity was created"
                              },
                              "done": {
                                "type": "boolean",
                                "description": "Whether the activity is done or not"
                              },
                              "subject": {
                                "description": "The subject of the activity",
                                "type": "string"
                              },
                              "type": {
                                "description": "The type of the activity. This is in correlation with the `key_string` parameter of ActivityTypes.",
                                "type": "string"
                              },
                              "user_id": {
                                "description": "The ID of the user whom the activity is assigned to",
                                "type": "integer"
                              },
                              "participants": {
                                "description": "List of multiple persons (participants) this activity is associated with",
                                "type": "array",
                                "nullable": true,
                                "items": { "type": "object" }
                              },
                              "busy_flag": {
                                "description": "Marks if the activity is set as 'Busy' or 'Free'. If the flag is set to `true`, your customers will not be able to book that time slot through any Scheduler links. The flag can also be unset. When the value of the flag is unset (`null`), the flag defaults to 'Busy' if it has a time set, and 'Free' if it is an all-day event without specified time.",
                                "type": "boolean",
                                "enum": [ true, false ]
                              },
                              "attendees": {
                                "description": "The attendees of the activity. This can be either your existing Pipedrive contacts or an external email address.",
                                "type": "array",
                                "nullable": true,
                                "items": { "type": "object" }
                              },
                              "company_id": {
                                "type": "integer",
                                "description": "The user's company ID"
                              },
                              "reference_type": {
                                "type": "string",
                                "description": "If the activity references some other object, it is indicated here. For example, value `Salesphone` refers to activities created with Caller."
                              },
                              "reference_id": {
                                "type": "integer",
                                "description": "Together with the `reference_type`, gives the ID of the other object"
                              },
                              "conference_meeting_client": {
                                "type": "string",
                                "description": "The ID of Marketplace app, which is connected to this activity"
                              },
                              "conference_meeting_url": {
                                "type": "string",
                                "description": "The link to join the meeting which is associated with this activity"
                              },
                              "conference_meeting_id": {
                                "type": "string",
                                "description": "The meeting ID of the meeting provider (Zoom, MS Teams etc.) that is associated with this activity"
                              },
                              "add_time": {
                                "type": "string",
                                "description": "The creation date and time of the activity in UTC. Format: YYYY-MM-DD HH:MM:SS."
                              },
                              "marked_as_done_time": {
                                "type": "string",
                                "description": "The date and time this activity was marked as done. Format: YYYY-MM-DD HH:MM:SS."
                              },
                              "last_notification_time": {
                                "type": "string",
                                "description": "The date and time of latest notifications sent about this activity to the participants or the attendees of this activity"
                              },
                              "last_notification_user_id": {
                                "type": "integer",
                                "description": "The ID of the user who triggered the sending of the latest notifications about this activity to the participants or the attendees of this activity"
                              },
                              "notification_language_id": {
                                "type": "integer",
                                "description": "The ID of the language the notifications are sent in"
                              },
                              "lead_id": {
                                "description": "The ID of the lead in the UUID format this activity is associated with",
                                "type": "string",
                                "format": "uuid"
                              },
                              "active_flag": {
                                "type": "boolean",
                                "description": "Whether the activity is active or not"
                              },
                              "update_time": {
                                "type": "string",
                                "description": "The last update date and time of the activity. Format: YYYY-MM-DD HH:MM:SS."
                              },
                              "update_user_id": {
                                "description": "The ID of the user who was the last to update this activity",
                                "type": "integer"
                              },
                              "gcal_event_id": {
                                "type": "string",
                                "description": "For the activity which syncs to Google calendar, this is the Google event ID. NB! This field is related to old Google calendar sync and will be deprecated soon."
                              },
                              "google_calendar_id": {
                                "type": "string",
                                "description": "The Google calendar ID that this activity syncs to. NB! This field is related to old Google calendar sync and will be deprecated soon."
                              },
                              "google_calendar_etag": {
                                "type": "string",
                                "description": "The Google calendar API etag (version) that is used for syncing this activity. NB! This field is related to old Google calendar sync and will be deprecated soon."
                              },
                              "calendar_sync_include_context": {
                                "type": "string",
                                "description": "For activities that sync to an external calendar, this setting indicates if the activity syncs with context (what are the deals, persons, organizations this activity is related to)"
                              },
                              "source_timezone": {
                                "type": "string",
                                "description": "The timezone the activity was created in an external calendar"
                              },
                              "rec_rule": {
                                "type": "string",
                                "description": "The rule for the recurrence of the activity. Is important for activities synced into Pipedrive from an external calendar. Example: \"RRULE:FREQ=WEEKLY;BYDAY=WE\""
                              },
                              "rec_rule_extension": {
                                "type": "string",
                                "description": "Additional rules for the recurrence of the activity, extend the `rec_rule`. Is important for activities synced into Pipedrive from an external calendar."
                              },
                              "rec_master_activity_id": {
                                "type": "integer",
                                "description": "The ID of parent activity for a recurrent activity if the current activity is an exception to recurrence rules"
                              },
                              "series": {
                                "description": "The list of recurring activity instances. It is in a structure as follows: `[{due_date: \"2020-06-24\", due_time: \"10:00:00\"}]`",
                                "type": "array",
                                "items": { "type": "object" }
                              },
                              "created_by_user_id": {
                                "description": "The ID of the user who created the activity",
                                "type": "integer"
                              },
                              "location_subpremise": {
                                "type": "string",
                                "description": "Subfield of location field. Indicates apartment/suite number."
                              },
                              "location_street_number": {
                                "type": "string",
                                "description": "Subfield of location field. Indicates house number."
                              },
                              "location_route": {
                                "type": "string",
                                "description": "Subfield of location field. Indicates street name."
                              },
                              "location_sublocality": {
                                "type": "string",
                                "description": "Subfield of location field. Indicates district/sublocality."
                              },
                              "location_locality": {
                                "type": "string",
                                "description": "Subfield of location field. Indicates city/town/village/locality."
                              },
                              "location_admin_area_level_1": {
                                "type": "string",
                                "description": "Subfield of location field. Indicates state/county."
                              },
                              "location_admin_area_level_2": {
                                "type": "string",
                                "description": "Subfield of location field. Indicates region."
                              },
                              "location_country": {
                                "type": "string",
                                "description": "Subfield of location field. Indicates country."
                              },
                              "location_postal_code": {
                                "type": "string",
                                "description": "Subfield of location field. Indicates ZIP/postal code."
                              },
                              "location_formatted_address": {
                                "type": "string",
                                "description": "Subfield of location field. Indicates full/combined address."
                              },
                              "org_name": {
                                "description": "The name of the organization this activity is associated with",
                                "type": "string"
                              },
                              "person_name": {
                                "description": "The name of the person this activity is associated with",
                                "type": "string"
                              },
                              "deal_title": {
                                "description": "The name of the deal this activity is associated with",
                                "type": "string"
                              },
                              "owner_name": {
                                "description": "The name of the user this activity is owned by",
                                "type": "string"
                              },
                              "person_dropbox_bcc": {
                                "type": "string",
                                "description": "The BCC email address of the person"
                              },
                              "deal_dropbox_bcc": {
                                "type": "string",
                                "description": "The BCC email address of the deal"
                              },
                              "assigned_to_user_id": {
                                "description": "The ID of the user to whom the activity is assigned to. Equal to `user_id`.",
                                "type": "integer"
                              },
                              "file": {
                                "type": "object",
                                "description": "The file that is attached to this activity. For example, this can be a reference to an audio note file generated with Pipedrive mobile app."
                              }
                            }
                          }
                        ]
                      }
                    },
                    "additional_data": {
                      "type": "object",
                      "properties": {
                        "pagination": {
                          "description": "Pagination details of the list",
                          "type": "object",
                          "properties": {
                            "start": {
                              "type": "integer",
                              "description": "Pagination start"
                            },
                            "limit": {
                              "type": "integer",
                              "description": "Items shown per page"
                            },
                            "more_items_in_collection": {
                              "type": "boolean",
                              "description": "Whether there are more list items in the collection than displayed"
                            },
                            "next_start": {
                              "type": "integer",
                              "description": "Next pagination start"
                            }
                          }
                        }
                      }
                    },
                    "related_objects": {
                      "type": "object",
                      "properties": {
                        "user": {
                          "type": "object",
                          "properties": {
                            "USER_ID": {
                              "type": "object",
                              "title": "userDataWithId",
                              "allOf": [
                                {
                                  "properties": {
                                    "id": {
                                      "type": "integer",
                                      "description": "The ID of the user"
                                    },
                                    "name": {
                                      "type": "string",
                                      "description": "The name of the user"
                                    },
                                    "email": {
                                      "type": "string",
                                      "description": "The email of the user"
                                    },
                                    "has_pic": {
                                      "type": "integer",
                                      "description": "Whether the user has picture or not. 0 = No picture, 1 = Has picture."
                                    },
                                    "pic_hash": {
                                      "type": "string",
                                      "nullable": true,
                                      "description": "The user picture hash"
                                    },
                                    "active_flag": {
                                      "type": "boolean",
                                      "description": "Whether the user is active or not"
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "description": "The ID of the user"
                                }
                              ]
                            }
                          }
                        },
                        "deal": {
                          "type": "object",
                          "properties": {
                            "DEAL_ID": {
                              "type": "object",
                              "description": "The ID of the deal which is associated with the item",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "description": "The ID of the deal associated with the item"
                                },
                                "title": {
                                  "type": "string",
                                  "description": "The title of the deal associated with the item"
                                },
                                "status": {
                                  "type": "string",
                                  "description": "The status of the deal associated with the item"
                                },
                                "value": {
                                  "type": "number",
                                  "description": "The value of the deal that is associated with the item"
                                },
                                "currency": {
                                  "type": "string",
                                  "description": "The currency of the deal value"
                                },
                                "stage_id": {
                                  "type": "integer",
                                  "description": "The ID of the stage the deal is currently at"
                                },
                                "pipeline_id": {
                                  "type": "integer",
                                  "description": "The ID of the pipeline the deal is in"
                                }
                              }
                            }
                          }
                        },
                        "person": {
                          "type": "object",
                          "properties": {
                            "PERSON_ID": {
                              "type": "object",
                              "description": "The ID of the person associated with the item",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "integer",
                                      "description": "The ID of the person associated with the item"
                                    },
                                    "name": {
                                      "type": "string",
                                      "description": "The name of the person associated with the item"
                                    },
                                    "email": {
                                      "type": "array",
                                      "description": "The emails of the person associated with the item",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "label": {
                                            "type": "string",
                                            "description": "The type of the email"
                                          },
                                          "value": {
                                            "type": "string",
                                            "description": "The email of the associated person"
                                          },
                                          "primary": {
                                            "type": "boolean",
                                            "description": "Whether this is the primary email or not"
                                          }
                                        }
                                      }
                                    },
                                    "phone": {
                                      "type": "array",
                                      "description": "The phone numbers of the person associated with the item",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "label": {
                                            "type": "string",
                                            "description": "The type of the phone number"
                                          },
                                          "value": {
                                            "type": "string",
                                            "description": "The phone number of the person associated with the item"
                                          },
                                          "primary": {
                                            "type": "boolean",
                                            "description": "Whether this is the primary phone number or not"
                                          }
                                        }
                                      }
                                    },
                                    "owner_id": {
                                      "type": "integer",
                                      "description": "The ID of the owner of the person that is associated with the item"
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        },
                        "organization": {
                          "type": "object",
                          "properties": {
                            "ORGANIZATION_ID": {
                              "type": "object",
                              "description": "The ID of the organization associated with the item",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "integer",
                                      "description": "The ID of the organization associated with the item"
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "The name of the organization associated with the item"
                                    },
                                    "people_count": {
                                      "type": "integer",
                                      "description": "The number of people connected with the organization that is associated with the item"
                                    },
                                    "owner_id": {
                                      "type": "integer",
                                      "description": "The ID of the owner of the organization that is associated with the item"
                                    },
                                    "address": {
                                      "type": "string",
                                      "description": "The address of the organization"
                                    },
                                    "cc_email": {
                                      "type": "string",
                                      "description": "The BCC email of the organization associated with the item"
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "success": true,
                  "data": [
                    {
                      "id": 8,
                      "company_id": 22122,
                      "user_id": 1234,
                      "done": false,
                      "type": "deadline",
                      "reference_type": "scheduler-service",
                      "reference_id": 7,
                      "conference_meeting_client": "871b8bc88d3a1202",
                      "conference_meeting_url": "https://pipedrive.zoom.us/link",
                      "conference_meeting_id": "01758746701",
                      "due_date": "2020-06-09",
                      "due_time": "10:00",
                      "duration": "01:00",
                      "busy_flag": true,
                      "add_time": "2020-06-08 12:37:56",
                      "marked_as_done_time": "2020-08-08 08:08:38",
                      "last_notification_time": "2020-08-08 12:37:56",
                      "last_notification_user_id": 7655,
                      "notification_language_id": 1,
                      "subject": "Deadline",
                      "public_description": "This is a description",
                      "calendar_sync_include_context": "",
                      "location": "Mustamäe tee 3, Tallinn, Estonia",
                      "org_id": 5,
                      "person_id": 1101,
                      "deal_id": 300,
                      "lead_id": "46c3b0e1-db35-59ca-1828-4817378dff71",
                      "active_flag": true,
                      "update_time": "2020-08-08 12:37:56",
                      "update_user_id": 5596,
                      "gcal_event_id": "",
                      "google_calendar_id": "",
                      "google_calendar_etag": "",
                      "source_timezone": "",
                      "rec_rule": "RRULE:FREQ=WEEKLY;BYDAY=WE",
                      "rec_rule_extension": "",
                      "rec_master_activity_id": 1,
                      "series": [ ],
                      "note": "A note for the activity",
                      "created_by_user_id": 1234,
                      "location_subpremise": "",
                      "location_street_number": "3",
                      "location_route": "Mustamäe tee",
                      "location_sublocality": "Kristiine",
                      "location_locality": "Tallinn",
                      "location_admin_area_level_1": "Harju maakond",
                      "location_admin_area_level_2": "",
                      "location_country": "Estonia",
                      "location_postal_code": "10616",
                      "location_formatted_address": "Mustamäe tee 3, 10616 Tallinn, Estonia",
                      "attendees": [
                        {
                          "email_address": "attendee@pipedrivemail.com",
                          "is_organizer": 0,
                          "name": "Attendee",
                          "person_id": 25312,
                          "status": "noreply",
                          "user_id": null
                        }
                      ],
                      "participants": [
                        { "person_id": 17985, "primary_flag": false },
                        { "person_id": 1101, "primary_flag": true }
                      ],
                      "org_name": "Organization",
                      "person_name": "Person",
                      "deal_title": "Deal",
                      "owner_name": "Creator",
                      "person_dropbox_bcc": "company@pipedrivemail.com",
                      "deal_dropbox_bcc": "company+deal300@pipedrivemail.com",
                      "assigned_to_user_id": 1235,
                      "file": {
                        "id": "376892,",
                        "clean_name": "Audio 10:55:07.m4a",
                        "url": "https://pipedrive-files.s3-eu-west-1.amazonaws.com/Audio-recording.m4a"
                      }
                    }
                  ],
                  "related_objects": {
                    "user": {
                      "1234": {
                        "id": 1234,
                        "name": "Creator",
                        "email": "john.doe@pipedrive.com",
                        "has_pic": false,
                        "pic_hash": null,
                        "active_flag": true
                      }
                    },
                    "organization": {
                      "5": {
                        "id": 5,
                        "name": "Organization",
                        "people_count": 2,
                        "owner_id": 8877,
                        "address": "Mustamäe tee 3a, 10615 Tallinn",
                        "cc_email": "org@pipedrivemail.com"
                      }
                    },
                    "person": {
                      "1101": {
                        "id": 1101,
                        "name": "Person",
                        "email": [
                          {
                            "label": "work",
                            "value": "person@pipedrive.com",
                            "primary": true
                          }
                        ],
                        "phone": [
                          {
                            "label": "work",
                            "value": "3421787767",
                            "primary": true
                          }
                        ],
                        "owner_id": 8877
                      }
                    },
                    "deal": {
                      "300": {
                        "id": 300,
                        "title": "Deal",
                        "status": "open",
                        "value": 856,
                        "currency": "EUR",
                        "stage_id": 1,
                        "pipeline_id": 1
                      }
                    }
                  },
                  "additional_data": {
                    "pagination": {
                      "start": 0,
                      "limit": 100,
                      "more_items_in_collection": false,
                      "next_start": 1
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add an activity",
        "description": "Adds a new activity. Includes `more_activities_scheduled_in_context` property in response's `additional_data` which indicates whether there are more undone activities scheduled with the same deal, person or organization (depending on the supplied data). For more information, see the tutorial for <a href=\"https://pipedrive.readme.io/docs/adding-an-activity\" target=\"_blank\" rel=\"noopener noreferrer\">adding an activity</a>.",
        "operationId": "addActivity",
        "tags": [ "Activities" ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "addActivityRequest",
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "due_date": {
                        "description": "The due date of the activity. Format: YYYY-MM-DD",
                        "type": "string",
                        "format": "date"
                      },
                      "due_time": {
                        "description": "The due time of the activity in UTC. Format: HH:MM",
                        "type": "string"
                      },
                      "duration": {
                        "description": "The duration of the activity. Format: HH:MM",
                        "type": "string"
                      },
                      "deal_id": {
                        "description": "The ID of the deal this activity is associated with",
                        "type": "integer"
                      },
                      "lead_id": {
                        "description": "The ID of the lead this activity is associated with",
                        "type": "string"
                      },
                      "person_id": {
                        "description": "The ID of the person this activity is associated with",
                        "type": "integer"
                      },
                      "org_id": {
                        "description": "The ID of the organization this activity is associated with",
                        "type": "integer"
                      },
                      "note": {
                        "description": "The note of the activity (HTML format)",
                        "type": "string"
                      },
                      "location": {
                        "description": "The address of the activity. Pipedrive will automatically check if the location matches a geo-location on Google maps.",
                        "type": "string"
                      },
                      "public_description": {
                        "description": "Additional details about the activity that is synced to your external calendar. Unlike the note added to the activity, the description is publicly visible to any guests added to the activity.",
                        "type": "string"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "subject": {
                        "description": "The subject of the activity. When value for subject is not set, it will be given a default value `Call`.",
                        "type": "string"
                      },
                      "type": {
                        "description": "The type of the activity. This is in correlation with the `key_string` parameter of ActivityTypes. When value for type is not set, it will be given a default value `Call`.",
                        "type": "string"
                      },
                      "user_id": {
                        "description": "The ID of the user whom the activity is assigned to. If omitted, the activity is assigned to the authorized user.",
                        "type": "integer"
                      },
                      "participants": {
                        "description": "List of multiple persons (participants) this activity is associated with. If omitted, single participant from `person_id` field is used. It requires a structure as follows: `[{\"person_id\":1,\"primary_flag\":true}]`",
                        "type": "array",
                        "items": { "type": "object" }
                      },
                      "busy_flag": {
                        "description": "Set the activity as 'Busy' or 'Free'. If the flag is set to `true`, your customers will not be able to book that time slot through any Scheduler links. The flag can also be unset by never setting it or overriding it with `null`. When the value of the flag is unset (`null`), the flag defaults to 'Busy' if it has a time set, and 'Free' if it is an all-day event without specified time.",
                        "type": "boolean",
                        "enum": [ true, false ]
                      },
                      "attendees": {
                        "description": "The attendees of the activity. This can be either your existing Pipedrive contacts or an external email address. It requires a structure as follows: `[{\"email_address\":\"mail@example.org\"}]` or `[{\"person_id\":1, \"email_address\":\"mail@example.org\"}]`",
                        "type": "array",
                        "items": { "type": "object" }
                      },
                      "done": {
                        "allOf": [
                          {
                            "title": "numberBoolean",
                            "type": "number",
                            "enum": [ 0, 1 ]
                          }
                        ],
                        "description": "Whether the activity is done or not. 0 = Not done, 1 = Done"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "title": "addActivity",
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean" },
                    "data": {
                      "title": "activityResponseObject",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "due_date": {
                              "description": "The due date of the activity. Format: YYYY-MM-DD",
                              "type": "string",
                              "format": "date"
                            },
                            "due_time": {
                              "description": "The due time of the activity in UTC. Format: HH:MM",
                              "type": "string"
                            },
                            "duration": {
                              "description": "The duration of the activity. Format: HH:MM",
                              "type": "string"
                            },
                            "deal_id": {
                              "description": "The ID of the deal this activity is associated with",
                              "type": "integer"
                            },
                            "lead_id": {
                              "description": "The ID of the lead this activity is associated with",
                              "type": "string"
                            },
                            "person_id": {
                              "description": "The ID of the person this activity is associated with",
                              "type": "integer"
                            },
                            "org_id": {
                              "description": "The ID of the organization this activity is associated with",
                              "type": "integer"
                            },
                            "note": {
                              "description": "The note of the activity (HTML format)",
                              "type": "string"
                            },
                            "location": {
                              "description": "The address of the activity. Pipedrive will automatically check if the location matches a geo-location on Google maps.",
                              "type": "string"
                            },
                            "public_description": {
                              "description": "Additional details about the activity that is synced to your external calendar. Unlike the note added to the activity, the description is publicly visible to any guests added to the activity.",
                              "type": "string"
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "description": "The activity ID, generated when the activity was created"
                            },
                            "done": {
                              "type": "boolean",
                              "description": "Whether the activity is done or not"
                            },
                            "subject": {
                              "description": "The subject of the activity",
                              "type": "string"
                            },
                            "type": {
                              "description": "The type of the activity. This is in correlation with the `key_string` parameter of ActivityTypes.",
                              "type": "string"
                            },
                            "user_id": {
                              "description": "The ID of the user whom the activity is assigned to",
                              "type": "integer"
                            },
                            "participants": {
                              "description": "List of multiple persons (participants) this activity is associated with",
                              "type": "array",
                              "nullable": true,
                              "items": { "type": "object" }
                            },
                            "busy_flag": {
                              "description": "Marks if the activity is set as 'Busy' or 'Free'. If the flag is set to `true`, your customers will not be able to book that time slot through any Scheduler links. The flag can also be unset. When the value of the flag is unset (`null`), the flag defaults to 'Busy' if it has a time set, and 'Free' if it is an all-day event without specified time.",
                              "type": "boolean",
                              "enum": [ true, false ]
                            },
                            "attendees": {
                              "description": "The attendees of the activity. This can be either your existing Pipedrive contacts or an external email address.",
                              "type": "array",
                              "nullable": true,
                              "items": { "type": "object" }
                            },
                            "company_id": {
                              "type": "integer",
                              "description": "The user's company ID"
                            },
                            "reference_type": {
                              "type": "string",
                              "description": "If the activity references some other object, it is indicated here. For example, value `Salesphone` refers to activities created with Caller."
                            },
                            "reference_id": {
                              "type": "integer",
                              "description": "Together with the `reference_type`, gives the ID of the other object"
                            },
                            "conference_meeting_client": {
                              "type": "string",
                              "description": "The ID of Marketplace app, which is connected to this activity"
                            },
                            "conference_meeting_url": {
                              "type": "string",
                              "description": "The link to join the meeting which is associated with this activity"
                            },
                            "conference_meeting_id": {
                              "type": "string",
                              "description": "The meeting ID of the meeting provider (Zoom, MS Teams etc.) that is associated with this activity"
                            },
                            "add_time": {
                              "type": "string",
                              "description": "The creation date and time of the activity in UTC. Format: YYYY-MM-DD HH:MM:SS."
                            },
                            "marked_as_done_time": {
                              "type": "string",
                              "description": "The date and time this activity was marked as done. Format: YYYY-MM-DD HH:MM:SS."
                            },
                            "last_notification_time": {
                              "type": "string",
                              "description": "The date and time of latest notifications sent about this activity to the participants or the attendees of this activity"
                            },
                            "last_notification_user_id": {
                              "type": "integer",
                              "description": "The ID of the user who triggered the sending of the latest notifications about this activity to the participants or the attendees of this activity"
                            },
                            "notification_language_id": {
                              "type": "integer",
                              "description": "The ID of the language the notifications are sent in"
                            },
                            "lead_id": {
                              "description": "The ID of the lead in the UUID format this activity is associated with",
                              "type": "string",
                              "format": "uuid"
                            },
                            "active_flag": {
                              "type": "boolean",
                              "description": "Whether the activity is active or not"
                            },
                            "update_time": {
                              "type": "string",
                              "description": "The last update date and time of the activity. Format: YYYY-MM-DD HH:MM:SS."
                            },
                            "update_user_id": {
                              "description": "The ID of the user who was the last to update this activity",
                              "type": "integer"
                            },
                            "gcal_event_id": {
                              "type": "string",
                              "description": "For the activity which syncs to Google calendar, this is the Google event ID. NB! This field is related to old Google calendar sync and will be deprecated soon."
                            },
                            "google_calendar_id": {
                              "type": "string",
                              "description": "The Google calendar ID that this activity syncs to. NB! This field is related to old Google calendar sync and will be deprecated soon."
                            },
                            "google_calendar_etag": {
                              "type": "string",
                              "description": "The Google calendar API etag (version) that is used for syncing this activity. NB! This field is related to old Google calendar sync and will be deprecated soon."
                            },
                            "calendar_sync_include_context": {
                              "type": "string",
                              "description": "For activities that sync to an external calendar, this setting indicates if the activity syncs with context (what are the deals, persons, organizations this activity is related to)"
                            },
                            "source_timezone": {
                              "type": "string",
                              "description": "The timezone the activity was created in an external calendar"
                            },
                            "rec_rule": {
                              "type": "string",
                              "description": "The rule for the recurrence of the activity. Is important for activities synced into Pipedrive from an external calendar. Example: \"RRULE:FREQ=WEEKLY;BYDAY=WE\""
                            },
                            "rec_rule_extension": {
                              "type": "string",
                              "description": "Additional rules for the recurrence of the activity, extend the `rec_rule`. Is important for activities synced into Pipedrive from an external calendar."
                            },
                            "rec_master_activity_id": {
                              "type": "integer",
                              "description": "The ID of parent activity for a recurrent activity if the current activity is an exception to recurrence rules"
                            },
                            "series": {
                              "description": "The list of recurring activity instances. It is in a structure as follows: `[{due_date: \"2020-06-24\", due_time: \"10:00:00\"}]`",
                              "type": "array",
                              "items": { "type": "object" }
                            },
                            "created_by_user_id": {
                              "description": "The ID of the user who created the activity",
                              "type": "integer"
                            },
                            "location_subpremise": {
                              "type": "string",
                              "description": "Subfield of location field. Indicates apartment/suite number."
                            },
                            "location_street_number": {
                              "type": "string",
                              "description": "Subfield of location field. Indicates house number."
                            },
                            "location_route": {
                              "type": "string",
                              "description": "Subfield of location field. Indicates street name."
                            },
                            "location_sublocality": {
                              "type": "string",
                              "description": "Subfield of location field. Indicates district/sublocality."
                            },
                            "location_locality": {
                              "type": "string",
                              "description": "Subfield of location field. Indicates city/town/village/locality."
                            },
                            "location_admin_area_level_1": {
                              "type": "string",
                              "description": "Subfield of location field. Indicates state/county."
                            },
                            "location_admin_area_level_2": {
                              "type": "string",
                              "description": "Subfield of location field. Indicates region."
                            },
                            "location_country": {
                              "type": "string",
                              "description": "Subfield of location field. Indicates country."
                            },
                            "location_postal_code": {
                              "type": "string",
                              "description": "Subfield of location field. Indicates ZIP/postal code."
                            },
                            "location_formatted_address": {
                              "type": "string",
                              "description": "Subfield of location field. Indicates full/combined address."
                            },
                            "org_name": {
                              "description": "The name of the organization this activity is associated with",
                              "type": "string"
                            },
                            "person_name": {
                              "description": "The name of the person this activity is associated with",
                              "type": "string"
                            },
                            "deal_title": {
                              "description": "The name of the deal this activity is associated with",
                              "type": "string"
                            },
                            "owner_name": {
                              "description": "The name of the user this activity is owned by",
                              "type": "string"
                            },
                            "person_dropbox_bcc": {
                              "type": "string",
                              "description": "The BCC email address of the person"
                            },
                            "deal_dropbox_bcc": {
                              "type": "string",
                              "description": "The BCC email address of the deal"
                            },
                            "assigned_to_user_id": {
                              "description": "The ID of the user to whom the activity is assigned to. Equal to `user_id`.",
                              "type": "integer"
                            },
                            "file": {
                              "type": "object",
                              "description": "The file that is attached to this activity. For example, this can be a reference to an audio note file generated with Pipedrive mobile app."
                            }
                          }
                        }
                      ]
                    },
                    "additional_data": {
                      "type": "object",
                      "properties": {
                        "updates_story_id": {
                          "type": "integer",
                          "description": "This field will be deprecated"
                        }
                      }
                    },
                    "related_objects": {
                      "type": "object",
                      "properties": {
                        "user": {
                          "type": "object",
                          "properties": {
                            "USER_ID": {
                              "type": "object",
                              "title": "userDataWithId",
                              "allOf": [
                                {
                                  "properties": {
                                    "id": {
                                      "type": "integer",
                                      "description": "The ID of the user"
                                    },
                                    "name": {
                                      "type": "string",
                                      "description": "The name of the user"
                                    },
                                    "email": {
                                      "type": "string",
                                      "description": "The email of the user"
                                    },
                                    "has_pic": {
                                      "type": "integer",
                                      "description": "Whether the user has picture or not. 0 = No picture, 1 = Has picture."
                                    },
                                    "pic_hash": {
                                      "type": "string",
                                      "nullable": true,
                                      "description": "The user picture hash"
                                    },
                                    "active_flag": {
                                      "type": "boolean",
                                      "description": "Whether the user is active or not"
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "description": "The ID of the user"
                                }
                              ]
                            }
                          }
                        },
                        "deal": {
                          "type": "object",
                          "properties": {
                            "DEAL_ID": {
                              "type": "object",
                              "description": "The ID of the deal which is associated with the item",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "description": "The ID of the deal associated with the item"
                                },
                                "title": {
                                  "type": "string",
                                  "description": "The title of the deal associated with the item"
                                },
                                "status": {
                                  "type": "string",
                                  "description": "The status of the deal associated with the item"
                                },
                                "value": {
                                  "type": "number",
                                  "description": "The value of the deal that is associated with the item"
                                },
                                "currency": {
                                  "type": "string",
                                  "description": "The currency of the deal value"
                                },
                                "stage_id": {
                                  "type": "integer",
                                  "description": "The ID of the stage the deal is currently at"
                                },
                                "pipeline_id": {
                                  "type": "integer",
                                  "description": "The ID of the pipeline the deal is in"
                                }
                              }
                            }
                          }
                        },
                        "person": {
                          "type": "object",
                          "properties": {
                            "PERSON_ID": {
                              "type": "object",
                              "description": "The ID of the person associated with the item",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "active_flag": {
                                      "type": "boolean",
                                      "description": "Whether the associated person is active or not"
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "integer",
                                      "description": "The ID of the person associated with the item"
                                    },
                                    "name": {
                                      "type": "string",
                                      "description": "The name of the person associated with the item"
                                    },
                                    "email": {
                                      "type": "array",
                                      "description": "The emails of the person associated with the item",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "label": {
                                            "type": "string",
                                            "description": "The type of the email"
                                          },
                                          "value": {
                                            "type": "string",
                                            "description": "The email of the associated person"
                                          },
                                          "primary": {
                                            "type": "boolean",
                                            "description": "Whether this is the primary email or not"
                                          }
                                        }
                                      }
                                    },
                                    "phone": {
                                      "type": "array",
                                      "description": "The phone numbers of the person associated with the item",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "label": {
                                            "type": "string",
                                            "description": "The type of the phone number"
                                          },
                                          "value": {
                                            "type": "string",
                                            "description": "The phone number of the person associated with the item"
                                          },
                                          "primary": {
                                            "type": "boolean",
                                            "description": "Whether this is the primary phone number or not"
                                          }
                                        }
                                      }
                                    },
                                    "owner_id": {
                                      "type": "integer",
                                      "description": "The ID of the owner of the person that is associated with the item"
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        },
                        "organization": {
                          "type": "object",
                          "properties": {
                            "ORGANIZATION_ID": {
                              "type": "object",
                              "description": "The ID of the organization associated with the item",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "active_flag": {
                                      "type": "boolean",
                                      "description": "Whether the associated organization is active or not"
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "description": "The ID of the organization associated with the item",
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "integer",
                                          "description": "The ID of the organization associated with the item"
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "The name of the organization associated with the item"
                                        },
                                        "people_count": {
                                          "type": "integer",
                                          "description": "The number of people connected with the organization that is associated with the item"
                                        },
                                        "owner_id": {
                                          "type": "integer",
                                          "description": "The ID of the owner of the organization that is associated with the item"
                                        },
                                        "address": {
                                          "type": "string",
                                          "description": "The address of the organization"
                                        },
                                        "cc_email": {
                                          "type": "string",
                                          "description": "The BCC email of the organization associated with the item"
                                        }
                                      }
                                    }
                                  ]
                                }
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "success": true,
                  "data": {
                    "id": 8,
                    "company_id": 22122,
                    "user_id": 1234,
                    "done": false,
                    "type": "deadline",
                    "reference_type": "scheduler-service",
                    "reference_id": 7,
                    "conference_meeting_client": "871b8bc88d3a1202",
                    "conference_meeting_url": "https://pipedrive.zoom.us/link",
                    "conference_meeting_id": "01758746701",
                    "due_date": "2020-06-09",
                    "due_time": "10:00",
                    "duration": "01:00",
                    "busy_flag": true,
                    "add_time": "2020-06-08 12:37:56",
                    "marked_as_done_time": "2020-08-08 08:08:38",
                    "last_notification_time": "2020-08-08 12:37:56",
                    "last_notification_user_id": 7655,
                    "notification_language_id": 1,
                    "subject": "Deadline",
                    "public_description": "This is a description",
                    "calendar_sync_include_context": "",
                    "location": "Mustamäe tee 3, Tallinn, Estonia",
                    "org_id": 5,
                    "person_id": 1101,
                    "deal_id": 300,
                    "lead_id": "46c3b0e1-db35-59ca-1828-4817378dff71",
                    "active_flag": true,
                    "update_time": "2020-08-08 12:37:56",
                    "update_user_id": 5596,
                    "gcal_event_id": "",
                    "google_calendar_id": "",
                    "google_calendar_etag": "",
                    "source_timezone": "",
                    "rec_rule": "RRULE:FREQ=WEEKLY;BYDAY=WE",
                    "rec_rule_extension": "",
                    "rec_master_activity_id": 1,
                    "series": [ ],
                    "note": "A note for the activity",
                    "created_by_user_id": 1234,
                    "location_subpremise": "",
                    "location_street_number": "3",
                    "location_route": "Mustamäe tee",
                    "location_sublocality": "Kristiine",
                    "location_locality": "Tallinn",
                    "location_admin_area_level_1": "Harju maakond",
                    "location_admin_area_level_2": "",
                    "location_country": "Estonia",
                    "location_postal_code": "10616",
                    "location_formatted_address": "Mustamäe tee 3, 10616 Tallinn, Estonia",
                    "attendees": [
                      {
                        "email_address": "attendee@pipedrivemail.com",
                        "is_organizer": 0,
                        "name": "Attendee",
                        "person_id": 25312,
                        "status": "noreply",
                        "user_id": null
                      }
                    ],
                    "participants": [
                      { "person_id": 17985, "primary_flag": false },
                      { "person_id": 1101, "primary_flag": true }
                    ],
                    "org_name": "Organization",
                    "person_name": "Person",
                    "deal_title": "Deal",
                    "owner_name": "Creator",
                    "person_dropbox_bcc": "company@pipedrivemail.com",
                    "deal_dropbox_bcc": "company+deal300@pipedrivemail.com",
                    "assigned_to_user_id": 1235,
                    "file": {
                      "id": "376892,",
                      "clean_name": "Audio 10:55:07.m4a",
                      "url": "https://pipedrive-files.s3-eu-west-1.amazonaws.com/Audio-recording.m4a"
                    }
                  },
                  "related_objects": {
                    "user": {
                      "1234": {
                        "id": 1234,
                        "name": "Creator",
                        "email": "john.doe@pipedrive.com",
                        "has_pic": false,
                        "pic_hash": null,
                        "active_flag": true
                      }
                    },
                    "organization": {
                      "5": {
                        "id": 5,
                        "name": "Organization",
                        "people_count": 2,
                        "owner_id": 8877,
                        "address": "Mustamäe tee 3a, 10615 Tallinn",
                        "cc_email": "org@pipedrivemail.com",
                        "active_flag": true
                      }
                    },
                    "person": {
                      "1101": {
                        "id": 1101,
                        "name": "Person",
                        "active_flag": true,
                        "email": [
                          {
                            "label": "work",
                            "value": "person@pipedrive.com",
                            "primary": true
                          }
                        ],
                        "phone": [
                          {
                            "label": "work",
                            "value": "3421787767",
                            "primary": true
                          }
                        ],
                        "owner_id": 8877
                      }
                    },
                    "deal": {
                      "300": {
                        "id": 300,
                        "title": "Deal",
                        "status": "open",
                        "value": 856,
                        "currency": "EUR",
                        "stage_id": 1,
                        "pipeline_id": 1
                      }
                    }
                  },
                  "additional_data": { "updates_story_id": 2039 }
                }
              }
            }
          }
        }
      }
    },
    "/activities/{id}": {
      "delete": {
        "summary": "Delete an activity",
        "description": "Marks an activity as deleted. After 30 days, the activity will be permanently deleted.",
        "operationId": "deleteActivity",
        "tags": [ "Activities" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the activity",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "The activity was successfully deleted",
            "content": {
              "application/json": {
                "schema": {
                  "title": "deleteActivity",
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean" },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "description": "The ID of the activity that was deleted"
                        }
                      }
                    }
                  }
                },
                "example": { "success": true, "data": { "id": 624 } }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get details of an activity",
        "description": "Returns the details of a specific activity.",
        "operationId": "getActivity",
        "tags": [ "Activities" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the activity",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful",
            "content": {
              "application/json": {
                "schema": {
                  "title": "getActivity",
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean" },
                    "data": {
                      "title": "activityResponseObject",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "due_date": {
                              "description": "The due date of the activity. Format: YYYY-MM-DD",
                              "type": "string",
                              "format": "date"
                            },
                            "due_time": {
                              "description": "The due time of the activity in UTC. Format: HH:MM",
                              "type": "string"
                            },
                            "duration": {
                              "description": "The duration of the activity. Format: HH:MM",
                              "type": "string"
                            },
                            "deal_id": {
                              "description": "The ID of the deal this activity is associated with",
                              "type": "integer"
                            },
                            "lead_id": {
                              "description": "The ID of the lead this activity is associated with",
                              "type": "string"
                            },
                            "person_id": {
                              "description": "The ID of the person this activity is associated with",
                              "type": "integer"
                            },
                            "org_id": {
                              "description": "The ID of the organization this activity is associated with",
                              "type": "integer"
                            },
                            "note": {
                              "description": "The note of the activity (HTML format)",
                              "type": "string"
                            },
                            "location": {
                              "description": "The address of the activity. Pipedrive will automatically check if the location matches a geo-location on Google maps.",
                              "type": "string"
                            },
                            "public_description": {
                              "description": "Additional details about the activity that is synced to your external calendar. Unlike the note added to the activity, the description is publicly visible to any guests added to the activity.",
                              "type": "string"
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "description": "The activity ID, generated when the activity was created"
                            },
                            "done": {
                              "type": "boolean",
                              "description": "Whether the activity is done or not"
                            },
                            "subject": {
                              "description": "The subject of the activity",
                              "type": "string"
                            },
                            "type": {
                              "description": "The type of the activity. This is in correlation with the `key_string` parameter of ActivityTypes.",
                              "type": "string"
                            },
                            "user_id": {
                              "description": "The ID of the user whom the activity is assigned to",
                              "type": "integer"
                            },
                            "participants": {
                              "description": "List of multiple persons (participants) this activity is associated with",
                              "type": "array",
                              "nullable": true,
                              "items": { "type": "object" }
                            },
                            "busy_flag": {
                              "description": "Marks if the activity is set as 'Busy' or 'Free'. If the flag is set to `true`, your customers will not be able to book that time slot through any Scheduler links. The flag can also be unset. When the value of the flag is unset (`null`), the flag defaults to 'Busy' if it has a time set, and 'Free' if it is an all-day event without specified time.",
                              "type": "boolean",
                              "enum": [ true, false ]
                            },
                            "attendees": {
                              "description": "The attendees of the activity. This can be either your existing Pipedrive contacts or an external email address.",
                              "type": "array",
                              "nullable": true,
                              "items": { "type": "object" }
                            },
                            "company_id": {
                              "type": "integer",
                              "description": "The user's company ID"
                            },
                            "reference_type": {
                              "type": "string",
                              "description": "If the activity references some other object, it is indicated here. For example, value `Salesphone` refers to activities created with Caller."
                            },
                            "reference_id": {
                              "type": "integer",
                              "description": "Together with the `reference_type`, gives the ID of the other object"
                            },
                            "conference_meeting_client": {
                              "type": "string",
                              "description": "The ID of Marketplace app, which is connected to this activity"
                            },
                            "conference_meeting_url": {
                              "type": "string",
                              "description": "The link to join the meeting which is associated with this activity"
                            },
                            "conference_meeting_id": {
                              "type": "string",
                              "description": "The meeting ID of the meeting provider (Zoom, MS Teams etc.) that is associated with this activity"
                            },
                            "add_time": {
                              "type": "string",
                              "description": "The creation date and time of the activity in UTC. Format: YYYY-MM-DD HH:MM:SS."
                            },
                            "marked_as_done_time": {
                              "type": "string",
                              "description": "The date and time this activity was marked as done. Format: YYYY-MM-DD HH:MM:SS."
                            },
                            "last_notification_time": {
                              "type": "string",
                              "description": "The date and time of latest notifications sent about this activity to the participants or the attendees of this activity"
                            },
                            "last_notification_user_id": {
                              "type": "integer",
                              "description": "The ID of the user who triggered the sending of the latest notifications about this activity to the participants or the attendees of this activity"
                            },
                            "notification_language_id": {
                              "type": "integer",
                              "description": "The ID of the language the notifications are sent in"
                            },
                            "lead_id": {
                              "description": "The ID of the lead in the UUID format this activity is associated with",
                              "type": "string",
                              "format": "uuid"
                            },
                            "active_flag": {
                              "type": "boolean",
                              "description": "Whether the activity is active or not"
                            },
                            "update_time": {
                              "type": "string",
                              "description": "The last update date and time of the activity. Format: YYYY-MM-DD HH:MM:SS."
                            },
                            "update_user_id": {
                              "description": "The ID of the user who was the last to update this activity",
                              "type": "integer"
                            },
                            "gcal_event_id": {
                              "type": "string",
                              "description": "For the activity which syncs to Google calendar, this is the Google event ID. NB! This field is related to old Google calendar sync and will be deprecated soon."
                            },
                            "google_calendar_id": {
                              "type": "string",
                              "description": "The Google calendar ID that this activity syncs to. NB! This field is related to old Google calendar sync and will be deprecated soon."
                            },
                            "google_calendar_etag": {
                              "type": "string",
                              "description": "The Google calendar API etag (version) that is used for syncing this activity. NB! This field is related to old Google calendar sync and will be deprecated soon."
                            },
                            "calendar_sync_include_context": {
                              "type": "string",
                              "description": "For activities that sync to an external calendar, this setting indicates if the activity syncs with context (what are the deals, persons, organizations this activity is related to)"
                            },
                            "source_timezone": {
                              "type": "string",
                              "description": "The timezone the activity was created in an external calendar"
                            },
                            "rec_rule": {
                              "type": "string",
                              "description": "The rule for the recurrence of the activity. Is important for activities synced into Pipedrive from an external calendar. Example: \"RRULE:FREQ=WEEKLY;BYDAY=WE\""
                            },
                            "rec_rule_extension": {
                              "type": "string",
                              "description": "Additional rules for the recurrence of the activity, extend the `rec_rule`. Is important for activities synced into Pipedrive from an external calendar."
                            },
                            "rec_master_activity_id": {
                              "type": "integer",
                              "description": "The ID of parent activity for a recurrent activity if the current activity is an exception to recurrence rules"
                            },
                            "series": {
                              "description": "The list of recurring activity instances. It is in a structure as follows: `[{due_date: \"2020-06-24\", due_time: \"10:00:00\"}]`",
                              "type": "array",
                              "items": { "type": "object" }
                            },
                            "created_by_user_id": {
                              "description": "The ID of the user who created the activity",
                              "type": "integer"
                            },
                            "location_subpremise": {
                              "type": "string",
                              "description": "Subfield of location field. Indicates apartment/suite number."
                            },
                            "location_street_number": {
                              "type": "string",
                              "description": "Subfield of location field. Indicates house number."
                            },
                            "location_route": {
                              "type": "string",
                              "description": "Subfield of location field. Indicates street name."
                            },
                            "location_sublocality": {
                              "type": "string",
                              "description": "Subfield of location field. Indicates district/sublocality."
                            },
                            "location_locality": {
                              "type": "string",
                              "description": "Subfield of location field. Indicates city/town/village/locality."
                            },
                            "location_admin_area_level_1": {
                              "type": "string",
                              "description": "Subfield of location field. Indicates state/county."
                            },
                            "location_admin_area_level_2": {
                              "type": "string",
                              "description": "Subfield of location field. Indicates region."
                            },
                            "location_country": {
                              "type": "string",
                              "description": "Subfield of location field. Indicates country."
                            },
                            "location_postal_code": {
                              "type": "string",
                              "description": "Subfield of location field. Indicates ZIP/postal code."
                            },
                            "location_formatted_address": {
                              "type": "string",
                              "description": "Subfield of location field. Indicates full/combined address."
                            },
                            "org_name": {
                              "description": "The name of the organization this activity is associated with",
                              "type": "string"
                            },
                            "person_name": {
                              "description": "The name of the person this activity is associated with",
                              "type": "string"
                            },
                            "deal_title": {
                              "description": "The name of the deal this activity is associated with",
                              "type": "string"
                            },
                            "owner_name": {
                              "description": "The name of the user this activity is owned by",
                              "type": "string"
                            },
                            "person_dropbox_bcc": {
                              "type": "string",
                              "description": "The BCC email address of the person"
                            },
                            "deal_dropbox_bcc": {
                              "type": "string",
                              "description": "The BCC email address of the deal"
                            },
                            "assigned_to_user_id": {
                              "description": "The ID of the user to whom the activity is assigned to. Equal to `user_id`.",
                              "type": "integer"
                            },
                            "file": {
                              "type": "object",
                              "description": "The file that is attached to this activity. For example, this can be a reference to an audio note file generated with Pipedrive mobile app."
                            }
                          }
                        }
                      ]
                    },
                    "related_objects": {
                      "type": "object",
                      "properties": {
                        "user": {
                          "type": "object",
                          "properties": {
                            "USER_ID": {
                              "type": "object",
                              "title": "userDataWithId",
                              "allOf": [
                                {
                                  "properties": {
                                    "id": {
                                      "type": "integer",
                                      "description": "The ID of the user"
                                    },
                                    "name": {
                                      "type": "string",
                                      "description": "The name of the user"
                                    },
                                    "email": {
                                      "type": "string",
                                      "description": "The email of the user"
                                    },
                                    "has_pic": {
                                      "type": "integer",
                                      "description": "Whether the user has picture or not. 0 = No picture, 1 = Has picture."
                                    },
                                    "pic_hash": {
                                      "type": "string",
                                      "nullable": true,
                                      "description": "The user picture hash"
                                    },
                                    "active_flag": {
                                      "type": "boolean",
                                      "description": "Whether the user is active or not"
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "description": "The ID of the user"
                                }
                              ]
                            }
                          }
                        },
                        "deal": {
                          "type": "object",
                          "properties": {
                            "DEAL_ID": {
                              "type": "object",
                              "description": "The ID of the deal which is associated with the item",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "description": "The ID of the deal associated with the item"
                                },
                                "title": {
                                  "type": "string",
                                  "description": "The title of the deal associated with the item"
                                },
                                "status": {
                                  "type": "string",
                                  "description": "The status of the deal associated with the item"
                                },
                                "value": {
                                  "type": "number",
                                  "description": "The value of the deal that is associated with the item"
                                },
                                "currency": {
                                  "type": "string",
                                  "description": "The currency of the deal value"
                                },
                                "stage_id": {
                                  "type": "integer",
                                  "description": "The ID of the stage the deal is currently at"
                                },
                                "pipeline_id": {
                                  "type": "integer",
                                  "description": "The ID of the pipeline the deal is in"
                                }
                              }
                            }
                          }
                        },
                        "person": {
                          "type": "object",
                          "properties": {
                            "PERSON_ID": {
                              "type": "object",
                              "description": "The ID of the person associated with the item",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "integer",
                                      "description": "The ID of the person associated with the item"
                                    },
                                    "name": {
                                      "type": "string",
                                      "description": "The name of the person associated with the item"
                                    },
                                    "email": {
                                      "type": "array",
                                      "description": "The emails of the person associated with the item",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "label": {
                                            "type": "string",
                                            "description": "The type of the email"
                                          },
                                          "value": {
                                            "type": "string",
                                            "description": "The email of the associated person"
                                          },
                                          "primary": {
                                            "type": "boolean",
                                            "description": "Whether this is the primary email or not"
                                          }
                                        }
                                      }
                                    },
                                    "phone": {
                                      "type": "array",
                                      "description": "The phone numbers of the person associated with the item",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "label": {
                                            "type": "string",
                                            "description": "The type of the phone number"
                                          },
                                          "value": {
                                            "type": "string",
                                            "description": "The phone number of the person associated with the item"
                                          },
                                          "primary": {
                                            "type": "boolean",
                                            "description": "Whether this is the primary phone number or not"
                                          }
                                        }
                                      }
                                    },
                                    "owner_id": {
                                      "type": "integer",
                                      "description": "The ID of the owner of the person that is associated with the item"
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        },
                        "organization": {
                          "type": "object",
                          "properties": {
                            "ORGANIZATION_ID": {
                              "type": "object",
                              "description": "The ID of the organization associated with the item",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "integer",
                                      "description": "The ID of the organization associated with the item"
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "The name of the organization associated with the item"
                                    },
                                    "people_count": {
                                      "type": "integer",
                                      "description": "The number of people connected with the organization that is associated with the item"
                                    },
                                    "owner_id": {
                                      "type": "integer",
                                      "description": "The ID of the owner of the organization that is associated with the item"
                                    },
                                    "address": {
                                      "type": "string",
                                      "description": "The address of the organization"
                                    },
                                    "cc_email": {
                                      "type": "string",
                                      "description": "The BCC email of the organization associated with the item"
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "success": true,
                  "data": {
                    "id": 8,
                    "company_id": 22122,
                    "user_id": 1234,
                    "done": false,
                    "type": "deadline",
                    "reference_type": "scheduler-service",
                    "reference_id": 7,
                    "conference_meeting_client": "871b8bc88d3a1202",
                    "conference_meeting_url": "https://pipedrive.zoom.us/link",
                    "conference_meeting_id": "01758746701",
                    "due_date": "2020-06-09",
                    "due_time": "10:00",
                    "duration": "01:00",
                    "busy_flag": true,
                    "add_time": "2020-06-08 12:37:56",
                    "marked_as_done_time": "2020-08-08 08:08:38",
                    "last_notification_time": "2020-08-08 12:37:56",
                    "last_notification_user_id": 7655,
                    "notification_language_id": 1,
                    "subject": "Deadline",
                    "public_description": "This is a description",
                    "calendar_sync_include_context": "",
                    "location": "Mustamäe tee 3, Tallinn, Estonia",
                    "org_id": 5,
                    "person_id": 1101,
                    "deal_id": 300,
                    "lead_id": "46c3b0e1-db35-59ca-1828-4817378dff71",
                    "active_flag": true,
                    "update_time": "2020-08-08 12:37:56",
                    "update_user_id": 5596,
                    "gcal_event_id": "",
                    "google_calendar_id": "",
                    "google_calendar_etag": "",
                    "source_timezone": "",
                    "rec_rule": "RRULE:FREQ=WEEKLY;BYDAY=WE",
                    "rec_rule_extension": "",
                    "rec_master_activity_id": 1,
                    "series": [ ],
                    "note": "A note for the activity",
                    "created_by_user_id": 1234,
                    "location_subpremise": "",
                    "location_street_number": "3",
                    "location_route": "Mustamäe tee",
                    "location_sublocality": "Kristiine",
                    "location_locality": "Tallinn",
                    "location_admin_area_level_1": "Harju maakond",
                    "location_admin_area_level_2": "",
                    "location_country": "Estonia",
                    "location_postal_code": "10616",
                    "location_formatted_address": "Mustamäe tee 3, 10616 Tallinn, Estonia",
                    "attendees": [
                      {
                        "email_address": "attendee@pipedrivemail.com",
                        "is_organizer": 0,
                        "name": "Attendee",
                        "person_id": 25312,
                        "status": "noreply",
                        "user_id": null
                      }
                    ],
                    "participants": [
                      { "person_id": 17985, "primary_flag": false },
                      { "person_id": 1101, "primary_flag": true }
                    ],
                    "org_name": "Organization",
                    "person_name": "Person",
                    "deal_title": "Deal",
                    "owner_name": "Creator",
                    "person_dropbox_bcc": "company@pipedrivemail.com",
                    "deal_dropbox_bcc": "company+deal300@pipedrivemail.com",
                    "assigned_to_user_id": 1235,
                    "file": {
                      "id": "376892,",
                      "clean_name": "Audio 10:55:07.m4a",
                      "url": "https://pipedrive-files.s3-eu-west-1.amazonaws.com/Audio-recording.m4a"
                    }
                  },
                  "related_objects": {
                    "user": {
                      "1234": {
                        "id": 1234,
                        "name": "Creator",
                        "email": "john.doe@pipedrive.com",
                        "has_pic": false,
                        "pic_hash": null,
                        "active_flag": true
                      }
                    },
                    "organization": {
                      "5": {
                        "id": 5,
                        "name": "Organization",
                        "people_count": 2,
                        "owner_id": 8877,
                        "address": "Mustamäe tee 3a, 10615 Tallinn",
                        "cc_email": "org@pipedrivemail.com"
                      }
                    },
                    "person": {
                      "1101": {
                        "id": 1101,
                        "name": "Person",
                        "email": [
                          {
                            "label": "work",
                            "value": "person@pipedrive.com",
                            "primary": true
                          }
                        ],
                        "phone": [
                          {
                            "label": "work",
                            "value": "3421787767",
                            "primary": true
                          }
                        ],
                        "owner_id": 8877
                      }
                    },
                    "deal": {
                      "300": {
                        "id": 300,
                        "title": "Deal",
                        "status": "open",
                        "value": 856,
                        "currency": "EUR",
                        "stage_id": 1,
                        "pipeline_id": 1
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update an activity",
        "description": "Updates an activity. Includes `more_activities_scheduled_in_context` property in response's `additional_data` which indicates whether there are more undone activities scheduled with the same deal, person or organization (depending on the supplied data).",
        "operationId": "updateActivity",
        "tags": [ "Activities" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the activity",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "updateActivityRequest",
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "due_date": {
                        "description": "The due date of the activity. Format: YYYY-MM-DD",
                        "type": "string",
                        "format": "date"
                      },
                      "due_time": {
                        "description": "The due time of the activity in UTC. Format: HH:MM",
                        "type": "string"
                      },
                      "duration": {
                        "description": "The duration of the activity. Format: HH:MM",
                        "type": "string"
                      },
                      "deal_id": {
                        "description": "The ID of the deal this activity is associated with",
                        "type": "integer"
                      },
                      "lead_id": {
                        "description": "The ID of the lead this activity is associated with",
                        "type": "string"
                      },
                      "person_id": {
                        "description": "The ID of the person this activity is associated with",
                        "type": "integer"
                      },
                      "org_id": {
                        "description": "The ID of the organization this activity is associated with",
                        "type": "integer"
                      },
                      "note": {
                        "description": "The note of the activity (HTML format)",
                        "type": "string"
                      },
                      "location": {
                        "description": "The address of the activity. Pipedrive will automatically check if the location matches a geo-location on Google maps.",
                        "type": "string"
                      },
                      "public_description": {
                        "description": "Additional details about the activity that is synced to your external calendar. Unlike the note added to the activity, the description is publicly visible to any guests added to the activity.",
                        "type": "string"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "subject": {
                        "description": "The subject of the activity",
                        "type": "string"
                      },
                      "type": {
                        "description": "The type of the activity. This is in correlation with the `key_string` parameter of ActivityTypes.",
                        "type": "string"
                      },
                      "user_id": {
                        "description": "The ID of the user whom the activity is assigned to",
                        "type": "integer"
                      },
                      "participants": {
                        "description": "List of multiple persons (participants) this activity is associated with. It requires a structure as follows: `[{\"person_id\":1,\"primary_flag\":true}]`",
                        "type": "array",
                        "items": { "type": "object" }
                      },
                      "busy_flag": {
                        "description": "Set the activity as 'Busy' or 'Free'. If the flag is set to `true`, your customers will not be able to book that time slot through any Scheduler links. The flag can also be unset by never setting it or overriding it with `null`. When the value of the flag is unset (`null`), the flag defaults to 'Busy' if it has a time set, and 'Free' if it is an all-day event without specified time.",
                        "type": "boolean",
                        "enum": [ true, false ]
                      },
                      "attendees": {
                        "description": "The attendees of the activity. This can be either your existing Pipedrive contacts or an external email address. It requires a structure as follows: `[{\"email_address\":\"mail@example.org\"}]` or `[{\"person_id\":1, \"email_address\":\"mail@example.org\"}]`",
                        "type": "array",
                        "items": { "type": "object" }
                      },
                      "done": {
                        "allOf": [
                          {
                            "title": "numberBoolean",
                            "type": "number",
                            "enum": [ 0, 1 ]
                          }
                        ],
                        "description": "Whether the activity is done or not. 0 = Not done, 1 = Done"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The request was successful",
            "content": {
              "application/json": {
                "schema": {
                  "title": "updateActivity",
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean" },
                    "data": {
                      "title": "activityResponseObject",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "due_date": {
                              "description": "The due date of the activity. Format: YYYY-MM-DD",
                              "type": "string",
                              "format": "date"
                            },
                            "due_time": {
                              "description": "The due time of the activity in UTC. Format: HH:MM",
                              "type": "string"
                            },
                            "duration": {
                              "description": "The duration of the activity. Format: HH:MM",
                              "type": "string"
                            },
                            "deal_id": {
                              "description": "The ID of the deal this activity is associated with",
                              "type": "integer"
                            },
                            "lead_id": {
                              "description": "The ID of the lead this activity is associated with",
                              "type": "string"
                            },
                            "person_id": {
                              "description": "The ID of the person this activity is associated with",
                              "type": "integer"
                            },
                            "org_id": {
                              "description": "The ID of the organization this activity is associated with",
                              "type": "integer"
                            },
                            "note": {
                              "description": "The note of the activity (HTML format)",
                              "type": "string"
                            },
                            "location": {
                              "description": "The address of the activity. Pipedrive will automatically check if the location matches a geo-location on Google maps.",
                              "type": "string"
                            },
                            "public_description": {
                              "description": "Additional details about the activity that is synced to your external calendar. Unlike the note added to the activity, the description is publicly visible to any guests added to the activity.",
                              "type": "string"
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "description": "The activity ID, generated when the activity was created"
                            },
                            "done": {
                              "type": "boolean",
                              "description": "Whether the activity is done or not"
                            },
                            "subject": {
                              "description": "The subject of the activity",
                              "type": "string"
                            },
                            "type": {
                              "description": "The type of the activity. This is in correlation with the `key_string` parameter of ActivityTypes.",
                              "type": "string"
                            },
                            "user_id": {
                              "description": "The ID of the user whom the activity is assigned to",
                              "type": "integer"
                            },
                            "participants": {
                              "description": "List of multiple persons (participants) this activity is associated with",
                              "type": "array",
                              "nullable": true,
                              "items": { "type": "object" }
                            },
                            "busy_flag": {
                              "description": "Marks if the activity is set as 'Busy' or 'Free'. If the flag is set to `true`, your customers will not be able to book that time slot through any Scheduler links. The flag can also be unset. When the value of the flag is unset (`null`), the flag defaults to 'Busy' if it has a time set, and 'Free' if it is an all-day event without specified time.",
                              "type": "boolean",
                              "enum": [ true, false ]
                            },
                            "attendees": {
                              "description": "The attendees of the activity. This can be either your existing Pipedrive contacts or an external email address.",
                              "type": "array",
                              "nullable": true,
                              "items": { "type": "object" }
                            },
                            "company_id": {
                              "type": "integer",
                              "description": "The user's company ID"
                            },
                            "reference_type": {
                              "type": "string",
                              "description": "If the activity references some other object, it is indicated here. For example, value `Salesphone` refers to activities created with Caller."
                            },
                            "reference_id": {
                              "type": "integer",
                              "description": "Together with the `reference_type`, gives the ID of the other object"
                            },
                            "conference_meeting_client": {
                              "type": "string",
                              "description": "The ID of Marketplace app, which is connected to this activity"
                            },
                            "conference_meeting_url": {
                              "type": "string",
                              "description": "The link to join the meeting which is associated with this activity"
                            },
                            "conference_meeting_id": {
                              "type": "string",
                              "description": "The meeting ID of the meeting provider (Zoom, MS Teams etc.) that is associated with this activity"
                            },
                            "add_time": {
                              "type": "string",
                              "description": "The creation date and time of the activity in UTC. Format: YYYY-MM-DD HH:MM:SS."
                            },
                            "marked_as_done_time": {
                              "type": "string",
                              "description": "The date and time this activity was marked as done. Format: YYYY-MM-DD HH:MM:SS."
                            },
                            "last_notification_time": {
                              "type": "string",
                              "description": "The date and time of latest notifications sent about this activity to the participants or the attendees of this activity"
                            },
                            "last_notification_user_id": {
                              "type": "integer",
                              "description": "The ID of the user who triggered the sending of the latest notifications about this activity to the participants or the attendees of this activity"
                            },
                            "notification_language_id": {
                              "type": "integer",
                              "description": "The ID of the language the notifications are sent in"
                            },
                            "lead_id": {
                              "description": "The ID of the lead in the UUID format this activity is associated with",
                              "type": "string",
                              "format": "uuid"
                            },
                            "active_flag": {
                              "type": "boolean",
                              "description": "Whether the activity is active or not"
                            },
                            "update_time": {
                              "type": "string",
                              "description": "The last update date and time of the activity. Format: YYYY-MM-DD HH:MM:SS."
                            },
                            "update_user_id": {
                              "description": "The ID of the user who was the last to update this activity",
                              "type": "integer"
                            },
                            "gcal_event_id": {
                              "type": "string",
                              "description": "For the activity which syncs to Google calendar, this is the Google event ID. NB! This field is related to old Google calendar sync and will be deprecated soon."
                            },
                            "google_calendar_id": {
                              "type": "string",
                              "description": "The Google calendar ID that this activity syncs to. NB! This field is related to old Google calendar sync and will be deprecated soon."
                            },
                            "google_calendar_etag": {
                              "type": "string",
                              "description": "The Google calendar API etag (version) that is used for syncing this activity. NB! This field is related to old Google calendar sync and will be deprecated soon."
                            },
                            "calendar_sync_include_context": {
                              "type": "string",
                              "description": "For activities that sync to an external calendar, this setting indicates if the activity syncs with context (what are the deals, persons, organizations this activity is related to)"
                            },
                            "source_timezone": {
                              "type": "string",
                              "description": "The timezone the activity was created in an external calendar"
                            },
                            "rec_rule": {
                              "type": "string",
                              "description": "The rule for the recurrence of the activity. Is important for activities synced into Pipedrive from an external calendar. Example: \"RRULE:FREQ=WEEKLY;BYDAY=WE\""
                            },
                            "rec_rule_extension": {
                              "type": "string",
                              "description": "Additional rules for the recurrence of the activity, extend the `rec_rule`. Is important for activities synced into Pipedrive from an external calendar."
                            },
                            "rec_master_activity_id": {
                              "type": "integer",
                              "description": "The ID of parent activity for a recurrent activity if the current activity is an exception to recurrence rules"
                            },
                            "series": {
                              "description": "The list of recurring activity instances. It is in a structure as follows: `[{due_date: \"2020-06-24\", due_time: \"10:00:00\"}]`",
                              "type": "array",
                              "items": { "type": "object" }
                            },
                            "created_by_user_id": {
                              "description": "The ID of the user who created the activity",
                              "type": "integer"
                            },
                            "location_subpremise": {
                              "type": "string",
                              "description": "Subfield of location field. Indicates apartment/suite number."
                            },
                            "location_street_number": {
                              "type": "string",
                              "description": "Subfield of location field. Indicates house number."
                            },
                            "location_route": {
                              "type": "string",
                              "description": "Subfield of location field. Indicates street name."
                            },
                            "location_sublocality": {
                              "type": "string",
                              "description": "Subfield of location field. Indicates district/sublocality."
                            },
                            "location_locality": {
                              "type": "string",
                              "description": "Subfield of location field. Indicates city/town/village/locality."
                            },
                            "location_admin_area_level_1": {
                              "type": "string",
                              "description": "Subfield of location field. Indicates state/county."
                            },
                            "location_admin_area_level_2": {
                              "type": "string",
                              "description": "Subfield of location field. Indicates region."
                            },
                            "location_country": {
                              "type": "string",
                              "description": "Subfield of location field. Indicates country."
                            },
                            "location_postal_code": {
                              "type": "string",
                              "description": "Subfield of location field. Indicates ZIP/postal code."
                            },
                            "location_formatted_address": {
                              "type": "string",
                              "description": "Subfield of location field. Indicates full/combined address."
                            },
                            "org_name": {
                              "description": "The name of the organization this activity is associated with",
                              "type": "string"
                            },
                            "person_name": {
                              "description": "The name of the person this activity is associated with",
                              "type": "string"
                            },
                            "deal_title": {
                              "description": "The name of the deal this activity is associated with",
                              "type": "string"
                            },
                            "owner_name": {
                              "description": "The name of the user this activity is owned by",
                              "type": "string"
                            },
                            "person_dropbox_bcc": {
                              "type": "string",
                              "description": "The BCC email address of the person"
                            },
                            "deal_dropbox_bcc": {
                              "type": "string",
                              "description": "The BCC email address of the deal"
                            },
                            "assigned_to_user_id": {
                              "description": "The ID of the user to whom the activity is assigned to. Equal to `user_id`.",
                              "type": "integer"
                            },
                            "file": {
                              "type": "object",
                              "description": "The file that is attached to this activity. For example, this can be a reference to an audio note file generated with Pipedrive mobile app."
                            }
                          }
                        }
                      ]
                    },
                    "related_objects": {
                      "type": "object",
                      "properties": {
                        "user": {
                          "type": "object",
                          "properties": {
                            "USER_ID": {
                              "type": "object",
                              "title": "userDataWithId",
                              "allOf": [
                                {
                                  "properties": {
                                    "id": {
                                      "type": "integer",
                                      "description": "The ID of the user"
                                    },
                                    "name": {
                                      "type": "string",
                                      "description": "The name of the user"
                                    },
                                    "email": {
                                      "type": "string",
                                      "description": "The email of the user"
                                    },
                                    "has_pic": {
                                      "type": "integer",
                                      "description": "Whether the user has picture or not. 0 = No picture, 1 = Has picture."
                                    },
                                    "pic_hash": {
                                      "type": "string",
                                      "nullable": true,
                                      "description": "The user picture hash"
                                    },
                                    "active_flag": {
                                      "type": "boolean",
                                      "description": "Whether the user is active or not"
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "description": "The ID of the user"
                                }
                              ]
                            }
                          }
                        },
                        "deal": {
                          "type": "object",
                          "properties": {
                            "DEAL_ID": {
                              "type": "object",
                              "description": "The ID of the deal which is associated with the item",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "description": "The ID of the deal associated with the item"
                                },
                                "title": {
                                  "type": "string",
                                  "description": "The title of the deal associated with the item"
                                },
                                "status": {
                                  "type": "string",
                                  "description": "The status of the deal associated with the item"
                                },
                                "value": {
                                  "type": "number",
                                  "description": "The value of the deal that is associated with the item"
                                },
                                "currency": {
                                  "type": "string",
                                  "description": "The currency of the deal value"
                                },
                                "stage_id": {
                                  "type": "integer",
                                  "description": "The ID of the stage the deal is currently at"
                                },
                                "pipeline_id": {
                                  "type": "integer",
                                  "description": "The ID of the pipeline the deal is in"
                                }
                              }
                            }
                          }
                        },
                        "person": {
                          "type": "object",
                          "properties": {
                            "PERSON_ID": {
                              "type": "object",
                              "description": "The ID of the person associated with the item",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "active_flag": {
                                      "type": "boolean",
                                      "description": "Whether the associated person is active or not"
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "integer",
                                      "description": "The ID of the person associated with the item"
                                    },
                                    "name": {
                                      "type": "string",
                                      "description": "The name of the person associated with the item"
                                    },
                                    "email": {
                                      "type": "array",
                                      "description": "The emails of the person associated with the item",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "label": {
                                            "type": "string",
                                            "description": "The type of the email"
                                          },
                                          "value": {
                                            "type": "string",
                                            "description": "The email of the associated person"
                                          },
                                          "primary": {
                                            "type": "boolean",
                                            "description": "Whether this is the primary email or not"
                                          }
                                        }
                                      }
                                    },
                                    "phone": {
                                      "type": "array",
                                      "description": "The phone numbers of the person associated with the item",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "label": {
                                            "type": "string",
                                            "description": "The type of the phone number"
                                          },
                                          "value": {
                                            "type": "string",
                                            "description": "The phone number of the person associated with the item"
                                          },
                                          "primary": {
                                            "type": "boolean",
                                            "description": "Whether this is the primary phone number or not"
                                          }
                                        }
                                      }
                                    },
                                    "owner_id": {
                                      "type": "integer",
                                      "description": "The ID of the owner of the person that is associated with the item"
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        },
                        "organization": {
                          "type": "object",
                          "properties": {
                            "ORGANIZATION_ID": {
                              "type": "object",
                              "description": "The ID of the organization associated with the item",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "active_flag": {
                                      "type": "boolean",
                                      "description": "Whether the associated organization is active or not"
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "description": "The ID of the organization associated with the item",
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "integer",
                                          "description": "The ID of the organization associated with the item"
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "The name of the organization associated with the item"
                                        },
                                        "people_count": {
                                          "type": "integer",
                                          "description": "The number of people connected with the organization that is associated with the item"
                                        },
                                        "owner_id": {
                                          "type": "integer",
                                          "description": "The ID of the owner of the organization that is associated with the item"
                                        },
                                        "address": {
                                          "type": "string",
                                          "description": "The address of the organization"
                                        },
                                        "cc_email": {
                                          "type": "string",
                                          "description": "The BCC email of the organization associated with the item"
                                        }
                                      }
                                    }
                                  ]
                                }
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "success": true,
                  "data": {
                    "id": 8,
                    "company_id": 22122,
                    "user_id": 1234,
                    "done": false,
                    "type": "deadline",
                    "reference_type": "scheduler-service",
                    "reference_id": 7,
                    "conference_meeting_client": "871b8bc88d3a1202",
                    "conference_meeting_url": "https://pipedrive.zoom.us/link",
                    "conference_meeting_id": "01758746701",
                    "due_date": "2020-06-09",
                    "due_time": "10:00",
                    "duration": "01:00",
                    "busy_flag": true,
                    "add_time": "2020-06-08 12:37:56",
                    "marked_as_done_time": "2020-08-08 08:08:38",
                    "last_notification_time": "2020-08-08 12:37:56",
                    "last_notification_user_id": 7655,
                    "notification_language_id": 1,
                    "subject": "Deadline",
                    "public_description": "This is a description",
                    "calendar_sync_include_context": "",
                    "location": "Mustamäe tee 3, Tallinn, Estonia",
                    "org_id": 5,
                    "person_id": 1101,
                    "deal_id": 300,
                    "lead_id": "46c3b0e1-db35-59ca-1828-4817378dff71",
                    "active_flag": true,
                    "update_time": "2020-08-08 12:37:56",
                    "update_user_id": 5596,
                    "gcal_event_id": "",
                    "google_calendar_id": "",
                    "google_calendar_etag": "",
                    "source_timezone": "",
                    "rec_rule": "RRULE:FREQ=WEEKLY;BYDAY=WE",
                    "rec_rule_extension": "",
                    "rec_master_activity_id": 1,
                    "series": [ ],
                    "note": "A note for the activity",
                    "created_by_user_id": 1234,
                    "location_subpremise": "",
                    "location_street_number": "3",
                    "location_route": "Mustamäe tee",
                    "location_sublocality": "Kristiine",
                    "location_locality": "Tallinn",
                    "location_admin_area_level_1": "Harju maakond",
                    "location_admin_area_level_2": "",
                    "location_country": "Estonia",
                    "location_postal_code": "10616",
                    "location_formatted_address": "Mustamäe tee 3, 10616 Tallinn, Estonia",
                    "attendees": [
                      {
                        "email_address": "attendee@pipedrivemail.com",
                        "is_organizer": 0,
                        "name": "Attendee",
                        "person_id": 25312,
                        "status": "noreply",
                        "user_id": null
                      }
                    ],
                    "participants": [
                      { "person_id": 17985, "primary_flag": false },
                      { "person_id": 1101, "primary_flag": true }
                    ],
                    "org_name": "Organization",
                    "person_name": "Person",
                    "deal_title": "Deal",
                    "owner_name": "Creator",
                    "person_dropbox_bcc": "company@pipedrivemail.com",
                    "deal_dropbox_bcc": "company+deal300@pipedrivemail.com",
                    "assigned_to_user_id": 1235,
                    "file": {
                      "id": "376892,",
                      "clean_name": "Audio 10:55:07.m4a",
                      "url": "https://pipedrive-files.s3-eu-west-1.amazonaws.com/Audio-recording.m4a"
                    }
                  },
                  "related_objects": {
                    "user": {
                      "1234": {
                        "id": 1234,
                        "name": "Creator",
                        "email": "john.doe@pipedrive.com",
                        "has_pic": false,
                        "pic_hash": null,
                        "active_flag": true
                      }
                    },
                    "organization": {
                      "5": {
                        "id": 5,
                        "name": "Organization",
                        "people_count": 2,
                        "owner_id": 8877,
                        "address": "Mustamäe tee 3a, 10615 Tallinn",
                        "cc_email": "org@pipedrivemail.com",
                        "active_flag": true
                      }
                    },
                    "person": {
                      "1101": {
                        "id": 1101,
                        "name": "Person",
                        "active_flag": true,
                        "email": [
                          {
                            "label": "work",
                            "value": "person@pipedrive.com",
                            "primary": true
                          }
                        ],
                        "phone": [
                          {
                            "label": "work",
                            "value": "3421787767",
                            "primary": true
                          }
                        ],
                        "owner_id": 8877
                      }
                    },
                    "deal": {
                      "300": {
                        "id": 300,
                        "title": "Deal",
                        "status": "open",
                        "value": 856,
                        "currency": "EUR",
                        "stage_id": 1,
                        "pipeline_id": 1
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/activityFields": {
      "get": {
        "summary": "Get all activity fields",
        "description": "Returns all activity fields.",
        "operationId": "getActivityFields",
        "tags": [ "ActivityFields" ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "fields",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer",
                                "description": "The ID of the field. Value is `null` in case of subfields."
                              },
                              "key": {
                                "type": "string",
                                "description": "The key of the field. For custom fields this is generated upon creation."
                              },
                              "name": {
                                "type": "string",
                                "description": "The name of the field"
                              },
                              "order_nr": {
                                "type": "integer",
                                "description": "The order number of the field"
                              },
                              "field_type": {
                                "allOf": [
                                  {
                                    "type": "string",
                                    "enum": [
                                      "address",
                                      "date",
                                      "daterange",
                                      "double",
                                      "enum",
                                      "monetary",
                                      "org",
                                      "people",
                                      "phone",
                                      "set",
                                      "text",
                                      "time",
                                      "timerange",
                                      "user",
                                      "varchar",
                                      "varchar_auto",
                                      "visible_to"
                                    ],
                                    "description": "The type of the field<table><tr><th>Value</th><th>Description</th></tr><tr><td>`address`</td><td>Address field (has multiple subfields, autocompleted by Google Maps)</td></tr><tr><td>`date`</td><td>Date (format YYYY-MM-DD)</td></tr><tr><td>`daterange`</td><td>Date-range field (has a start date and end date value, both YYYY-MM-DD)</td></tr><tr><td>`double`</td><td>Numeric value</td></tr><tr><td>`enum`</td><td>Options field with a single possible chosen option</td></tr><tr></tr><tr><td>`monetary`</td><td>Monetary field (has a numeric value and a currency value)</td></tr><tr><td>`org`</td><td>Organization field (contains an organization ID which is stored on the same account)</td></tr><tr><td>`people`</td><td>Person field (contains a person ID which is stored on the same account)</td></tr><tr><td>`phone`</td><td>Phone field (up to 255 numbers and/or characters)</td></tr><tr><td>`set`</td><td>Options field with a possibility of having multiple chosen options</td></tr><tr><td>`text`</td><td>Long text (up to 65k characters)</td></tr><tr><td>`time`</td><td>Time field (format HH:MM:SS)</td></tr><tr><td>`timerange`</td><td>Time-range field (has a start time and end time value, both HH:MM:SS)</td></tr><tr><td>`user`</td><td>User field (contains a user ID of another Pipedrive user)</td></tr><tr><td>`varchar`</td><td>Text (up to 255 characters)</td></tr><tr><td>`varchar_auto`</td><td>Autocomplete text (up to 255 characters)</td></tr><tr><td>`visible_to`</td><td>System field that keeps item's visibility setting</td></tr></table>"
                                  }
                                ]
                              },
                              "add_time": {
                                "type": "string",
                                "format": "datetime",
                                "description": "The creation time of the field"
                              },
                              "update_time": {
                                "type": "string",
                                "format": "datetime",
                                "description": "The update time of the field"
                              },
                              "last_updated_by_user_id": {
                                "type": "integer",
                                "description": "The ID of the user who created or most recently updated the field, only applicable for custom fields"
                              },
                              "active_flag": {
                                "type": "boolean",
                                "description": "The active flag of the field"
                              },
                              "edit_flag": {
                                "type": "boolean",
                                "description": "The edit flag of the field"
                              },
                              "index_visible_flag": {
                                "type": "boolean",
                                "description": "Not used"
                              },
                              "details_visible_flag": {
                                "type": "boolean",
                                "description": "Not used"
                              },
                              "add_visible_flag": {
                                "type": "boolean",
                                "description": "Not used"
                              },
                              "important_flag": {
                                "type": "boolean",
                                "description": "Not used"
                              },
                              "bulk_edit_allowed": {
                                "type": "boolean",
                                "description": "Whether or not the field of an item can be edited in bulk"
                              },
                              "searchable_flag": {
                                "type": "boolean",
                                "description": "Whether or not items can be searched by this field"
                              },
                              "filtering_allowed": {
                                "type": "boolean",
                                "description": "Whether or not items can be filtered by this field"
                              },
                              "sortable_flag": {
                                "type": "boolean",
                                "description": "Whether or not items can be sorted by this field"
                              },
                              "mandatory_flag": {
                                "type": "boolean",
                                "description": "Whether or not the field is mandatory"
                              },
                              "options": {
                                "type": "array",
                                "nullable": true,
                                "items": { "type": "object" },
                                "description": "The options of the field. When there are no options, `null` is returned."
                              },
                              "options_deleted": {
                                "type": "array",
                                "items": { "type": "object" },
                                "description": "The deleted options of the field. Only present when there is at least 1 deleted option."
                              },
                              "is_subfield": {
                                "type": "boolean",
                                "description": "Whether or not the field is a subfield of another field. Only present if field is subfield."
                              },
                              "subfields": {
                                "type": "array",
                                "items": { "type": "object" },
                                "description": "The subfields of the field. Only present when the field has subfields."
                              }
                            }
                          }
                        },
                        "additional_data": {
                          "description": "The additional data of the list",
                          "type": "object",
                          "properties": {
                            "start": {
                              "type": "integer",
                              "description": "Pagination start"
                            },
                            "limit": {
                              "type": "integer",
                              "description": "Items shown per page"
                            },
                            "more_items_in_collection": {
                              "type": "boolean",
                              "description": "If there are more list items in the collection than displayed or not"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "success": true,
                  "data": [
                    {
                      "id": 1,
                      "key": "title",
                      "name": "Title",
                      "order_nr": 2,
                      "field_type": "varchar",
                      "add_time": "2019-02-04 13:58:03",
                      "update_time": "2019-02-04 13:58:03",
                      "last_updated_by_user_id": 1,
                      "active_flag": true,
                      "edit_flag": false,
                      "index_visible_flag": true,
                      "details_visible_flag": true,
                      "add_visible_flag": true,
                      "important_flag": false,
                      "bulk_edit_allowed": true,
                      "searchable_flag": false,
                      "filtering_allowed": true,
                      "sortable_flag": true,
                      "options": null,
                      "mandatory_flag": true
                    },
                    {
                      "id": 2,
                      "key": "9dc80c50d78a15643bfc4ca79d76156a73a1ca0e",
                      "name": "Customer Type",
                      "order_nr": 1,
                      "field_type": "enum",
                      "add_time": "2019-02-04 13:58:03",
                      "update_time": "2019-02-04 13:58:03",
                      "last_updated_by_user_id": 1,
                      "active_flag": true,
                      "edit_flag": true,
                      "index_visible_flag": true,
                      "details_visible_flag": true,
                      "add_visible_flag": false,
                      "important_flag": false,
                      "bulk_edit_allowed": true,
                      "searchable_flag": false,
                      "filtering_allowed": true,
                      "sortable_flag": true,
                      "options": [
                        { "id": 190, "label": "Private person" },
                        { "id": 191, "label": "Company" },
                        { "id": 192, "label": "Government" }
                      ],
                      "mandatory_flag": true
                    }
                  ],
                  "additional_data": {
                    "pagination": {
                      "start": 0,
                      "limit": 100,
                      "more_items_in_collection": false
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/activityTypes": {
      "delete": {
        "summary": "Delete multiple activity types in bulk",
        "description": "Marks multiple activity types as deleted.",
        "operationId": "deleteActivityTypes",
        "tags": [ "ActivityTypes" ],
        "parameters": [
          {
            "in": "query",
            "name": "ids",
            "description": "The comma-separated activity type IDs",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "The activity types were successfully deleted",
            "content": {
              "application/json": {
                "schema": {
                  "title": "deleteActivityTypes",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "array",
                              "items": { "type": "integer" },
                              "description": "The IDs of the deleted activity types"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": { "success": true, "data": { "id": [ 1, 2, 3 ] } }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get all activity types",
        "description": "Returns all activity types.",
        "operationId": "getActivityTypes",
        "tags": [ "ActivityTypes" ],
        "responses": {
          "200": {
            "description": "A list of activity types",
            "content": {
              "application/json": {
                "schema": {
                  "title": "getActivityTypes",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer",
                                "description": "The ID of the activity type"
                              },
                              "name": {
                                "type": "string",
                                "description": "The name of the activity type"
                              },
                              "icon_key": {
                                "type": "string",
                                "description": "Icon graphic to use for representing this activity type",
                                "enum": [
                                  "task",
                                  "email",
                                  "meeting",
                                  "deadline",
                                  "call",
                                  "lunch",
                                  "calendar",
                                  "downarrow",
                                  "document",
                                  "smartphone",
                                  "camera",
                                  "scissors",
                                  "cogs",
                                  "bubble",
                                  "uparrow",
                                  "checkbox",
                                  "signpost",
                                  "shuffle",
                                  "addressbook",
                                  "linegraph",
                                  "picture",
                                  "car",
                                  "world",
                                  "search",
                                  "clip",
                                  "sound",
                                  "brush",
                                  "key",
                                  "padlock",
                                  "pricetag",
                                  "suitcase",
                                  "finish",
                                  "plane",
                                  "loop",
                                  "wifi",
                                  "truck",
                                  "cart",
                                  "bulb",
                                  "bell",
                                  "presentation"
                                ]
                              },
                              "color": {
                                "type": "string",
                                "description": "A designated color for the activity type in 6-character HEX format (e.g. `FFFFFF` for white, `000000` for black)"
                              },
                              "order_nr": {
                                "type": "integer",
                                "description": "An order number for the activity type. Order numbers should be used to order the types in the activity type selections."
                              },
                              "key_string": {
                                "type": "string",
                                "description": "A string that is generated by the API based on the given name of the activity type upon creation"
                              },
                              "active_flag": {
                                "type": "boolean",
                                "description": "The active flag of the activity type"
                              },
                              "is_custom_flag": {
                                "type": "boolean",
                                "description": "Whether the activity type is a custom one or not"
                              },
                              "add_time": {
                                "type": "string",
                                "format": "datetime",
                                "description": "The creation time of the activity type"
                              },
                              "update_time": {
                                "type": "string",
                                "format": "datetime",
                                "description": "The update time of the activity type"
                              }
                            }
                          },
                          "description": "The array of activity types"
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "success": true,
                  "data": [
                    {
                      "id": 4,
                      "order_nr": 1,
                      "name": "Deadline",
                      "key_string": "deadline",
                      "icon_key": "deadline",
                      "active_flag": true,
                      "color": "FFFFFF",
                      "is_custom_flag": false,
                      "add_time": "2019-10-04 16:24:55",
                      "update_time": "2020-03-11 13:53:01"
                    },
                    {
                      "id": 5,
                      "order_nr": 2,
                      "name": "Call",
                      "key_string": "call",
                      "icon_key": "call",
                      "active_flag": true,
                      "color": "FFFFFF",
                      "is_custom_flag": false,
                      "add_time": "2019-12-21 19:44:01",
                      "update_time": "2019-12-21 19:44:01"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add new activity type",
        "description": "Adds a new activity type.",
        "operationId": "addActivityType",
        "tags": [ "ActivityTypes" ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "addActivityTypeRequest",
                "type": "object",
                "required": [ "name", "icon_key" ],
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "call",
                    "description": "The name of the activity type"
                  },
                  "icon_key": {
                    "type": "string",
                    "description": "Icon graphic to use for representing this activity type",
                    "enum": [
                      "task",
                      "email",
                      "meeting",
                      "deadline",
                      "call",
                      "lunch",
                      "calendar",
                      "downarrow",
                      "document",
                      "smartphone",
                      "camera",
                      "scissors",
                      "cogs",
                      "bubble",
                      "uparrow",
                      "checkbox",
                      "signpost",
                      "shuffle",
                      "addressbook",
                      "linegraph",
                      "picture",
                      "car",
                      "world",
                      "search",
                      "clip",
                      "sound",
                      "brush",
                      "key",
                      "padlock",
                      "pricetag",
                      "suitcase",
                      "finish",
                      "plane",
                      "loop",
                      "wifi",
                      "truck",
                      "cart",
                      "bulb",
                      "bell",
                      "presentation"
                    ]
                  },
                  "color": {
                    "type": "string",
                    "example": "FFFFFF",
                    "description": "A designated color for the activity type in 6-character HEX format (e.g. `FFFFFF` for white, `000000` for black)"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The activity type was successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "title": "createUpdateDeleteActivityType",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "description": "The ID of the activity type"
                            },
                            "name": {
                              "type": "string",
                              "description": "The name of the activity type"
                            },
                            "icon_key": {
                              "type": "string",
                              "description": "Icon graphic to use for representing this activity type",
                              "enum": [
                                "task",
                                "email",
                                "meeting",
                                "deadline",
                                "call",
                                "lunch",
                                "calendar",
                                "downarrow",
                                "document",
                                "smartphone",
                                "camera",
                                "scissors",
                                "cogs",
                                "bubble",
                                "uparrow",
                                "checkbox",
                                "signpost",
                                "shuffle",
                                "addressbook",
                                "linegraph",
                                "picture",
                                "car",
                                "world",
                                "search",
                                "clip",
                                "sound",
                                "brush",
                                "key",
                                "padlock",
                                "pricetag",
                                "suitcase",
                                "finish",
                                "plane",
                                "loop",
                                "wifi",
                                "truck",
                                "cart",
                                "bulb",
                                "bell",
                                "presentation"
                              ]
                            },
                            "color": {
                              "type": "string",
                              "description": "A designated color for the activity type in 6-character HEX format (e.g. `FFFFFF` for white, `000000` for black)"
                            },
                            "order_nr": {
                              "type": "integer",
                              "description": "An order number for the activity type. Order numbers should be used to order the types in the activity type selections."
                            },
                            "key_string": {
                              "type": "string",
                              "description": "A string that is generated by the API based on the given name of the activity type upon creation"
                            },
                            "active_flag": {
                              "type": "boolean",
                              "description": "The active flag of the activity type"
                            },
                            "is_custom_flag": {
                              "type": "boolean",
                              "description": "Whether the activity type is a custom one or not"
                            },
                            "add_time": {
                              "type": "string",
                              "format": "datetime",
                              "description": "The creation time of the activity type"
                            },
                            "update_time": {
                              "type": "string",
                              "format": "datetime",
                              "description": "The update time of the activity type"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "success": true,
                  "data": {
                    "id": 12,
                    "order_nr": 1,
                    "name": "Video call",
                    "key_string": "video_call",
                    "icon_key": "camera",
                    "active_flag": true,
                    "color": "aeb31b",
                    "is_custom_flag": true,
                    "add_time": "2020-09-01 10:16:23",
                    "update_time": "2020-09-01 10:16:23"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/activityTypes/{id}": {
      "delete": {
        "summary": "Delete an activity type",
        "description": "Marks an activity type as deleted.",
        "operationId": "deleteActivityType",
        "tags": [ "ActivityTypes" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the activity type",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "The activity type was successfully deleted",
            "content": {
              "application/json": {
                "schema": {
                  "title": "createUpdateDeleteActivityType",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "description": "The ID of the activity type"
                            },
                            "name": {
                              "type": "string",
                              "description": "The name of the activity type"
                            },
                            "icon_key": {
                              "type": "string",
                              "description": "Icon graphic to use for representing this activity type",
                              "enum": [
                                "task",
                                "email",
                                "meeting",
                                "deadline",
                                "call",
                                "lunch",
                                "calendar",
                                "downarrow",
                                "document",
                                "smartphone",
                                "camera",
                                "scissors",
                                "cogs",
                                "bubble",
                                "uparrow",
                                "checkbox",
                                "signpost",
                                "shuffle",
                                "addressbook",
                                "linegraph",
                                "picture",
                                "car",
                                "world",
                                "search",
                                "clip",
                                "sound",
                                "brush",
                                "key",
                                "padlock",
                                "pricetag",
                                "suitcase",
                                "finish",
                                "plane",
                                "loop",
                                "wifi",
                                "truck",
                                "cart",
                                "bulb",
                                "bell",
                                "presentation"
                              ]
                            },
                            "color": {
                              "type": "string",
                              "description": "A designated color for the activity type in 6-character HEX format (e.g. `FFFFFF` for white, `000000` for black)"
                            },
                            "order_nr": {
                              "type": "integer",
                              "description": "An order number for the activity type. Order numbers should be used to order the types in the activity type selections."
                            },
                            "key_string": {
                              "type": "string",
                              "description": "A string that is generated by the API based on the given name of the activity type upon creation"
                            },
                            "active_flag": {
                              "type": "boolean",
                              "description": "The active flag of the activity type"
                            },
                            "is_custom_flag": {
                              "type": "boolean",
                              "description": "Whether the activity type is a custom one or not"
                            },
                            "add_time": {
                              "type": "string",
                              "format": "datetime",
                              "description": "The creation time of the activity type"
                            },
                            "update_time": {
                              "type": "string",
                              "format": "datetime",
                              "description": "The update time of the activity type"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "success": true,
                  "data": {
                    "id": 12,
                    "order_nr": 1,
                    "name": "Video call",
                    "key_string": "video_call",
                    "icon_key": "camera",
                    "active_flag": false,
                    "color": "aeb31b",
                    "is_custom_flag": true,
                    "add_time": "2020-09-01 10:16:23",
                    "update_time": "2020-09-01 19:59:59"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update an activity type",
        "description": "Updates an activity type.",
        "operationId": "updateActivityType",
        "tags": [ "ActivityTypes" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the activity type",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "updateActivityTypeRequest",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the activity type"
                  },
                  "icon_key": {
                    "type": "string",
                    "description": "Icon graphic to use for representing this activity type",
                    "enum": [
                      "task",
                      "email",
                      "meeting",
                      "deadline",
                      "call",
                      "lunch",
                      "calendar",
                      "downarrow",
                      "document",
                      "smartphone",
                      "camera",
                      "scissors",
                      "cogs",
                      "bubble",
                      "uparrow",
                      "checkbox",
                      "signpost",
                      "shuffle",
                      "addressbook",
                      "linegraph",
                      "picture",
                      "car",
                      "world",
                      "search",
                      "clip",
                      "sound",
                      "brush",
                      "key",
                      "padlock",
                      "pricetag",
                      "suitcase",
                      "finish",
                      "plane",
                      "loop",
                      "wifi",
                      "truck",
                      "cart",
                      "bulb",
                      "bell",
                      "presentation"
                    ]
                  },
                  "color": {
                    "type": "string",
                    "description": "A designated color for the activity type in 6-character HEX format (e.g. `FFFFFF` for white, `000000` for black)"
                  },
                  "order_nr": {
                    "type": "integer",
                    "description": "An order number for this activity type. Order numbers should be used to order the types in the activity type selections."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The activity type was successfully updated",
            "content": {
              "application/json": {
                "schema": {
                  "title": "createUpdateDeleteActivityType",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "description": "The ID of the activity type"
                            },
                            "name": {
                              "type": "string",
                              "description": "The name of the activity type"
                            },
                            "icon_key": {
                              "type": "string",
                              "description": "Icon graphic to use for representing this activity type",
                              "enum": [
                                "task",
                                "email",
                                "meeting",
                                "deadline",
                                "call",
                                "lunch",
                                "calendar",
                                "downarrow",
                                "document",
                                "smartphone",
                                "camera",
                                "scissors",
                                "cogs",
                                "bubble",
                                "uparrow",
                                "checkbox",
                                "signpost",
                                "shuffle",
                                "addressbook",
                                "linegraph",
                                "picture",
                                "car",
                                "world",
                                "search",
                                "clip",
                                "sound",
                                "brush",
                                "key",
                                "padlock",
                                "pricetag",
                                "suitcase",
                                "finish",
                                "plane",
                                "loop",
                                "wifi",
                                "truck",
                                "cart",
                                "bulb",
                                "bell",
                                "presentation"
                              ]
                            },
                            "color": {
                              "type": "string",
                              "description": "A designated color for the activity type in 6-character HEX format (e.g. `FFFFFF` for white, `000000` for black)"
                            },
                            "order_nr": {
                              "type": "integer",
                              "description": "An order number for the activity type. Order numbers should be used to order the types in the activity type selections."
                            },
                            "key_string": {
                              "type": "string",
                              "description": "A string that is generated by the API based on the given name of the activity type upon creation"
                            },
                            "active_flag": {
                              "type": "boolean",
                              "description": "The active flag of the activity type"
                            },
                            "is_custom_flag": {
                              "type": "boolean",
                              "description": "Whether the activity type is a custom one or not"
                            },
                            "add_time": {
                              "type": "string",
                              "format": "datetime",
                              "description": "The creation time of the activity type"
                            },
                            "update_time": {
                              "type": "string",
                              "format": "datetime",
                              "description": "The update time of the activity type"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "success": true,
                  "data": {
                    "id": 12,
                    "order_nr": 1,
                    "name": "Video call",
                    "key_string": "video_call",
                    "icon_key": "camera",
                    "active_flag": true,
                    "color": "aeb31b",
                    "is_custom_flag": true,
                    "add_time": "2020-09-01 10:16:23",
                    "update_time": "2020-09-01 14:12:09"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/billing/subscriptions/addons": {
      "get": {
        "tags": [ "Billing" ],
        "summary": "Get all add-ons for a single company",
        "description": "Returns the add-ons for a single company.",
        "operationId": "getCompanyAddons",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "subscriptionAddons",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": { "type": "object" },
                          "description": "An array of add-ons that the company has."
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "success": true,
                  "data": [
                    { "code": "leadbooster_v2" },
                    { "code": "prospector" },
                    { "code": "smart_docs_v2" }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/callLogs": {
      "post": {
        "tags": [ "CallLogs" ],
        "summary": "Add a call log",
        "description": "Adds a new call log.",
        "operationId": "addCallLog",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "addCallLogRequest",
                "type": "object",
                "required": [
                  "to_phone_number",
                  "outcome",
                  "start_time",
                  "end_time"
                ],
                "properties": {
                  "user_id": {
                    "type": "integer",
                    "description": "The ID of the owner of the call log. Please note that a user without account settings access cannot create call logs for other users."
                  },
                  "activity_id": {
                    "type": "integer",
                    "description": "If specified, this activity will be converted into a call log, with the information provided. When this field is used, you don't need to specify `deal_id`, `person_id` or `org_id`, as they will be ignored in favor of the values already available in the activity. The `activity_id` must refer to a `call` type activity."
                  },
                  "subject": {
                    "type": "string",
                    "description": "The name of the activity this call is attached to"
                  },
                  "duration": {
                    "type": "string",
                    "description": "The duration of the call in seconds"
                  },
                  "outcome": {
                    "type": "string",
                    "enum": [
                      "connected",
                      "no_answer",
                      "left_message",
                      "left_voicemail",
                      "wrong_number",
                      "busy"
                    ],
                    "description": "Describes the outcome of the call"
                  },
                  "from_phone_number": {
                    "type": "string",
                    "description": "The number that made the call"
                  },
                  "to_phone_number": {
                    "type": "string",
                    "description": "The number called"
                  },
                  "start_time": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The date and time of the start of the call in UTC. Format: YYYY-MM-DD HH:MM:SS."
                  },
                  "end_time": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The date and time of the end of the call in UTC. Format: YYYY-MM-DD HH:MM:SS."
                  },
                  "person_id": {
                    "type": "integer",
                    "description": "The ID of the person this call is associated with"
                  },
                  "org_id": {
                    "type": "integer",
                    "description": "The ID of the organization this call is associated with"
                  },
                  "deal_id": {
                    "type": "integer",
                    "description": "The ID of the deal this call is associated with"
                  },
                  "note": {
                    "type": "string",
                    "description": "The note for the call log in HTML format"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The call log was successfully created.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "addCallLog",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "title": "responseCallLogObject",
                              "allOf": [
                                {
                                  "title": "addCallLogRequest",
                                  "type": "object",
                                  "required": [
                                    "to_phone_number",
                                    "outcome",
                                    "start_time",
                                    "end_time"
                                  ],
                                  "properties": {
                                    "user_id": {
                                      "type": "integer",
                                      "description": "The ID of the owner of the call log. Please note that a user without account settings access cannot create call logs for other users."
                                    },
                                    "activity_id": {
                                      "type": "integer",
                                      "description": "If specified, this activity will be converted into a call log, with the information provided. When this field is used, you don't need to specify `deal_id`, `person_id` or `org_id`, as they will be ignored in favor of the values already available in the activity. The `activity_id` must refer to a `call` type activity."
                                    },
                                    "subject": {
                                      "type": "string",
                                      "description": "The name of the activity this call is attached to"
                                    },
                                    "duration": {
                                      "type": "string",
                                      "description": "The duration of the call in seconds"
                                    },
                                    "outcome": {
                                      "type": "string",
                                      "enum": [
                                        "connected",
                                        "no_answer",
                                        "left_message",
                                        "left_voicemail",
                                        "wrong_number",
                                        "busy"
                                      ],
                                      "description": "Describes the outcome of the call"
                                    },
                                    "from_phone_number": {
                                      "type": "string",
                                      "description": "The number that made the call"
                                    },
                                    "to_phone_number": {
                                      "type": "string",
                                      "description": "The number called"
                                    },
                                    "start_time": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The date and time of the start of the call in UTC. Format: YYYY-MM-DD HH:MM:SS."
                                    },
                                    "end_time": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The date and time of the end of the call in UTC. Format: YYYY-MM-DD HH:MM:SS."
                                    },
                                    "person_id": {
                                      "type": "integer",
                                      "description": "The ID of the person this call is associated with"
                                    },
                                    "org_id": {
                                      "type": "integer",
                                      "description": "The ID of the organization this call is associated with"
                                    },
                                    "deal_id": {
                                      "type": "integer",
                                      "description": "The ID of the deal this call is associated with"
                                    },
                                    "note": {
                                      "type": "string",
                                      "description": "The note for the call log in HTML format"
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "description": "The call log ID, generated when the call log was created"
                                    },
                                    "has_recording": {
                                      "type": "boolean",
                                      "description": "If the call log has an audio recording attached, the value should be true"
                                    },
                                    "company_id": {
                                      "type": "integer",
                                      "description": "The company ID of the owner of the call log"
                                    }
                                  }
                                }
                              ]
                            }
                          ]
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "success": true,
                  "data": {
                    "id": "CAd92b224eb4a39b5ad8fea92ff0e",
                    "activity_id": 7007,
                    "person_id": 333222111,
                    "org_id": 123456789,
                    "deal_id": 553229734,
                    "subject": "Just call me maybe",
                    "duration": "0",
                    "outcome": "busy",
                    "from_phone_number": "+37277774841",
                    "to_phone_number": "+37249234343",
                    "has_recording": false,
                    "start_time": "2022-12-12T01:01:01.000Z",
                    "end_time": "2022-12-12T01:02:01.000Z",
                    "user_id": 777707777,
                    "company_id": 66660666,
                    "note": "A note for the call log"
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request contains wrong or incorrectly formatted arguments.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "callLogResponse400",
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean", "example": false },
                    "error": {
                      "type": "string",
                      "description": "The description of the error",
                      "example": "\"outcome\" is required."
                    },
                    "error_info": {
                      "type": "string",
                      "description": "A message describing how to solve the problem",
                      "example": "Please check developers.pipedrive.com for more information about Pipedrive API."
                    },
                    "data": {
                      "type": "object",
                      "nullable": true,
                      "example": null
                    },
                    "additional_data": {
                      "type": "object",
                      "nullable": true,
                      "example": null
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "callLogResponse403",
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean", "example": false },
                    "error": {
                      "type": "string",
                      "description": "The description of the error",
                      "example": "You don't have permission to change this resource."
                    },
                    "error_info": {
                      "type": "string",
                      "description": "A message describing how to solve the problem",
                      "example": "Please check developers.pipedrive.com for more information about Pipedrive API."
                    },
                    "data": {
                      "type": "object",
                      "nullable": true,
                      "example": null
                    },
                    "additional_data": {
                      "type": "object",
                      "nullable": true,
                      "example": null
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "A resource required to process the request was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "callLogResponse404",
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean", "example": false },
                    "error": {
                      "type": "string",
                      "description": "The description of the error",
                      "example": "A resource required for this operation was not found."
                    },
                    "error_info": {
                      "type": "string",
                      "description": "A message describing how to solve the problem",
                      "example": "Please check developers.pipedrive.com for more information about Pipedrive API."
                    },
                    "data": {
                      "type": "object",
                      "nullable": true,
                      "example": null
                    },
                    "additional_data": {
                      "type": "object",
                      "nullable": true,
                      "example": null
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "There was an error processing the request.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "callLogResponse500",
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean", "example": false },
                    "error": {
                      "type": "string",
                      "description": "The description of the error",
                      "example": "An internal server error occurred"
                    },
                    "error_info": {
                      "type": "string",
                      "description": "A message describing how to solve the problem",
                      "example": "Please check developers.pipedrive.com for more information about Pipedrive API."
                    },
                    "data": {
                      "type": "object",
                      "nullable": true,
                      "example": null
                    },
                    "additional_data": {
                      "type": "object",
                      "nullable": true,
                      "example": null
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [ "CallLogs" ],
        "summary": "Get all call logs assigned to a particular user",
        "description": "Returns all call logs assigned to a particular user.",
        "operationId": "getUserCallLogs",
        "parameters": [
          {
            "in": "query",
            "name": "start",
            "description": "Pagination start",
            "schema": { "type": "integer", "default": 0 }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "For pagination, the limit of entries to be returned. The upper limit is 50.",
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of call logs.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "getUserCallLogs",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    }
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "title": "responseCallLogObject",
                        "allOf": [
                          {
                            "title": "addCallLogRequest",
                            "type": "object",
                            "required": [
                              "to_phone_number",
                              "outcome",
                              "start_time",
                              "end_time"
                            ],
                            "properties": {
                              "user_id": {
                                "type": "integer",
                                "description": "The ID of the owner of the call log. Please note that a user without account settings access cannot create call logs for other users."
                              },
                              "activity_id": {
                                "type": "integer",
                                "description": "If specified, this activity will be converted into a call log, with the information provided. When this field is used, you don't need to specify `deal_id`, `person_id` or `org_id`, as they will be ignored in favor of the values already available in the activity. The `activity_id` must refer to a `call` type activity."
                              },
                              "subject": {
                                "type": "string",
                                "description": "The name of the activity this call is attached to"
                              },
                              "duration": {
                                "type": "string",
                                "description": "The duration of the call in seconds"
                              },
                              "outcome": {
                                "type": "string",
                                "enum": [
                                  "connected",
                                  "no_answer",
                                  "left_message",
                                  "left_voicemail",
                                  "wrong_number",
                                  "busy"
                                ],
                                "description": "Describes the outcome of the call"
                              },
                              "from_phone_number": {
                                "type": "string",
                                "description": "The number that made the call"
                              },
                              "to_phone_number": {
                                "type": "string",
                                "description": "The number called"
                              },
                              "start_time": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The date and time of the start of the call in UTC. Format: YYYY-MM-DD HH:MM:SS."
                              },
                              "end_time": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The date and time of the end of the call in UTC. Format: YYYY-MM-DD HH:MM:SS."
                              },
                              "person_id": {
                                "type": "integer",
                                "description": "The ID of the person this call is associated with"
                              },
                              "org_id": {
                                "type": "integer",
                                "description": "The ID of the organization this call is associated with"
                              },
                              "deal_id": {
                                "type": "integer",
                                "description": "The ID of the deal this call is associated with"
                              },
                              "note": {
                                "type": "string",
                                "description": "The note for the call log in HTML format"
                              }
                            }
                          },
                          {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "The call log ID, generated when the call log was created"
                              },
                              "has_recording": {
                                "type": "boolean",
                                "description": "If the call log has an audio recording attached, the value should be true"
                              },
                              "company_id": {
                                "type": "integer",
                                "description": "The company ID of the owner of the call log"
                              }
                            }
                          }
                        ]
                      }
                    },
                    "additional_data": {
                      "description": "The additional data of the list",
                      "type": "object",
                      "properties": {
                        "start": {
                          "type": "integer",
                          "description": "Pagination start"
                        },
                        "limit": {
                          "type": "integer",
                          "description": "Items shown per page"
                        },
                        "more_items_in_collection": {
                          "type": "boolean",
                          "description": "If there are more list items in the collection than displayed or not"
                        }
                      }
                    }
                  }
                },
                "example": {
                  "success": true,
                  "data": [
                    {
                      "id": "CAd92b224eb4a39b5ad8fea92ff0e",
                      "activity_id": 7007,
                      "person_id": 333222111,
                      "org_id": 123456789,
                      "deal_id": 553229734,
                      "subject": "Just call me maybe",
                      "duration": "0",
                      "outcome": "busy",
                      "from_phone_number": "+37277774841",
                      "to_phone_number": "+37249234343",
                      "has_recording": false,
                      "start_time": "2022-12-12T01:01:01.000Z",
                      "end_time": "2022-12-12T01:01:01.000Z",
                      "user_id": 777707777,
                      "company_id": 66660666,
                      "note": "A note for the call log"
                    },
                    {
                      "id": "CAd92b224eb4a39b11a8fea92ff0e",
                      "activity_id": 1,
                      "person_id": 1,
                      "duration": "0",
                      "outcome": "no_answer",
                      "to_phone_number": "+3728439832",
                      "has_recording": true,
                      "start_time": "2022-12-12T01:01:01.000Z",
                      "end_time": "2022-12-12T01:01:01.000Z",
                      "user_id": 777777777,
                      "company_id": 66666666,
                      "note": "A note for the call log"
                    }
                  ],
                  "additional_data": {
                    "pagination": {
                      "start": 0,
                      "limit": 50,
                      "more_items_in_collection": false,
                      "next_start": 1
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/callLogs/{id}": {
      "delete": {
        "tags": [ "CallLogs" ],
        "summary": "Delete a call log",
        "description": "Deletes a call log. If there is an audio recording attached to it, it will also be deleted. The related activity will not be removed by this request. If you want to remove the related activities, please use the endpoint which is specific for activities.",
        "operationId": "deleteCallLog",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID received when you create the call log",
            "required": true,
            "schema": {
              "type": "string",
              "example": "3cde3b05035cae14dcfc172bd8000d08"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The call log was successfully deleted.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "deleteCallLog",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    }
                  ]
                },
                "example": { "success": true }
              }
            }
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "callLogResponse403",
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean", "example": false },
                    "error": {
                      "type": "string",
                      "description": "The description of the error",
                      "example": "You don't have permission to change this resource."
                    },
                    "error_info": {
                      "type": "string",
                      "description": "A message describing how to solve the problem",
                      "example": "Please check developers.pipedrive.com for more information about Pipedrive API."
                    },
                    "data": {
                      "type": "object",
                      "nullable": true,
                      "example": null
                    },
                    "additional_data": {
                      "type": "object",
                      "nullable": true,
                      "example": null
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "A resource required to process the request was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "callLogResponse404",
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean", "example": false },
                    "error": {
                      "type": "string",
                      "description": "The description of the error",
                      "example": "A resource required for this operation was not found."
                    },
                    "error_info": {
                      "type": "string",
                      "description": "A message describing how to solve the problem",
                      "example": "Please check developers.pipedrive.com for more information about Pipedrive API."
                    },
                    "data": {
                      "type": "object",
                      "nullable": true,
                      "example": null
                    },
                    "additional_data": {
                      "type": "object",
                      "nullable": true,
                      "example": null
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "The callLog you are trying to access is no longer available.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "callLogResponse410",
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean", "example": false },
                    "error": {
                      "type": "string",
                      "description": "The description of the error",
                      "example": "The callLog you are trying to access is no longer available"
                    },
                    "error_info": {
                      "type": "string",
                      "description": "A message describing how to solve the problem",
                      "example": "Please check developers.pipedrive.com for more information about Pipedrive API."
                    },
                    "data": {
                      "type": "object",
                      "nullable": true,
                      "example": null
                    },
                    "additional_data": {
                      "type": "object",
                      "nullable": true,
                      "example": null
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "There was an error processing the request.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "callLogResponse500",
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean", "example": false },
                    "error": {
                      "type": "string",
                      "description": "The description of the error",
                      "example": "An internal server error occurred"
                    },
                    "error_info": {
                      "type": "string",
                      "description": "A message describing how to solve the problem",
                      "example": "Please check developers.pipedrive.com for more information about Pipedrive API."
                    },
                    "data": {
                      "type": "object",
                      "nullable": true,
                      "example": null
                    },
                    "additional_data": {
                      "type": "object",
                      "nullable": true,
                      "example": null
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [ "CallLogs" ],
        "summary": "Get details of a call log",
        "description": "Returns details of a specific call log.",
        "operationId": "getCallLog",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID received when you create the call log",
            "required": true,
            "schema": {
              "type": "string",
              "example": "3cde3b05035cae14dcfc172bd8000d08"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested call log object.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "title": "responseCallLogObject",
                              "allOf": [
                                {
                                  "title": "addCallLogRequest",
                                  "type": "object",
                                  "required": [
                                    "to_phone_number",
                                    "outcome",
                                    "start_time",
                                    "end_time"
                                  ],
                                  "properties": {
                                    "user_id": {
                                      "type": "integer",
                                      "description": "The ID of the owner of the call log. Please note that a user without account settings access cannot create call logs for other users."
                                    },
                                    "activity_id": {
                                      "type": "integer",
                                      "description": "If specified, this activity will be converted into a call log, with the information provided. When this field is used, you don't need to specify `deal_id`, `person_id` or `org_id`, as they will be ignored in favor of the values already available in the activity. The `activity_id` must refer to a `call` type activity."
                                    },
                                    "subject": {
                                      "type": "string",
                                      "description": "The name of the activity this call is attached to"
                                    },
                                    "duration": {
                                      "type": "string",
                                      "description": "The duration of the call in seconds"
                                    },
                                    "outcome": {
                                      "type": "string",
                                      "enum": [
                                        "connected",
                                        "no_answer",
                                        "left_message",
                                        "left_voicemail",
                                        "wrong_number",
                                        "busy"
                                      ],
                                      "description": "Describes the outcome of the call"
                                    },
                                    "from_phone_number": {
                                      "type": "string",
                                      "description": "The number that made the call"
                                    },
                                    "to_phone_number": {
                                      "type": "string",
                                      "description": "The number called"
                                    },
                                    "start_time": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The date and time of the start of the call in UTC. Format: YYYY-MM-DD HH:MM:SS."
                                    },
                                    "end_time": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The date and time of the end of the call in UTC. Format: YYYY-MM-DD HH:MM:SS."
                                    },
                                    "person_id": {
                                      "type": "integer",
                                      "description": "The ID of the person this call is associated with"
                                    },
                                    "org_id": {
                                      "type": "integer",
                                      "description": "The ID of the organization this call is associated with"
                                    },
                                    "deal_id": {
                                      "type": "integer",
                                      "description": "The ID of the deal this call is associated with"
                                    },
                                    "note": {
                                      "type": "string",
                                      "description": "The note for the call log in HTML format"
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "description": "The call log ID, generated when the call log was created"
                                    },
                                    "has_recording": {
                                      "type": "boolean",
                                      "description": "If the call log has an audio recording attached, the value should be true"
                                    },
                                    "company_id": {
                                      "type": "integer",
                                      "description": "The company ID of the owner of the call log"
                                    }
                                  }
                                }
                              ]
                            }
                          ]
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "success": true,
                  "data": {
                    "id": "CAd92b224eb4a39b5ad8fea92ff0e",
                    "activity_id": 7007,
                    "person_id": 333222111,
                    "org_id": 123456789,
                    "deal_id": 553229734,
                    "subject": "Just call me maybe",
                    "duration": "0",
                    "outcome": "busy",
                    "from_phone_number": "+37277774841",
                    "to_phone_number": "+37249234343",
                    "has_recording": false,
                    "start_time": "2022-12-12T01:01:01.000Z",
                    "end_time": "2022-12-12T01:02:01.000Z",
                    "user_id": 777707777,
                    "company_id": 66660666,
                    "note": "A note for the call log"
                  }
                }
              }
            }
          },
          "404": {
            "description": "A resource required to process the request was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "callLogResponse404",
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean", "example": false },
                    "error": {
                      "type": "string",
                      "description": "The description of the error",
                      "example": "A resource required for this operation was not found."
                    },
                    "error_info": {
                      "type": "string",
                      "description": "A message describing how to solve the problem",
                      "example": "Please check developers.pipedrive.com for more information about Pipedrive API."
                    },
                    "data": {
                      "type": "object",
                      "nullable": true,
                      "example": null
                    },
                    "additional_data": {
                      "type": "object",
                      "nullable": true,
                      "example": null
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/callLogs/{id}/recordings": {
      "post": {
        "tags": [ "CallLogs" ],
        "summary": "Attach an audio file to the call log",
        "description": "Adds an audio recording to the call log. That audio can be played by those who have access to the call log object.",
        "operationId": "addCallLogAudioFile",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID received when you create the call log",
            "required": true,
            "schema": {
              "type": "string",
              "example": "3cde3b05035cae14dcfc172bd8000d08"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "title": "addCallLogAudioFileRequest",
                "type": "object",
                "required": [ "file" ],
                "properties": {
                  "file": {
                    "description": "Audio file supported by the HTML5 specification",
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The audio recording was successfully added to the log.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "addCallLogAudioFile",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    }
                  ]
                },
                "example": { "success": true }
              }
            }
          },
          "404": {
            "description": "A resource required to process the request was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "callLogResponse404",
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean", "example": false },
                    "error": {
                      "type": "string",
                      "description": "The description of the error",
                      "example": "A resource required for this operation was not found."
                    },
                    "error_info": {
                      "type": "string",
                      "description": "A message describing how to solve the problem",
                      "example": "Please check developers.pipedrive.com for more information about Pipedrive API."
                    },
                    "data": {
                      "type": "object",
                      "nullable": true,
                      "example": null
                    },
                    "additional_data": {
                      "type": "object",
                      "nullable": true,
                      "example": null
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Recording for this call already exists.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "callLogResponse409",
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean", "example": false },
                    "error": {
                      "type": "string",
                      "description": "The description of the error",
                      "example": "A recording for this call already exists"
                    },
                    "error_info": {
                      "type": "string",
                      "description": "A message describing how to solve the problem",
                      "example": "Please check developers.pipedrive.com for more information about Pipedrive API."
                    },
                    "data": {
                      "type": "object",
                      "nullable": true,
                      "example": null
                    },
                    "additional_data": {
                      "type": "object",
                      "nullable": true,
                      "example": null
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "There was an error processing the request.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "callLogResponse500",
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean", "example": false },
                    "error": {
                      "type": "string",
                      "description": "The description of the error",
                      "example": "An internal server error occurred"
                    },
                    "error_info": {
                      "type": "string",
                      "description": "A message describing how to solve the problem",
                      "example": "Please check developers.pipedrive.com for more information about Pipedrive API."
                    },
                    "data": {
                      "type": "object",
                      "nullable": true,
                      "example": null
                    },
                    "additional_data": {
                      "type": "object",
                      "nullable": true,
                      "example": null
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/channels": {
      "post": {
        "tags": [ "Channels" ],
        "summary": "Add a channel",
        "description": "Adds a new messaging channel, only admins are able to register new channels. It will use the getConversations endpoint to fetch conversations, participants and messages afterward. To use the endpoint, you need to have **Messengers integration** OAuth scope enabled and the Messaging manifest ready for the [Messaging app extension](https://pipedrive.readme.io/docs/messaging-app-extension).",
        "operationId": "addChannel",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [ "name", "provider_channel_id" ],
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "My Channel",
                    "description": "The name of the channel"
                  },
                  "provider_channel_id": {
                    "type": "string",
                    "description": "The channel ID"
                  },
                  "avatar_url": {
                    "type": "string",
                    "format": "url",
                    "description": "The URL for an icon that represents your channel"
                  },
                  "template_support": {
                    "type": "boolean",
                    "description": "If true, enables templates logic on UI. Requires getTemplates endpoint implemented. Find out more [here](https://pipedrive.readme.io/docs/implementing-messaging-app-extension).",
                    "default": false
                  },
                  "provider_type": {
                    "type": "string",
                    "enum": [ "facebook", "whatsapp", "other" ],
                    "default": "other",
                    "description": "It controls the icons (like the icon next to the conversation)"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The channel registered",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean", "example": true },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The unique channel ID used internally in omnichannel-api and the frontend of the extension"
                        },
                        "name": {
                          "type": "string",
                          "example": "My Channel",
                          "description": "The name of the channel"
                        },
                        "avatar_url": {
                          "type": "string",
                          "example": "http://some-domain.com/test.jpg",
                          "description": "The URL for an icon that represents your channel"
                        },
                        "provider_channel_id": {
                          "type": "string",
                          "format": "string",
                          "description": "The channel ID you specified while creating the channel"
                        },
                        "marketplace_client_id": {
                          "type": "string",
                          "description": "The client_id of your app in Pipedrive marketplace"
                        },
                        "pd_company_id": {
                          "type": "integer",
                          "example": 1,
                          "description": "The ID of the user's company in Pipedrive"
                        },
                        "pd_user_id": {
                          "type": "integer",
                          "example": 1,
                          "description": "The ID of the user in Pipedrive"
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The date and time when your channel was created in the API"
                        },
                        "provider_type": {
                          "type": "string",
                          "enum": [ "facebook", "whatsapp", "other" ],
                          "description": "Value of the provider_type sent to this endpoint"
                        },
                        "template_support": {
                          "type": "boolean",
                          "description": "Value of the template_support sent to this endpoint"
                        }
                      }
                    }
                  }
                },
                "example": {
                  "success": true,
                  "data": {
                    "id": "e283f878-7ef9-4294-8e5c-04a7d003fd92",
                    "name": "My Channel",
                    "avatar_url": "http://my-domain.com/images/test.png",
                    "provider_channel_id": "e283f878-7ef9-4294-8e5c-04a7d003fd92",
                    "marketplace_client_id": "57da5c3c55a82bb4",
                    "pd_company_id": 123,
                    "pd_user_id": 321,
                    "created_at": "2022-03-01 00:00:00",
                    "provider_type": "other",
                    "template_support": false
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean", "example": false },
                    "error": {
                      "type": "string",
                      "example": "Expected { name: string; avatar_url?: string; provider_channel_id: string; }, but was incompatible",
                      "description": "The error description"
                    },
                    "error_info": {
                      "type": "string",
                      "example": "Please check the reference docs in https://developers.pipedrive.com/docs/api/v1"
                    },
                    "additional_data": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "INVALID_BODY",
                          "description": "An error code sent by the API"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean", "example": false },
                    "error": {
                      "type": "string",
                      "example": "Only admins can register channels",
                      "description": "The error description"
                    },
                    "error_info": {
                      "type": "string",
                      "example": "Please check the reference docs in https://developers.pipedrive.com/docs/api/v1"
                    },
                    "additional_data": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "ADMIN_ONLY",
                          "description": "An error code sent by the API"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/channels/{id}": {
      "delete": {
        "tags": [ "Channels" ],
        "summary": "Delete a channel",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": { "type": "string" },
            "required": true,
            "description": "The ID of the channel provided by the integration"
          }
        ],
        "description": "Deletes an existing messenger’s channel and all related entities (conversations and messages). To use the endpoint, you need to have **Messengers integration** OAuth scope enabled and the Messaging manifest ready for the [Messaging app extension](https://pipedrive.readme.io/docs/messaging-app-extension).",
        "operationId": "deleteChannel",
        "responses": {
          "200": {
            "description": "The channel was deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean", "example": true }
                  }
                },
                "example": { "success": true }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean", "example": false },
                    "error": {
                      "type": "string",
                      "example": "Expected { name: string; avatar_url?: string; provider_channel_id: string; }, but was incompatible",
                      "description": "The error description"
                    },
                    "error_info": {
                      "type": "string",
                      "example": "Please check the reference docs in https://developers.pipedrive.com/docs/api/v1"
                    },
                    "additional_data": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "INVALID_BODY",
                          "description": "An error code sent by the API"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/channels/messages/receive": {
      "post": {
        "tags": [ "Channels" ],
        "summary": "Receives an incoming message",
        "description": "Adds a message to a conversation. To use the endpoint, you need to have **Messengers integration** OAuth scope enabled and the Messaging manifest ready for the [Messaging app extension](https://pipedrive.readme.io/docs/messaging-app-extension).",
        "operationId": "receiveMessage",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "channel_id",
                  "sender_id",
                  "conversation_id",
                  "message",
                  "status",
                  "created_at"
                ],
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "The ID of the message"
                  },
                  "channel_id": {
                    "type": "string",
                    "description": "The channel ID as in the provider"
                  },
                  "sender_id": {
                    "type": "string",
                    "description": "The ID of the provider's user that sent the message"
                  },
                  "conversation_id": {
                    "type": "string",
                    "description": "The ID of the conversation"
                  },
                  "message": {
                    "type": "string",
                    "description": "The body of the message"
                  },
                  "status": {
                    "type": "string",
                    "enum": [ "sent", "delivered", "read", "failed" ],
                    "description": "The status of the message"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The date and time when the message was created in the provider, in UTC. Format: YYYY-MM-DD HH:MM"
                  },
                  "reply_by": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The date and time when the message can no longer receive a reply, in UTC. Format: YYYY-MM-DD HH:MM"
                  },
                  "conversation_link": {
                    "type": "string",
                    "format": "url",
                    "description": "A URL that can open the conversation in the provider's side"
                  },
                  "attachments": {
                    "type": "array",
                    "description": "The list of attachments available in the message",
                    "items": {
                      "type": "object",
                      "required": [ "id", "type", "url" ],
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The ID of the attachment"
                        },
                        "type": {
                          "type": "string",
                          "description": "The mime-type of the attachment"
                        },
                        "name": {
                          "type": "string",
                          "description": "The name of the attachment"
                        },
                        "size": {
                          "type": "number",
                          "description": "The size of the attachment"
                        },
                        "url": {
                          "type": "string",
                          "description": "A URL to the file"
                        },
                        "preview_url": {
                          "type": "string",
                          "description": "A URL to a preview picture of the file"
                        },
                        "link_expires": {
                          "type": "boolean",
                          "default": false,
                          "description": "If true, it will use the getMessageById endpoint for fetching updated attachment's urls. Find out more [here](https://pipedrive.readme.io/docs/implementing-messaging-app-extension)"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The message was registered in the conversation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "If the request was successful or not"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "id",
                        "channel_id",
                        "sender_id",
                        "conversation_id",
                        "message",
                        "status",
                        "created_at"
                      ],
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The ID of the message"
                        },
                        "channel_id": {
                          "type": "string",
                          "description": "The channel ID as in the provider"
                        },
                        "sender_id": {
                          "type": "string",
                          "description": "The ID of the provider's user that sent the message"
                        },
                        "conversation_id": {
                          "type": "string",
                          "description": "The ID of the conversation"
                        },
                        "message": {
                          "type": "string",
                          "description": "The body of the message"
                        },
                        "status": {
                          "type": "string",
                          "enum": [ "sent", "delivered", "read", "failed" ],
                          "description": "The status of the message"
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The date and time when the message was created in the provider, in UTC. Format: YYYY-MM-DD HH:MM"
                        },
                        "reply_by": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The date and time when the message can no longer receive a reply, in UTC. Format: YYYY-MM-DD HH:MM"
                        },
                        "conversation_link": {
                          "type": "string",
                          "format": "url",
                          "description": "A URL that can open the conversation in the provider's side"
                        },
                        "attachments": {
                          "type": "array",
                          "description": "The list of attachments available in the message",
                          "items": {
                            "type": "object",
                            "required": [ "id", "type", "url" ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "The ID of the attachment"
                              },
                              "type": {
                                "type": "string",
                                "description": "The mime-type of the attachment"
                              },
                              "name": {
                                "type": "string",
                                "description": "The name of the attachment"
                              },
                              "size": {
                                "type": "number",
                                "description": "The size of the attachment"
                              },
                              "url": {
                                "type": "string",
                                "description": "A URL to the file"
                              },
                              "preview_url": {
                                "type": "string",
                                "description": "A URL to a preview picture of the file"
                              },
                              "link_expires": {
                                "type": "boolean",
                                "default": false,
                                "description": "If true, it will use the getMessageById endpoint for fetching updated attachment's urls. Find out more [here](https://pipedrive.readme.io/docs/implementing-messaging-app-extension)"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "success": true,
                  "data": {
                    "id": "e283f878-7ef9-4294-8e5c-04a7d003fd92",
                    "channel_id": "a8aa4db0-91bb-4e90-b9c0-0c6291307e2f",
                    "sender_id": "5d4bd467-d847-4088-ae43-0c7614233bab",
                    "conversation_id": "063ffa46-831c-4027-a04c-b65e17f077b7",
                    "message": "This is a message",
                    "status": "sent",
                    "created_at": "2022-03-01T07:58:35.449Z",
                    "reply_by": "2022-03-01T07:58:35.449Z",
                    "conversation_link": "http://my-server.com/conversations/063ffa46-831c-4027-a04c-b65e17f077b7",
                    "attachments": [
                      {
                        "id": "b0369d1d-6b6a-4293-88b9-e2924782d47e",
                        "type": "image/png",
                        "name": "Image Name",
                        "size": 600,
                        "url": "http://my-server.com/images/b0369d1d-6b6a-4293-88b9-e2924782d47e.png",
                        "preview_url": "http://my-server.com/images/b0369d1d-6b6a-4293-88b9-e2924782d47e.preview.png"
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean", "example": false },
                    "error": {
                      "type": "string",
                      "example": "Expected { id: string; sender_id: string; conversation_id: string; conversation_link?: string; channel_id: string; created_at: string; message: string; status: unknown; attachments: { id: string; type: string; name: string | null; size: number | null; url: string; preview_url: string | null; }[]; reply_by?: string | null; }, but was incompatible",
                      "description": "The error description"
                    },
                    "error_info": {
                      "type": "string",
                      "example": "Please check the reference docs in https://developers.pipedrive.com/docs/api/v1"
                    },
                    "additional_data": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "INVALID_RECEIVE_MESSAGE_PAYLOAD",
                          "description": "An error code sent by the API"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/channels/{channel-id}/conversations/{conversation-id}": {
      "delete": {
        "tags": [ "Channels" ],
        "summary": "Delete a conversation",
        "parameters": [
          {
            "in": "path",
            "name": "channel-id",
            "schema": { "type": "string" },
            "required": true,
            "description": "The ID of the channel provided by the integration"
          },
          {
            "in": "path",
            "name": "conversation-id",
            "schema": { "type": "string" },
            "required": true,
            "description": "The ID of the conversation provided by the integration"
          }
        ],
        "description": "Deletes an existing conversation. To use the endpoint, you need to have **Messengers integration** OAuth scope enabled and the Messaging manifest ready for the [Messaging app extension](https://pipedrive.readme.io/docs/messaging-app-extension).",
        "operationId": "deleteConversation",
        "responses": {
          "200": {
            "description": "The conversation was deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean", "example": true }
                  }
                },
                "example": { "success": true }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean", "example": false },
                    "error": {
                      "type": "string",
                      "example": "Only the app owner can delete conversations",
                      "description": "The error description"
                    },
                    "error_info": {
                      "type": "string",
                      "example": "Please check the reference docs in https://developers.pipedrive.com/docs/api/v1"
                    },
                    "additional_data": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "FORBIDDEN_USER_REQUEST",
                          "description": "An error code sent by the API"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean", "example": false },
                    "error": {
                      "type": "string",
                      "example": "Channel not found.",
                      "description": "The error description"
                    },
                    "error_info": {
                      "type": "string",
                      "example": "Please check the reference docs in https://developers.pipedrive.com/docs/api/v1"
                    },
                    "additional_data": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "NOT_FOUND",
                          "description": "An error code sent by the API"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/currencies": {
      "get": {
        "summary": "Get all supported currencies",
        "description": "Returns all supported currencies in given account which should be used when saving monetary values with other objects. The `code` parameter of the returning objects is the currency code according to ISO 4217 for all non-custom currencies.",
        "operationId": "getCurrencies",
        "tags": [ "Currencies" ],
        "parameters": [
          {
            "in": "query",
            "name": "term",
            "description": "Optional search term that is searched for from currency's name and/or code",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "The list of supported currencies",
            "content": {
              "application/json": {
                "schema": {
                  "title": "getCurrencies",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "If the response is successful or not"
                    },
                    "data": {
                      "type": "array",
                      "description": "The array of currencies",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "description": "The ID of the currency"
                          },
                          "code": {
                            "type": "string",
                            "description": "The code of the currency"
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the currency"
                          },
                          "decimal_points": {
                            "type": "integer",
                            "description": "The amount of decimal points of the currency"
                          },
                          "symbol": {
                            "type": "string",
                            "description": "The symbol of the currency"
                          },
                          "active_flag": {
                            "type": "boolean",
                            "description": "Whether the currency is active or not"
                          },
                          "is_custom_flag": {
                            "type": "boolean",
                            "description": "Whether the currency is a custom one or not"
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "success": true,
                  "data": [
                    {
                      "id": 1,
                      "code": "EUR",
                      "name": "Euro",
                      "decimal_points": 2,
                      "symbol": "€",
                      "active_flag": true,
                      "is_custom_flag": false
                    },
                    {
                      "id": 2,
                      "code": "USD",
                      "name": "US Dollar",
                      "decimal_points": 2,
                      "symbol": "$",
                      "active_flag": true,
                      "is_custom_flag": false
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/deals": {
      "get": {
        "summary": "Get all deals",
        "description": "Returns all deals. For more information, see the tutorial for <a href=\"https://pipedrive.readme.io/docs/getting-all-deals\" target=\"_blank\" rel=\"noopener noreferrer\">getting all deals</a>.",
        "operationId": "getDeals",
        "tags": [ "Deals" ],
        "parameters": [
          {
            "in": "query",
            "name": "user_id",
            "schema": { "type": "integer" },
            "description": "If supplied, only deals matching the given user will be returned. However, `filter_id` and `owned_by_you` takes precedence over `user_id` when supplied."
          },
          {
            "in": "query",
            "name": "filter_id",
            "schema": { "type": "integer" },
            "description": "The ID of the filter to use"
          },
          {
            "in": "query",
            "name": "stage_id",
            "schema": { "type": "integer" },
            "description": "If supplied, only deals within the given stage will be returned"
          },
          {
            "in": "query",
            "name": "status",
            "schema": {
              "type": "string",
              "default": "all_not_deleted",
              "enum": [ "open", "won", "lost", "deleted", "all_not_deleted" ]
            },
            "description": "Only fetch deals with a specific status. If omitted, all not deleted deals are returned. If set to deleted, deals that have been deleted up to 30 days ago will be included."
          },
          {
            "in": "query",
            "name": "start",
            "description": "Pagination start",
            "schema": { "type": "integer", "default": 0 }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Items shown per page",
            "schema": { "type": "integer" }
          },
          {
            "in": "query",
            "name": "sort",
            "schema": { "type": "string" },
            "description": "The field names and sorting mode separated by a comma (`field_name_1 ASC`, `field_name_2 DESC`). Only first-level field keys are supported (no nested keys)."
          },
          {
            "in": "query",
            "name": "owned_by_you",
            "description": "When supplied, only deals owned by you are returned. However, `filter_id` takes precedence over `owned_by_you` when both are supplied.",
            "schema": {
              "title": "numberBoolean",
              "type": "number",
              "enum": [ 0, 1 ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get all deals",
            "content": {
              "application/json": {
                "schema": {
                  "title": "getDeals",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "If the response is successful or not"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "title": "dealNonStrict",
                        "allOf": [
                          {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer",
                                "description": "The ID of the deal"
                              },
                              "creator_user_id": {
                                "type": "object",
                                "description": "The creator of the deal",
                                "properties": {
                                  "id": {
                                    "type": "integer",
                                    "description": "The ID of the deal creator"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "The name of the deal creator"
                                  },
                                  "email": {
                                    "type": "string",
                                    "description": "The email of the deal creator"
                                  },
                                  "has_pic": {
                                    "type": "boolean",
                                    "description": "If the creator has a picture or not"
                                  },
                                  "pic_hash": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The creator picture hash"
                                  },
                                  "active_flag": {
                                    "type": "boolean",
                                    "description": "Whether the creator is active or not"
                                  },
                                  "value": {
                                    "type": "integer",
                                    "description": "The ID of the deal creator"
                                  }
                                }
                              },
                              "user_id": {
                                "title": "dealUserDataWithId",
                                "allOf": [
                                  {
                                    "description": "The user who is associated with the deal",
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "integer",
                                        "description": "The ID of the user"
                                      },
                                      "name": {
                                        "type": "string",
                                        "description": "The name of the user"
                                      },
                                      "email": {
                                        "type": "string",
                                        "description": "The email of the user"
                                      },
                                      "has_pic": {
                                        "type": "boolean",
                                        "description": "If the user has a picture or not"
                                      },
                                      "pic_hash": {
                                        "type": "string",
                                        "nullable": true,
                                        "description": "The user picture hash"
                                      },
                                      "active_flag": {
                                        "type": "boolean",
                                        "description": "Whether the user is active or not"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "value": {
                                        "type": "integer",
                                        "description": "The ID of the user"
                                      }
                                    }
                                  }
                                ]
                              },
                              "person_id": {
                                "title": "dealPersonDataWithId",
                                "allOf": [
                                  {
                                    "type": "object",
                                    "description": "The person who is associated with the deal",
                                    "properties": {
                                      "active_flag": {
                                        "type": "boolean",
                                        "description": "Whether the associated person is active or not"
                                      },
                                      "name": {
                                        "type": "string",
                                        "description": "The name of the person associated with the deal"
                                      },
                                      "email": {
                                        "type": "array",
                                        "description": "The emails of the person associated with the deal",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "label": {
                                              "type": "string",
                                              "description": "The type of the email"
                                            },
                                            "value": {
                                              "type": "string",
                                              "description": "The email of the associated person"
                                            },
                                            "primary": {
                                              "type": "boolean",
                                              "description": "If this is the primary email or not"
                                            }
                                          }
                                        }
                                      },
                                      "phone": {
                                        "type": "array",
                                        "description": "The phone numbers of the person associated with the deal",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "label": {
                                              "type": "string",
                                              "description": "The type of the phone number"
                                            },
                                            "value": {
                                              "type": "string",
                                              "description": "The phone number of the person associated with the deal"
                                            },
                                            "primary": {
                                              "type": "boolean",
                                              "description": "If this is the primary phone number or not"
                                            }
                                          }
                                        }
                                      },
                                      "owner_id": {
                                        "type": "integer",
                                        "description": "The ID of the owner of the person that is associated with the deal"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "value": {
                                        "type": "integer",
                                        "description": "The ID of the person associated with the deal"
                                      }
                                    }
                                  }
                                ]
                              },
                              "org_id": {
                                "title": "dealOrganizationDataWithId",
                                "allOf": [
                                  {
                                    "type": "object",
                                    "description": "The organization which is associated with the deal",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "description": "The name of the organization associated with the deal"
                                      },
                                      "people_count": {
                                        "type": "integer",
                                        "description": "The number of people connected with the organization that is associated with the deal"
                                      },
                                      "owner_id": {
                                        "type": "integer",
                                        "description": "The ID of the owner of the organization that is associated with the deal"
                                      },
                                      "address": {
                                        "type": "string",
                                        "description": "The address of the organization that is associated with the deal"
                                      },
                                      "active_flag": {
                                        "type": "boolean",
                                        "description": "Whether the associated organization is active or not"
                                      },
                                      "cc_email": {
                                        "type": "string",
                                        "description": "The BCC email of the organization associated with the deal"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "value": {
                                        "type": "integer",
                                        "description": "The ID of the organization associated with the deal"
                                      }
                                    }
                                  }
                                ]
                              }
                            }
                          },
                          {
                            "title": "baseDeal",
                            "type": "object",
                            "properties": {
                              "stage_id": {
                                "type": "integer",
                                "description": "The ID of the deal stage"
                              },
                              "title": {
                                "type": "string",
                                "description": "The title of the deal"
                              },
                              "value": {
                                "type": "number",
                                "description": "The value of the deal"
                              },
                              "currency": {
                                "type": "string",
                                "description": "The currency associated with the deal"
                              },
                              "add_time": {
                                "type": "string",
                                "description": "The creation date and time of the deal"
                              },
                              "update_time": {
                                "type": "string",
                                "description": "The last updated date and time of the deal"
                              },
                              "stage_change_time": {
                                "type": "string",
                                "description": "The last updated date and time of the deal stage"
                              },
                              "active": {
                                "type": "boolean",
                                "description": "Whether the deal is active or not"
                              },
                              "deleted": {
                                "type": "boolean",
                                "description": "Whether the deal is deleted or not"
                              },
                              "status": {
                                "type": "string",
                                "description": "The status of the deal"
                              },
                              "probability": {
                                "type": "number",
                                "nullable": true,
                                "description": "The success probability percentage of the deal"
                              },
                              "next_activity_date": {
                                "type": "string",
                                "description": "The date of the next activity associated with the deal"
                              },
                              "next_activity_time": {
                                "type": "string",
                                "description": "The time of the next activity associated with the deal"
                              },
                              "next_activity_id": {
                                "type": "integer",
                                "nullable": true,
                                "description": "The ID of the next activity associated with the deal"
                              },
                              "last_activity_id": {
                                "type": "integer",
                                "nullable": true,
                                "description": "The ID of the last activity associated with the deal"
                              },
                              "last_activity_date": {
                                "type": "string",
                                "nullable": true,
                                "description": "The date of the last activity associated with the deal"
                              },
                              "lost_reason": {
                                "type": "string",
                                "nullable": true,
                                "description": "The reason for losing the deal"
                              },
                              "visible_to": {
                                "type": "string",
                                "description": "The visibility of the deal"
                              },
                              "close_time": {
                                "type": "string",
                                "nullable": true,
                                "description": "The date and time of closing the deal"
                              },
                              "pipeline_id": {
                                "type": "integer",
                                "description": "The ID of pipeline associated with the deal"
                              },
                              "won_time": {
                                "type": "string",
                                "description": "The date and time of changing the deal status as won"
                              },
                              "first_won_time": {
                                "type": "string",
                                "description": "The date and time of the first time changing the deal status as won"
                              },
                              "lost_time": {
                                "type": "string",
                                "description": "The date and time of changing the deal status as lost"
                              },
                              "products_count": {
                                "type": "integer",
                                "description": "The number of products associated with the deal"
                              },
                              "files_count": {
                                "type": "integer",
                                "description": "The number of files associated with the deal"
                              },
                              "notes_count": {
                                "type": "integer",
                                "description": "The number of notes associated with the deal"
                              },
                              "followers_count": {
                                "type": "integer",
                                "description": "The number of followers associated with the deal"
                              },
                              "email_messages_count": {
                                "type": "integer",
                                "description": "The number of emails associated with the deal"
                              },
                              "activities_count": {
                                "type": "integer",
                                "description": "The number of activities associated with the deal"
                              },
                              "done_activities_count": {
                                "type": "integer",
                                "description": "The number of completed activities associated with the deal"
                              },
                              "undone_activities_count": {
                                "type": "integer",
                                "description": "The number of incomplete activities associated with the deal"
                              },
                              "participants_count": {
                                "type": "integer",
                                "description": "The number of participants associated with the deal"
                              },
                              "expected_close_date": {
                                "type": "string",
                                "format": "date",
                                "description": "The expected close date of the deal"
                              },
                              "last_incoming_mail_time": {
                                "type": "string",
                                "description": "The date and time of the last incoming email associated with the deal"
                              },
                              "last_outgoing_mail_time": {
                                "type": "string",
                                "description": "The date and time of the last outgoing email associated with the deal"
                              },
                              "label": {
                                "type": "integer",
                                "description": "The label assigned to the deal"
                              },
                              "stage_order_nr": {
                                "type": "integer",
                                "description": "The order number of the deal stage associated with the deal"
                              },
                              "person_name": {
                                "type": "string",
                                "description": "The name of the person associated with the deal"
                              },
                              "org_name": {
                                "type": "string",
                                "description": "The name of the organization associated with the deal"
                              },
                              "next_activity_subject": {
                                "type": "string",
                                "description": "The subject of the next activity associated with the deal"
                              },
                              "next_activity_type": {
                                "type": "string",
                                "description": "The type of the next activity associated with the deal"
                              },
                              "next_activity_duration": {
                                "type": "string",
                                "description": "The duration of the next activity associated with the deal"
                              },
                              "next_activity_note": {
                                "type": "string",
                                "description": "The note of the next activity associated with the deal"
                              },
                              "formatted_value": {
                                "type": "string",
                                "description": "The deal value formatted with selected currency. E.g. US$500"
                              },
                              "weighted_value": {
                                "type": "number",
                                "description": "Probability times deal value. Probability can either be deal probability or if not set, then stage probability."
                              },
                              "formatted_weighted_value": {
                                "type": "string",
                                "description": "The weighted_value formatted with selected currency. E.g. US$500"
                              },
                              "weighted_value_currency": {
                                "type": "string",
                                "description": "The currency associated with the deal"
                              },
                              "rotten_time": {
                                "type": "string",
                                "nullable": true,
                                "description": "The date and time of changing the deal status as rotten"
                              },
                              "owner_name": {
                                "type": "string",
                                "description": "The name of the deal owner"
                              },
                              "cc_email": {
                                "type": "string",
                                "description": "The BCC email of the deal"
                              },
                              "org_hidden": {
                                "type": "boolean",
                                "description": "If the organization that is associated with the deal is hidden or not"
                              },
                              "person_hidden": {
                                "type": "boolean",
                                "description": "If the person that is associated with the deal is hidden or not"
                              }
                            }
                          }
                        ]
                      },
                      "description": "The array of deals"
                    },
                    "additional_data": {
                      "description": "The additional data of the list",
                      "type": "object",
                      "properties": {
                        "start": {
                          "type": "integer",
                          "description": "Pagination start"
                        },
                        "limit": {
                          "type": "integer",
                          "description": "Items shown per page"
                        },
                        "more_items_in_collection": {
                          "type": "boolean",
                          "description": "If there are more list items in the collection than displayed or not"
                        }
                      }
                    },
                    "related_objects": {
                      "type": "object",
                      "properties": {
                        "user": {
                          "description": "The user who is associated with the deal",
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "description": "The ID of the user"
                            },
                            "name": {
                              "type": "string",
                              "description": "The name of the user"
                            },
                            "email": {
                              "type": "string",
                              "description": "The email of the user"
                            },
                            "has_pic": {
                              "type": "boolean",
                              "description": "If the user has a picture or not"
                            },
                            "pic_hash": {
                              "type": "string",
                              "nullable": true,
                              "description": "The user picture hash"
                            },
                            "active_flag": {
                              "type": "boolean",
                              "description": "Whether the user is active or not"
                            }
                          }
                        },
                        "organization": {
                          "type": "object",
                          "description": "The organization which is associated with the deal",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "The name of the organization associated with the deal"
                            },
                            "people_count": {
                              "type": "integer",
                              "description": "The number of people connected with the organization that is associated with the deal"
                            },
                            "owner_id": {
                              "type": "integer",
                              "description": "The ID of the owner of the organization that is associated with the deal"
                            },
                            "address": {
                              "type": "string",
                              "description": "The address of the organization that is associated with the deal"
                            },
                            "active_flag": {
                              "type": "boolean",
                              "description": "Whether the associated organization is active or not"
                            },
                            "cc_email": {
                              "type": "string",
                              "description": "The BCC email of the organization associated with the deal"
                            }
                          }
                        },
                        "person": {
                          "type": "object",
                          "description": "The person who is associated with the deal",
                          "properties": {
                            "active_flag": {
                              "type": "boolean",
                              "description": "Whether the associated person is active or not"
                            },
                            "name": {
                              "type": "string",
                              "description": "The name of the person associated with the deal"
                            },
                            "email": {
                              "type": "array",
                              "description": "The emails of the person associated with the deal",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "label": {
                                    "type": "string",
                                    "description": "The type of the email"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "The email of the associated person"
                                  },
                                  "primary": {
                                    "type": "boolean",
                                    "description": "If this is the primary email or not"
                                  }
                                }
                              }
                            },
                            "phone": {
                              "type": "array",
                              "description": "The phone numbers of the person associated with the deal",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "label": {
                                    "type": "string",
                                    "description": "The type of the phone number"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "The phone number of the person associated with the deal"
                                  },
                                  "primary": {
                                    "type": "boolean",
                                    "description": "If this is the primary phone number or not"
                                  }
                                }
                              }
                            },
                            "owner_id": {
                              "type": "integer",
                              "description": "The ID of the owner of the person that is associated with the deal"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "success": true,
                  "data": [
                    {
                      "id": 1,
                      "creator_user_id": {
                        "id": 8877,
                        "name": "Creator",
                        "email": "john.doe@pipedrive.com",
                        "has_pic": false,
                        "pic_hash": null,
                        "active_flag": true,
                        "value": 8877
                      },
                      "user_id": {
                        "id": 8877,
                        "name": "Creator",
                        "email": "john.doe@pipedrive.com",
                        "has_pic": false,
                        "pic_hash": null,
                        "active_flag": true,
                        "value": 8877
                      },
                      "person_id": {
                        "active_flag": true,
                        "name": "Person",
                        "email": [
                          {
                            "label": "work",
                            "value": "person@pipedrive.com",
                            "primary": true
                          }
                        ],
                        "phone": [
                          {
                            "label": "work",
                            "value": "37244499911",
                            "primary": true
                          }
                        ],
                        "value": 1101
                      },
                      "org_id": {
                        "name": "Organization",
                        "people_count": 2,
                        "owner_id": 8877,
                        "address": "Mustamäe tee 3a, 10615 Tallinn",
                        "active_flag": true,
                        "cc_email": "org@pipedrivemail.com",
                        "value": 5
                      },
                      "stage_id": 2,
                      "title": "Deal One",
                      "value": 5000,
                      "currency": "EUR",
                      "add_time": "2019-05-29 04:21:51",
                      "update_time": "2019-11-28 16:19:50",
                      "stage_change_time": "2019-11-28 15:41:22",
                      "active": true,
                      "deleted": false,
                      "status": "open",
                      "probability": null,
                      "next_activity_date": "2019-11-29",
                      "next_activity_time": "11:30:00",
                      "next_activity_id": 128,
                      "last_activity_id": null,
                      "last_activity_date": null,
                      "lost_reason": null,
                      "visible_to": "1",
                      "close_time": null,
                      "pipeline_id": 1,
                      "won_time": "2019-11-27 11:40:36",
                      "first_won_time": "2019-11-27 11:40:36",
                      "lost_time": "2019-11-27 11:40:36",
                      "products_count": 0,
                      "files_count": 0,
                      "notes_count": 2,
                      "followers_count": 0,
                      "email_messages_count": 4,
                      "activities_count": 1,
                      "done_activities_count": 0,
                      "undone_activities_count": 1,
                      "participants_count": 1,
                      "expected_close_date": "2019-06-29",
                      "last_incoming_mail_time": "2019-05-29 18:21:42",
                      "last_outgoing_mail_time": "2019-05-30 03:45:35",
                      "label": 11,
                      "stage_order_nr": 2,
                      "person_name": "Person",
                      "org_name": "Organization",
                      "next_activity_subject": "Call",
                      "next_activity_type": "call",
                      "next_activity_duration": "00:30:00",
                      "next_activity_note": "Note content",
                      "formatted_value": "€5,000",
                      "weighted_value": 5000,
                      "formatted_weighted_value": "€5,000",
                      "weighted_value_currency": "EUR",
                      "rotten_time": null,
                      "owner_name": "Creator",
                      "cc_email": "company+deal1@pipedrivemail.com",
                      "org_hidden": false,
                      "person_hidden": false
                    }
                  ],
                  "related_objects": {
                    "user": {
                      "8877": {
                        "id": 8877,
                        "name": "Creator",
                        "email": "john.doe@pipedrive.com",
                        "has_pic": false,
                        "pic_hash": null,
                        "active_flag": true
                      }
                    },
                    "organization": {
                      "5": {
                        "id": 5,
                        "name": "Organization",
                        "people_count": 2,
                        "owner_id": 8877,
                        "address": "Mustamäe tee 3a, 10615 Tallinn",
                        "active_flag": true,
                        "cc_email": "org@pipedrivemail.com"
                      }
                    },
                    "person": {
                      "1101": {
                        "active_flag": true,
                        "id": 1101,
                        "name": "Person",
                        "email": [
                          {
                            "label": "work",
                            "value": "person@pipedrive.com",
                            "primary": true
                          }
                        ],
                        "phone": [
                          {
                            "label": "work",
                            "value": "3421787767",
                            "primary": true
                          }
                        ],
                        "owner_id": 8877
                      }
                    },
                    "stage": {
                      "2": {
                        "id": 2,
                        "company_id": 123,
                        "order_nr": 1,
                        "name": "Stage Name",
                        "active_flag": true,
                        "deal_probability": 100,
                        "pipeline_id": 1,
                        "rotten_flag": false,
                        "rotten_days": null,
                        "add_time": "2015-12-08 13:54:06",
                        "update_time": "2015-12-08 13:54:06",
                        "pipeline_name": "Pipeline",
                        "pipeline_deal_probability": true
                      }
                    },
                    "pipeline": {
                      "1": {
                        "id": 1,
                        "name": "Pipeline",
                        "url_title": "Pipeline",
                        "order_nr": 0,
                        "active": true,
                        "deal_probability": true,
                        "add_time": "2015-12-08 10:00:24",
                        "update_time": "2015-12-08 10:00:24"
                      }
                    }
                  },
                  "additional_data": {
                    "pagination": {
                      "start": 0,
                      "limit": 100,
                      "more_items_in_collection": false,
                      "next_start": 1
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add a deal",
        "description": "Adds a new deal. Note that you can supply additional custom fields along with the request that are not described here. These custom fields are different for each Pipedrive account and can be recognized by long hashes as keys. To determine which custom fields exists, fetch the dealFields and look for `key` values. For more information, see the tutorial for <a href=\"https://pipedrive.readme.io/docs/creating-a-deal\" target=\"_blank\" rel=\"noopener noreferrer\">adding a deal</a>.",
        "operationId": "addDeal",
        "tags": [ "Deals" ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "addDealRequest",
                "allOf": [
                  {
                    "title": "requredTitleParameter",
                    "type": "object",
                    "required": [ "title" ],
                    "properties": {
                      "title": {
                        "type": "string",
                        "description": "The title of the deal"
                      }
                    }
                  },
                  {
                    "title": "basicDeal",
                    "type": "object",
                    "properties": {
                      "value": {
                        "type": "string",
                        "description": "The value of the deal. If omitted, value will be set to 0."
                      },
                      "currency": {
                        "type": "string",
                        "description": "The currency of the deal. Accepts a 3-character currency code. If omitted, currency will be set to the default currency of the authorized user."
                      },
                      "user_id": {
                        "type": "integer",
                        "description": "The ID of the user which will be the owner of the created deal. If not provided, the user making the request will be used."
                      },
                      "person_id": {
                        "type": "integer",
                        "description": "The ID of a person which this deal will be linked to. If the person does not exist yet, it needs to be created first. This property is required unless `org_id` is specified."
                      },
                      "org_id": {
                        "type": "integer",
                        "description": "The ID of an organization which this deal will be linked to. If the organization does not exist yet, it needs to be created first. This property is required unless `person_id` is specified."
                      },
                      "pipeline_id": {
                        "type": "integer",
                        "description": "The ID of the pipeline this deal will be added to. By default, the deal will be added to the first stage of the specified pipeline. Please note that `pipeline_id` and `stage_id` should not be used together as `pipeline_id` will be ignored."
                      },
                      "stage_id": {
                        "type": "integer",
                        "description": "The ID of the stage this deal will be added to. Please note that a pipeline will be assigned automatically based on the `stage_id`. If omitted, the deal will be placed in the first stage of the default pipeline."
                      },
                      "status": {
                        "type": "string",
                        "enum": [ "open", "won", "lost", "deleted" ],
                        "description": "open = Open, won = Won, lost = Lost, deleted = Deleted. If omitted, status will be set to open."
                      },
                      "expected_close_date": {
                        "type": "string",
                        "format": "date",
                        "description": "The expected close date of the deal. In ISO 8601 format: YYYY-MM-DD."
                      },
                      "probability": {
                        "type": "number",
                        "description": "The success probability percentage of the deal. Used/shown only when `deal_probability` for the pipeline of the deal is enabled."
                      },
                      "lost_reason": {
                        "type": "string",
                        "description": "The optional message about why the deal was lost (to be used when status = lost)"
                      },
                      "visible_to": {
                        "type": "string",
                        "allOf": [
                          { "type": "string", "enum": [ "1", "3", "5", "7" ] }
                        ],
                        "description": "The visibility of the deal. If omitted, the visibility will be set to the default visibility setting of this item type for the authorized user. Read more about visibility groups <a href=\"https://support.pipedrive.com/en/article/visibility-groups\" target=\"_blank\" rel=\"noopener noreferrer\">here</a>.<h4>Essential / Advanced plan</h4><table><tr><th style=\"width:40px\">Value</th><th>Description</th></tr><tr><td>`1`</td><td>Owner &amp; followers</td><tr><td>`3`</td><td>Entire company</td></tr></table><h4>Professional / Enterprise plan</h4><table><tr><th style=\"width:40px\">Value</th><th>Description</th></tr><tr><td>`1`</td><td>Owner only</td><tr><td>`3`</td><td>Owner's visibility group</td></tr><tr><td>`5`</td><td>Owner's visibility group and sub-groups</td></tr><tr><td>`7`</td><td>Entire company</td></tr></table>"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "add_time": {
                        "type": "string",
                        "description": "The optional creation date & time of the deal in UTC. Requires admin user API token. Format: YYYY-MM-DD HH:MM:SS"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Add a deal",
            "content": {
              "application/json": {
                "schema": {
                  "title": "deal",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "If the response is successful or not"
                    },
                    "data": {
                      "description": "The deal object",
                      "allOf": [
                        {
                          "title": "dealNonStrict",
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "description": "The ID of the deal"
                                },
                                "creator_user_id": {
                                  "type": "object",
                                  "description": "The creator of the deal",
                                  "properties": {
                                    "id": {
                                      "type": "integer",
                                      "description": "The ID of the deal creator"
                                    },
                                    "name": {
                                      "type": "string",
                                      "description": "The name of the deal creator"
                                    },
                                    "email": {
                                      "type": "string",
                                      "description": "The email of the deal creator"
                                    },
                                    "has_pic": {
                                      "type": "boolean",
                                      "description": "If the creator has a picture or not"
                                    },
                                    "pic_hash": {
                                      "type": "string",
                                      "nullable": true,
                                      "description": "The creator picture hash"
                                    },
                                    "active_flag": {
                                      "type": "boolean",
                                      "description": "Whether the creator is active or not"
                                    },
                                    "value": {
                                      "type": "integer",
                                      "description": "The ID of the deal creator"
                                    }
                                  }
                                },
                                "user_id": {
                                  "title": "dealUserDataWithId",
                                  "allOf": [
                                    {
                                      "description": "The user who is associated with the deal",
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "integer",
                                          "description": "The ID of the user"
                                        },
                                        "name": {
                                          "type": "string",
                                          "description": "The name of the user"
                                        },
                                        "email": {
                                          "type": "string",
                                          "description": "The email of the user"
                                        },
                                        "has_pic": {
                                          "type": "boolean",
                                          "description": "If the user has a picture or not"
                                        },
                                        "pic_hash": {
                                          "type": "string",
                                          "nullable": true,
                                          "description": "The user picture hash"
                                        },
                                        "active_flag": {
                                          "type": "boolean",
                                          "description": "Whether the user is active or not"
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "value": {
                                          "type": "integer",
                                          "description": "The ID of the user"
                                        }
                                      }
                                    }
                                  ]
                                },
                                "person_id": {
                                  "title": "dealPersonDataWithId",
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "description": "The person who is associated with the deal",
                                      "properties": {
                                        "active_flag": {
                                          "type": "boolean",
                                          "description": "Whether the associated person is active or not"
                                        },
                                        "name": {
                                          "type": "string",
                                          "description": "The name of the person associated with the deal"
                                        },
                                        "email": {
                                          "type": "array",
                                          "description": "The emails of the person associated with the deal",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "label": {
                                                "type": "string",
                                                "description": "The type of the email"
                                              },
                                              "value": {
                                                "type": "string",
                                                "description": "The email of the associated person"
                                              },
                                              "primary": {
                                                "type": "boolean",
                                                "description": "If this is the primary email or not"
                                              }
                                            }
                                          }
                                        },
                                        "phone": {
                                          "type": "array",
                                          "description": "The phone numbers of the person associated with the deal",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "label": {
                                                "type": "string",
                                                "description": "The type of the phone number"
                                              },
                                              "value": {
                                                "type": "string",
                                                "description": "The phone number of the person associated with the deal"
                                              },
                                              "primary": {
                                                "type": "boolean",
                                                "description": "If this is the primary phone number or not"
                                              }
                                            }
                                          }
                                        },
                                        "owner_id": {
                                          "type": "integer",
                                          "description": "The ID of the owner of the person that is associated with the deal"
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "value": {
                                          "type": "integer",
                                          "description": "The ID of the person associated with the deal"
                                        }
                                      }
                                    }
                                  ]
                                },
                                "org_id": {
                                  "title": "dealOrganizationDataWithId",
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "description": "The organization which is associated with the deal",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "The name of the organization associated with the deal"
                                        },
                                        "people_count": {
                                          "type": "integer",
                                          "description": "The number of people connected with the organization that is associated with the deal"
                                        },
                                        "owner_id": {
                                          "type": "integer",
                                          "description": "The ID of the owner of the organization that is associated with the deal"
                                        },
                                        "address": {
                                          "type": "string",
                                          "description": "The address of the organization that is associated with the deal"
                                        },
                                        "active_flag": {
                                          "type": "boolean",
                                          "description": "Whether the associated organization is active or not"
                                        },
                                        "cc_email": {
                                          "type": "string",
                                          "description": "The BCC email of the organization associated with the deal"
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "value": {
                                          "type": "integer",
                                          "description": "The ID of the organization associated with the deal"
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            },
                            {
                              "title": "baseDeal",
                              "type": "object",
                              "properties": {
                                "stage_id": {
                                  "type": "integer",
                                  "description": "The ID of the deal stage"
                                },
                                "title": {
                                  "type": "string",
                                  "description": "The title of the deal"
                                },
                                "value": {
                                  "type": "number",
                                  "description": "The value of the deal"
                                },
                                "currency": {
                                  "type": "string",
                                  "description": "The currency associated with the deal"
                                },
                                "add_time": {
                                  "type": "string",
                                  "description": "The creation date and time of the deal"
                                },
                                "update_time": {
                                  "type": "string",
                                  "description": "The last updated date and time of the deal"
                                },
                                "stage_change_time": {
                                  "type": "string",
                                  "description": "The last updated date and time of the deal stage"
                                },
                                "active": {
                                  "type": "boolean",
                                  "description": "Whether the deal is active or not"
                                },
                                "deleted": {
                                  "type": "boolean",
                                  "description": "Whether the deal is deleted or not"
                                },
                                "status": {
                                  "type": "string",
                                  "description": "The status of the deal"
                                },
                                "probability": {
                                  "type": "number",
                                  "nullable": true,
                                  "description": "The success probability percentage of the deal"
                                },
                                "next_activity_date": {
                                  "type": "string",
                                  "description": "The date of the next activity associated with the deal"
                                },
                                "next_activity_time": {
                                  "type": "string",
                                  "description": "The time of the next activity associated with the deal"
                                },
                                "next_activity_id": {
                                  "type": "integer",
                                  "nullable": true,
                                  "description": "The ID of the next activity associated with the deal"
                                },
                                "last_activity_id": {
                                  "type": "integer",
                                  "nullable": true,
                                  "description": "The ID of the last activity associated with the deal"
                                },
                                "last_activity_date": {
                                  "type": "string",
                                  "nullable": true,
                                  "description": "The date of the last activity associated with the deal"
                                },
                                "lost_reason": {
                                  "type": "string",
                                  "nullable": true,
                                  "description": "The reason for losing the deal"
                                },
                                "visible_to": {
                                  "type": "string",
                                  "description": "The visibility of the deal"
                                },
                                "close_time": {
                                  "type": "string",
                                  "nullable": true,
                                  "description": "The date and time of closing the deal"
                                },
                                "pipeline_id": {
                                  "type": "integer",
                                  "description": "The ID of pipeline associated with the deal"
                                },
                                "won_time": {
                                  "type": "string",
                                  "description": "The date and time of changing the deal status as won"
                                },
                                "first_won_time": {
                                  "type": "string",
                                  "description": "The date and time of the first time changing the deal status as won"
                                },
                                "lost_time": {
                                  "type": "string",
                                  "description": "The date and time of changing the deal status as lost"
                                },
                                "products_count": {
                                  "type": "integer",
                                  "description": "The number of products associated with the deal"
                                },
                                "files_count": {
                                  "type": "integer",
                                  "description": "The number of files associated with the deal"
                                },
                                "notes_count": {
                                  "type": "integer",
                                  "description": "The number of notes associated with the deal"
                                },
                                "followers_count": {
                                  "type": "integer",
                                  "description": "The number of followers associated with the deal"
                                },
                                "email_messages_count": {
                                  "type": "integer",
                                  "description": "The number of emails associated with the deal"
                                },
                                "activities_count": {
                                  "type": "integer",
                                  "description": "The number of activities associated with the deal"
                                },
                                "done_activities_count": {
                                  "type": "integer",
                                  "description": "The number of completed activities associated with the deal"
                                },
                                "undone_activities_count": {
                                  "type": "integer",
                                  "description": "The number of incomplete activities associated with the deal"
                                },
                                "participants_count": {
                                  "type": "integer",
                                  "description": "The number of participants associated with the deal"
                                },
                                "expected_close_date": {
                                  "type": "string",
                                  "format": "date",
                                  "description": "The expected close date of the deal"
                                },
                                "last_incoming_mail_time": {
                                  "type": "string",
                                  "description": "The date and time of the last incoming email associated with the deal"
                                },
                                "last_outgoing_mail_time": {
                                  "type": "string",
                                  "description": "The date and time of the last outgoing email associated with the deal"
                                },
                                "label": {
                                  "type": "integer",
                                  "description": "The label assigned to the deal"
                                },
                                "stage_order_nr": {
                                  "type": "integer",
                                  "description": "The order number of the deal stage associated with the deal"
                                },
                                "person_name": {
                                  "type": "string",
                                  "description": "The name of the person associated with the deal"
                                },
                                "org_name": {
                                  "type": "string",
                                  "description": "The name of the organization associated with the deal"
                                },
                                "next_activity_subject": {
                                  "type": "string",
                                  "description": "The subject of the next activity associated with the deal"
                                },
                                "next_activity_type": {
                                  "type": "string",
                                  "description": "The type of the next activity associated with the deal"
                                },
                                "next_activity_duration": {
                                  "type": "string",
                                  "description": "The duration of the next activity associated with the deal"
                                },
                                "next_activity_note": {
                                  "type": "string",
                                  "description": "The note of the next activity associated with the deal"
                                },
                                "formatted_value": {
                                  "type": "string",
                                  "description": "The deal value formatted with selected currency. E.g. US$500"
                                },
                                "weighted_value": {
                                  "type": "number",
                                  "description": "Probability times deal value. Probability can either be deal probability or if not set, then stage probability."
                                },
                                "formatted_weighted_value": {
                                  "type": "string",
                                  "description": "The weighted_value formatted with selected currency. E.g. US$500"
                                },
                                "weighted_value_currency": {
                                  "type": "string",
                                  "description": "The currency associated with the deal"
                                },
                                "rotten_time": {
                                  "type": "string",
                                  "nullable": true,
                                  "description": "The date and time of changing the deal status as rotten"
                                },
                                "owner_name": {
                                  "type": "string",
                                  "description": "The name of the deal owner"
                                },
                                "cc_email": {
                                  "type": "string",
                                  "description": "The BCC email of the deal"
                                },
                                "org_hidden": {
                                  "type": "boolean",
                                  "description": "If the organization that is associated with the deal is hidden or not"
                                },
                                "person_hidden": {
                                  "type": "boolean",
                                  "description": "If the person that is associated with the deal is hidden or not"
                                }
                              }
                            }
                          ]
                        }
                      ]
                    },
                    "related_objects": {
                      "type": "object",
                      "properties": {
                        "user": {
                          "description": "The user who is associated with the deal",
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "description": "The ID of the user"
                            },
                            "name": {
                              "type": "string",
                              "description": "The name of the user"
                            },
                            "email": {
                              "type": "string",
                              "description": "The email of the user"
                            },
                            "has_pic": {
                              "type": "boolean",
                              "description": "If the user has a picture or not"
                            },
                            "pic_hash": {
                              "type": "string",
                              "nullable": true,
                              "description": "The user picture hash"
                            },
                            "active_flag": {
                              "type": "boolean",
                              "description": "Whether the user is active or not"
                            }
                          }
                        },
                        "organization": {
                          "type": "object",
                          "description": "The organization which is associated with the deal",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "The name of the organization associated with the deal"
                            },
                            "people_count": {
                              "type": "integer",
                              "description": "The number of people connected with the organization that is associated with the deal"
                            },
                            "owner_id": {
                              "type": "integer",
                              "description": "The ID of the owner of the organization that is associated with the deal"
                            },
                            "address": {
                              "type": "string",
                              "description": "The address of the organization that is associated with the deal"
                            },
                            "active_flag": {
                              "type": "boolean",
                              "description": "Whether the associated organization is active or not"
                            },
                            "cc_email": {
                              "type": "string",
                              "description": "The BCC email of the organization associated with the deal"
                            }
                          }
                        },
                        "person": {
                          "type": "object",
                          "description": "The person who is associated with the deal",
                          "properties": {
                            "active_flag": {
                              "type": "boolean",
                              "description": "Whether the associated person is active or not"
                            },
                            "name": {
                              "type": "string",
                              "description": "The name of the person associated with the deal"
                            },
                            "email": {
                              "type": "array",
                              "description": "The emails of the person associated with the deal",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "label": {
                                    "type": "string",
                                    "description": "The type of the email"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "The email of the associated person"
                                  },
                                  "primary": {
                                    "type": "boolean",
                                    "description": "If this is the primary email or not"
                                  }
                                }
                              }
                            },
                            "phone": {
                              "type": "array",
                              "description": "The phone numbers of the person associated with the deal",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "label": {
                                    "type": "string",
                                    "description": "The type of the phone number"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "The phone number of the person associated with the deal"
                                  },
                                  "primary": {
                                    "type": "boolean",
                                    "description": "If this is the primary phone number or not"
                                  }
                                }
                              }
                            },
                            "owner_id": {
                              "type": "integer",
                              "description": "The ID of the owner of the person that is associated with the deal"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "success": true,
                  "data": {
                    "id": 1,
                    "creator_user_id": {
                      "id": 8877,
                      "name": "Creator",
                      "email": "john.doe@pipedrive.com",
                      "has_pic": false,
                      "pic_hash": null,
                      "active_flag": true,
                      "value": 8877
                    },
                    "user_id": {
                      "id": 8877,
                      "name": "Creator",
                      "email": "john.doe@pipedrive.com",
                      "has_pic": false,
                      "pic_hash": null,
                      "active_flag": true,
                      "value": 8877
                    },
                    "person_id": {
                      "active_flag": true,
                      "name": "Person",
                      "email": [
                        {
                          "label": "work",
                          "value": "person@pipedrive.com",
                          "primary": true
                        }
                      ],
                      "phone": [
                        {
                          "label": "work",
                          "value": "37244499911",
                          "primary": true
                        }
                      ],
                      "value": 1101
                    },
                    "org_id": {
                      "name": "Organization",
                      "people_count": 2,
                      "owner_id": 8877,
                      "address": "",
                      "active_flag": true,
                      "cc_email": "org@pipedrivemail.com",
                      "value": 5
                    },
                    "stage_id": 2,
                    "title": "Deal One",
                    "value": 5000,
                    "currency": "EUR",
                    "add_time": "2019-05-29 04:21:51",
                    "update_time": "2019-11-28 16:19:50",
                    "stage_change_time": "2019-11-28 15:41:22",
                    "active": true,
                    "deleted": false,
                    "status": "open",
                    "probability": null,
                    "next_activity_date": "2019-11-29",
                    "next_activity_time": "11:30:00",
                    "next_activity_id": 128,
                    "last_activity_id": null,
                    "last_activity_date": null,
                    "lost_reason": null,
                    "visible_to": "1",
                    "close_time": null,
                    "pipeline_id": 1,
                    "won_time": "2019-11-27 11:40:36",
                    "first_won_time": "2019-11-27 11:40:36",
                    "lost_time": "",
                    "products_count": 0,
                    "files_count": 0,
                    "notes_count": 2,
                    "followers_count": 0,
                    "email_messages_count": 4,
                    "activities_count": 1,
                    "done_activities_count": 0,
                    "undone_activities_count": 1,
                    "participants_count": 1,
                    "expected_close_date": "2019-06-29",
                    "last_incoming_mail_time": "2019-05-29 18:21:42",
                    "last_outgoing_mail_time": "2019-05-30 03:45:35",
                    "label": 11,
                    "stage_order_nr": 2,
                    "person_name": "Person",
                    "org_name": "Organization",
                    "next_activity_subject": "Call",
                    "next_activity_type": "call",
                    "next_activity_duration": "00:30:00",
                    "next_activity_note": "Note content",
                    "formatted_value": "€5,000",
                    "weighted_value": 5000,
                    "formatted_weighted_value": "€5,000",
                    "weighted_value_currency": "EUR",
                    "rotten_time": null,
                    "owner_name": "Creator",
                    "cc_email": "company+deal1@pipedrivemail.com",
                    "org_hidden": false,
                    "person_hidden": false
                  },
                  "related_objects": {
                    "user": {
                      "8877": {
                        "id": 8877,
                        "name": "Creator",
                        "email": "john.doe@pipedrive.com",
                        "has_pic": false,
                        "pic_hash": null,
                        "active_flag": true
                      }
                    },
                    "organization": {
                      "2": {
                        "id": 2,
                        "name": "Organization",
                        "people_count": 2,
                        "owner_id": 8877,
                        "address": "Mustamäe tee 3a, 10615 Tallinn",
                        "active_flag": true,
                        "cc_email": "org@pipedrivemail.com"
                      }
                    },
                    "person": {
                      "1101": {
                        "active_flag": true,
                        "id": 1101,
                        "name": "Person",
                        "email": [
                          {
                            "label": "work",
                            "value": "person@pipedrive.com",
                            "primary": true
                          }
                        ],
                        "phone": [
                          {
                            "label": "work",
                            "value": "3421787767",
                            "primary": true
                          }
                        ],
                        "owner_id": 8877
                      }
                    },
                    "stage": {
                      "2": {
                        "id": 2,
                        "company_id": 123,
                        "order_nr": 1,
                        "name": "Stage Name",
                        "active_flag": true,
                        "deal_probability": 100,
                        "pipeline_id": 1,
                        "rotten_flag": false,
                        "rotten_days": null,
                        "add_time": "2015-12-08 13:54:06",
                        "update_time": "2015-12-08 13:54:06",
                        "pipeline_name": "Pipeline",
                        "pipeline_deal_probability": true
                      }
                    },
                    "pipeline": {
                      "1": {
                        "id": 1,
                        "name": "Pipeline",
                        "url_title": "Pipeline",
                        "order_nr": 0,
                        "active": true,
                        "deal_probability": true,
                        "add_time": "2015-12-08 10:00:24",
                        "update_time": "2015-12-08 10:00:24"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete multiple deals in bulk",
        "description": "Marks multiple deals as deleted. After 30 days, the deals will be permanently deleted.",
        "operationId": "deleteDeals",
        "tags": [ "Deals" ],
        "parameters": [
          {
            "in": "query",
            "name": "ids",
            "description": "The comma-separated IDs that will be deleted",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Delete multiple deals in bulk",
            "content": {
              "application/json": {
                "schema": {
                  "title": "deleteDeals",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "If the response is successful or not"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "array",
                          "items": { "type": "integer" },
                          "description": "The list of deleted deals IDs"
                        }
                      }
                    }
                  }
                },
                "example": { "success": true, "data": { "id": [ 123, 456 ] } }
              }
            }
          }
        }
      }
    },
    "/deals/search": {
      "get": {
        "summary": "Search deals",
        "description": "Searches all deals by title, notes and/or custom fields. This endpoint is a wrapper of <a href=\"https://developers.pipedrive.com/docs/api/v1/ItemSearch#searchItem\">/v1/itemSearch</a> with a narrower OAuth scope. Found deals can be filtered by the person ID and the organization ID.",
        "operationId": "searchDeals",
        "tags": [ "Deals" ],
        "parameters": [
          {
            "in": "query",
            "name": "term",
            "required": true,
            "schema": { "type": "string" },
            "description": "The search term to look for. Minimum 2 characters (or 1 if using `exact_match`). Please note that the search term has to be URL encoded."
          },
          {
            "in": "query",
            "name": "fields",
            "schema": {
              "type": "string",
              "enum": [ "custom_fields", "notes", "title" ]
            },
            "description": "A comma-separated string array. The fields to perform the search from. Defaults to all of them."
          },
          {
            "in": "query",
            "name": "exact_match",
            "schema": { "type": "boolean", "enum": [ true, false ] },
            "description": "When enabled, only full exact matches against the given term are returned. It is <b>not</b> case sensitive."
          },
          {
            "in": "query",
            "name": "person_id",
            "schema": { "type": "integer" },
            "description": "Will filter deals by the provided person ID. The upper limit of found deals associated with the person is 2000."
          },
          {
            "in": "query",
            "name": "organization_id",
            "schema": { "type": "integer" },
            "description": "Will filter deals by the provided organization ID. The upper limit of found deals associated with the organization is 2000."
          },
          {
            "in": "query",
            "name": "status",
            "schema": { "type": "string", "enum": [ "open", "won", "lost" ] },
            "description": "Will filter deals by the provided specific status. open = Open, won = Won, lost = Lost. The upper limit of found deals associated with the status is 2000."
          },
          {
            "in": "query",
            "name": "include_fields",
            "schema": { "type": "string", "enum": [ "deal.cc_email" ] },
            "description": "Supports including optional fields in the results which are not provided by default"
          },
          {
            "in": "query",
            "name": "start",
            "schema": { "type": "integer", "default": 0 },
            "description": "Pagination start. Note that the pagination is based on main results and does not include related items when using `search_for_related_items` parameter."
          },
          {
            "in": "query",
            "name": "limit",
            "schema": { "type": "integer" },
            "description": "Items shown per page"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "searchDeals",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "description": "The array of deals",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "result_score": {
                                    "type": "number",
                                    "description": "Search result relevancy"
                                  },
                                  "item": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "integer",
                                        "description": "The ID of the deal"
                                      },
                                      "type": {
                                        "type": "string",
                                        "description": "The type of the item"
                                      },
                                      "title": {
                                        "type": "string",
                                        "description": "The title of the deal"
                                      },
                                      "value": {
                                        "type": "integer",
                                        "description": "The value of the deal"
                                      },
                                      "currency": {
                                        "type": "string",
                                        "description": "The currency of the deal"
                                      },
                                      "status": {
                                        "type": "string",
                                        "description": "The status of the deal"
                                      },
                                      "visible_to": {
                                        "type": "integer",
                                        "description": "The visibility of the deal"
                                      },
                                      "owner": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "integer",
                                            "description": "The ID of the owner of the deal"
                                          }
                                        }
                                      },
                                      "stage": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "integer",
                                            "description": "The ID of the stage of the deal"
                                          },
                                          "name": {
                                            "type": "string",
                                            "description": "The name of the stage of the deal"
                                          }
                                        }
                                      },
                                      "person": {
                                        "type": "object",
                                        "nullable": true,
                                        "properties": {
                                          "id": {
                                            "type": "integer",
                                            "description": "The ID of the person the deal is associated with"
                                          },
                                          "name": {
                                            "type": "string",
                                            "description": "The name of the person the deal is associated with"
                                          }
                                        }
                                      },
                                      "organization": {
                                        "type": "object",
                                        "nullable": true,
                                        "properties": {
                                          "id": {
                                            "type": "integer",
                                            "description": "The ID of the organization the deal is associated with"
                                          },
                                          "name": {
                                            "type": "string",
                                            "description": "The name of the organization the deal is associated with"
                                          }
                                        }
                                      },
                                      "custom_fields": {
                                        "type": "array",
                                        "items": { "type": "string" },
                                        "description": "Custom fields"
                                      },
                                      "notes": {
                                        "type": "array",
                                        "description": "An array of notes",
                                        "items": { "type": "string" }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "additional_data": {
                          "type": "object",
                          "properties": {
                            "pagination": {
                              "description": "Pagination details of the list",
                              "type": "object",
                              "properties": {
                                "start": {
                                  "type": "integer",
                                  "description": "Pagination start"
                                },
                                "limit": {
                                  "type": "integer",
                                  "description": "Items shown per page"
                                },
                                "more_items_in_collection": {
                                  "type": "boolean",
                                  "description": "Whether there are more list items in the collection than displayed"
                                },
                                "next_start": {
                                  "type": "integer",
                                  "description": "Next pagination start"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "success": true,
                  "data": {
                    "items": [
                      {
                        "result_score": 1.22,
                        "item": {
                          "id": 1,
                          "type": "deal",
                          "title": "Jane Doe deal",
                          "value": 100,
                          "currency": "USD",
                          "status": "open",
                          "visible_to": 3,
                          "owner": { "id": 1 },
                          "stage": { "id": 1, "name": "Lead In" },
                          "person": { "id": 1, "name": "Jane Doe" },
                          "organization": null,
                          "custom_fields": [ ],
                          "notes": [ ]
                        }
                      }
                    ]
                  },
                  "additional_data": {
                    "description": "The additional data of the list",
                    "type": "object",
                    "properties": {
                      "start": {
                        "type": "integer",
                        "description": "Pagination start"
                      },
                      "limit": {
                        "type": "integer",
                        "description": "Items shown per page"
                      },
                      "more_items_in_collection": {
                        "type": "boolean",
                        "description": "If there are more list items in the collection than displayed or not"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/deals/summary": {
      "get": {
        "summary": "Get deals summary",
        "description": "Returns a summary of all the deals.",
        "operationId": "getDealsSummary",
        "tags": [ "Deals" ],
        "parameters": [
          {
            "in": "query",
            "name": "status",
            "schema": { "type": "string", "enum": [ "open", "won", "lost" ] },
            "description": "Only fetch deals with a specific status. open = Open, won = Won, lost = Lost"
          },
          {
            "in": "query",
            "name": "filter_id",
            "schema": { "type": "integer" },
            "description": "<code>user_id</code> will not be considered. Only deals matching the given filter will be returned."
          },
          {
            "in": "query",
            "name": "user_id",
            "schema": { "type": "integer" },
            "description": "Only deals matching the given user will be returned. `user_id` will not be considered if you use `filter_id`."
          },
          {
            "in": "query",
            "name": "stage_id",
            "schema": { "type": "integer" },
            "description": "Only deals within the given stage will be returned"
          }
        ],
        "responses": {
          "200": {
            "description": "Get the summary of the deals",
            "content": {
              "application/json": {
                "schema": {
                  "title": "getDealsSummary",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "If the response is successful or not"
                    },
                    "data": {
                      "type": "object",
                      "description": "The summary of deals",
                      "properties": {
                        "values_total": {
                          "type": "object",
                          "description": "The total values of the deals grouped by deal currency",
                          "properties": {
                            "value": {
                              "type": "number",
                              "description": "The total value of deals in the deal currency group"
                            },
                            "count": {
                              "type": "integer",
                              "description": "The number of deals in the deal currency group"
                            },
                            "value_converted": {
                              "type": "number",
                              "description": "The total value of deals converted into the company default currency"
                            },
                            "value_formatted": {
                              "type": "string",
                              "description": "The total value of deals formatted with deal currency. E.g. €50"
                            },
                            "value_converted_formatted": {
                              "type": "string",
                              "description": "The value_converted formatted with deal currency. E.g. US$50.10"
                            }
                          }
                        },
                        "weighted_values_total": {
                          "type": "object",
                          "description": "The total weighted values of the deals grouped by deal currency. The weighted value is calculated as probability times deal value.",
                          "properties": {
                            "value": {
                              "type": "number",
                              "description": "The total weighted value of the deals in the deal currency group"
                            },
                            "count": {
                              "type": "integer",
                              "description": "The number of deals in the deal currency group"
                            },
                            "value_formatted": {
                              "type": "string",
                              "description": "The total weighted value of the deals formatted with deal currency. E.g. €50"
                            }
                          }
                        },
                        "total_count": {
                          "type": "integer",
                          "description": "The total number of deals"
                        },
                        "total_currency_converted_value": {
                          "type": "number",
                          "description": "The total value of deals converted into the company default currency"
                        },
                        "total_weighted_currency_converted_value": {
                          "type": "number",
                          "description": "The total weighted value of deals converted into the company default currency"
                        },
                        "total_currency_converted_value_formatted": {
                          "type": "string",
                          "description": "The total converted value of deals formatted with the company default currency. E.g. US$5,100.96"
                        },
                        "total_weighted_currency_converted_value_formatted": {
                          "type": "string",
                          "description": "The total weighted value of deals formatted with the company default currency. E.g. US$5,100.96"
                        }
                      }
                    }
                  }
                },
                "example": {
                  "success": true,
                  "data": {
                    "values_total": {
                      "EUR": {
                        "value": 10,
                        "count": 2,
                        "value_converted": 11.1,
                        "value_formatted": "€10",
                        "value_converted_formatted": "US$11.10"
                      },
                      "USD": {
                        "value": 30,
                        "count": 3,
                        "value_converted": 30,
                        "value_formatted": "US$30",
                        "value_converted_formatted": "US$3"
                      }
                    },
                    "weighted_values_total": {
                      "EUR": {
                        "value": 10,
                        "count": 2,
                        "value_formatted": "€10"
                      },
                      "USD": {
                        "value": 30,
                        "count": 3,
                        "value_formatted": "US$30"
                      }
                    },
                    "total_count": 5,
                    "total_currency_converted_value": 41.1,
                    "total_weighted_currency_converted_value": 41.1,
                    "total_currency_converted_value_formatted": "US$41.1",
                    "total_weighted_currency_converted_value_formatted": "US$41.1"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/deals/timeline": {
      "get": {
        "summary": "Get deals timeline",
        "description": "Returns open and won deals, grouped by a defined interval of time set in a date-type dealField (`field_key`) — e.g. when month is the chosen interval, and 3 months are asked starting from January 1st, 2012, deals are returned grouped into 3 groups — January, February and March — based on the value of the given `field_key`.",
        "operationId": "getDealsTimeline",
        "tags": [ "Deals" ],
        "parameters": [
          {
            "in": "query",
            "name": "start_date",
            "required": true,
            "schema": { "type": "string", "format": "date" },
            "description": "The date when the first interval starts. Format: YYYY-MM-DD"
          },
          {
            "in": "query",
            "name": "interval",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [ "day", "week", "month", "quarter" ]
            },
            "description": "The type of the interval<table><tr><th>Value</th><th>Description</th></tr><tr><td>`day`</td><td>Day</td></tr><tr><td>`week`</td><td>A full week (7 days) starting from `start_date`</td></tr><tr><td>`month`</td><td>A full month (depending on the number of days in given month) starting from `start_date`</td></tr><tr><td>`quarter`</td><td>A full quarter (3 months) starting from `start_date`</td></tr></table>"
          },
          {
            "in": "query",
            "name": "amount",
            "required": true,
            "schema": { "type": "integer" },
            "description": "The number of given intervals, starting from `start_date`, to fetch. E.g. 3 (months)."
          },
          {
            "in": "query",
            "name": "field_key",
            "required": true,
            "schema": { "type": "string" },
            "description": "The date field key which deals will be retrieved from"
          },
          {
            "in": "query",
            "name": "user_id",
            "schema": { "type": "integer" },
            "description": "If supplied, only deals matching the given user will be returned"
          },
          {
            "in": "query",
            "name": "pipeline_id",
            "schema": { "type": "integer" },
            "description": "If supplied, only deals matching the given pipeline will be returned"
          },
          {
            "in": "query",
            "name": "filter_id",
            "schema": { "type": "integer" },
            "description": "If supplied, only deals matching the given filter will be returned"
          },
          {
            "in": "query",
            "name": "exclude_deals",
            "schema": {
              "title": "numberBoolean",
              "type": "number",
              "enum": [ 0, 1 ]
            },
            "description": "Whether to exclude deals list (1) or not (0). Note that when deals are excluded, the timeline summary (counts and values) is still returned."
          },
          {
            "in": "query",
            "name": "totals_convert_currency",
            "schema": { "type": "string" },
            "description": "The 3-letter currency code of any of the supported currencies. When supplied, `totals_converted` is returned per each interval which contains the currency-converted total amounts in the given currency. You may also set this parameter to `default_currency` in which case the user's default currency is used."
          }
        ],
        "responses": {
          "200": {
            "description": "Get open and won deals, grouped by the defined interval of time",
            "content": {
              "application/json": {
                "schema": {
                  "title": "getDealsTimeline",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "If the response is successful or not"
                    },
                    "data": {
                      "type": "object",
                      "description": "Open and won deals grouped into periods by defined interval, amount and date-type dealField (`field_key`)",
                      "properties": {
                        "period_start": {
                          "type": "string",
                          "description": "The start date and time of the period"
                        },
                        "period_end": {
                          "type": "string",
                          "description": "The end date and time of the period"
                        },
                        "deals": {
                          "type": "array",
                          "items": {
                            "title": "dealStrict",
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "integer",
                                    "description": "The ID of the deal"
                                  },
                                  "creator_user_id": {
                                    "type": "integer",
                                    "description": "The ID of the deal creator"
                                  },
                                  "user_id": {
                                    "type": "integer",
                                    "description": "The ID of the user"
                                  },
                                  "person_id": {
                                    "type": "integer",
                                    "description": "The ID of the person associated with the deal"
                                  },
                                  "org_id": {
                                    "type": "integer",
                                    "description": "The ID of the organization associated with the deal"
                                  }
                                }
                              },
                              {
                                "title": "baseDeal",
                                "type": "object",
                                "properties": {
                                  "stage_id": {
                                    "type": "integer",
                                    "description": "The ID of the deal stage"
                                  },
                                  "title": {
                                    "type": "string",
                                    "description": "The title of the deal"
                                  },
                                  "value": {
                                    "type": "number",
                                    "description": "The value of the deal"
                                  },
                                  "currency": {
                                    "type": "string",
                                    "description": "The currency associated with the deal"
                                  },
                                  "add_time": {
                                    "type": "string",
                                    "description": "The creation date and time of the deal"
                                  },
                                  "update_time": {
                                    "type": "string",
                                    "description": "The last updated date and time of the deal"
                                  },
                                  "stage_change_time": {
                                    "type": "string",
                                    "description": "The last updated date and time of the deal stage"
                                  },
                                  "active": {
                                    "type": "boolean",
                                    "description": "Whether the deal is active or not"
                                  },
                                  "deleted": {
                                    "type": "boolean",
                                    "description": "Whether the deal is deleted or not"
                                  },
                                  "status": {
                                    "type": "string",
                                    "description": "The status of the deal"
                                  },
                                  "probability": {
                                    "type": "number",
                                    "nullable": true,
                                    "description": "The success probability percentage of the deal"
                                  },
                                  "next_activity_date": {
                                    "type": "string",
                                    "description": "The date of the next activity associated with the deal"
                                  },
                                  "next_activity_time": {
                                    "type": "string",
                                    "description": "The time of the next activity associated with the deal"
                                  },
                                  "next_activity_id": {
                                    "type": "integer",
                                    "nullable": true,
                                    "description": "The ID of the next activity associated with the deal"
                                  },
                                  "last_activity_id": {
                                    "type": "integer",
                                    "nullable": true,
                                    "description": "The ID of the last activity associated with the deal"
                                  },
                                  "last_activity_date": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The date of the last activity associated with the deal"
                                  },
                                  "lost_reason": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The reason for losing the deal"
                                  },
                                  "visible_to": {
                                    "type": "string",
                                    "description": "The visibility of the deal"
                                  },
                                  "close_time": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The date and time of closing the deal"
                                  },
                                  "pipeline_id": {
                                    "type": "integer",
                                    "description": "The ID of pipeline associated with the deal"
                                  },
                                  "won_time": {
                                    "type": "string",
                                    "description": "The date and time of changing the deal status as won"
                                  },
                                  "first_won_time": {
                                    "type": "string",
                                    "description": "The date and time of the first time changing the deal status as won"
                                  },
                                  "lost_time": {
                                    "type": "string",
                                    "description": "The date and time of changing the deal status as lost"
                                  },
                                  "products_count": {
                                    "type": "integer",
                                    "description": "The number of products associated with the deal"
                                  },
                                  "files_count": {
                                    "type": "integer",
                                    "description": "The number of files associated with the deal"
                                  },
                                  "notes_count": {
                                    "type": "integer",
                                    "description": "The number of notes associated with the deal"
                                  },
                                  "followers_count": {
                                    "type": "integer",
                                    "description": "The number of followers associated with the deal"
                                  },
                                  "email_messages_count": {
                                    "type": "integer",
                                    "description": "The number of emails associated with the deal"
                                  },
                                  "activities_count": {
                                    "type": "integer",
                                    "description": "The number of activities associated with the deal"
                                  },
                                  "done_activities_count": {
                                    "type": "integer",
                                    "description": "The number of completed activities associated with the deal"
                                  },
                                  "undone_activities_count": {
                                    "type": "integer",
                                    "description": "The number of incomplete activities associated with the deal"
                                  },
                                  "participants_count": {
                                    "type": "integer",
                                    "description": "The number of participants associated with the deal"
                                  },
                                  "expected_close_date": {
                                    "type": "string",
                                    "format": "date",
                                    "description": "The expected close date of the deal"
                                  },
                                  "last_incoming_mail_time": {
                                    "type": "string",
                                    "description": "The date and time of the last incoming email associated with the deal"
                                  },
                                  "last_outgoing_mail_time": {
                                    "type": "string",
                                    "description": "The date and time of the last outgoing email associated with the deal"
                                  },
                                  "label": {
                                    "type": "integer",
                                    "description": "The label assigned to the deal"
                                  },
                                  "stage_order_nr": {
                                    "type": "integer",
                                    "description": "The order number of the deal stage associated with the deal"
                                  },
                                  "person_name": {
                                    "type": "string",
                                    "description": "The name of the person associated with the deal"
                                  },
                                  "org_name": {
                                    "type": "string",
                                    "description": "The name of the organization associated with the deal"
                                  },
                                  "next_activity_subject": {
                                    "type": "string",
                                    "description": "The subject of the next activity associated with the deal"
                                  },
                                  "next_activity_type": {
                                    "type": "string",
                                    "description": "The type of the next activity associated with the deal"
                                  },
                                  "next_activity_duration": {
                                    "type": "string",
                                    "description": "The duration of the next activity associated with the deal"
                                  },
                                  "next_activity_note": {
                                    "type": "string",
                                    "description": "The note of the next activity associated with the deal"
                                  },
                                  "formatted_value": {
                                    "type": "string",
                                    "description": "The deal value formatted with selected currency. E.g. US$500"
                                  },
                                  "weighted_value": {
                                    "type": "number",
                                    "description": "Probability times deal value. Probability can either be deal probability or if not set, then stage probability."
                                  },
                                  "formatted_weighted_value": {
                                    "type": "string",
                                    "description": "The weighted_value formatted with selected currency. E.g. US$500"
                                  },
                                  "weighted_value_currency": {
                                    "type": "string",
                                    "description": "The currency associated with the deal"
                                  },
                                  "rotten_time": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The date and time of changing the deal status as rotten"
                                  },
                                  "owner_name": {
                                    "type": "string",
                                    "description": "The name of the deal owner"
                                  },
                                  "cc_email": {
                                    "type": "string",
                                    "description": "The BCC email of the deal"
                                  },
                                  "org_hidden": {
                                    "type": "boolean",
                                    "description": "If the organization that is associated with the deal is hidden or not"
                                  },
                                  "person_hidden": {
                                    "type": "boolean",
                                    "description": "If the person that is associated with the deal is hidden or not"
                                  }
                                }
                              }
                            ]
                          }
                        },
                        "totals": {
                          "type": "object",
                          "description": "The total values of deals for the given period",
                          "properties": {
                            "count": {
                              "type": "integer",
                              "description": "The number of deals for the given period"
                            },
                            "values": {
                              "type": "object",
                              "description": "The total values of deals grouped by deal currency"
                            },
                            "weighted_values": {
                              "type": "object",
                              "description": "The total weighted values of deals for the given period grouped by deal currency. The weighted value of a deal is calculated as probability times deal value."
                            },
                            "open_count": {
                              "type": "integer",
                              "description": "The number of open deals for the given period"
                            },
                            "open_values": {
                              "type": "object",
                              "description": "The total values of open deals for the given period grouped by deal currency"
                            },
                            "weighted_open_values": {
                              "type": "object",
                              "description": "The total weighted values of open deals for the given period grouped by deal currency. The weighted value of a deal is calculated as probability times deal value."
                            },
                            "won_count": {
                              "type": "integer",
                              "description": "The number of won deals for the given period"
                            },
                            "won_values": {
                              "type": "object",
                              "description": "The total values of won deals for the given period grouped by deal currency"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "success": true,
                  "data": {
                    "period_start": "2019-12-01 00:00:00",
                    "period_end": "2019-12-31 23:59:59",
                    "deals": [
                      {
                        "id": 1,
                        "creator_user_id": 8877,
                        "user_id": 8877,
                        "person_id": 1101,
                        "org_id": 5,
                        "stage_id": 2,
                        "title": "Deal One",
                        "value": 5000,
                        "currency": "EUR",
                        "add_time": "2019-05-29 04:21:51",
                        "update_time": "2019-11-28 16:19:50",
                        "stage_change_time": "2019-11-28 15:41:22",
                        "active": true,
                        "deleted": false,
                        "status": "open",
                        "probability": null,
                        "next_activity_date": "2019-11-29",
                        "next_activity_time": "11:30:00",
                        "next_activity_id": 128,
                        "last_activity_id": null,
                        "last_activity_date": null,
                        "lost_reason": null,
                        "visible_to": "1",
                        "close_time": null,
                        "pipeline_id": 1,
                        "won_time": "2019-11-27 11:40:36",
                        "first_won_time": "2019-11-27 11:40:36",
                        "lost_time": "",
                        "products_count": 0,
                        "files_count": 0,
                        "notes_count": 2,
                        "followers_count": 0,
                        "email_messages_count": 4,
                        "activities_count": 1,
                        "done_activities_count": 0,
                        "undone_activities_count": 1,
                        "participants_count": 1,
                        "expected_close_date": "2019-06-29",
                        "last_incoming_mail_time": "2019-05-29 18:21:42",
                        "last_outgoing_mail_time": "2019-05-30 03:45:35",
                        "label": 11,
                        "stage_order_nr": 2,
                        "person_name": "Person",
                        "org_name": "Organization",
                        "next_activity_subject": "Call",
                        "next_activity_type": "call",
                        "next_activity_duration": "00:30:00",
                        "next_activity_note": "Note content",
                        "formatted_value": "€5,000",
                        "weighted_value": 5000,
                        "formatted_weighted_value": "€5,000",
                        "weighted_value_currency": "EUR",
                        "rotten_time": null,
                        "owner_name": "Creator",
                        "cc_email": "company+deal1@pipedrivemail.com",
                        "org_hidden": false,
                        "person_hidden": false
                      }
                    ],
                    "totals": {
                      "count": 2,
                      "values": { "EUR": 100, "USD": 220 },
                      "weighted_values": { "EUR": 100, "USD": 2200 },
                      "open_count": 1,
                      "open_values": { "EUR": 100 },
                      "weighted_open_values": { "EUR": 100 },
                      "won_count": 1,
                      "won_values": { "USD": 2200 }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/deals/{id}": {
      "delete": {
        "summary": "Delete a deal",
        "description": "Marks a deal as deleted. After 30 days, the deal will be permanently deleted.",
        "operationId": "deleteDeal",
        "tags": [ "Deals" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the deal",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "Delete a deal",
            "content": {
              "application/json": {
                "schema": {
                  "title": "deleteDeal",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "If the request was successful or not"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "description": "The ID of the deal that was deleted"
                        }
                      }
                    }
                  }
                },
                "example": { "success": true, "data": { "id": 123 } }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get details of a deal",
        "description": "Returns the details of a specific deal. Note that this also returns some additional fields which are not present when asking for all deals – such as deal age and stay in pipeline stages. Also note that custom fields appear as long hashes in the resulting data. These hashes can be mapped against the `key` value of dealFields. For more information, see the tutorial for <a href=\"https://pipedrive.readme.io/docs/getting-details-of-a-deal\" target=\"_blank\" rel=\"noopener noreferrer\">getting details of a deal</a>.",
        "operationId": "getDeal",
        "tags": [ "Deals" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the deal",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "Get a deal by its ID",
            "content": {
              "application/json": {
                "schema": {
                  "title": "getDeal",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "If the response is successful or not"
                    },
                    "data": {
                      "title": "dealNonStrictWithDetails",
                      "allOf": [
                        {
                          "title": "dealNonStrict",
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "description": "The ID of the deal"
                                },
                                "creator_user_id": {
                                  "type": "object",
                                  "description": "The creator of the deal",
                                  "properties": {
                                    "id": {
                                      "type": "integer",
                                      "description": "The ID of the deal creator"
                                    },
                                    "name": {
                                      "type": "string",
                                      "description": "The name of the deal creator"
                                    },
                                    "email": {
                                      "type": "string",
                                      "description": "The email of the deal creator"
                                    },
                                    "has_pic": {
                                      "type": "boolean",
                                      "description": "If the creator has a picture or not"
                                    },
                                    "pic_hash": {
                                      "type": "string",
                                      "nullable": true,
                                      "description": "The creator picture hash"
                                    },
                                    "active_flag": {
                                      "type": "boolean",
                                      "description": "Whether the creator is active or not"
                                    },
                                    "value": {
                                      "type": "integer",
                                      "description": "The ID of the deal creator"
                                    }
                                  }
                                },
                                "user_id": {
                                  "title": "dealUserDataWithId",
                                  "allOf": [
                                    {
                                      "description": "The user who is associated with the deal",
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "integer",
                                          "description": "The ID of the user"
                                        },
                                        "name": {
                                          "type": "string",
                                          "description": "The name of the user"
                                        },
                                        "email": {
                                          "type": "string",
                                          "description": "The email of the user"
                                        },
                                        "has_pic": {
                                          "type": "boolean",
                                          "description": "If the user has a picture or not"
                                        },
                                        "pic_hash": {
                                          "type": "string",
                                          "nullable": true,
                                          "description": "The user picture hash"
                                        },
                                        "active_flag": {
                                          "type": "boolean",
                                          "description": "Whether the user is active or not"
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "value": {
                                          "type": "integer",
                                          "description": "The ID of the user"
                                        }
                                      }
                                    }
                                  ]
                                },
                                "person_id": {
                                  "title": "dealPersonDataWithId",
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "description": "The person who is associated with the deal",
                                      "properties": {
                                        "active_flag": {
                                          "type": "boolean",
                                          "description": "Whether the associated person is active or not"
                                        },
                                        "name": {
                                          "type": "string",
                                          "description": "The name of the person associated with the deal"
                                        },
                                        "email": {
                                          "type": "array",
                                          "description": "The emails of the person associated with the deal",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "label": {
                                                "type": "string",
                                                "description": "The type of the email"
                                              },
                                              "value": {
                                                "type": "string",
                                                "description": "The email of the associated person"
                                              },
                                              "primary": {
                                                "type": "boolean",
                                                "description": "If this is the primary email or not"
                                              }
                                            }
                                          }
                                        },
                                        "phone": {
                                          "type": "array",
                                          "description": "The phone numbers of the person associated with the deal",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "label": {
                                                "type": "string",
                                                "description": "The type of the phone number"
                                              },
                                              "value": {
                                                "type": "string",
                                                "description": "The phone number of the person associated with the deal"
                                              },
                                              "primary": {
                                                "type": "boolean",
                                                "description": "If this is the primary phone number or not"
                                              }
                                            }
                                          }
                                        },
                                        "owner_id": {
                                          "type": "integer",
                                          "description": "The ID of the owner of the person that is associated with the deal"
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "value": {
                                          "type": "integer",
                                          "description": "The ID of the person associated with the deal"
                                        }
                                      }
                                    }
                                  ]
                                },
                                "org_id": {
                                  "title": "dealOrganizationDataWithId",
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "description": "The organization which is associated with the deal",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "The name of the organization associated with the deal"
                                        },
                                        "people_count": {
                                          "type": "integer",
                                          "description": "The number of people connected with the organization that is associated with the deal"
                                        },
                                        "owner_id": {
                                          "type": "integer",
                                          "description": "The ID of the owner of the organization that is associated with the deal"
                                        },
                                        "address": {
                                          "type": "string",
                                          "description": "The address of the organization that is associated with the deal"
                                        },
                                        "active_flag": {
                                          "type": "boolean",
                                          "description": "Whether the associated organization is active or not"
                                        },
                                        "cc_email": {
                                          "type": "string",
                                          "description": "The BCC email of the organization associated with the deal"
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "value": {
                                          "type": "integer",
                                          "description": "The ID of the organization associated with the deal"
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            },
                            {
                              "title": "baseDeal",
                              "type": "object",
                              "properties": {
                                "stage_id": {
                                  "type": "integer",
                                  "description": "The ID of the deal stage"
                                },
                                "title": {
                                  "type": "string",
                                  "description": "The title of the deal"
                                },
                                "value": {
                                  "type": "number",
                                  "description": "The value of the deal"
                                },
                                "currency": {
                                  "type": "string",
                                  "description": "The currency associated with the deal"
                                },
                                "add_time": {
                                  "type": "string",
                                  "description": "The creation date and time of the deal"
                                },
                                "update_time": {
                                  "type": "string",
                                  "description": "The last updated date and time of the deal"
                                },
                                "stage_change_time": {
                                  "type": "string",
                                  "description": "The last updated date and time of the deal stage"
                                },
                                "active": {
                                  "type": "boolean",
                                  "description": "Whether the deal is active or not"
                                },
                                "deleted": {
                                  "type": "boolean",
                                  "description": "Whether the deal is deleted or not"
                                },
                                "status": {
                                  "type": "string",
                                  "description": "The status of the deal"
                                },
                                "probability": {
                                  "type": "number",
                                  "nullable": true,
                                  "description": "The success probability percentage of the deal"
                                },
                                "next_activity_date": {
                                  "type": "string",
                                  "description": "The date of the next activity associated with the deal"
                                },
                                "next_activity_time": {
                                  "type": "string",
                                  "description": "The time of the next activity associated with the deal"
                                },
                                "next_activity_id": {
                                  "type": "integer",
                                  "nullable": true,
                                  "description": "The ID of the next activity associated with the deal"
                                },
                                "last_activity_id": {
                                  "type": "integer",
                                  "nullable": true,
                                  "description": "The ID of the last activity associated with the deal"
                                },
                                "last_activity_date": {
                                  "type": "string",
                                  "nullable": true,
                                  "description": "The date of the last activity associated with the deal"
                                },
                                "lost_reason": {
                                  "type": "string",
                                  "nullable": true,
                                  "description": "The reason for losing the deal"
                                },
                                "visible_to": {
                                  "type": "string",
                                  "description": "The visibility of the deal"
                                },
                                "close_time": {
                                  "type": "string",
                                  "nullable": true,
                                  "description": "The date and time of closing the deal"
                                },
                                "pipeline_id": {
                                  "type": "integer",
                                  "description": "The ID of pipeline associated with the deal"
                                },
                                "won_time": {
                                  "type": "string",
                                  "description": "The date and time of changing the deal status as won"
                                },
                                "first_won_time": {
                                  "type": "string",
                                  "description": "The date and time of the first time changing the deal status as won"
                                },
                                "lost_time": {
                                  "type": "string",
                                  "description": "The date and time of changing the deal status as lost"
                                },
                                "products_count": {
                                  "type": "integer",
                                  "description": "The number of products associated with the deal"
                                },
                                "files_count": {
                                  "type": "integer",
                                  "description": "The number of files associated with the deal"
                                },
                                "notes_count": {
                                  "type": "integer",
                                  "description": "The number of notes associated with the deal"
                                },
                                "followers_count": {
                                  "type": "integer",
                                  "description": "The number of followers associated with the deal"
                                },
                                "email_messages_count": {
                                  "type": "integer",
                                  "description": "The number of emails associated with the deal"
                                },
                                "activities_count": {
                                  "type": "integer",
                                  "description": "The number of activities associated with the deal"
                                },
                                "done_activities_count": {
                                  "type": "integer",
                                  "description": "The number of completed activities associated with the deal"
                                },
                                "undone_activities_count": {
                                  "type": "integer",
                                  "description": "The number of incomplete activities associated with the deal"
                                },
                                "participants_count": {
                                  "type": "integer",
                                  "description": "The number of participants associated with the deal"
                                },
                                "expected_close_date": {
                                  "type": "string",
                                  "format": "date",
                                  "description": "The expected close date of the deal"
                                },
                                "last_incoming_mail_time": {
                                  "type": "string",
                                  "description": "The date and time of the last incoming email associated with the deal"
                                },
                                "last_outgoing_mail_time": {
                                  "type": "string",
                                  "description": "The date and time of the last outgoing email associated with the deal"
                                },
                                "label": {
                                  "type": "integer",
                                  "description": "The label assigned to the deal"
                                },
                                "stage_order_nr": {
                                  "type": "integer",
                                  "description": "The order number of the deal stage associated with the deal"
                                },
                                "person_name": {
                                  "type": "string",
                                  "description": "The name of the person associated with the deal"
                                },
                                "org_name": {
                                  "type": "string",
                                  "description": "The name of the organization associated with the deal"
                                },
                                "next_activity_subject": {
                                  "type": "string",
                                  "description": "The subject of the next activity associated with the deal"
                                },
                                "next_activity_type": {
                                  "type": "string",
                                  "description": "The type of the next activity associated with the deal"
                                },
                                "next_activity_duration": {
                                  "type": "string",
                                  "description": "The duration of the next activity associated with the deal"
                                },
                                "next_activity_note": {
                                  "type": "string",
                                  "description": "The note of the next activity associated with the deal"
                                },
                                "formatted_value": {
                                  "type": "string",
                                  "description": "The deal value formatted with selected currency. E.g. US$500"
                                },
                                "weighted_value": {
                                  "type": "number",
                                  "description": "Probability times deal value. Probability can either be deal probability or if not set, then stage probability."
                                },
                                "formatted_weighted_value": {
                                  "type": "string",
                                  "description": "The weighted_value formatted with selected currency. E.g. US$500"
                                },
                                "weighted_value_currency": {
                                  "type": "string",
                                  "description": "The currency associated with the deal"
                                },
                                "rotten_time": {
                                  "type": "string",
                                  "nullable": true,
                                  "description": "The date and time of changing the deal status as rotten"
                                },
                                "owner_name": {
                                  "type": "string",
                                  "description": "The name of the deal owner"
                                },
                                "cc_email": {
                                  "type": "string",
                                  "description": "The BCC email of the deal"
                                },
                                "org_hidden": {
                                  "type": "boolean",
                                  "description": "If the organization that is associated with the deal is hidden or not"
                                },
                                "person_hidden": {
                                  "type": "boolean",
                                  "description": "If the person that is associated with the deal is hidden or not"
                                }
                              }
                            }
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "average_time_to_won": {
                              "type": "object",
                              "description": "The average time to win the deal",
                              "properties": {
                                "y": {
                                  "type": "integer",
                                  "description": "Years"
                                },
                                "m": {
                                  "type": "integer",
                                  "description": "Months"
                                },
                                "d": {
                                  "type": "integer",
                                  "description": "Days"
                                },
                                "h": {
                                  "type": "integer",
                                  "description": "Hours"
                                },
                                "i": {
                                  "type": "integer",
                                  "description": "Minutes"
                                },
                                "s": {
                                  "type": "integer",
                                  "description": "Seconds"
                                },
                                "total_seconds": {
                                  "type": "integer",
                                  "description": "The total time in seconds"
                                }
                              }
                            },
                            "average_stage_progress": {
                              "type": "number",
                              "description": "The average of the deal stage progression"
                            },
                            "age": {
                              "type": "object",
                              "description": "The lifetime of the deal",
                              "properties": {
                                "y": {
                                  "type": "integer",
                                  "description": "Years"
                                },
                                "m": {
                                  "type": "integer",
                                  "description": "Months"
                                },
                                "d": {
                                  "type": "integer",
                                  "description": "Days"
                                },
                                "h": {
                                  "type": "integer",
                                  "description": "Hours"
                                },
                                "i": {
                                  "type": "integer",
                                  "description": "Minutes"
                                },
                                "s": {
                                  "type": "integer",
                                  "description": "Seconds"
                                },
                                "total_seconds": {
                                  "type": "integer",
                                  "description": "The total time in seconds"
                                }
                              }
                            },
                            "stay_in_pipeline_stages": {
                              "type": "object",
                              "description": "The details of the duration of the deal being in each stage of the pipeline",
                              "properties": {
                                "times_in_stages": {
                                  "type": "object",
                                  "description": "The number of seconds a deal has been in each stage of the pipeline"
                                },
                                "order_of_stages": {
                                  "type": "array",
                                  "description": "The order of the deal progression through the pipeline stages",
                                  "items": { "type": "integer" }
                                }
                              }
                            },
                            "last_activity": {
                              "type": "object",
                              "nullable": true,
                              "description": "The details of the last activity associated with the deal"
                            },
                            "next_activity": {
                              "type": "object",
                              "nullable": true,
                              "description": "The details of the next activity associated with the deal"
                            }
                          }
                        }
                      ]
                    },
                    "additional_data": {
                      "type": "object",
                      "properties": {
                        "dropbox_email": {
                          "type": "string",
                          "description": "The BCC email of the deal"
                        }
                      }
                    },
                    "related_objects": {
                      "type": "object",
                      "properties": {
                        "user": {
                          "description": "The user who is associated with the deal",
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "description": "The ID of the user"
                            },
                            "name": {
                              "type": "string",
                              "description": "The name of the user"
                            },
                            "email": {
                              "type": "string",
                              "description": "The email of the user"
                            },
                            "has_pic": {
                              "type": "boolean",
                              "description": "If the user has a picture or not"
                            },
                            "pic_hash": {
                              "type": "string",
                              "nullable": true,
                              "description": "The user picture hash"
                            },
                            "active_flag": {
                              "type": "boolean",
                              "description": "Whether the user is active or not"
                            }
                          }
                        },
                        "organization": {
                          "type": "object",
                          "description": "The organization which is associated with the deal",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "The name of the organization associated with the deal"
                            },
                            "people_count": {
                              "type": "integer",
                              "description": "The number of people connected with the organization that is associated with the deal"
                            },
                            "owner_id": {
                              "type": "integer",
                              "description": "The ID of the owner of the organization that is associated with the deal"
                            },
                            "address": {
                              "type": "string",
                              "description": "The address of the organization that is associated with the deal"
                            },
                            "active_flag": {
                              "type": "boolean",
                              "description": "Whether the associated organization is active or not"
                            },
                            "cc_email": {
                              "type": "string",
                              "description": "The BCC email of the organization associated with the deal"
                            }
                          }
                        },
                        "person": {
                          "type": "object",
                          "description": "The person who is associated with the deal",
                          "properties": {
                            "active_flag": {
                              "type": "boolean",
                              "description": "Whether the associated person is active or not"
                            },
                            "name": {
                              "type": "string",
                              "description": "The name of the person associated with the deal"
                            },
                            "email": {
                              "type": "array",
                              "description": "The emails of the person associated with the deal",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "label": {
                                    "type": "string",
                                    "description": "The type of the email"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "The email of the associated person"
                                  },
                                  "primary": {
                                    "type": "boolean",
                                    "description": "If this is the primary email or not"
                                  }
                                }
                              }
                            },
                            "phone": {
                              "type": "array",
                              "description": "The phone numbers of the person associated with the deal",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "label": {
                                    "type": "string",
                                    "description": "The type of the phone number"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "The phone number of the person associated with the deal"
                                  },
                                  "primary": {
                                    "type": "boolean",
                                    "description": "If this is the primary phone number or not"
                                  }
                                }
                              }
                            },
                            "owner_id": {
                              "type": "integer",
                              "description": "The ID of the owner of the person that is associated with the deal"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "success": true,
                  "data": {
                    "id": 1,
                    "creator_user_id": {
                      "id": 8877,
                      "name": "Creator",
                      "email": "john.doe@pipedrive.com",
                      "has_pic": false,
                      "pic_hash": null,
                      "active_flag": true,
                      "value": 8877
                    },
                    "user_id": {
                      "id": 8877,
                      "name": "Creator",
                      "email": "john.doe@pipedrive.com",
                      "has_pic": false,
                      "pic_hash": null,
                      "active_flag": true,
                      "value": 8877
                    },
                    "person_id": {
                      "active_flag": true,
                      "name": "Person",
                      "email": [
                        {
                          "label": "work",
                          "value": "person@pipedrive.com",
                          "primary": true
                        }
                      ],
                      "phone": [
                        {
                          "label": "work",
                          "value": "37244499911",
                          "primary": true
                        }
                      ],
                      "value": 1101
                    },
                    "org_id": {
                      "name": "Organization",
                      "people_count": 2,
                      "owner_id": 8877,
                      "address": "",
                      "active_flag": true,
                      "cc_email": "org@pipedrivemail.com",
                      "value": 5
                    },
                    "stage_id": 2,
                    "title": "Deal One",
                    "value": 5000,
                    "currency": "EUR",
                    "add_time": "2019-05-29 04:21:51",
                    "update_time": "2019-11-28 16:19:50",
                    "stage_change_time": "2019-11-28 15:41:22",
                    "active": true,
                    "deleted": false,
                    "status": "open",
                    "probability": null,
                    "next_activity_date": "2019-11-29",
                    "next_activity_time": "11:30:00",
                    "next_activity_id": 128,
                    "last_activity_id": null,
                    "last_activity_date": null,
                    "lost_reason": null,
                    "visible_to": "1",
                    "close_time": null,
                    "pipeline_id": 1,
                    "won_time": "2019-11-27 11:40:36",
                    "first_won_time": "2019-11-27 11:40:36",
                    "lost_time": "",
                    "products_count": 0,
                    "files_count": 0,
                    "notes_count": 2,
                    "followers_count": 0,
                    "email_messages_count": 4,
                    "activities_count": 1,
                    "done_activities_count": 0,
                    "undone_activities_count": 1,
                    "participants_count": 1,
                    "expected_close_date": "2019-06-29",
                    "last_incoming_mail_time": "2019-05-29 18:21:42",
                    "last_outgoing_mail_time": "2019-05-30 03:45:35",
                    "label": 11,
                    "stage_order_nr": 2,
                    "person_name": "Person",
                    "org_name": "Organization",
                    "next_activity_subject": "Call",
                    "next_activity_type": "call",
                    "next_activity_duration": "00:30:00",
                    "next_activity_note": "Note content",
                    "formatted_value": "€5,000",
                    "weighted_value": 5000,
                    "formatted_weighted_value": "€5,000",
                    "weighted_value_currency": "EUR",
                    "rotten_time": null,
                    "owner_name": "Creator",
                    "cc_email": "company+deal1@pipedrivemail.com",
                    "org_hidden": false,
                    "person_hidden": false,
                    "average_time_to_won": {
                      "y": 0,
                      "m": 0,
                      "d": 0,
                      "h": 0,
                      "i": 20,
                      "s": 49,
                      "total_seconds": 1249
                    },
                    "average_stage_progress": 4.99,
                    "age": {
                      "y": 0,
                      "m": 6,
                      "d": 14,
                      "h": 8,
                      "i": 57,
                      "s": 26,
                      "total_seconds": 17139446
                    },
                    "stay_in_pipeline_stages": {
                      "times_in_stages": {
                        "1": 15721267,
                        "2": 1288449,
                        "3": 4368,
                        "4": 3315,
                        "5": 26460
                      },
                      "order_of_stages": [ 1, 2, 3, 4, 5 ]
                    },
                    "last_activity": null,
                    "next_activity": null
                  },
                  "additional_data": {
                    "dropbox_email": "company+deal1@pipedrivemail.com"
                  },
                  "related_objects": {
                    "user": {
                      "8877": {
                        "id": 8877,
                        "name": "Creator",
                        "email": "john.doe@pipedrive.com",
                        "has_pic": false,
                        "pic_hash": null,
                        "active_flag": true
                      }
                    },
                    "organization": {
                      "2": {
                        "id": 2,
                        "name": "Organization",
                        "people_count": 2,
                        "owner_id": 8877,
                        "address": "Mustamäe tee 3a, 10615 Tallinn",
                        "active_flag": true,
                        "cc_email": "org@pipedrivemail.com"
                      }
                    },
                    "person": {
                      "1101": {
                        "active_flag": true,
                        "id": 1101,
                        "name": "Person",
                        "email": [
                          {
                            "label": "work",
                            "value": "person@pipedrive.com",
                            "primary": true
                          }
                        ],
                        "phone": [
                          {
                            "label": "work",
                            "value": "3421787767",
                            "primary": true
                          }
                        ],
                        "owner_id": 8877
                      }
                    },
                    "stage": {
                      "2": {
                        "id": 2,
                        "company_id": 123,
                        "order_nr": 1,
                        "name": "Stage Name",
                        "active_flag": true,
                        "deal_probability": 100,
                        "pipeline_id": 1,
                        "rotten_flag": false,
                        "rotten_days": null,
                        "add_time": "2015-12-08 13:54:06",
                        "update_time": "2015-12-08 13:54:06",
                        "pipeline_name": "Pipeline",
                        "pipeline_deal_probability": true
                      }
                    },
                    "pipeline": {
                      "1": {
                        "id": 1,
                        "name": "Pipeline",
                        "url_title": "Pipeline",
                        "order_nr": 0,
                        "active": true,
                        "deal_probability": true,
                        "add_time": "2015-12-08 10:00:24",
                        "update_time": "2015-12-08 10:00:24"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update a deal",
        "description": "Updates the properties of a deal. For more information, see the tutorial for <a href=\"https://pipedrive.readme.io/docs/updating-a-deal\" target=\"_blank\" rel=\"noopener noreferrer\">updating a deal</a>.",
        "operationId": "updateDeal",
        "tags": [ "Deals" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the deal",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "updateDealRequest",
                "type": "object",
                "allOf": [
                  {
                    "title": "dealTitleParam",
                    "type": "object",
                    "properties": {
                      "title": {
                        "type": "string",
                        "description": "The title of the deal"
                      }
                    }
                  },
                  {
                    "title": "basicDeal",
                    "type": "object",
                    "properties": {
                      "value": {
                        "type": "string",
                        "description": "The value of the deal. If omitted, value will be set to 0."
                      },
                      "currency": {
                        "type": "string",
                        "description": "The currency of the deal. Accepts a 3-character currency code. If omitted, currency will be set to the default currency of the authorized user."
                      },
                      "user_id": {
                        "type": "integer",
                        "description": "The ID of the user which will be the owner of the created deal. If not provided, the user making the request will be used."
                      },
                      "person_id": {
                        "type": "integer",
                        "description": "The ID of a person which this deal will be linked to. If the person does not exist yet, it needs to be created first. This property is required unless `org_id` is specified."
                      },
                      "org_id": {
                        "type": "integer",
                        "description": "The ID of an organization which this deal will be linked to. If the organization does not exist yet, it needs to be created first. This property is required unless `person_id` is specified."
                      },
                      "pipeline_id": {
                        "type": "integer",
                        "description": "The ID of the pipeline this deal will be added to. By default, the deal will be added to the first stage of the specified pipeline. Please note that `pipeline_id` and `stage_id` should not be used together as `pipeline_id` will be ignored."
                      },
                      "stage_id": {
                        "type": "integer",
                        "description": "The ID of the stage this deal will be added to. Please note that a pipeline will be assigned automatically based on the `stage_id`. If omitted, the deal will be placed in the first stage of the default pipeline."
                      },
                      "status": {
                        "type": "string",
                        "enum": [ "open", "won", "lost", "deleted" ],
                        "description": "open = Open, won = Won, lost = Lost, deleted = Deleted. If omitted, status will be set to open."
                      },
                      "expected_close_date": {
                        "type": "string",
                        "format": "date",
                        "description": "The expected close date of the deal. In ISO 8601 format: YYYY-MM-DD."
                      },
                      "probability": {
                        "type": "number",
                        "description": "The success probability percentage of the deal. Used/shown only when `deal_probability` for the pipeline of the deal is enabled."
                      },
                      "lost_reason": {
                        "type": "string",
                        "description": "The optional message about why the deal was lost (to be used when status = lost)"
                      },
                      "visible_to": {
                        "type": "string",
                        "allOf": [
                          { "type": "string", "enum": [ "1", "3", "5", "7" ] }
                        ],
                        "description": "The visibility of the deal. If omitted, the visibility will be set to the default visibility setting of this item type for the authorized user. Read more about visibility groups <a href=\"https://support.pipedrive.com/en/article/visibility-groups\" target=\"_blank\" rel=\"noopener noreferrer\">here</a>.<h4>Essential / Advanced plan</h4><table><tr><th style=\"width:40px\">Value</th><th>Description</th></tr><tr><td>`1`</td><td>Owner &amp; followers</td><tr><td>`3`</td><td>Entire company</td></tr></table><h4>Professional / Enterprise plan</h4><table><tr><th style=\"width:40px\">Value</th><th>Description</th></tr><tr><td>`1`</td><td>Owner only</td><tr><td>`3`</td><td>Owner's visibility group</td></tr><tr><td>`5`</td><td>Owner's visibility group and sub-groups</td></tr><tr><td>`7`</td><td>Entire company</td></tr></table>"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Add a deal",
            "content": {
              "application/json": {
                "schema": {
                  "title": "deal",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "If the response is successful or not"
                    },
                    "data": {
                      "description": "The deal object",
                      "allOf": [
                        {
                          "title": "dealNonStrict",
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "description": "The ID of the deal"
                                },
                                "creator_user_id": {
                                  "type": "object",
                                  "description": "The creator of the deal",
                                  "properties": {
                                    "id": {
                                      "type": "integer",
                                      "description": "The ID of the deal creator"
                                    },
                                    "name": {
                                      "type": "string",
                                      "description": "The name of the deal creator"
                                    },
                                    "email": {
                                      "type": "string",
                                      "description": "The email of the deal creator"
                                    },
                                    "has_pic": {
                                      "type": "boolean",
                                      "description": "If the creator has a picture or not"
                                    },
                                    "pic_hash": {
                                      "type": "string",
                                      "nullable": true,
                                      "description": "The creator picture hash"
                                    },
                                    "active_flag": {
                                      "type": "boolean",
                                      "description": "Whether the creator is active or not"
                                    },
                                    "value": {
                                      "type": "integer",
                                      "description": "The ID of the deal creator"
                                    }
                                  }
                                },
                                "user_id": {
                                  "title": "dealUserDataWithId",
                                  "allOf": [
                                    {
                                      "description": "The user who is associated with the deal",
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "integer",
                                          "description": "The ID of the user"
                                        },
                                        "name": {
                                          "type": "string",
                                          "description": "The name of the user"
                                        },
                                        "email": {
                                          "type": "string",
                                          "description": "The email of the user"
                                        },
                                        "has_pic": {
                                          "type": "boolean",
                                          "description": "If the user has a picture or not"
                                        },
                                        "pic_hash": {
                                          "type": "string",
                                          "nullable": true,
                                          "description": "The user picture hash"
                                        },
                                        "active_flag": {
                                          "type": "boolean",
                                          "description": "Whether the user is active or not"
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "value": {
                                          "type": "integer",
                                          "description": "The ID of the user"
                                        }
                                      }
                                    }
                                  ]
                                },
                                "person_id": {
                                  "title": "dealPersonDataWithId",
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "description": "The person who is associated with the deal",
                                      "properties": {
                                        "active_flag": {
                                          "type": "boolean",
                                          "description": "Whether the associated person is active or not"
                                        },
                                        "name": {
                                          "type": "string",
                                          "description": "The name of the person associated with the deal"
                                        },
                                        "email": {
                                          "type": "array",
                                          "description": "The emails of the person associated with the deal",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "label": {
                                                "type": "string",
                                                "description": "The type of the email"
                                              },
                                              "value": {
                                                "type": "string",
                                                "description": "The email of the associated person"
                                              },
                                              "primary": {
                                                "type": "boolean",
                                                "description": "If this is the primary email or not"
                                              }
                                            }
                                          }
                                        },
                                        "phone": {
                                          "type": "array",
                                          "description": "The phone numbers of the person associated with the deal",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "label": {
                                                "type": "string",
                                                "description": "The type of the phone number"
                                              },
                                              "value": {
                                                "type": "string",
                                                "description": "The phone number of the person associated with the deal"
                                              },
                                              "primary": {
                                                "type": "boolean",
                                                "description": "If this is the primary phone number or not"
                                              }
                                            }
                                          }
                                        },
                                        "owner_id": {
                                          "type": "integer",
                                          "description": "The ID of the owner of the person that is associated with the deal"
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "value": {
                                          "type": "integer",
                                          "description": "The ID of the person associated with the deal"
                                        }
                                      }
                                    }
                                  ]
                                },
                                "org_id": {
                                  "title": "dealOrganizationDataWithId",
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "description": "The organization which is associated with the deal",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "The name of the organization associated with the deal"
                                        },
                                        "people_count": {
                                          "type": "integer",
                                          "description": "The number of people connected with the organization that is associated with the deal"
                                        },
                                        "owner_id": {
                                          "type": "integer",
                                          "description": "The ID of the owner of the organization that is associated with the deal"
                                        },
                                        "address": {
                                          "type": "string",
                                          "description": "The address of the organization that is associated with the deal"
                                        },
                                        "active_flag": {
                                          "type": "boolean",
                                          "description": "Whether the associated organization is active or not"
                                        },
                                        "cc_email": {
                                          "type": "string",
                                          "description": "The BCC email of the organization associated with the deal"
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "value": {
                                          "type": "integer",
                                          "description": "The ID of the organization associated with the deal"
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            },
                            {
                              "title": "baseDeal",
                              "type": "object",
                              "properties": {
                                "stage_id": {
                                  "type": "integer",
                                  "description": "The ID of the deal stage"
                                },
                                "title": {
                                  "type": "string",
                                  "description": "The title of the deal"
                                },
                                "value": {
                                  "type": "number",
                                  "description": "The value of the deal"
                                },
                                "currency": {
                                  "type": "string",
                                  "description": "The currency associated with the deal"
                                },
                                "add_time": {
                                  "type": "string",
                                  "description": "The creation date and time of the deal"
                                },
                                "update_time": {
                                  "type": "string",
                                  "description": "The last updated date and time of the deal"
                                },
                                "stage_change_time": {
                                  "type": "string",
                                  "description": "The last updated date and time of the deal stage"
                                },
                                "active": {
                                  "type": "boolean",
                                  "description": "Whether the deal is active or not"
                                },
                                "deleted": {
                                  "type": "boolean",
                                  "description": "Whether the deal is deleted or not"
                                },
                                "status": {
                                  "type": "string",
                                  "description": "The status of the deal"
                                },
                                "probability": {
                                  "type": "number",
                                  "nullable": true,
                                  "description": "The success probability percentage of the deal"
                                },
                                "next_activity_date": {
                                  "type": "string",
                                  "description": "The date of the next activity associated with the deal"
                                },
                                "next_activity_time": {
                                  "type": "string",
                                  "description": "The time of the next activity associated with the deal"
                                },
                                "next_activity_id": {
                                  "type": "integer",
                                  "nullable": true,
                                  "description": "The ID of the next activity associated with the deal"
                                },
                                "last_activity_id": {
                                  "type": "integer",
                                  "nullable": true,
                                  "description": "The ID of the last activity associated with the deal"
                                },
                                "last_activity_date": {
                                  "type": "string",
                                  "nullable": true,
                                  "description": "The date of the last activity associated with the deal"
                                },
                                "lost_reason": {
                                  "type": "string",
                                  "nullable": true,
                                  "description": "The reason for losing the deal"
                                },
                                "visible_to": {
                                  "type": "string",
                                  "description": "The visibility of the deal"
                                },
                                "close_time": {
                                  "type": "string",
                                  "nullable": true,
                                  "description": "The date and time of closing the deal"
                                },
                                "pipeline_id": {
                                  "type": "integer",
                                  "description": "The ID of pipeline associated with the deal"
                                },
                                "won_time": {
                                  "type": "string",
                                  "description": "The date and time of changing the deal status as won"
                                },
                                "first_won_time": {
                                  "type": "string",
                                  "description": "The date and time of the first time changing the deal status as won"
                                },
                                "lost_time": {
                                  "type": "string",
                                  "description": "The date and time of changing the deal status as lost"
                                },
                                "products_count": {
                                  "type": "integer",
                                  "description": "The number of products associated with the deal"
                                },
                                "files_count": {
                                  "type": "integer",
                                  "description": "The number of files associated with the deal"
                                },
                                "notes_count": {
                                  "type": "integer",
                                  "description": "The number of notes associated with the deal"
                                },
                                "followers_count": {
                                  "type": "integer",
                                  "description": "The number of followers associated with the deal"
                                },
                                "email_messages_count": {
                                  "type": "integer",
                                  "description": "The number of emails associated with the deal"
                                },
                                "activities_count": {
                                  "type": "integer",
                                  "description": "The number of activities associated with the deal"
                                },
                                "done_activities_count": {
                                  "type": "integer",
                                  "description": "The number of completed activities associated with the deal"
                                },
                                "undone_activities_count": {
                                  "type": "integer",
                                  "description": "The number of incomplete activities associated with the deal"
                                },
                                "participants_count": {
                                  "type": "integer",
                                  "description": "The number of participants associated with the deal"
                                },
                                "expected_close_date": {
                                  "type": "string",
                                  "format": "date",
                                  "description": "The expected close date of the deal"
                                },
                                "last_incoming_mail_time": {
                                  "type": "string",
                                  "description": "The date and time of the last incoming email associated with the deal"
                                },
                                "last_outgoing_mail_time": {
                                  "type": "string",
                                  "description": "The date and time of the last outgoing email associated with the deal"
                                },
                                "label": {
                                  "type": "integer",
                                  "description": "The label assigned to the deal"
                                },
                                "stage_order_nr": {
                                  "type": "integer",
                                  "description": "The order number of the deal stage associated with the deal"
                                },
                                "person_name": {
                                  "type": "string",
                                  "description": "The name of the person associated with the deal"
                                },
                                "org_name": {
                                  "type": "string",
                                  "description": "The name of the organization associated with the deal"
                                },
                                "next_activity_subject": {
                                  "type": "string",
                                  "description": "The subject of the next activity associated with the deal"
                                },
                                "next_activity_type": {
                                  "type": "string",
                                  "description": "The type of the next activity associated with the deal"
                                },
                                "next_activity_duration": {
                                  "type": "string",
                                  "description": "The duration of the next activity associated with the deal"
                                },
                                "next_activity_note": {
                                  "type": "string",
                                  "description": "The note of the next activity associated with the deal"
                                },
                                "formatted_value": {
                                  "type": "string",
                                  "description": "The deal value formatted with selected currency. E.g. US$500"
                                },
                                "weighted_value": {
                                  "type": "number",
                                  "description": "Probability times deal value. Probability can either be deal probability or if not set, then stage probability."
                                },
                                "formatted_weighted_value": {
                                  "type": "string",
                                  "description": "The weighted_value formatted with selected currency. E.g. US$500"
                                },
                                "weighted_value_currency": {
                                  "type": "string",
                                  "description": "The currency associated with the deal"
                                },
                                "rotten_time": {
                                  "type": "string",
                                  "nullable": true,
                                  "description": "The date and time of changing the deal status as rotten"
                                },
                                "owner_name": {
                                  "type": "string",
                                  "description": "The name of the deal owner"
                                },
                                "cc_email": {
                                  "type": "string",
                                  "description": "The BCC email of the deal"
                                },
                                "org_hidden": {
                                  "type": "boolean",
                                  "description": "If the organization that is associated with the deal is hidden or not"
                                },
                                "person_hidden": {
                                  "type": "boolean",
                                  "description": "If the person that is associated with the deal is hidden or not"
                                }
                              }
                            }
                          ]
                        }
                      ]
                    },
                    "related_objects": {
                      "type": "object",
                      "properties": {
                        "user": {
                          "description": "The user who is associated with the deal",
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "description": "The ID of the user"
                            },
                            "name": {
                              "type": "string",
                              "description": "The name of the user"
                            },
                            "email": {
                              "type": "string",
                              "description": "The email of the user"
                            },
                            "has_pic": {
                              "type": "boolean",
                              "description": "If the user has a picture or not"
                            },
                            "pic_hash": {
                              "type": "string",
                              "nullable": true,
                              "description": "The user picture hash"
                            },
                            "active_flag": {
                              "type": "boolean",
                              "description": "Whether the user is active or not"
                            }
                          }
                        },
                        "organization": {
                          "type": "object",
                          "description": "The organization which is associated with the deal",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "The name of the organization associated with the deal"
                            },
                            "people_count": {
                              "type": "integer",
                              "description": "The number of people connected with the organization that is associated with the deal"
                            },
                            "owner_id": {
                              "type": "integer",
                              "description": "The ID of the owner of the organization that is associated with the deal"
                            },
                            "address": {
                              "type": "string",
                              "description": "The address of the organization that is associated with the deal"
                            },
                            "active_flag": {
                              "type": "boolean",
                              "description": "Whether the associated organization is active or not"
                            },
                            "cc_email": {
                              "type": "string",
                              "description": "The BCC email of the organization associated with the deal"
                            }
                          }
                        },
                        "person": {
                          "type": "object",
                          "description": "The person who is associated with the deal",
                          "properties": {
                            "active_flag": {
                              "type": "boolean",
                              "description": "Whether the associated person is active or not"
                            },
                            "name": {
                              "type": "string",
                              "description": "The name of the person associated with the deal"
                            },
                            "email": {
                              "type": "array",
                              "description": "The emails of the person associated with the deal",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "label": {
                                    "type": "string",
                                    "description": "The type of the email"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "The email of the associated person"
                                  },
                                  "primary": {
                                    "type": "boolean",
                                    "description": "If this is the primary email or not"
                                  }
                                }
                              }
                            },
                            "phone": {
                              "type": "array",
                              "description": "The phone numbers of the person associated with the deal",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "label": {
                                    "type": "string",
                                    "description": "The type of the phone number"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "The phone number of the person associated with the deal"
                                  },
                                  "primary": {
                                    "type": "boolean",
                                    "description": "If this is the primary phone number or not"
                                  }
                                }
                              }
                            },
                            "owner_id": {
                              "type": "integer",
                              "description": "The ID of the owner of the person that is associated with the deal"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "success": true,
                  "data": {
                    "id": 1,
                    "creator_user_id": {
                      "id": 8877,
                      "name": "Creator",
                      "email": "john.doe@pipedrive.com",
                      "has_pic": false,
                      "pic_hash": null,
                      "active_flag": true,
                      "value": 8877
                    },
                    "user_id": {
                      "id": 8877,
                      "name": "Creator",
                      "email": "john.doe@pipedrive.com",
                      "has_pic": false,
                      "pic_hash": null,
                      "active_flag": true,
                      "value": 8877
                    },
                    "person_id": {
                      "active_flag": true,
                      "name": "Person",
                      "email": [
                        {
                          "label": "work",
                          "value": "person@pipedrive.com",
                          "primary": true
                        }
                      ],
                      "phone": [
                        {
                          "label": "work",
                          "value": "37244499911",
                          "primary": true
                        }
                      ],
                      "value": 1101
                    },
                    "org_id": {
                      "name": "Organization",
                      "people_count": 2,
                      "owner_id": 8877,
                      "address": "",
                      "active_flag": true,
                      "cc_email": "org@pipedrivemail.com",
                      "value": 5
                    },
                    "stage_id": 2,
                    "title": "Deal One",
                    "value": 5000,
                    "currency": "EUR",
                    "add_time": "2019-05-29 04:21:51",
                    "update_time": "2019-11-28 16:19:50",
                    "stage_change_time": "2019-11-28 15:41:22",
                    "active": true,
                    "deleted": false,
                    "status": "open",
                    "probability": null,
                    "next_activity_date": "2019-11-29",
                    "next_activity_time": "11:30:00",
                    "next_activity_id": 128,
                    "last_activity_id": null,
                    "last_activity_date": null,
                    "lost_reason": null,
                    "visible_to": "1",
                    "close_time": null,
                    "pipeline_id": 1,
                    "won_time": "2019-11-27 11:40:36",
                    "first_won_time": "2019-11-27 11:40:36",
                    "lost_time": "",
                    "products_count": 0,
                    "files_count": 0,
                    "notes_count": 2,
                    "followers_count": 0,
                    "email_messages_count": 4,
                    "activities_count": 1,
                    "done_activities_count": 0,
                    "undone_activities_count": 1,
                    "participants_count": 1,
                    "expected_close_date": "2019-06-29",
                    "last_incoming_mail_time": "2019-05-29 18:21:42",
                    "last_outgoing_mail_time": "2019-05-30 03:45:35",
                    "label": 11,
                    "stage_order_nr": 2,
                    "person_name": "Person",
                    "org_name": "Organization",
                    "next_activity_subject": "Call",
                    "next_activity_type": "call",
                    "next_activity_duration": "00:30:00",
                    "next_activity_note": "Note content",
                    "formatted_value": "€5,000",
                    "weighted_value": 5000,
                    "formatted_weighted_value": "€5,000",
                    "weighted_value_currency": "EUR",
                    "rotten_time": null,
                    "owner_name": "Creator",
                    "cc_email": "company+deal1@pipedrivemail.com",
                    "org_hidden": false,
                    "person_hidden": false
                  },
                  "related_objects": {
                    "user": {
                      "8877": {
                        "id": 8877,
                        "name": "Creator",
                        "email": "john.doe@pipedrive.com",
                        "has_pic": false,
                        "pic_hash": null,
                        "active_flag": true
                      }
                    },
                    "organization": {
                      "2": {
                        "id": 2,
                        "name": "Organization",
                        "people_count": 2,
                        "owner_id": 8877,
                        "address": "Mustamäe tee 3a, 10615 Tallinn",
                        "active_flag": true,
                        "cc_email": "org@pipedrivemail.com"
                      }
                    },
                    "person": {
                      "1101": {
                        "active_flag": true,
                        "id": 1101,
                        "name": "Person",
                        "email": [
                          {
                            "label": "work",
                            "value": "person@pipedrive.com",
                            "primary": true
                          }
                        ],
                        "phone": [
                          {
                            "label": "work",
                            "value": "3421787767",
                            "primary": true
                          }
                        ],
                        "owner_id": 8877
                      }
                    },
                    "stage": {
                      "2": {
                        "id": 2,
                        "company_id": 123,
                        "order_nr": 1,
                        "name": "Stage Name",
                        "active_flag": true,
                        "deal_probability": 100,
                        "pipeline_id": 1,
                        "rotten_flag": false,
                        "rotten_days": null,
                        "add_time": "2015-12-08 13:54:06",
                        "update_time": "2015-12-08 13:54:06",
                        "pipeline_name": "Pipeline",
                        "pipeline_deal_probability": true
                      }
                    },
                    "pipeline": {
                      "1": {
                        "id": 1,
                        "name": "Pipeline",
                        "url_title": "Pipeline",
                        "order_nr": 0,
                        "active": true,
                        "deal_probability": true,
                        "add_time": "2015-12-08 10:00:24",
                        "update_time": "2015-12-08 10:00:24"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/deals/{id}/activities": {
      "get": {
        "summary": "List activities associated with a deal",
        "description": "Lists activities associated with a deal.",
        "operationId": "getDealActivities",
        "tags": [ "Deals" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the deal",
            "required": true,
            "schema": { "type": "integer" }
          },
          {
            "in": "query",
            "name": "start",
            "description": "Pagination start",
            "schema": { "type": "integer", "default": 0 }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Items shown per page",
            "schema": { "type": "integer" }
          },
          {
            "in": "query",
            "name": "done",
            "schema": {
              "title": "numberBoolean",
              "type": "number",
              "enum": [ 0, 1 ]
            },
            "description": "Whether the activity is done or not. 0 = Not done, 1 = Done. If omitted, returns both Done and Not done activities."
          },
          {
            "in": "query",
            "name": "exclude",
            "schema": { "type": "string" },
            "description": "A comma-separated string of activity IDs to exclude from result"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "getDealActivities",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "title": "activityResponseObject",
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "due_date": {
                                    "description": "The due date of the activity. Format: YYYY-MM-DD",
                                    "type": "string",
                                    "format": "date"
                                  },
                                  "due_time": {
                                    "description": "The due time of the activity in UTC. Format: HH:MM",
                                    "type": "string"
                                  },
                                  "duration": {
                                    "description": "The duration of the activity. Format: HH:MM",
                                    "type": "string"
                                  },
                                  "deal_id": {
                                    "description": "The ID of the deal this activity is associated with",
                                    "type": "integer"
                                  },
                                  "lead_id": {
                                    "description": "The ID of the lead this activity is associated with",
                                    "type": "string"
                                  },
                                  "person_id": {
                                    "description": "The ID of the person this activity is associated with",
                                    "type": "integer"
                                  },
                                  "org_id": {
                                    "description": "The ID of the organization this activity is associated with",
                                    "type": "integer"
                                  },
                                  "note": {
                                    "description": "The note of the activity (HTML format)",
                                    "type": "string"
                                  },
                                  "location": {
                                    "description": "The address of the activity. Pipedrive will automatically check if the location matches a geo-location on Google maps.",
                                    "type": "string"
                                  },
                                  "public_description": {
                                    "description": "Additional details about the activity that is synced to your external calendar. Unlike the note added to the activity, the description is publicly visible to any guests added to the activity.",
                                    "type": "string"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "integer",
                                    "description": "The activity ID, generated when the activity was created"
                                  },
                                  "done": {
                                    "type": "boolean",
                                    "description": "Whether the activity is done or not"
                                  },
                                  "subject": {
                                    "description": "The subject of the activity",
                                    "type": "string"
                                  },
                                  "type": {
                                    "description": "The type of the activity. This is in correlation with the `key_string` parameter of ActivityTypes.",
                                    "type": "string"
                                  },
                                  "user_id": {
                                    "description": "The ID of the user whom the activity is assigned to",
                                    "type": "integer"
                                  },
                                  "participants": {
                                    "description": "List of multiple persons (participants) this activity is associated with",
                                    "type": "array",
                                    "nullable": true,
                                    "items": { "type": "object" }
                                  },
                                  "busy_flag": {
                                    "description": "Marks if the activity is set as 'Busy' or 'Free'. If the flag is set to `true`, your customers will not be able to book that time slot through any Scheduler links. The flag can also be unset. When the value of the flag is unset (`null`), the flag defaults to 'Busy' if it has a time set, and 'Free' if it is an all-day event without specified time.",
                                    "type": "boolean",
                                    "enum": [ true, false ]
                                  },
                                  "attendees": {
                                    "description": "The attendees of the activity. This can be either your existing Pipedrive contacts or an external email address.",
                                    "type": "array",
                                    "nullable": true,
                                    "items": { "type": "object" }
                                  },
                                  "company_id": {
                                    "type": "integer",
                                    "description": "The user's company ID"
                                  },
                                  "reference_type": {
                                    "type": "string",
                                    "description": "If the activity references some other object, it is indicated here. For example, value `Salesphone` refers to activities created with Caller."
                                  },
                                  "reference_id": {
                                    "type": "integer",
                                    "description": "Together with the `reference_type`, gives the ID of the other object"
                                  },
                                  "conference_meeting_client": {
                                    "type": "string",
                                    "description": "The ID of Marketplace app, which is connected to this activity"
                                  },
                                  "conference_meeting_url": {
                                    "type": "string",
                                    "description": "The link to join the meeting which is associated with this activity"
                                  },
                                  "conference_meeting_id": {
                                    "type": "string",
                                    "description": "The meeting ID of the meeting provider (Zoom, MS Teams etc.) that is associated with this activity"
                                  },
                                  "add_time": {
                                    "type": "string",
                                    "description": "The creation date and time of the activity in UTC. Format: YYYY-MM-DD HH:MM:SS."
                                  },
                                  "marked_as_done_time": {
                                    "type": "string",
                                    "description": "The date and time this activity was marked as done. Format: YYYY-MM-DD HH:MM:SS."
                                  },
                                  "last_notification_time": {
                                    "type": "string",
                                    "description": "The date and time of latest notifications sent about this activity to the participants or the attendees of this activity"
                                  },
                                  "last_notification_user_id": {
                                    "type": "integer",
                                    "description": "The ID of the user who triggered the sending of the latest notifications about this activity to the participants or the attendees of this activity"
                                  },
                                  "notification_language_id": {
                                    "type": "integer",
                                    "description": "The ID of the language the notifications are sent in"
                                  },
                                  "lead_id": {
                                    "description": "The ID of the lead in the UUID format this activity is associated with",
                                    "type": "string",
                                    "format": "uuid"
                                  },
                                  "active_flag": {
                                    "type": "boolean",
                                    "description": "Whether the activity is active or not"
                                  },
                                  "update_time": {
                                    "type": "string",
                                    "description": "The last update date and time of the activity. Format: YYYY-MM-DD HH:MM:SS."
                                  },
                                  "update_user_id": {
                                    "description": "The ID of the user who was the last to update this activity",
                                    "type": "integer"
                                  },
                                  "gcal_event_id": {
                                    "type": "string",
                                    "description": "For the activity which syncs to Google calendar, this is the Google event ID. NB! This field is related to old Google calendar sync and will be deprecated soon."
                                  },
                                  "google_calendar_id": {
                                    "type": "string",
                                    "description": "The Google calendar ID that this activity syncs to. NB! This field is related to old Google calendar sync and will be deprecated soon."
                                  },
                                  "google_calendar_etag": {
                                    "type": "string",
                                    "description": "The Google calendar API etag (version) that is used for syncing this activity. NB! This field is related to old Google calendar sync and will be deprecated soon."
                                  },
                                  "calendar_sync_include_context": {
                                    "type": "string",
                                    "description": "For activities that sync to an external calendar, this setting indicates if the activity syncs with context (what are the deals, persons, organizations this activity is related to)"
                                  },
                                  "source_timezone": {
                                    "type": "string",
                                    "description": "The timezone the activity was created in an external calendar"
                                  },
                                  "rec_rule": {
                                    "type": "string",
                                    "description": "The rule for the recurrence of the activity. Is important for activities synced into Pipedrive from an external calendar. Example: \"RRULE:FREQ=WEEKLY;BYDAY=WE\""
                                  },
                                  "rec_rule_extension": {
                                    "type": "string",
                                    "description": "Additional rules for the recurrence of the activity, extend the `rec_rule`. Is important for activities synced into Pipedrive from an external calendar."
                                  },
                                  "rec_master_activity_id": {
                                    "type": "integer",
                                    "description": "The ID of parent activity for a recurrent activity if the current activity is an exception to recurrence rules"
                                  },
                                  "series": {
                                    "description": "The list of recurring activity instances. It is in a structure as follows: `[{due_date: \"2020-06-24\", due_time: \"10:00:00\"}]`",
                                    "type": "array",
                                    "items": { "type": "object" }
                                  },
                                  "created_by_user_id": {
                                    "description": "The ID of the user who created the activity",
                                    "type": "integer"
                                  },
                                  "location_subpremise": {
                                    "type": "string",
                                    "description": "Subfield of location field. Indicates apartment/suite number."
                                  },
                                  "location_street_number": {
                                    "type": "string",
                                    "description": "Subfield of location field. Indicates house number."
                                  },
                                  "location_route": {
                                    "type": "string",
                                    "description": "Subfield of location field. Indicates street name."
                                  },
                                  "location_sublocality": {
                                    "type": "string",
                                    "description": "Subfield of location field. Indicates district/sublocality."
                                  },
                                  "location_locality": {
                                    "type": "string",
                                    "description": "Subfield of location field. Indicates city/town/village/locality."
                                  },
                                  "location_admin_area_level_1": {
                                    "type": "string",
                                    "description": "Subfield of location field. Indicates state/county."
                                  },
                                  "location_admin_area_level_2": {
                                    "type": "string",
                                    "description": "Subfield of location field. Indicates region."
                                  },
                                  "location_country": {
                                    "type": "string",
                                    "description": "Subfield of location field. Indicates country."
                                  },
                                  "location_postal_code": {
                                    "type": "string",
                                    "description": "Subfield of location field. Indicates ZIP/postal code."
                                  },
                                  "location_formatted_address": {
                                    "type": "string",
                                    "description": "Subfield of location field. Indicates full/combined address."
                                  },
                                  "org_name": {
                                    "description": "The name of the organization this activity is associated with",
                                    "type": "string"
                                  },
                                  "person_name": {
                                    "description": "The name of the person this activity is associated with",
                                    "type": "string"
                                  },
                                  "deal_title": {
                                    "description": "The name of the deal this activity is associated with",
                                    "type": "string"
                                  },
                                  "owner_name": {
                                    "description": "The name of the user this activity is owned by",
                                    "type": "string"
                                  },
                                  "person_dropbox_bcc": {
                                    "type": "string",
                                    "description": "The BCC email address of the person"
                                  },
                                  "deal_dropbox_bcc": {
                                    "type": "string",
                                    "description": "The BCC email address of the deal"
                                  },
                                  "assigned_to_user_id": {
                                    "description": "The ID of the user to whom the activity is assigned to. Equal to `user_id`.",
                                    "type": "integer"
                                  },
                                  "file": {
                                    "type": "object",
                                    "description": "The file that is attached to this activity. For example, this can be a reference to an audio note file generated with Pipedrive mobile app."
                                  }
                                }
                              }
                            ]
                          },
                          "description": "The array of activities"
                        },
                        "additional_data": {
                          "title": "activityDistributionDataWithAdditionalData",
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "activity_distribution": {
                                  "description": "The distribution of activities related to the organization grouped by the user ID",
                                  "type": "object",
                                  "properties": {
                                    "ASSIGNED_TO_USER_ID": {
                                      "description": "The ID of the user",
                                      "type": "object",
                                      "properties": {
                                        "activities": {
                                          "description": "The count of activities related to the user grouped by activity type",
                                          "type": "object",
                                          "properties": {
                                            "ACTIVITY_TYPE_NAME": {
                                              "description": "The count of activities related to a specific type",
                                              "type": "integer"
                                            }
                                          }
                                        },
                                        "name": {
                                          "type": "string",
                                          "description": "The name of the user"
                                        },
                                        "activity_count": {
                                          "type": "integer",
                                          "description": "The overall count of activities for the user"
                                        },
                                        "share": {
                                          "type": "integer",
                                          "description": "The percentage of activities belongs to the user"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            {
                              "description": "The additional data of the list",
                              "type": "object",
                              "properties": {
                                "start": {
                                  "type": "integer",
                                  "description": "Pagination start"
                                },
                                "limit": {
                                  "type": "integer",
                                  "description": "Items shown per page"
                                },
                                "more_items_in_collection": {
                                  "type": "boolean",
                                  "description": "If there are more list items in the collection than displayed or not"
                                }
                              }
                            }
                          ]
                        },
                        "related_objects": {
                          "type": "object",
                          "properties": {
                            "organization": {
                              "type": "object",
                              "properties": {
                                "ORGANIZATION_ID": {
                                  "type": "object",
                                  "description": "The ID of the organization associated with the item",
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "active_flag": {
                                          "type": "boolean",
                                          "description": "Whether the associated organization is active or not"
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "description": "The ID of the organization associated with the item",
                                      "allOf": [
                                        {
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "type": "integer",
                                              "description": "The ID of the organization associated with the item"
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string",
                                              "description": "The name of the organization associated with the item"
                                            },
                                            "people_count": {
                                              "type": "integer",
                                              "description": "The number of people connected with the organization that is associated with the item"
                                            },
                                            "owner_id": {
                                              "type": "integer",
                                              "description": "The ID of the owner of the organization that is associated with the item"
                                            },
                                            "address": {
                                              "type": "string",
                                              "description": "The address of the organization"
                                            },
                                            "cc_email": {
                                              "type": "string",
                                              "description": "The BCC email of the organization associated with the item"
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  ]
                                }
                              }
                            },
                            "person": {
                              "type": "object",
                              "properties": {
                                "PERSON_ID": {
                                  "type": "object",
                                  "description": "The ID of the person associated with the item",
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "active_flag": {
                                          "type": "boolean",
                                          "description": "Whether the associated person is active or not"
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "integer",
                                          "description": "The ID of the person associated with the item"
                                        },
                                        "name": {
                                          "type": "string",
                                          "description": "The name of the person associated with the item"
                                        },
                                        "email": {
                                          "type": "array",
                                          "description": "The emails of the person associated with the item",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "label": {
                                                "type": "string",
                                                "description": "The type of the email"
                                              },
                                              "value": {
                                                "type": "string",
                                                "description": "The email of the associated person"
                                              },
                                              "primary": {
                                                "type": "boolean",
                                                "description": "Whether this is the primary email or not"
                                              }
                                            }
                                          }
                                        },
                                        "phone": {
                                          "type": "array",
                                          "description": "The phone numbers of the person associated with the item",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "label": {
                                                "type": "string",
                                                "description": "The type of the phone number"
                                              },
                                              "value": {
                                                "type": "string",
                                                "description": "The phone number of the person associated with the item"
                                              },
                                              "primary": {
                                                "type": "boolean",
                                                "description": "Whether this is the primary phone number or not"
                                              }
                                            }
                                          }
                                        },
                                        "owner_id": {
                                          "type": "integer",
                                          "description": "The ID of the owner of the person that is associated with the item"
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            },
                            "deal": {
                              "type": "object",
                              "properties": {
                                "DEAL_ID": {
                                  "type": "object",
                                  "description": "The ID of the deal which is associated with the item",
                                  "properties": {
                                    "id": {
                                      "type": "integer",
                                      "description": "The ID of the deal associated with the item"
                                    },
                                    "title": {
                                      "type": "string",
                                      "description": "The title of the deal associated with the item"
                                    },
                                    "status": {
                                      "type": "string",
                                      "description": "The status of the deal associated with the item"
                                    },
                                    "value": {
                                      "type": "number",
                                      "description": "The value of the deal that is associated with the item"
                                    },
                                    "currency": {
                                      "type": "string",
                                      "description": "The currency of the deal value"
                                    },
                                    "stage_id": {
                                      "type": "integer",
                                      "description": "The ID of the stage the deal is currently at"
                                    },
                                    "pipeline_id": {
                                      "type": "integer",
                                      "description": "The ID of the pipeline the deal is in"
                                    }
                                  }
                                }
                              }
                            },
                            "user": {
                              "type": "object",
                              "properties": {
                                "USER_ID": {
                                  "type": "object",
                                  "title": "userDataWithId",
                                  "allOf": [
                                    {
                                      "properties": {
                                        "id": {
                                          "type": "integer",
                                          "description": "The ID of the user"
                                        },
                                        "name": {
                                          "type": "string",
                                          "description": "The name of the user"
                                        },
                                        "email": {
                                          "type": "string",
                                          "description": "The email of the user"
                                        },
                                        "has_pic": {
                                          "type": "integer",
                                          "description": "Whether the user has picture or not. 0 = No picture, 1 = Has picture."
                                        },
                                        "pic_hash": {
                                          "type": "string",
                                          "nullable": true,
                                          "description": "The user picture hash"
                                        },
                                        "active_flag": {
                                          "type": "boolean",
                                          "description": "Whether the user is active or not"
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "description": "The ID of the user"
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "success": true,
                  "data": [
                    {
                      "id": 8,
                      "company_id": 22122,
                      "user_id": 1234,
                      "done": false,
                      "type": "deadline",
                      "reference_type": "scheduler-service",
                      "reference_id": 7,
                      "conference_meeting_client": "871b8bc88d3a1202",
                      "conference_meeting_url": "https://pipedrive.zoom.us/link",
                      "conference_meeting_id": "01758746701",
                      "due_date": "2020-06-09",
                      "due_time": "10:00",
                      "duration": "01:00",
                      "busy_flag": true,
                      "add_time": "2020-06-08 12:37:56",
                      "marked_as_done_time": "2020-08-08 08:08:38",
                      "last_notification_time": "2020-08-08 12:37:56",
                      "last_notification_user_id": 7655,
                      "notification_language_id": 1,
                      "subject": "Deadline",
                      "public_description": "This is a description",
                      "calendar_sync_include_context": "",
                      "location": "Mustamäe tee 3, Tallinn, Estonia",
                      "org_id": 5,
                      "person_id": 1101,
                      "deal_id": 300,
                      "lead_id": "46c3b0e1-db35-59ca-1828-4817378dff71",
                      "active_flag": true,
                      "update_time": "2020-08-08 12:37:56",
                      "update_user_id": 5596,
                      "gcal_event_id": "",
                      "google_calendar_id": "",
                      "google_calendar_etag": "",
                      "source_timezone": "",
                      "rec_rule": "RRULE:FREQ=WEEKLY;BYDAY=WE",
                      "rec_rule_extension": "",
                      "rec_master_activity_id": 1,
                      "series": [ ],
                      "note": "A note for the activity",
                      "created_by_user_id": 1234,
                      "location_subpremise": "",
                      "location_street_number": "3",
                      "location_route": "Mustamäe tee",
                      "location_sublocality": "Kristiine",
                      "location_locality": "Tallinn",
                      "location_admin_area_level_1": "Harju maakond",
                      "location_admin_area_level_2": "",
                      "location_country": "Estonia",
                      "location_postal_code": "10616",
                      "location_formatted_address": "Mustamäe tee 3, 10616 Tallinn, Estonia",
                      "attendees": [
                        {
                          "email_address": "attendee@pipedrivemail.com",
                          "is_organizer": 0,
                          "name": "Attendee",
                          "person_id": 25312,
                          "status": "noreply",
                          "user_id": null
                        }
                      ],
                      "participants": [
                        { "person_id": 17985, "primary_flag": false },
                        { "person_id": 1101, "primary_flag": true }
                      ],
                      "org_name": "Organization",
                      "person_name": "Person",
                      "deal_title": "Deal",
                      "owner_name": "Creator",
                      "person_dropbox_bcc": "company@pipedrivemail.com",
                      "deal_dropbox_bcc": "company+deal300@pipedrivemail.com",
                      "assigned_to_user_id": 1235,
                      "file": {
                        "id": "376892,",
                        "clean_name": "Audio 10:55:07.m4a",
                        "url": "https://pipedrive-files.s3-eu-west-1.amazonaws.com/Audio-recording.m4a"
                      }
                    }
                  ],
                  "additional_data": {
                    "allOf": [
                      {
                        "activity_distribution": {
                          "8877": {
                            "activities": { "call": 2, "meeting": 1 },
                            "name": "Will Smith",
                            "activity_count": 3,
                            "share": 100
                          }
                        }
                      },
                      {
                        "pagination": {
                          "start": 0,
                          "limit": 100,
                          "more_items_in_collection": true
                        }
                      }
                    ]
                  },
                  "related_objects": {
                    "allOf": [
                      {
                        "organization": {
                          "1": {
                            "id": 1,
                            "name": "Org Name",
                            "people_count": 1,
                            "owner_id": 123,
                            "address": "Mustamäe tee 3a, 10615 Tallinn",
                            "active_flag": true,
                            "cc_email": "org@pipedrivemail.com"
                          }
                        }
                      },
                      {
                        "person": {
                          "1101": {
                            "active_flag": true,
                            "id": 1101,
                            "name": "Person",
                            "email": [
                              {
                                "label": "work",
                                "value": "person@pipedrive.com",
                                "primary": true
                              }
                            ],
                            "phone": [
                              {
                                "label": "work",
                                "value": "3421787767",
                                "primary": true
                              }
                            ],
                            "owner_id": 8877
                          }
                        }
                      },
                      {
                        "deal": {
                          "123": {
                            "id": 123,
                            "title": "Deal title",
                            "status": "open",
                            "value": 600,
                            "currency": "EUR",
                            "stage_id": 2,
                            "pipeline_id": 1
                          }
                        }
                      },
                      {
                        "user": {
                          "123": {
                            "id": 123,
                            "name": "Jane Doe",
                            "email": "jane@pipedrive.com",
                            "has_pic": 1,
                            "pic_hash": "2611ace8ac6a3afe2f69ed56f9e08c6b",
                            "active_flag": true
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/deals/{id}/duplicate": {
      "post": {
        "summary": "Duplicate deal",
        "description": "Duplicates a deal.",
        "operationId": "duplicateDeal",
        "tags": [ "Deals" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the deal",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "Duplicate a deal",
            "content": {
              "application/json": {
                "schema": {
                  "title": "duplicateDeal",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "If the response is successful or not"
                    },
                    "data": {
                      "description": "The deal object",
                      "allOf": [
                        {
                          "title": "dealStrict",
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "description": "The ID of the deal"
                                },
                                "creator_user_id": {
                                  "type": "integer",
                                  "description": "The ID of the deal creator"
                                },
                                "user_id": {
                                  "type": "integer",
                                  "description": "The ID of the user"
                                },
                                "person_id": {
                                  "type": "integer",
                                  "description": "The ID of the person associated with the deal"
                                },
                                "org_id": {
                                  "type": "integer",
                                  "description": "The ID of the organization associated with the deal"
                                }
                              }
                            },
                            {
                              "title": "baseDeal",
                              "type": "object",
                              "properties": {
                                "stage_id": {
                                  "type": "integer",
                                  "description": "The ID of the deal stage"
                                },
                                "title": {
                                  "type": "string",
                                  "description": "The title of the deal"
                                },
                                "value": {
                                  "type": "number",
                                  "description": "The value of the deal"
                                },
                                "currency": {
                                  "type": "string",
                                  "description": "The currency associated with the deal"
                                },
                                "add_time": {
                                  "type": "string",
                                  "description": "The creation date and time of the deal"
                                },
                                "update_time": {
                                  "type": "string",
                                  "description": "The last updated date and time of the deal"
                                },
                                "stage_change_time": {
                                  "type": "string",
                                  "description": "The last updated date and time of the deal stage"
                                },
                                "active": {
                                  "type": "boolean",
                                  "description": "Whether the deal is active or not"
                                },
                                "deleted": {
                                  "type": "boolean",
                                  "description": "Whether the deal is deleted or not"
                                },
                                "status": {
                                  "type": "string",
                                  "description": "The status of the deal"
                                },
                                "probability": {
                                  "type": "number",
                                  "nullable": true,
                                  "description": "The success probability percentage of the deal"
                                },
                                "next_activity_date": {
                                  "type": "string",
                                  "description": "The date of the next activity associated with the deal"
                                },
                                "next_activity_time": {
                                  "type": "string",
                                  "description": "The time of the next activity associated with the deal"
                                },
                                "next_activity_id": {
                                  "type": "integer",
                                  "nullable": true,
                                  "description": "The ID of the next activity associated with the deal"
                                },
                                "last_activity_id": {
                                  "type": "integer",
                                  "nullable": true,
                                  "description": "The ID of the last activity associated with the deal"
                                },
                                "last_activity_date": {
                                  "type": "string",
                                  "nullable": true,
                                  "description": "The date of the last activity associated with the deal"
                                },
                                "lost_reason": {
                                  "type": "string",
                                  "nullable": true,
                                  "description": "The reason for losing the deal"
                                },
                                "visible_to": {
                                  "type": "string",
                                  "description": "The visibility of the deal"
                                },
                                "close_time": {
                                  "type": "string",
                                  "nullable": true,
                                  "description": "The date and time of closing the deal"
                                },
                                "pipeline_id": {
                                  "type": "integer",
                                  "description": "The ID of pipeline associated with the deal"
                                },
                                "won_time": {
                                  "type": "string",
                                  "description": "The date and time of changing the deal status as won"
                                },
                                "first_won_time": {
                                  "type": "string",
                                  "description": "The date and time of the first time changing the deal status as won"
                                },
                                "lost_time": {
                                  "type": "string",
                                  "description": "The date and time of changing the deal status as lost"
                                },
                                "products_count": {
                                  "type": "integer",
                                  "description": "The number of products associated with the deal"
                                },
                                "files_count": {
                                  "type": "integer",
                                  "description": "The number of files associated with the deal"
                                },
                                "notes_count": {
                                  "type": "integer",
                                  "description": "The number of notes associated with the deal"
                                },
                                "followers_count": {
                                  "type": "integer",
                                  "description": "The number of followers associated with the deal"
                                },
                                "email_messages_count": {
                                  "type": "integer",
                                  "description": "The number of emails associated with the deal"
                                },
                                "activities_count": {
                                  "type": "integer",
                                  "description": "The number of activities associated with the deal"
                                },
                                "done_activities_count": {
                                  "type": "integer",
                                  "description": "The number of completed activities associated with the deal"
                                },
                                "undone_activities_count": {
                                  "type": "integer",
                                  "description": "The number of incomplete activities associated with the deal"
                                },
                                "participants_count": {
                                  "type": "integer",
                                  "description": "The number of participants associated with the deal"
                                },
                                "expected_close_date": {
                                  "type": "string",
                                  "format": "date",
                                  "description": "The expected close date of the deal"
                                },
                                "last_incoming_mail_time": {
                                  "type": "string",
                                  "description": "The date and time of the last incoming email associated with the deal"
                                },
                                "last_outgoing_mail_time": {
                                  "type": "string",
                                  "description": "The date and time of the last outgoing email associated with the deal"
                                },
                                "label": {
                                  "type": "integer",
                                  "description": "The label assigned to the deal"
                                },
                                "stage_order_nr": {
                                  "type": "integer",
                                  "description": "The order number of the deal stage associated with the deal"
                                },
                                "person_name": {
                                  "type": "string",
                                  "description": "The name of the person associated with the deal"
                                },
                                "org_name": {
                                  "type": "string",
                                  "description": "The name of the organization associated with the deal"
                                },
                                "next_activity_subject": {
                                  "type": "string",
                                  "description": "The subject of the next activity associated with the deal"
                                },
                                "next_activity_type": {
                                  "type": "string",
                                  "description": "The type of the next activity associated with the deal"
                                },
                                "next_activity_duration": {
                                  "type": "string",
                                  "description": "The duration of the next activity associated with the deal"
                                },
                                "next_activity_note": {
                                  "type": "string",
                                  "description": "The note of the next activity associated with the deal"
                                },
                                "formatted_value": {
                                  "type": "string",
                                  "description": "The deal value formatted with selected currency. E.g. US$500"
                                },
                                "weighted_value": {
                                  "type": "number",
                                  "description": "Probability times deal value. Probability can either be deal probability or if not set, then stage probability."
                                },
                                "formatted_weighted_value": {
                                  "type": "string",
                                  "description": "The weighted_value formatted with selected currency. E.g. US$500"
                                },
                                "weighted_value_currency": {
                                  "type": "string",
                                  "description": "The currency associated with the deal"
                                },
                                "rotten_time": {
                                  "type": "string",
                                  "nullable": true,
                                  "description": "The date and time of changing the deal status as rotten"
                                },
                                "owner_name": {
                                  "type": "string",
                                  "description": "The name of the deal owner"
                                },
                                "cc_email": {
                                  "type": "string",
                                  "description": "The BCC email of the deal"
                                },
                                "org_hidden": {
                                  "type": "boolean",
                                  "description": "If the organization that is associated with the deal is hidden or not"
                                },
                                "person_hidden": {
                                  "type": "boolean",
                                  "description": "If the person that is associated with the deal is hidden or not"
                                }
                              }
                            }
                          ]
                        }
                      ]
                    }
                  }
                },
                "example": {
                  "success": true,
                  "data": {
                    "id": 1,
                    "creator_user_id": 123,
                    "user_id": 456,
                    "person_id": 1,
                    "org_id": 2,
                    "stage_id": 2,
                    "title": "Deal One",
                    "value": 5000,
                    "currency": "EUR",
                    "add_time": "2019-05-29 04:21:51",
                    "update_time": "2019-05-29 04:21:51",
                    "stage_change_time": "2019-11-28 15:41:22",
                    "active": true,
                    "deleted": false,
                    "status": "open",
                    "probability": null,
                    "next_activity_date": "2019-11-29",
                    "next_activity_time": "11:30:00",
                    "next_activity_id": 128,
                    "last_activity_id": null,
                    "last_activity_date": null,
                    "lost_reason": null,
                    "visible_to": "1",
                    "close_time": null,
                    "pipeline_id": 1,
                    "won_time": "2019-11-27 11:40:36",
                    "first_won_time": "2019-11-27 11:40:36",
                    "lost_time": "",
                    "products_count": 0,
                    "files_count": 0,
                    "notes_count": 2,
                    "followers_count": 0,
                    "email_messages_count": 4,
                    "activities_count": 1,
                    "done_activities_count": 0,
                    "undone_activities_count": 1,
                    "participants_count": 1,
                    "expected_close_date": "2019-06-29",
                    "last_incoming_mail_time": "2019-05-29 18:21:42",
                    "last_outgoing_mail_time": "2019-05-30 03:45:35",
                    "label": 11,
                    "stage_order_nr": 2,
                    "person_name": "Person",
                    "org_name": "Organization",
                    "next_activity_subject": "Call",
                    "next_activity_type": "call",
                    "next_activity_duration": "00:30:00",
                    "next_activity_note": "Note content",
                    "formatted_value": "€5,000",
                    "weighted_value": 5000,
                    "formatted_weighted_value": "€5,000",
                    "weighted_value_currency": "EUR",
                    "rotten_time": null,
                    "owner_name": "Creator",
                    "cc_email": "company+deal1@pipedrivemail.com",
                    "org_hidden": false,
                    "person_hidden": false
                  }
                }
              }
            }
          }
        }
      }
    },
    "/deals/{id}/files": {
      "get": {
        "summary": "List files attached to a deal",
        "description": "Lists files associated with a deal.",
        "operationId": "getDealFiles",
        "tags": [ "Deals" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the deal",
            "required": true,
            "schema": { "type": "integer" }
          },
          {
            "in": "query",
            "name": "start",
            "description": "Pagination start",
            "schema": { "type": "integer", "default": 0 }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Items shown per page",
            "schema": { "type": "integer" }
          },
          {
            "in": "query",
            "name": "sort",
            "schema": { "type": "string" },
            "description": "The field names and sorting mode separated by a comma (`field_name_1 ASC`, `field_name_2 DESC`). Only first-level field keys are supported (no nested keys). Supported fields: `id`, `user_id`, `deal_id`, `person_id`, `org_id`, `product_id`, `add_time`, `update_time`, `file_name`, `file_type`, `file_size`, `comment`."
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "getAssociatedFiles",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The file data",
                            "properties": {
                              "id": {
                                "type": "integer",
                                "description": "The ID of the file"
                              },
                              "user_id": {
                                "type": "integer",
                                "description": "The ID of the user to associate the file with"
                              },
                              "deal_id": {
                                "type": "integer",
                                "description": "The ID of the deal to associate the file with"
                              },
                              "person_id": {
                                "type": "integer",
                                "description": "The ID of the person to associate the file with"
                              },
                              "org_id": {
                                "type": "integer",
                                "description": "The ID of the organization to associate the file with"
                              },
                              "product_id": {
                                "type": "integer",
                                "description": "The ID of the product to associate the file with"
                              },
                              "activity_id": {
                                "type": "integer",
                                "description": "The ID of the activity to associate the file with"
                              },
                              "lead_id": {
                                "type": "string",
                                "description": "The ID of the lead to associate the file with",
                                "format": "uuid"
                              },
                              "add_time": {
                                "type": "string",
                                "description": "The date and time when the file was added/created. Format: YYYY-MM-DD HH:MM:SS"
                              },
                              "update_time": {
                                "type": "string",
                                "description": "The last updated date and time of the file. Format: YYYY-MM-DD HH:MM:SS"
                              },
                              "file_name": {
                                "type": "string",
                                "description": "The original name of the file"
                              },
                              "file_size": {
                                "type": "integer",
                                "description": "The size of the file"
                              },
                              "active_flag": {
                                "type": "boolean",
                                "description": "Whether the user is active or not. false = Not activated, true = Activated"
                              },
                              "inline_flag": {
                                "type": "boolean",
                                "description": "Whether the file was uploaded as inline or not"
                              },
                              "remote_location": {
                                "type": "string",
                                "description": "The location type to send the file to. Only googledrive is supported at the moment."
                              },
                              "remote_id": {
                                "type": "string",
                                "description": "The ID of the remote item"
                              },
                              "cid": {
                                "type": "string",
                                "description": "The ID of the inline attachment"
                              },
                              "s3_bucket": {
                                "type": "string",
                                "description": "The location of the cloud storage"
                              },
                              "mail_message_id": {
                                "type": "string",
                                "description": "The ID of the mail message to associate the file with"
                              },
                              "mail_template_id": {
                                "type": "string",
                                "description": "The ID of the mail template to associate the file with"
                              },
                              "deal_name": {
                                "type": "string",
                                "description": "The name of the deal associated with the dile"
                              },
                              "person_name": {
                                "type": "string",
                                "description": "The name of the person associated with the file"
                              },
                              "org_name": {
                                "type": "string",
                                "description": "The name of the organization associated with the file"
                              },
                              "product_name": {
                                "type": "string",
                                "description": "The name of the product associated with the file"
                              },
                              "lead_name": {
                                "type": "string",
                                "description": "The name of the lead associated with the file"
                              },
                              "url": {
                                "type": "string",
                                "description": "The URL of the download file"
                              },
                              "name": {
                                "type": "string",
                                "description": "The visible name of the file"
                              },
                              "description": {
                                "type": "string",
                                "description": "The description of the file"
                              }
                            }
                          },
                          "description": "The array of files"
                        },
                        "additional_data": {
                          "description": "The additional data of the list",
                          "type": "object",
                          "properties": {
                            "start": {
                              "type": "integer",
                              "description": "Pagination start"
                            },
                            "limit": {
                              "type": "integer",
                              "description": "Items shown per page"
                            },
                            "more_items_in_collection": {
                              "type": "boolean",
                              "description": "If there are more list items in the collection than displayed or not"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "success": true,
                  "data": [
                    {
                      "id": 1,
                      "user_id": 8877,
                      "deal_id": 1,
                      "person_id": 1,
                      "org_id": 1480,
                      "product_id": 1,
                      "activity_id": 1,
                      "lead_id": "adf21080-0e10-11eb-879b-05d71fb426ec",
                      "log_id": null,
                      "add_time": "2020-09-16 11:19:36",
                      "update_time": "2020-09-16 11:19:36",
                      "file_name": "95781006_794143070992462_4330873630616453120_n_60817458877506f9eb74d03e5ef9ba061915b797998.jpg",
                      "file_type": "img",
                      "file_size": 95116,
                      "active_flag": true,
                      "inline_flag": false,
                      "remote_location": "s3",
                      "remote_id": "95781006_794143070992462_4330873630616453120_n.jpg",
                      "cid": "",
                      "s3_bucket": "",
                      "mail_message_id": "",
                      "mail_template_id": "",
                      "deal_name": "nice deal",
                      "person_name": "",
                      "people_name": "",
                      "org_name": "Pipedrive Inc.",
                      "product_name": "",
                      "lead_name": "nice lead",
                      "url": "https://app.pipedrive.com/api/v1/files/304/download",
                      "name": "95781006_794143070992462_4330873630616453120_n.jpg",
                      "description": ""
                    }
                  ],
                  "additional_data": {
                    "pagination": {
                      "start": 0,
                      "limit": 100,
                      "more_items_in_collection": true
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/deals/{id}/flow": {
      "get": {
        "summary": "List updates about a deal",
        "description": "Lists updates about a deal.",
        "operationId": "getDealUpdates",
        "tags": [ "Deals" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the deal",
            "required": true,
            "schema": { "type": "integer" }
          },
          {
            "in": "query",
            "name": "start",
            "description": "Pagination start",
            "schema": { "type": "integer", "default": 0 }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Items shown per page",
            "schema": { "type": "integer" }
          },
          {
            "in": "query",
            "name": "all_changes",
            "description": "Whether to show custom field updates or not. 1 = Include custom field changes. If omitted returns changes without custom field updates.",
            "schema": { "type": "string" }
          },
          {
            "in": "query",
            "name": "items",
            "description": "A comma-separated string for filtering out item specific updates. (Possible values - call, activity, plannedActivity, change, note, deal, file, dealChange, personChange, organizationChange, follower, dealFollower, personFollower, organizationFollower, participant, comment, mailMessage, mailMessageWithAttachment, invoice, document, marketing_campaign_stat, marketing_status_change)",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Get the deal updates",
            "content": {
              "application/json": {
                "schema": {
                  "title": "getDealUpdates",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "object": {
                                "type": "string",
                                "description": "The type of the deal update. (Possible object types - dealChange, note, activity, mailMessage, invoice, document, file)"
                              },
                              "timestamp": {
                                "type": "string",
                                "description": "The creation date and time of the update"
                              },
                              "data": {
                                "type": "object",
                                "description": "The data related to the update"
                              }
                            }
                          }
                        },
                        "additional_data": {
                          "description": "The additional data of the list",
                          "type": "object",
                          "properties": {
                            "start": {
                              "type": "integer",
                              "description": "Pagination start"
                            },
                            "limit": {
                              "type": "integer",
                              "description": "Items shown per page"
                            },
                            "more_items_in_collection": {
                              "type": "boolean",
                              "description": "If there are more list items in the collection than displayed or not"
                            }
                          }
                        },
                        "related_objects": {
                          "type": "object",
                          "properties": {
                            "deal": {
                              "type": "object",
                              "properties": {
                                "DEAL_ID": {
                                  "type": "object",
                                  "description": "The ID of the deal which is associated with the item",
                                  "properties": {
                                    "id": {
                                      "type": "integer",
                                      "description": "The ID of the deal associated with the item"
                                    },
                                    "title": {
                                      "type": "string",
                                      "description": "The title of the deal associated with the item"
                                    },
                                    "status": {
                                      "type": "string",
                                      "description": "The status of the deal associated with the item"
                                    },
                                    "value": {
                                      "type": "number",
                                      "description": "The value of the deal that is associated with the item"
                                    },
                                    "currency": {
                                      "type": "string",
                                      "description": "The currency of the deal value"
                                    },
                                    "stage_id": {
                                      "type": "integer",
                                      "description": "The ID of the stage the deal is currently at"
                                    },
                                    "pipeline_id": {
                                      "type": "integer",
                                      "description": "The ID of the pipeline the deal is in"
                                    }
                                  }
                                }
                              }
                            },
                            "organization": {
                              "type": "object",
                              "properties": {
                                "ORGANIZATION_ID": {
                                  "type": "object",
                                  "description": "The ID of the organization associated with the item",
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "integer",
                                          "description": "The ID of the organization associated with the item"
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "The name of the organization associated with the item"
                                        },
                                        "people_count": {
                                          "type": "integer",
                                          "description": "The number of people connected with the organization that is associated with the item"
                                        },
                                        "owner_id": {
                                          "type": "integer",
                                          "description": "The ID of the owner of the organization that is associated with the item"
                                        },
                                        "address": {
                                          "type": "string",
                                          "description": "The address of the organization"
                                        },
                                        "cc_email": {
                                          "type": "string",
                                          "description": "The BCC email of the organization associated with the item"
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            },
                            "user": {
                              "type": "object",
                              "properties": {
                                "USER_ID": {
                                  "type": "object",
                                  "title": "userDataWithId",
                                  "allOf": [
                                    {
                                      "properties": {
                                        "id": {
                                          "type": "integer",
                                          "description": "The ID of the user"
                                        },
                                        "name": {
                                          "type": "string",
                                          "description": "The name of the user"
                                        },
                                        "email": {
                                          "type": "string",
                                          "description": "The email of the user"
                                        },
                                        "has_pic": {
                                          "type": "integer",
                                          "description": "Whether the user has picture or not. 0 = No picture, 1 = Has picture."
                                        },
                                        "pic_hash": {
                                          "type": "string",
                                          "nullable": true,
                                          "description": "The user picture hash"
                                        },
                                        "active_flag": {
                                          "type": "boolean",
                                          "description": "Whether the user is active or not"
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "description": "The ID of the user"
                                    }
                                  ]
                                }
                              }
                            },
                            "person": {
                              "type": "object",
                              "properties": {
                                "PERSON_ID": {
                                  "type": "object",
                                  "description": "The ID of the person associated with the item",
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "active_flag": {
                                          "type": "boolean",
                                          "description": "Whether the associated person is active or not"
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "integer",
                                          "description": "The ID of the person associated with the item"
                                        },
                                        "name": {
                                          "type": "string",
                                          "description": "The name of the person associated with the item"
                                        },
                                        "email": {
                                          "type": "array",
                                          "description": "The emails of the person associated with the item",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "label": {
                                                "type": "string",
                                                "description": "The type of the email"
                                              },
                                              "value": {
                                                "type": "string",
                                                "description": "The email of the associated person"
                                              },
                                              "primary": {
                                                "type": "boolean",
                                                "description": "Whether this is the primary email or not"
                                              }
                                            }
                                          }
                                        },
                                        "phone": {
                                          "type": "array",
                                          "description": "The phone numbers of the person associated with the item",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "label": {
                                                "type": "string",
                                                "description": "The type of the phone number"
                                              },
                                              "value": {
                                                "type": "string",
                                                "description": "The phone number of the person associated with the item"
                                              },
                                              "primary": {
                                                "type": "boolean",
                                                "description": "Whether this is the primary phone number or not"
                                              }
                                            }
                                          }
                                        },
                                        "owner_id": {
                                          "type": "integer",
                                          "description": "The ID of the owner of the person that is associated with the item"
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "success": true,
                  "data": [
                    {
                      "object": "dealChange",
                      "timestamp": "2020-09-25 09:21:55",
                      "data": {
                        "id": 1300,
                        "item_id": 120,
                        "user_id": 8877,
                        "field_key": "value",
                        "old_value": 50,
                        "new_value": 100,
                        "is_bulk_update_flag": null,
                        "log_time": "2020-09-25 09:21:55",
                        "change_source": "app",
                        "change_source_user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML like Gecko) Chrome/84.0.4147.135 Safari/537.36",
                        "additional_data": [ ]
                      }
                    },
                    {
                      "object": "activity",
                      "timestamp": "2020-08-07 08:15:00",
                      "data": {
                        "id": 8,
                        "company_id": 22122,
                        "user_id": 1234,
                        "done": false,
                        "type": "deadline",
                        "reference_type": "scheduler-service",
                        "reference_id": 7,
                        "conference_meeting_client": "871b8bc88d3a1202",
                        "conference_meeting_url": "https://pipedrive.zoom.us/link",
                        "conference_meeting_id": "01758746701",
                        "due_date": "2020-06-09",
                        "due_time": "10:00",
                        "duration": "01:00",
                        "busy_flag": true,
                        "add_time": "2020-06-08 12:37:56",
                        "marked_as_done_time": "2020-08-08 08:08:38",
                        "last_notification_time": "2020-08-08 12:37:56",
                        "last_notification_user_id": 7655,
                        "notification_language_id": 1,
                        "subject": "Deadline",
                        "public_description": "This is a description",
                        "calendar_sync_include_context": "",
                        "location": "Mustamäe tee 3, Tallinn, Estonia",
                        "org_id": 5,
                        "person_id": 1101,
                        "deal_id": 300,
                        "lead_id": "46c3b0e1-db35-59ca-1828-4817378dff71",
                        "active_flag": true,
                        "update_time": "2020-08-08 12:37:56",
                        "update_user_id": 5596,
                        "gcal_event_id": "",
                        "google_calendar_id": "",
                        "google_calendar_etag": "",
                        "source_timezone": "",
                        "rec_rule": "RRULE:FREQ=WEEKLY;BYDAY=WE",
                        "rec_rule_extension": "",
                        "rec_master_activity_id": 1,
                        "series": [ ],
                        "note": "A note for the activity",
                        "created_by_user_id": 1234,
                        "location_subpremise": "",
                        "location_street_number": "3",
                        "location_route": "Mustamäe tee",
                        "location_sublocality": "Kristiine",
                        "location_locality": "Tallinn",
                        "location_admin_area_level_1": "Harju maakond",
                        "location_admin_area_level_2": "",
                        "location_country": "Estonia",
                        "location_postal_code": "10616",
                        "location_formatted_address": "Mustamäe tee 3, 10616 Tallinn, Estonia",
                        "attendees": [
                          {
                            "email_address": "attendee@pipedrivemail.com",
                            "is_organizer": 0,
                            "name": "Attendee",
                            "person_id": 25312,
                            "status": "noreply",
                            "user_id": null
                          }
                        ],
                        "participants": [
                          { "person_id": 17985, "primary_flag": false },
                          { "person_id": 1101, "primary_flag": true }
                        ],
                        "org_name": "Organization",
                        "person_name": "Person",
                        "deal_title": "Deal",
                        "owner_name": "Creator",
                        "person_dropbox_bcc": "company@pipedrivemail.com",
                        "deal_dropbox_bcc": "company+deal300@pipedrivemail.com",
                        "assigned_to_user_id": 1235,
                        "file": {
                          "id": "376892,",
                          "clean_name": "Audio 10:55:07.m4a",
                          "url": "https://pipedrive-files.s3-eu-west-1.amazonaws.com/Audio-recording.m4a"
                        }
                      }
                    },
                    {
                      "object": "mailMessage",
                      "timestamp": "2020-08-10 11:52:26",
                      "data": {
                        "attachments": [
                          {
                            "id": 1,
                            "user_id": 8877,
                            "deal_id": 1,
                            "person_id": 1,
                            "org_id": 1480,
                            "product_id": 1,
                            "activity_id": 1,
                            "lead_id": "adf21080-0e10-11eb-879b-05d71fb426ec",
                            "log_id": null,
                            "add_time": "2020-09-16 11:19:36",
                            "update_time": "2020-09-16 11:19:36",
                            "file_name": "95781006_794143070992462_4330873630616453120_n_60817458877506f9eb74d03e5ef9ba061915b797998.jpg",
                            "file_type": "img",
                            "file_size": 95116,
                            "active_flag": true,
                            "inline_flag": false,
                            "remote_location": "s3",
                            "remote_id": "95781006_794143070992462_4330873630616453120_n.jpg",
                            "cid": "",
                            "s3_bucket": "",
                            "mail_message_id": "",
                            "mail_template_id": "",
                            "deal_name": "nice deal",
                            "person_name": "",
                            "people_name": "",
                            "org_name": "Pipedrive Inc.",
                            "product_name": "",
                            "lead_name": "nice lead",
                            "url": "https://app.pipedrive.com/api/v1/files/304/download",
                            "name": "95781006_794143070992462_4330873630616453120_n.jpg",
                            "description": ""
                          }
                        ],
                        "id": 1,
                        "from": [
                          {
                            "id": 1,
                            "email_address": "mail@example.org",
                            "name": "Test",
                            "linked_person_id": 1,
                            "linked_person_name": "",
                            "mail_message_party_id": 1
                          }
                        ],
                        "to": [
                          {
                            "id": 1,
                            "email_address": "mail@example.org",
                            "name": "Test",
                            "linked_person_id": 1,
                            "linked_person_name": "",
                            "mail_message_party_id": 1
                          }
                        ],
                        "cc": [
                          {
                            "id": 1,
                            "email_address": "mail@example.org",
                            "name": "Test",
                            "linked_person_id": 1,
                            "linked_person_name": "",
                            "mail_message_party_id": 1
                          }
                        ],
                        "bcc": [
                          {
                            "id": 1,
                            "email_address": "mail@example.org",
                            "name": "Test",
                            "linked_person_id": 1,
                            "linked_person_name": "",
                            "mail_message_party_id": 1
                          }
                        ],
                        "body_url": "https://example.org",
                        "nylas_id": "8cfw8n7l4iy24xxxxxxxxx",
                        "account_id": "ao5gpry0zykr1xxxxxxxxx",
                        "user_id": 1,
                        "mail_thread_id": 1,
                        "subject": "test subject",
                        "snippet": "test subject",
                        "mail_tracking_status": "opened",
                        "mail_link_tracking_enabled_flag": 0,
                        "read_flag": 1,
                        "draft": "",
                        "s3_bucket": "pipedrive-mail-live-fr",
                        "s3_bucket_path": "e9cf-6081745/77777/nylas/111/1111/body",
                        "draft_flag": 0,
                        "synced_flag": 1,
                        "deleted_flag": 0,
                        "external_deleted_flag": false,
                        "has_body_flag": 1,
                        "sent_flag": 0,
                        "sent_from_pipedrive_flag": 0,
                        "smart_bcc_flag": 0,
                        "message_time": "2019-11-14T06:02:06.000Z",
                        "add_time": "2019-11-14T06:02:06.000Z",
                        "update_time": "2019-11-14T07:15:49.000Z",
                        "has_attachments_flag": 1,
                        "has_inline_attachments_flag": 0,
                        "has_real_attachments_flag": 1,
                        "mua_message_id": "8cfw8n7l4iy24lfhnexxxxxx-0@mailer.nylas.com",
                        "template_id": 1,
                        "item_type": "mailMessage",
                        "timestamp": "2020-09-16T13:37:50.000Z",
                        "company_id": 6081745
                      }
                    }
                  ],
                  "additional_data": {
                    "pagination": {
                      "start": 0,
                      "limit": 100,
                      "more_items_in_collection": true
                    }
                  },
                  "related_objects": {
                    "allOf": [
                      {
                        "user": {
                          "123": {
                            "id": 123,
                            "name": "Jane Doe",
                            "email": "jane@pipedrive.com",
                            "has_pic": 1,
                            "pic_hash": "2611ace8ac6a3afe2f69ed56f9e08c6b",
                            "active_flag": true
                          }
                        }
                      },
                      {
                        "person": {
                          "1101": {
                            "active_flag": true,
                            "id": 1101,
                            "name": "Person",
                            "email": [
                              {
                                "label": "work",
                                "value": "person@pipedrive.com",
                                "primary": true
                              }
                            ],
                            "phone": [
                              {
                                "label": "work",
                                "value": "3421787767",
                                "primary": true
                              }
                            ],
                            "owner_id": 8877
                          }
                        }
                      },
                      {
                        "organization": {
                          "1": {
                            "id": 1,
                            "name": "Org Name",
                            "people_count": 1,
                            "owner_id": 123,
                            "address": "Mustamäe tee 3a, 10615 Tallinn",
                            "active_flag": true,
                            "cc_email": "org@pipedrivemail.com"
                          }
                        }
                      },
                      {
                        "deal": {
                          "123": {
                            "id": 123,
                            "title": "Deal title",
                            "status": "open",
                            "value": 600,
                            "currency": "EUR",
                            "stage_id": 2,
                            "pipeline_id": 1
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/deals/{id}/followers": {
      "get": {
        "summary": "List followers of a deal",
        "description": "Lists the followers of a deal.",
        "operationId": "getDealFollowers",
        "tags": [ "Deals" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the deal",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "getAssociatedFollowers",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "description": "The list of followers",
                          "items": {
                            "type": "object",
                            "properties": {
                              "user_id": {
                                "type": "integer",
                                "description": "The ID of the user"
                              },
                              "id": {
                                "type": "integer",
                                "description": "The ID of the user follower"
                              },
                              "deal_id": {
                                "type": "integer",
                                "description": "The ID of the deal which the follower was added to"
                              },
                              "add_time": {
                                "type": "string",
                                "description": "The date and time when the follower was added to the person"
                              }
                            }
                          }
                        },
                        "additional_data": {
                          "description": "The additional data of the list",
                          "type": "object",
                          "properties": {
                            "start": {
                              "type": "integer",
                              "description": "Pagination start"
                            },
                            "limit": {
                              "type": "integer",
                              "description": "Items shown per page"
                            },
                            "more_items_in_collection": {
                              "type": "boolean",
                              "description": "If there are more list items in the collection than displayed or not"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "success": true,
                  "data": [
                    {
                      "user_id": 123,
                      "id": 456,
                      "deal_id": 789,
                      "add_time": "2020-09-09 11:36:23"
                    }
                  ],
                  "additional_data": {
                    "pagination": {
                      "start": 0,
                      "limit": 100,
                      "more_items_in_collection": true
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add a follower to a deal",
        "description": "Adds a follower to a deal.",
        "operationId": "addDealFollower",
        "tags": [ "Deals" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the deal",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "addDealFollowerRequest",
                "type": "object",
                "required": [ "user_id" ],
                "properties": {
                  "user_id": {
                    "type": "integer",
                    "description": "The ID of the user"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Add a follower to a deal",
            "content": {
              "application/json": {
                "schema": {
                  "title": "addDealFollower",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "If the response is successful or not"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "user_id": {
                          "type": "integer",
                          "description": "The user ID who added the follower"
                        },
                        "id": {
                          "type": "integer",
                          "description": "The follower ID"
                        },
                        "deal_id": {
                          "type": "integer",
                          "description": "The ID of the deal which the follower was added to"
                        },
                        "add_time": {
                          "type": "string",
                          "description": "The date and time when the deal follower was added"
                        }
                      }
                    }
                  }
                },
                "example": {
                  "success": true,
                  "data": {
                    "user_id": 1,
                    "id": 2,
                    "deal_id": 3,
                    "add_time": "2018-04-11 12:54:43"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/deals/{id}/followers/{follower_id}": {
      "delete": {
        "summary": "Delete a follower from a deal",
        "description": "Deletes a follower from a deal.",
        "operationId": "deleteDealFollower",
        "tags": [ "Deals" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the deal",
            "required": true,
            "schema": { "type": "integer" }
          },
          {
            "in": "path",
            "name": "follower_id",
            "required": true,
            "schema": { "type": "integer" },
            "description": "The ID of the follower"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete a follower from a deal",
            "content": {
              "application/json": {
                "schema": {
                  "title": "deleteDealFollower",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "If the request was successful or not"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "description": "The ID of the deal follower that was deleted"
                        }
                      }
                    }
                  }
                },
                "example": { "success": true, "data": { "id": 123 } }
              }
            }
          }
        }
      }
    },
    "/deals/{id}/mailMessages": {
      "get": {
        "summary": "List mail messages associated with a deal",
        "description": "Lists mail messages associated with a deal.",
        "operationId": "getDealMailMessages",
        "tags": [ "Deals" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the deal",
            "required": true,
            "schema": { "type": "integer" }
          },
          {
            "in": "query",
            "name": "start",
            "description": "Pagination start",
            "schema": { "type": "integer", "default": 0 }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Items shown per page",
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "getAssociatedMailMessages",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "description": "The array of mail messages",
                          "items": {
                            "type": "object",
                            "properties": {
                              "object": {
                                "type": "string",
                                "description": "The type of the data item"
                              },
                              "timestamp": {
                                "type": "string",
                                "description": "The date and time when the item was created"
                              },
                              "data": {
                                "title": "mailMessageItemForList",
                                "allOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "description": "ID of the mail message.",
                                        "type": "integer"
                                      },
                                      "from": {
                                        "type": "array",
                                        "description": "The array of mail message sender (object)",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "description": "ID of the mail participant",
                                              "type": "integer"
                                            },
                                            "email_address": {
                                              "description": "Mail address of the mail participant",
                                              "type": "string"
                                            },
                                            "name": {
                                              "description": "Name of the mail participant",
                                              "type": "string"
                                            },
                                            "linked_person_id": {
                                              "description": "ID of the linked person to the mail message",
                                              "type": "integer"
                                            },
                                            "linked_person_name": {
                                              "description": "Name of the linked person to the mail message",
                                              "type": "string"
                                            },
                                            "mail_message_party_id": {
                                              "description": "ID of the mail message participant",
                                              "type": "integer"
                                            }
                                          }
                                        }
                                      },
                                      "to": {
                                        "type": "array",
                                        "description": "The array of mail message receiver (object)",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "description": "ID of the mail participant",
                                              "type": "integer"
                                            },
                                            "email_address": {
                                              "description": "Mail address of the mail participant",
                                              "type": "string"
                                            },
                                            "name": {
                                              "description": "Name of the mail participant",
                                              "type": "string"
                                            },
                                            "linked_person_id": {
                                              "description": "ID of the linked person to the mail message",
                                              "type": "integer"
                                            },
                                            "linked_person_name": {
                                              "description": "Name of the linked person to the mail message",
                                              "type": "string"
                                            },
                                            "mail_message_party_id": {
                                              "description": "ID of the mail message participant",
                                              "type": "integer"
                                            }
                                          }
                                        }
                                      },
                                      "cc": {
                                        "type": "array",
                                        "description": "The array of mail message copies (object)",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "description": "ID of the mail participant",
                                              "type": "integer"
                                            },
                                            "email_address": {
                                              "description": "Mail address of the mail participant",
                                              "type": "string"
                                            },
                                            "name": {
                                              "description": "Name of the mail participant",
                                              "type": "string"
                                            },
                                            "linked_person_id": {
                                              "description": "ID of the linked person to the mail message",
                                              "type": "integer"
                                            },
                                            "linked_person_name": {
                                              "description": "Name of the linked person to the mail message",
                                              "type": "string"
                                            },
                                            "mail_message_party_id": {
                                              "description": "ID of the mail message participant",
                                              "type": "integer"
                                            }
                                          }
                                        }
                                      },
                                      "bcc": {
                                        "type": "array",
                                        "description": "The array of mail message blind copies (object)",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "description": "ID of the mail participant",
                                              "type": "integer"
                                            },
                                            "email_address": {
                                              "description": "Mail address of the mail participant",
                                              "type": "string"
                                            },
                                            "name": {
                                              "description": "Name of the mail participant",
                                              "type": "string"
                                            },
                                            "linked_person_id": {
                                              "description": "ID of the linked person to the mail message",
                                              "type": "integer"
                                            },
                                            "linked_person_name": {
                                              "description": "Name of the linked person to the mail message",
                                              "type": "string"
                                            },
                                            "mail_message_party_id": {
                                              "description": "ID of the mail message participant",
                                              "type": "integer"
                                            }
                                          }
                                        }
                                      },
                                      "body_url": {
                                        "type": "string",
                                        "description": "The mail message body URL"
                                      },
                                      "account_id": {
                                        "type": "string",
                                        "description": "The connection account ID"
                                      },
                                      "user_id": {
                                        "type": "integer",
                                        "description": "ID of the user whom mail message will be assigned to"
                                      },
                                      "mail_thread_id": {
                                        "type": "integer",
                                        "description": "ID of the mail message thread"
                                      },
                                      "subject": {
                                        "type": "string",
                                        "description": "The subject of mail message"
                                      },
                                      "snippet": {
                                        "type": "string",
                                        "description": "The snippet of mail message. Snippet length is up to 225 characters."
                                      },
                                      "mail_tracking_status": {
                                        "type": "string",
                                        "nullable": true,
                                        "description": "The status of tracking mail message. Value is `null` if tracking is not enabled.",
                                        "enum": [ "opened", "not opened" ]
                                      },
                                      "mail_link_tracking_enabled_flag": {
                                        "description": "Whether the link tracking in mail message body is enabled.",
                                        "allOf": [
                                          {
                                            "title": "numberBooleanDefault0",
                                            "type": "number",
                                            "default": 0,
                                            "enum": [ 0, 1 ]
                                          }
                                        ]
                                      },
                                      "read_flag": {
                                        "description": "Whether the mail message is read or not by the user",
                                        "allOf": [
                                          {
                                            "title": "numberBooleanDefault0",
                                            "type": "number",
                                            "default": 0,
                                            "enum": [ 0, 1 ]
                                          }
                                        ]
                                      },
                                      "draft": {
                                        "type": "string",
                                        "description": "If the mail message has a draft status then the value is the mail message object as JSON formatted string, otherwise `null`."
                                      },
                                      "draft_flag": {
                                        "description": "Whether the mail message is a draft or not",
                                        "allOf": [
                                          {
                                            "title": "numberBooleanDefault0",
                                            "type": "number",
                                            "default": 0,
                                            "enum": [ 0, 1 ]
                                          }
                                        ]
                                      },
                                      "synced_flag": {
                                        "description": "Whether the mail message is synced with the provider or not",
                                        "allOf": [
                                          {
                                            "title": "numberBooleanDefault0",
                                            "type": "number",
                                            "default": 0,
                                            "enum": [ 0, 1 ]
                                          }
                                        ]
                                      },
                                      "deleted_flag": {
                                        "allOf": [
                                          {
                                            "title": "numberBooleanDefault0",
                                            "type": "number",
                                            "default": 0,
                                            "enum": [ 0, 1 ]
                                          }
                                        ],
                                        "description": "Whether the mail message is deleted or not"
                                      },
                                      "has_body_flag": {
                                        "description": "Whether the mail message has a body or not",
                                        "allOf": [
                                          {
                                            "title": "numberBooleanDefault0",
                                            "type": "number",
                                            "default": 0,
                                            "enum": [ 0, 1 ]
                                          }
                                        ]
                                      },
                                      "sent_flag": {
                                        "description": "Whether the mail message has been sent or not",
                                        "allOf": [
                                          {
                                            "title": "numberBooleanDefault0",
                                            "type": "number",
                                            "default": 0,
                                            "enum": [ 0, 1 ]
                                          }
                                        ]
                                      },
                                      "sent_from_pipedrive_flag": {
                                        "description": "Whether the mail message has been sent from Pipedrive app or not",
                                        "allOf": [
                                          {
                                            "title": "numberBooleanDefault0",
                                            "type": "number",
                                            "default": 0,
                                            "enum": [ 0, 1 ]
                                          }
                                        ]
                                      },
                                      "smart_bcc_flag": {
                                        "description": "Whether the mail message has been created by Smart Email BCC feature or not",
                                        "allOf": [
                                          {
                                            "title": "numberBooleanDefault0",
                                            "type": "number",
                                            "default": 0,
                                            "enum": [ 0, 1 ]
                                          }
                                        ]
                                      },
                                      "message_time": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "Creation or receival time of the mail message"
                                      },
                                      "add_time": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "The insertion into the database time of the mail message"
                                      },
                                      "update_time": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "The updating time in the database of the mail message"
                                      },
                                      "has_attachments_flag": {
                                        "description": "Whether the mail message has an attachment or not",
                                        "allOf": [
                                          {
                                            "title": "numberBooleanDefault0",
                                            "type": "number",
                                            "default": 0,
                                            "enum": [ 0, 1 ]
                                          }
                                        ]
                                      },
                                      "has_inline_attachments_flag": {
                                        "description": "Whether the mail message has an inline attachment or not",
                                        "allOf": [
                                          {
                                            "title": "numberBooleanDefault0",
                                            "type": "number",
                                            "default": 0,
                                            "enum": [ 0, 1 ]
                                          }
                                        ]
                                      },
                                      "has_real_attachments_flag": {
                                        "description": "Whether the mail message has an attachment (which is not inline) or not",
                                        "allOf": [
                                          {
                                            "title": "numberBooleanDefault0",
                                            "type": "number",
                                            "default": 0,
                                            "enum": [ 0, 1 ]
                                          }
                                        ]
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "nylas_id": {
                                        "type": "string",
                                        "description": "The Mail Message ID assigned by the sync provider"
                                      },
                                      "s3_bucket": {
                                        "type": "string",
                                        "description": "The name of the S3 bucket"
                                      },
                                      "s3_bucket_path": {
                                        "type": "string",
                                        "description": "The path of the S3 bucket"
                                      },
                                      "external_deleted_flag": {
                                        "type": "boolean",
                                        "description": "If the Mail Message has been deleted on the provider side or not"
                                      },
                                      "mua_message_id": {
                                        "type": "string",
                                        "description": "The Mail Message ID assigned by the mail user agent"
                                      },
                                      "template_id": {
                                        "type": "integer",
                                        "description": "The ID of the mail template"
                                      },
                                      "timestamp": {
                                        "type": "string",
                                        "description": "The add date and time of the Mail Message"
                                      },
                                      "item_type": {
                                        "type": "string",
                                        "description": "The type of the data item"
                                      },
                                      "company_id": {
                                        "type": "integer",
                                        "description": "The ID of the company"
                                      }
                                    }
                                  }
                                ]
                              }
                            }
                          }
                        },
                        "additional_data": {
                          "description": "The additional data of the list",
                          "type": "object",
                          "properties": {
                            "start": {
                              "type": "integer",
                              "description": "Pagination start"
                            },
                            "limit": {
                              "type": "integer",
                              "description": "Items shown per page"
                            },
                            "more_items_in_collection": {
                              "type": "boolean",
                              "description": "If there are more list items in the collection than displayed or not"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "success": true,
                  "data": [
                    {
                      "object": "mailMessage",
                      "timestamp": "2020-09-16 13:38:17",
                      "data": {
                        "id": 1,
                        "from": [
                          {
                            "id": 1,
                            "email_address": "mail@example.org",
                            "name": "Test",
                            "linked_person_id": 1,
                            "linked_person_name": "",
                            "mail_message_party_id": 1
                          }
                        ],
                        "to": [
                          {
                            "id": 1,
                            "email_address": "mail@example.org",
                            "name": "Test",
                            "linked_person_id": 1,
                            "linked_person_name": "",
                            "mail_message_party_id": 1
                          }
                        ],
                        "cc": [
                          {
                            "id": 1,
                            "email_address": "mail@example.org",
                            "name": "Test",
                            "linked_person_id": 1,
                            "linked_person_name": "",
                            "mail_message_party_id": 1
                          }
                        ],
                        "bcc": [
                          {
                            "id": 1,
                            "email_address": "mail@example.org",
                            "name": "Test",
                            "linked_person_id": 1,
                            "linked_person_name": "",
                            "mail_message_party_id": 1
                          }
                        ],
                        "body_url": "https://example.org",
                        "nylas_id": "8cfw8n7l4iy24xxxxxxxxx",
                        "account_id": "ao5gpry0zykr1xxxxxxxxx",
                        "user_id": 1,
                        "mail_thread_id": 1,
                        "subject": "test subject",
                        "snippet": "test subject",
                        "mail_tracking_status": "opened",
                        "mail_link_tracking_enabled_flag": 0,
                        "read_flag": 1,
                        "draft": "",
                        "s3_bucket": "pipedrive-mail-live-fr",
                        "s3_bucket_path": "e9cf-6081745/77777/nylas/111/1111/body",
                        "draft_flag": 0,
                        "synced_flag": 1,
                        "deleted_flag": 0,
                        "external_deleted_flag": false,
                        "has_body_flag": 1,
                        "sent_flag": 0,
                        "sent_from_pipedrive_flag": 0,
                        "smart_bcc_flag": 0,
                        "message_time": "2019-11-14T06:02:06.000Z",
                        "add_time": "2019-11-14T06:02:06.000Z",
                        "update_time": "2019-11-14T07:15:49.000Z",
                        "has_attachments_flag": 1,
                        "has_inline_attachments_flag": 0,
                        "has_real_attachments_flag": 1,
                        "mua_message_id": "8cfw8n7l4iy24lfhnexxxxxx-0@mailer.nylas.com",
                        "template_id": 1,
                        "item_type": "mailMessage",
                        "timestamp": "2020-09-16T13:37:50.000Z",
                        "company_id": 6081745
                      }
                    }
                  ],
                  "additional_data": {
                    "pagination": {
                      "start": 0,
                      "limit": 100,
                      "more_items_in_collection": true
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/deals/{id}/merge": {
      "put": {
        "summary": "Merge two deals",
        "description": "Merges a deal with another deal. For more information, see the tutorial for <a href=\"https://pipedrive.readme.io/docs/merging-two-deals\" target=\"_blank\" rel=\"noopener noreferrer\">merging two deals</a>.",
        "operationId": "mergeDeals",
        "tags": [ "Deals" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the deal",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "mergeDealsRequest",
                "type": "object",
                "required": [ "merge_with_id" ],
                "properties": {
                  "merge_with_id": {
                    "type": "integer",
                    "description": "The ID of the deal that the deal will be merged with"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Merges a deal with another deal",
            "content": {
              "application/json": {
                "schema": {
                  "title": "mergeDeals",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "If the response is successful or not"
                    },
                    "data": {
                      "allOf": [
                        {
                          "title": "dealStrict",
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "description": "The ID of the deal"
                                },
                                "creator_user_id": {
                                  "type": "integer",
                                  "description": "The ID of the deal creator"
                                },
                                "user_id": {
                                  "type": "integer",
                                  "description": "The ID of the user"
                                },
                                "person_id": {
                                  "type": "integer",
                                  "description": "The ID of the person associated with the deal"
                                },
                                "org_id": {
                                  "type": "integer",
                                  "description": "The ID of the organization associated with the deal"
                                }
                              }
                            },
                            {
                              "title": "baseDeal",
                              "type": "object",
                              "properties": {
                                "stage_id": {
                                  "type": "integer",
                                  "description": "The ID of the deal stage"
                                },
                                "title": {
                                  "type": "string",
                                  "description": "The title of the deal"
                                },
                                "value": {
                                  "type": "number",
                                  "description": "The value of the deal"
                                },
                                "currency": {
                                  "type": "string",
                                  "description": "The currency associated with the deal"
                                },
                                "add_time": {
                                  "type": "string",
                                  "description": "The creation date and time of the deal"
                                },
                                "update_time": {
                                  "type": "string",
                                  "description": "The last updated date and time of the deal"
                                },
                                "stage_change_time": {
                                  "type": "string",
                                  "description": "The last updated date and time of the deal stage"
                                },
                                "active": {
                                  "type": "boolean",
                                  "description": "Whether the deal is active or not"
                                },
                                "deleted": {
                                  "type": "boolean",
                                  "description": "Whether the deal is deleted or not"
                                },
                                "status": {
                                  "type": "string",
                                  "description": "The status of the deal"
                                },
                                "probability": {
                                  "type": "number",
                                  "nullable": true,
                                  "description": "The success probability percentage of the deal"
                                },
                                "next_activity_date": {
                                  "type": "string",
                                  "description": "The date of the next activity associated with the deal"
                                },
                                "next_activity_time": {
                                  "type": "string",
                                  "description": "The time of the next activity associated with the deal"
                                },
                                "next_activity_id": {
                                  "type": "integer",
                                  "nullable": true,
                                  "description": "The ID of the next activity associated with the deal"
                                },
                                "last_activity_id": {
                                  "type": "integer",
                                  "nullable": true,
                                  "description": "The ID of the last activity associated with the deal"
                                },
                                "last_activity_date": {
                                  "type": "string",
                                  "nullable": true,
                                  "description": "The date of the last activity associated with the deal"
                                },
                                "lost_reason": {
                                  "type": "string",
                                  "nullable": true,
                                  "description": "The reason for losing the deal"
                                },
                                "visible_to": {
                                  "type": "string",
                                  "description": "The visibility of the deal"
                                },
                                "close_time": {
                                  "type": "string",
                                  "nullable": true,
                                  "description": "The date and time of closing the deal"
                                },
                                "pipeline_id": {
                                  "type": "integer",
                                  "description": "The ID of pipeline associated with the deal"
                                },
                                "won_time": {
                                  "type": "string",
                                  "description": "The date and time of changing the deal status as won"
                                },
                                "first_won_time": {
                                  "type": "string",
                                  "description": "The date and time of the first time changing the deal status as won"
                                },
                                "lost_time": {
                                  "type": "string",
                                  "description": "The date and time of changing the deal status as lost"
                                },
                                "products_count": {
                                  "type": "integer",
                                  "description": "The number of products associated with the deal"
                                },
                                "files_count": {
                                  "type": "integer",
                                  "description": "The number of files associated with the deal"
                                },
                                "notes_count": {
                                  "type": "integer",
                                  "description": "The number of notes associated with the deal"
                                },
                                "followers_count": {
                                  "type": "integer",
                                  "description": "The number of followers associated with the deal"
                                },
                                "email_messages_count": {
                                  "type": "integer",
                                  "description": "The number of emails associated with the deal"
                                },
                                "activities_count": {
                                  "type": "integer",
                                  "description": "The number of activities associated with the deal"
                                },
                                "done_activities_count": {
                                  "type": "integer",
                                  "description": "The number of completed activities associated with the deal"
                                },
                                "undone_activities_count": {
                                  "type": "integer",
                                  "description": "The number of incomplete activities associated with the deal"
                                },
                                "participants_count": {
                                  "type": "integer",
                                  "description": "The number of participants associated with the deal"
                                },
                                "expected_close_date": {
                                  "type": "string",
                                  "format": "date",
                                  "description": "The expected close date of the deal"
                                },
                                "last_incoming_mail_time": {
                                  "type": "string",
                                  "description": "The date and time of the last incoming email associated with the deal"
                                },
                                "last_outgoing_mail_time": {
                                  "type": "string",
                                  "description": "The date and time of the last outgoing email associated with the deal"
                                },
                                "label": {
                                  "type": "integer",
                                  "description": "The label assigned to the deal"
                                },
                                "stage_order_nr": {
                                  "type": "integer",
                                  "description": "The order number of the deal stage associated with the deal"
                                },
                                "person_name": {
                                  "type": "string",
                                  "description": "The name of the person associated with the deal"
                                },
                                "org_name": {
                                  "type": "string",
                                  "description": "The name of the organization associated with the deal"
                                },
                                "next_activity_subject": {
                                  "type": "string",
                                  "description": "The subject of the next activity associated with the deal"
                                },
                                "next_activity_type": {
                                  "type": "string",
                                  "description": "The type of the next activity associated with the deal"
                                },
                                "next_activity_duration": {
                                  "type": "string",
                                  "description": "The duration of the next activity associated with the deal"
                                },
                                "next_activity_note": {
                                  "type": "string",
                                  "description": "The note of the next activity associated with the deal"
                                },
                                "formatted_value": {
                                  "type": "string",
                                  "description": "The deal value formatted with selected currency. E.g. US$500"
                                },
                                "weighted_value": {
                                  "type": "number",
                                  "description": "Probability times deal value. Probability can either be deal probability or if not set, then stage probability."
                                },
                                "formatted_weighted_value": {
                                  "type": "string",
                                  "description": "The weighted_value formatted with selected currency. E.g. US$500"
                                },
                                "weighted_value_currency": {
                                  "type": "string",
                                  "description": "The currency associated with the deal"
                                },
                                "rotten_time": {
                                  "type": "string",
                                  "nullable": true,
                                  "description": "The date and time of changing the deal status as rotten"
                                },
                                "owner_name": {
                                  "type": "string",
                                  "description": "The name of the deal owner"
                                },
                                "cc_email": {
                                  "type": "string",
                                  "description": "The BCC email of the deal"
                                },
                                "org_hidden": {
                                  "type": "boolean",
                                  "description": "If the organization that is associated with the deal is hidden or not"
                                },
                                "person_hidden": {
                                  "type": "boolean",
                                  "description": "If the person that is associated with the deal is hidden or not"
                                }
                              }
                            }
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "merge_what_id": {
                              "type": "integer",
                              "description": "The deal ID of the deal which the original deal was merged with"
                            }
                          }
                        }
                      ]
                    }
                  }
                },
                "example": {
                  "success": true,
                  "data": {
                    "id": 1,
                    "creator_user_id": 123,
                    "user_id": 456,
                    "person_id": 1,
                    "org_id": 2,
                    "stage_id": 2,
                    "title": "Deal One",
                    "value": 5000,
                    "currency": "EUR",
                    "add_time": "2019-05-29 04:21:51",
                    "update_time": "2019-06-29 05:20:31",
                    "stage_change_time": "2019-11-28 15:41:22",
                    "active": true,
                    "deleted": false,
                    "status": "open",
                    "probability": null,
                    "next_activity_date": "2019-11-29",
                    "next_activity_time": "11:30:00",
                    "next_activity_id": 128,
                    "last_activity_id": null,
                    "last_activity_date": null,
                    "lost_reason": null,
                    "visible_to": "1",
                    "close_time": null,
                    "pipeline_id": 1,
                    "won_time": "2019-11-27 11:40:36",
                    "first_won_time": "2019-11-27 11:40:36",
                    "lost_time": "",
                    "products_count": 0,
                    "files_count": 0,
                    "notes_count": 2,
                    "followers_count": 0,
                    "email_messages_count": 4,
                    "activities_count": 1,
                    "done_activities_count": 0,
                    "undone_activities_count": 1,
                    "participants_count": 1,
                    "expected_close_date": "2019-06-29",
                    "last_incoming_mail_time": "2019-05-29 18:21:42",
                    "last_outgoing_mail_time": "2019-05-30 03:45:35",
                    "label": 11,
                    "stage_order_nr": 2,
                    "person_name": "Person",
                    "org_name": "Organization",
                    "next_activity_subject": "Call",
                    "next_activity_type": "call",
                    "next_activity_duration": "00:30:00",
                    "next_activity_note": "Note content",
                    "formatted_value": "€5,000",
                    "weighted_value": 5000,
                    "formatted_weighted_value": "€5,000",
                    "weighted_value_currency": "EUR",
                    "rotten_time": null,
                    "owner_name": "Creator",
                    "cc_email": "company+deal1@pipedrivemail.com",
                    "org_hidden": false,
                    "person_hidden": false,
                    "merge_what_id": 2
                  }
                }
              }
            }
          }
        }
      }
    },
    "/deals/{id}/participants": {
      "get": {
        "summary": "List participants of a deal",
        "description": "Lists the participants associated with a deal.<br>If a company uses the [Campaigns product](https://pipedrive.readme.io/docs/campaigns-in-pipedrive-api), then this endpoint will also return the `data.marketing_status` field.",
        "operationId": "getDealParticipants",
        "tags": [ "Deals" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the deal",
            "required": true,
            "schema": { "type": "integer" }
          },
          {
            "in": "query",
            "name": "start",
            "description": "Pagination start",
            "schema": { "type": "integer", "default": 0 }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Items shown per page",
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "Get all deal participants by the DealID",
            "content": {
              "application/json": {
                "schema": {
                  "title": "getDealParticipants",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "If the request was successful or not"
                    },
                    "data": {
                      "type": "array",
                      "description": "The array of participants",
                      "items": {
                        "type": "object",
                        "title": "personItem",
                        "allOf": [
                          {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer",
                                "description": "The ID of the person"
                              },
                              "company_id": {
                                "type": "integer",
                                "description": "The ID of the company related to the person"
                              },
                              "active_flag": {
                                "type": "boolean",
                                "description": "Whether the person is active or not"
                              },
                              "phone": {
                                "type": "array",
                                "description": "A phone number supplied as a string or an array of phone objects related to the person. The structure of the array is as follows: `[{ \"value\": \"12345\", \"primary\": \"true\", \"label\": \"mobile\" }]`. Please note that only `value` is required.",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "value": {
                                      "type": "string",
                                      "description": "The phone number"
                                    },
                                    "primary": {
                                      "type": "boolean",
                                      "description": "Boolean that indicates if phone number is primary for the person or not"
                                    },
                                    "label": {
                                      "type": "string",
                                      "description": "The label that indicates the type of the phone number. (Possible values - work, home, mobile or other)"
                                    }
                                  }
                                }
                              },
                              "email": {
                                "type": "array",
                                "description": "An email address as a string or an array of email objects related to the person. The structure of the array is as follows: `[{ \"value\": \"mail@example.com\", \"primary\": \"true\", \"label\": \"main\" } ]`. Please note that only `value` is required.",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "value": {
                                      "type": "string",
                                      "description": "Email"
                                    },
                                    "primary": {
                                      "type": "boolean",
                                      "description": "Boolean that indicates if email is primary for the person or not"
                                    },
                                    "label": {
                                      "type": "string",
                                      "description": "The label that indicates the type of the email. (Possible values - work, home or other)"
                                    }
                                  }
                                }
                              },
                              "first_char": {
                                "type": "string",
                                "description": "The first letter of the name of the person"
                              },
                              "add_time": {
                                "type": "string",
                                "description": "The date and time when the person was added/created. Format: YYYY-MM-DD HH:MM:SS"
                              },
                              "update_time": {
                                "type": "string",
                                "description": "The last updated date and time of the person. Format: YYYY-MM-DD HH:MM:SS"
                              },
                              "visible_to": {
                                "type": "string",
                                "description": "The visibility group ID of who can see the person"
                              },
                              "picture_id": {
                                "allOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "integer",
                                        "description": "The ID of the picture associated with the item"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "item_type": {
                                        "type": "string",
                                        "description": "The type of item the picture is related to"
                                      },
                                      "item_id": {
                                        "type": "integer",
                                        "description": "The ID of related item"
                                      },
                                      "active_flag": {
                                        "type": "boolean",
                                        "description": "Whether the associated picture is active or not"
                                      },
                                      "add_time": {
                                        "type": "string",
                                        "description": "The add time of the picture"
                                      },
                                      "update_time": {
                                        "type": "string",
                                        "description": "The update time of the picture"
                                      },
                                      "added_by_user_id": {
                                        "type": "integer",
                                        "description": "The ID of the user who added the picture"
                                      },
                                      "pictures": {
                                        "type": "object",
                                        "properties": {
                                          "128": {
                                            "type": "string",
                                            "description": "The URL of the 128*128 picture"
                                          },
                                          "512": {
                                            "type": "string",
                                            "description": "The URL of the 512*512 picture"
                                          }
                                        }
                                      }
                                    }
                                  }
                                ]
                              },
                              "label": {
                                "type": "integer",
                                "description": "The label assigned to the person"
                              },
                              "org_name": {
                                "type": "string",
                                "description": "The name of the organization associated with the person"
                              },
                              "owner_name": {
                                "type": "string",
                                "description": "The name of the owner associated with the person"
                              },
                              "cc_email": {
                                "type": "string",
                                "description": "The BCC email associated with the person"
                              }
                            }
                          },
                          {
                            "type": "object",
                            "title": "additionalPersonInfo",
                            "allOf": [
                              {
                                "type": "object",
                                "title": "personNameInfoWithOrgAndOwnerId",
                                "allOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "owner_id": {
                                        "title": "owner",
                                        "allOf": [
                                          {
                                            "properties": {
                                              "id": {
                                                "type": "integer",
                                                "description": "The ID of the user"
                                              },
                                              "name": {
                                                "type": "string",
                                                "description": "The name of the user"
                                              },
                                              "email": {
                                                "type": "string",
                                                "description": "The email of the user"
                                              },
                                              "has_pic": {
                                                "type": "integer",
                                                "description": "Whether the user has picture or not. 0 = No picture, 1 = Has picture."
                                              },
                                              "pic_hash": {
                                                "type": "string",
                                                "nullable": true,
                                                "description": "The user picture hash"
                                              },
                                              "active_flag": {
                                                "type": "boolean",
                                                "description": "Whether the user is active or not"
                                              }
                                            }
                                          },
                                          {
                                            "type": "object",
                                            "properties": {
                                              "value": {
                                                "type": "integer",
                                                "description": "The ID of the owner"
                                              }
                                            }
                                          }
                                        ]
                                      },
                                      "org_id": {
                                        "title": "relationshipOrganizationInfoItemWithActiveFlag",
                                        "allOf": [
                                          {
                                            "title": "relationshipOrganizationInfoItem",
                                            "allOf": [
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "name": {
                                                    "type": "string",
                                                    "description": "The name of the organization associated with the item"
                                                  },
                                                  "people_count": {
                                                    "type": "integer",
                                                    "description": "The number of people connected with the organization that is associated with the item"
                                                  },
                                                  "owner_id": {
                                                    "type": "integer",
                                                    "description": "The ID of the owner of the organization that is associated with the item"
                                                  },
                                                  "address": {
                                                    "type": "string",
                                                    "description": "The address of the organization"
                                                  },
                                                  "cc_email": {
                                                    "type": "string",
                                                    "description": "The BCC email of the organization associated with the item"
                                                  }
                                                }
                                              },
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "value": {
                                                    "type": "integer",
                                                    "description": "The ID of the organization"
                                                  }
                                                }
                                              }
                                            ]
                                          },
                                          {
                                            "type": "object",
                                            "properties": {
                                              "active_flag": {
                                                "type": "boolean",
                                                "description": "Whether the associated organization is active or not"
                                              }
                                            }
                                          }
                                        ]
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "description": "The name of the person"
                                      },
                                      "first_name": {
                                        "type": "string",
                                        "description": "The first name of the person"
                                      },
                                      "last_name": {
                                        "type": "string",
                                        "description": "The last name of the person"
                                      }
                                    }
                                  }
                                ]
                              },
                              {
                                "type": "object",
                                "title": "personCountEmailDealAndActivityInfo",
                                "allOf": [
                                  {
                                    "type": "object",
                                    "title": "personCountAndEmailInfo",
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "properties": {
                                          "email_messages_count": {
                                            "type": "integer",
                                            "description": "The count of email messages related to the person"
                                          },
                                          "activities_count": {
                                            "type": "integer",
                                            "description": "The count of activities related to the person"
                                          },
                                          "done_activities_count": {
                                            "type": "integer",
                                            "description": "The count of done activities related to the person"
                                          },
                                          "undone_activities_count": {
                                            "type": "integer",
                                            "description": "The count of undone activities related to the person"
                                          },
                                          "files_count": {
                                            "type": "integer",
                                            "description": "The count of files related to the person"
                                          },
                                          "notes_count": {
                                            "type": "integer",
                                            "description": "The count of notes related to the person"
                                          },
                                          "followers_count": {
                                            "type": "integer",
                                            "description": "The count of followers related to the person"
                                          }
                                        }
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "last_incoming_mail_time": {
                                            "type": "string",
                                            "description": "The date and time of the last incoming email associated with the person"
                                          },
                                          "last_outgoing_mail_time": {
                                            "type": "string",
                                            "description": "The date and time of the last outgoing email associated with the person"
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  {
                                    "type": "object",
                                    "title": "dealCountAndActivityInfo",
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "properties": {
                                          "open_deals_count": {
                                            "type": "integer",
                                            "description": "The count of open deals related with the item"
                                          },
                                          "related_open_deals_count": {
                                            "type": "integer",
                                            "description": "The count of related open deals related with the item"
                                          },
                                          "closed_deals_count": {
                                            "type": "integer",
                                            "description": "The count of closed deals related with the item"
                                          },
                                          "related_closed_deals_count": {
                                            "type": "integer",
                                            "description": "The count of related closed deals related with the item"
                                          },
                                          "won_deals_count": {
                                            "type": "integer",
                                            "description": "The count of won deals related with the item"
                                          },
                                          "related_won_deals_count": {
                                            "type": "integer",
                                            "description": "The count of related won deals related with the item"
                                          },
                                          "lost_deals_count": {
                                            "type": "integer",
                                            "description": "The count of lost deals related with the item"
                                          },
                                          "related_lost_deals_count": {
                                            "type": "integer",
                                            "description": "The count of related lost deals related with the item"
                                          }
                                        }
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "next_activity_date": {
                                            "type": "string",
                                            "description": "The date of the next activity associated with the deal"
                                          },
                                          "next_activity_time": {
                                            "type": "string",
                                            "description": "The time of the next activity associated with the deal"
                                          },
                                          "next_activity_id": {
                                            "type": "integer",
                                            "nullable": true,
                                            "description": "The ID of the next activity associated with the deal"
                                          },
                                          "last_activity_id": {
                                            "type": "integer",
                                            "nullable": true,
                                            "description": "The ID of the last activity associated with the deal"
                                          },
                                          "last_activity_date": {
                                            "type": "string",
                                            "nullable": true,
                                            "description": "The date of the last activity associated with the deal"
                                          }
                                        }
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    },
                    "additional_data": {
                      "description": "The additional data of the list",
                      "type": "object",
                      "properties": {
                        "start": {
                          "type": "integer",
                          "description": "Pagination start"
                        },
                        "limit": {
                          "type": "integer",
                          "description": "Items shown per page"
                        },
                        "more_items_in_collection": {
                          "type": "boolean",
                          "description": "If there are more list items in the collection than displayed or not"
                        }
                      }
                    },
                    "related_objects": {
                      "type": "object",
                      "properties": {
                        "user": {
                          "description": "The user who is associated with the deal",
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "description": "The ID of the user"
                            },
                            "name": {
                              "type": "string",
                              "description": "The name of the user"
                            },
                            "email": {
                              "type": "string",
                              "description": "The email of the user"
                            },
                            "has_pic": {
                              "type": "boolean",
                              "description": "If the user has a picture or not"
                            },
                            "pic_hash": {
                              "type": "string",
                              "nullable": true,
                              "description": "The user picture hash"
                            },
                            "active_flag": {
                              "type": "boolean",
                              "description": "Whether the user is active or not"
                            }
                          }
                        },
                        "organization": {
                          "type": "object",
                          "description": "The organization which is associated with the deal",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "The name of the organization associated with the deal"
                            },
                            "people_count": {
                              "type": "integer",
                              "description": "The number of people connected with the organization that is associated with the deal"
                            },
                            "owner_id": {
                              "type": "integer",
                              "description": "The ID of the owner of the organization that is associated with the deal"
                            },
                            "address": {
                              "type": "string",
                              "description": "The address of the organization that is associated with the deal"
                            },
                            "active_flag": {
                              "type": "boolean",
                              "description": "Whether the associated organization is active or not"
                            },
                            "cc_email": {
                              "type": "string",
                              "description": "The BCC email of the organization associated with the deal"
                            }
                          }
                        },
                        "person": {
                          "type": "object",
                          "description": "The person who is associated with the deal",
                          "properties": {
                            "active_flag": {
                              "type": "boolean",
                              "description": "Whether the associated person is active or not"
                            },
                            "name": {
                              "type": "string",
                              "description": "The name of the person associated with the deal"
                            },
                            "email": {
                              "type": "array",
                              "description": "The emails of the person associated with the deal",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "label": {
                                    "type": "string",
                                    "description": "The type of the email"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "The email of the associated person"
                                  },
                                  "primary": {
                                    "type": "boolean",
                                    "description": "If this is the primary email or not"
                                  }
                                }
                              }
                            },
                            "phone": {
                              "type": "array",
                              "description": "The phone numbers of the person associated with the deal",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "label": {
                                    "type": "string",
                                    "description": "The type of the phone number"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "The phone number of the person associated with the deal"
                                  },
                                  "primary": {
                                    "type": "boolean",
                                    "description": "If this is the primary phone number or not"
                                  }
                                }
                              }
                            },
                            "owner_id": {
                              "type": "integer",
                              "description": "The ID of the owner of the person that is associated with the deal"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "success": true,
                  "data": [
                    {
                      "id": 1092,
                      "person_id": {
                        "active_flag": true,
                        "name": "Peter Pan",
                        "email": [
                          {
                            "label": "work",
                            "value": "john.smith@pipedrive.com",
                            "primary": true
                          }
                        ],
                        "phone": [
                          {
                            "label": "work",
                            "value": "736174198",
                            "primary": true
                          }
                        ],
                        "value": 1598
                      },
                      "add_time": "2020-07-07 10:29:47",
                      "active_flag": true,
                      "related_item_data": {
                        "deal_id": 1078,
                        "title": "Neverland deal"
                      },
                      "person": {
                        "id": 1598,
                        "company_id": 4657212,
                        "owner_id": {
                          "id": 6900896,
                          "name": "Foo Bar",
                          "email": "foo.bar@pipedrive.com",
                          "has_pic": 0,
                          "pic_hash": null,
                          "active_flag": true,
                          "value": 6900896
                        },
                        "org_id": {
                          "name": "Neverland",
                          "people_count": 1,
                          "owner_id": 6900896,
                          "address": null,
                          "active_flag": true,
                          "cc_email": null,
                          "value": 314
                        },
                        "name": "Peter Pan",
                        "first_name": "Peter",
                        "last_name": "Pan",
                        "open_deals_count": 0,
                        "related_open_deals_count": 0,
                        "closed_deals_count": 0,
                        "related_closed_deals_count": 0,
                        "participant_open_deals_count": 0,
                        "participant_closed_deals_count": 0,
                        "email_messages_count": 0,
                        "activities_count": 4,
                        "done_activities_count": 1,
                        "undone_activities_count": 3,
                        "files_count": 1,
                        "notes_count": 12,
                        "followers_count": 1,
                        "won_deals_count": 0,
                        "related_won_deals_count": 0,
                        "lost_deals_count": 0,
                        "related_lost_deals_count": 0,
                        "active_flag": true,
                        "phone": [
                          {
                            "label": "work",
                            "value": "736174198",
                            "primary": true
                          }
                        ],
                        "email": [
                          {
                            "label": "work",
                            "value": "john.smith@pipedrive.com",
                            "primary": true
                          }
                        ],
                        "first_char": "p",
                        "update_time": "2020-08-31 14:25:11",
                        "add_time": "2020-07-07 10:29:47",
                        "visible_to": "3",
                        "picture_id": null,
                        "sync_needed": false,
                        "next_activity_date": "2020-07-01",
                        "next_activity_time": null,
                        "next_activity_id": 2448,
                        "last_activity_id": 2450,
                        "last_activity_date": "2020-07-02",
                        "last_incoming_mail_time": null,
                        "last_outgoing_mail_time": null,
                        "label": 5,
                        "org_name": "Neverland",
                        "owner_name": "Foo Bar",
                        "cc_email": null
                      },
                      "added_by_user_id": {
                        "id": 6900896,
                        "name": "Foo Bar",
                        "email": "foo.bar@pipedrive.com",
                        "has_pic": 0,
                        "pic_hash": null,
                        "active_flag": true,
                        "value": 6900896
                      },
                      "related_item_type": "deal",
                      "related_item_id": 1078
                    }
                  ],
                  "additional_data": {
                    "pagination": {
                      "start": 0,
                      "limit": 100,
                      "more_items_in_collection": false
                    }
                  },
                  "related_objects": {
                    "user": {
                      "6900896": {
                        "id": 6900896,
                        "name": "Foo Bar",
                        "email": "foo.bar@pipedrive.com",
                        "has_pic": 0,
                        "pic_hash": null,
                        "active_flag": true
                      }
                    },
                    "person": {
                      "1598": {
                        "active_flag": true,
                        "id": 1598,
                        "name": "Peter Pan",
                        "email": [
                          {
                            "label": "work",
                            "value": "john.smith@pipedrive.com",
                            "primary": true
                          }
                        ],
                        "phone": [
                          {
                            "label": "work",
                            "value": "736174198",
                            "primary": true
                          }
                        ],
                        "owner_id": 8877
                      }
                    },
                    "organization": {
                      "314": {
                        "id": 314,
                        "name": "Neverland",
                        "people_count": 1,
                        "owner_id": 6900896,
                        "address": null,
                        "active_flag": true,
                        "cc_email": null
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add a participant to a deal",
        "description": "Adds a participant to a deal.",
        "operationId": "addDealParticipant",
        "tags": [ "Deals" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the deal",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "addDealParticipantRequest",
                "type": "object",
                "required": [ "person_id" ],
                "properties": {
                  "person_id": {
                    "type": "integer",
                    "description": "The ID of the person"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Add new participant to the deal",
            "content": {
              "application/json": {
                "schema": {
                  "title": "addDealParticipant",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "If the request was successful or not"
                    },
                    "data": {
                      "allOf": [
                        {
                          "type": "object",
                          "title": "personItem",
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "description": "The ID of the person"
                                },
                                "company_id": {
                                  "type": "integer",
                                  "description": "The ID of the company related to the person"
                                },
                                "active_flag": {
                                  "type": "boolean",
                                  "description": "Whether the person is active or not"
                                },
                                "phone": {
                                  "type": "array",
                                  "description": "A phone number supplied as a string or an array of phone objects related to the person. The structure of the array is as follows: `[{ \"value\": \"12345\", \"primary\": \"true\", \"label\": \"mobile\" }]`. Please note that only `value` is required.",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "value": {
                                        "type": "string",
                                        "description": "The phone number"
                                      },
                                      "primary": {
                                        "type": "boolean",
                                        "description": "Boolean that indicates if phone number is primary for the person or not"
                                      },
                                      "label": {
                                        "type": "string",
                                        "description": "The label that indicates the type of the phone number. (Possible values - work, home, mobile or other)"
                                      }
                                    }
                                  }
                                },
                                "email": {
                                  "type": "array",
                                  "description": "An email address as a string or an array of email objects related to the person. The structure of the array is as follows: `[{ \"value\": \"mail@example.com\", \"primary\": \"true\", \"label\": \"main\" } ]`. Please note that only `value` is required.",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "value": {
                                        "type": "string",
                                        "description": "Email"
                                      },
                                      "primary": {
                                        "type": "boolean",
                                        "description": "Boolean that indicates if email is primary for the person or not"
                                      },
                                      "label": {
                                        "type": "string",
                                        "description": "The label that indicates the type of the email. (Possible values - work, home or other)"
                                      }
                                    }
                                  }
                                },
                                "first_char": {
                                  "type": "string",
                                  "description": "The first letter of the name of the person"
                                },
                                "add_time": {
                                  "type": "string",
                                  "description": "The date and time when the person was added/created. Format: YYYY-MM-DD HH:MM:SS"
                                },
                                "update_time": {
                                  "type": "string",
                                  "description": "The last updated date and time of the person. Format: YYYY-MM-DD HH:MM:SS"
                                },
                                "visible_to": {
                                  "type": "string",
                                  "description": "The visibility group ID of who can see the person"
                                },
                                "picture_id": {
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "integer",
                                          "description": "The ID of the picture associated with the item"
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "item_type": {
                                          "type": "string",
                                          "description": "The type of item the picture is related to"
                                        },
                                        "item_id": {
                                          "type": "integer",
                                          "description": "The ID of related item"
                                        },
                                        "active_flag": {
                                          "type": "boolean",
                                          "description": "Whether the associated picture is active or not"
                                        },
                                        "add_time": {
                                          "type": "string",
                                          "description": "The add time of the picture"
                                        },
                                        "update_time": {
                                          "type": "string",
                                          "description": "The update time of the picture"
                                        },
                                        "added_by_user_id": {
                                          "type": "integer",
                                          "description": "The ID of the user who added the picture"
                                        },
                                        "pictures": {
                                          "type": "object",
                                          "properties": {
                                            "128": {
                                              "type": "string",
                                              "description": "The URL of the 128*128 picture"
                                            },
                                            "512": {
                                              "type": "string",
                                              "description": "The URL of the 512*512 picture"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  ]
                                },
                                "label": {
                                  "type": "integer",
                                  "description": "The label assigned to the person"
                                },
                                "org_name": {
                                  "type": "string",
                                  "description": "The name of the organization associated with the person"
                                },
                                "owner_name": {
                                  "type": "string",
                                  "description": "The name of the owner associated with the person"
                                },
                                "cc_email": {
                                  "type": "string",
                                  "description": "The BCC email associated with the person"
                                }
                              }
                            },
                            {
                              "type": "object",
                              "title": "additionalPersonInfo",
                              "allOf": [
                                {
                                  "type": "object",
                                  "title": "personNameInfoWithOrgAndOwnerId",
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "owner_id": {
                                          "title": "owner",
                                          "allOf": [
                                            {
                                              "properties": {
                                                "id": {
                                                  "type": "integer",
                                                  "description": "The ID of the user"
                                                },
                                                "name": {
                                                  "type": "string",
                                                  "description": "The name of the user"
                                                },
                                                "email": {
                                                  "type": "string",
                                                  "description": "The email of the user"
                                                },
                                                "has_pic": {
                                                  "type": "integer",
                                                  "description": "Whether the user has picture or not. 0 = No picture, 1 = Has picture."
                                                },
                                                "pic_hash": {
                                                  "type": "string",
                                                  "nullable": true,
                                                  "description": "The user picture hash"
                                                },
                                                "active_flag": {
                                                  "type": "boolean",
                                                  "description": "Whether the user is active or not"
                                                }
                                              }
                                            },
                                            {
                                              "type": "object",
                                              "properties": {
                                                "value": {
                                                  "type": "integer",
                                                  "description": "The ID of the owner"
                                                }
                                              }
                                            }
                                          ]
                                        },
                                        "org_id": {
                                          "title": "relationshipOrganizationInfoItemWithActiveFlag",
                                          "allOf": [
                                            {
                                              "title": "relationshipOrganizationInfoItem",
                                              "allOf": [
                                                {
                                                  "type": "object",
                                                  "properties": {
                                                    "name": {
                                                      "type": "string",
                                                      "description": "The name of the organization associated with the item"
                                                    },
                                                    "people_count": {
                                                      "type": "integer",
                                                      "description": "The number of people connected with the organization that is associated with the item"
                                                    },
                                                    "owner_id": {
                                                      "type": "integer",
                                                      "description": "The ID of the owner of the organization that is associated with the item"
                                                    },
                                                    "address": {
                                                      "type": "string",
                                                      "description": "The address of the organization"
                                                    },
                                                    "cc_email": {
                                                      "type": "string",
                                                      "description": "The BCC email of the organization associated with the item"
                                                    }
                                                  }
                                                },
                                                {
                                                  "type": "object",
                                                  "properties": {
                                                    "value": {
                                                      "type": "integer",
                                                      "description": "The ID of the organization"
                                                    }
                                                  }
                                                }
                                              ]
                                            },
                                            {
                                              "type": "object",
                                              "properties": {
                                                "active_flag": {
                                                  "type": "boolean",
                                                  "description": "Whether the associated organization is active or not"
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "The name of the person"
                                        },
                                        "first_name": {
                                          "type": "string",
                                          "description": "The first name of the person"
                                        },
                                        "last_name": {
                                          "type": "string",
                                          "description": "The last name of the person"
                                        }
                                      }
                                    }
                                  ]
                                },
                                {
                                  "type": "object",
                                  "title": "personCountEmailDealAndActivityInfo",
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "title": "personCountAndEmailInfo",
                                      "allOf": [
                                        {
                                          "type": "object",
                                          "properties": {
                                            "email_messages_count": {
                                              "type": "integer",
                                              "description": "The count of email messages related to the person"
                                            },
                                            "activities_count": {
                                              "type": "integer",
                                              "description": "The count of activities related to the person"
                                            },
                                            "done_activities_count": {
                                              "type": "integer",
                                              "description": "The count of done activities related to the person"
                                            },
                                            "undone_activities_count": {
                                              "type": "integer",
                                              "description": "The count of undone activities related to the person"
                                            },
                                            "files_count": {
                                              "type": "integer",
                                              "description": "The count of files related to the person"
                                            },
                                            "notes_count": {
                                              "type": "integer",
                                              "description": "The count of notes related to the person"
                                            },
                                            "followers_count": {
                                              "type": "integer",
                                              "description": "The count of followers related to the person"
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "properties": {
                                            "last_incoming_mail_time": {
                                              "type": "string",
                                              "description": "The date and time of the last incoming email associated with the person"
                                            },
                                            "last_outgoing_mail_time": {
                                              "type": "string",
                                              "description": "The date and time of the last outgoing email associated with the person"
                                            }
                                          }
                                        }
                                      ]
                                    },
                                    {
                                      "type": "object",
                                      "title": "dealCountAndActivityInfo",
                                      "allOf": [
                                        {
                                          "type": "object",
                                          "properties": {
                                            "open_deals_count": {
                                              "type": "integer",
                                              "description": "The count of open deals related with the item"
                                            },
                                            "related_open_deals_count": {
                                              "type": "integer",
                                              "description": "The count of related open deals related with the item"
                                            },
                                            "closed_deals_count": {
                                              "type": "integer",
                                              "description": "The count of closed deals related with the item"
                                            },
                                            "related_closed_deals_count": {
                                              "type": "integer",
                                              "description": "The count of related closed deals related with the item"
                                            },
                                            "won_deals_count": {
                                              "type": "integer",
                                              "description": "The count of won deals related with the item"
                                            },
                                            "related_won_deals_count": {
                                              "type": "integer",
                                              "description": "The count of related won deals related with the item"
                                            },
                                            "lost_deals_count": {
                                              "type": "integer",
                                              "description": "The count of lost deals related with the item"
                                            },
                                            "related_lost_deals_count": {
                                              "type": "integer",
                                              "description": "The count of related lost deals related with the item"
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "properties": {
                                            "next_activity_date": {
                                              "type": "string",
                                              "description": "The date of the next activity associated with the deal"
                                            },
                                            "next_activity_time": {
                                              "type": "string",
                                              "description": "The time of the next activity associated with the deal"
                                            },
                                            "next_activity_id": {
                                              "type": "integer",
                                              "nullable": true,
                                              "description": "The ID of the next activity associated with the deal"
                                            },
                                            "last_activity_id": {
                                              "type": "integer",
                                              "nullable": true,
                                              "description": "The ID of the last activity associated with the deal"
                                            },
                                            "last_activity_date": {
                                              "type": "string",
                                              "nullable": true,
                                              "description": "The date of the last activity associated with the deal"
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "description": "The object of participant"
                    },
                    "related_objects": {
                      "type": "object",
                      "properties": {
                        "user": {
                          "description": "The user who is associated with the deal",
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "description": "The ID of the user"
                            },
                            "name": {
                              "type": "string",
                              "description": "The name of the user"
                            },
                            "email": {
                              "type": "string",
                              "description": "The email of the user"
                            },
                            "has_pic": {
                              "type": "boolean",
                              "description": "If the user has a picture or not"
                            },
                            "pic_hash": {
                              "type": "string",
                              "nullable": true,
                              "description": "The user picture hash"
                            },
                            "active_flag": {
                              "type": "boolean",
                              "description": "Whether the user is active or not"
                            }
                          }
                        },
                        "organization": {
                          "type": "object",
                          "description": "The organization which is associated with the deal",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "The name of the organization associated with the deal"
                            },
                            "people_count": {
                              "type": "integer",
                              "description": "The number of people connected with the organization that is associated with the deal"
                            },
                            "owner_id": {
                              "type": "integer",
                              "description": "The ID of the owner of the organization that is associated with the deal"
                            },
                            "address": {
                              "type": "string",
                              "description": "The address of the organization that is associated with the deal"
                            },
                            "active_flag": {
                              "type": "boolean",
                              "description": "Whether the associated organization is active or not"
                            },
                            "cc_email": {
                              "type": "string",
                              "description": "The BCC email of the organization associated with the deal"
                            }
                          }
                        },
                        "person": {
                          "type": "object",
                          "description": "The person who is associated with the deal",
                          "properties": {
                            "active_flag": {
                              "type": "boolean",
                              "description": "Whether the associated person is active or not"
                            },
                            "name": {
                              "type": "string",
                              "description": "The name of the person associated with the deal"
                            },
                            "email": {
                              "type": "array",
                              "description": "The emails of the person associated with the deal",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "label": {
                                    "type": "string",
                                    "description": "The type of the email"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "The email of the associated person"
                                  },
                                  "primary": {
                                    "type": "boolean",
                                    "description": "If this is the primary email or not"
                                  }
                                }
                              }
                            },
                            "phone": {
                              "type": "array",
                              "description": "The phone numbers of the person associated with the deal",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "label": {
                                    "type": "string",
                                    "description": "The type of the phone number"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "The phone number of the person associated with the deal"
                                  },
                                  "primary": {
                                    "type": "boolean",
                                    "description": "If this is the primary phone number or not"
                                  }
                                }
                              }
                            },
                            "owner_id": {
                              "type": "integer",
                              "description": "The ID of the owner of the person that is associated with the deal"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "success": true,
                  "data": {
                    "id": 2146,
                    "person_id": {
                      "active_flag": true,
                      "name": "Bortoloni",
                      "email": [
                        {
                          "label": "work",
                          "value": "namna.nanaaa@pipedrive.com",
                          "primary": true
                        }
                      ],
                      "phone": [ { "value": "", "primary": true } ],
                      "value": 1131
                    },
                    "add_time": "2020-09-14 05:34:59",
                    "active_flag": true,
                    "related_item_data": {
                      "deal_id": 1078,
                      "title": "Neverland deal"
                    },
                    "person": {
                      "id": 1131,
                      "company_id": 4657212,
                      "owner_id": {
                        "id": 9126687,
                        "name": "Moo moo",
                        "email": "moo.moo@pipedrive.com",
                        "has_pic": 0,
                        "pic_hash": null,
                        "active_flag": true,
                        "value": 9126687
                      },
                      "org_id": null,
                      "name": "Bortoloni",
                      "first_name": "Bortoloni",
                      "last_name": null,
                      "open_deals_count": 0,
                      "related_open_deals_count": 0,
                      "closed_deals_count": 0,
                      "related_closed_deals_count": 0,
                      "participant_open_deals_count": 0,
                      "participant_closed_deals_count": 0,
                      "email_messages_count": 0,
                      "activities_count": 0,
                      "done_activities_count": 0,
                      "undone_activities_count": 0,
                      "files_count": 0,
                      "notes_count": 0,
                      "followers_count": 1,
                      "won_deals_count": 0,
                      "related_won_deals_count": 0,
                      "lost_deals_count": 0,
                      "related_lost_deals_count": 0,
                      "active_flag": true,
                      "phone": [ { "value": "", "primary": true } ],
                      "email": [
                        {
                          "label": "work",
                          "value": "namna.nanaaa@pipedrive.com",
                          "primary": true
                        }
                      ],
                      "first_char": "b",
                      "update_time": "2020-07-09 07:44:51",
                      "add_time": "2020-02-03 10:14:03",
                      "visible_to": "3",
                      "picture_id": null,
                      "sync_needed": false,
                      "next_activity_date": null,
                      "next_activity_time": null,
                      "next_activity_id": null,
                      "last_activity_id": null,
                      "last_activity_date": null,
                      "last_incoming_mail_time": null,
                      "last_outgoing_mail_time": null,
                      "label": 5,
                      "org_name": null,
                      "owner_name": "Gabriel",
                      "cc_email": null
                    },
                    "added_by_user_id": {
                      "id": 927097,
                      "name": "Heheh Nono",
                      "email": "heheh.nono@pipedrive.com",
                      "has_pic": 0,
                      "pic_hash": null,
                      "active_flag": true,
                      "value": 927097
                    },
                    "related_item_type": "deal",
                    "related_item_id": 1078
                  },
                  "related_objects": {
                    "user": {
                      "927097": {
                        "id": 927097,
                        "name": "Heheh Nono",
                        "email": "heheh.nono@pipedrive.com",
                        "has_pic": 0,
                        "pic_hash": null,
                        "active_flag": true
                      },
                      "9126687": {
                        "id": 9126687,
                        "name": "Gabriel",
                        "email": "gogoog.yayay@pipedrive.com",
                        "has_pic": 1,
                        "pic_hash": "4db4fc64638d7d3d9e16e64599ccaff6",
                        "active_flag": true
                      }
                    },
                    "person": {
                      "1131": {
                        "active_flag": true,
                        "id": 1131,
                        "name": "Bortoloni",
                        "email": [
                          {
                            "label": "work",
                            "value": "namna.nanaaa@pipedrive.com",
                            "primary": true
                          }
                        ],
                        "phone": [ { "value": "", "primary": true } ],
                        "owner_id": 8877
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/deals/{id}/participants/{deal_participant_id}": {
      "delete": {
        "summary": "Delete a participant from a deal",
        "description": "Deletes a participant from a deal.",
        "operationId": "deleteDealParticipant",
        "tags": [ "Deals" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the deal",
            "required": true,
            "schema": { "type": "integer" }
          },
          {
            "in": "path",
            "name": "deal_participant_id",
            "required": true,
            "schema": { "type": "integer" },
            "description": "The ID of the participant of the deal"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete a participant from a deal",
            "content": {
              "application/json": {
                "schema": {
                  "title": "deleteDealParticipant",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "If the request was successful or not"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "description": "The ID of the deal participant that was deleted"
                        }
                      }
                    }
                  }
                },
                "example": { "success": true, "data": { "id": 123 } }
              }
            }
          }
        }
      }
    },
    "/deals/{id}/permittedUsers": {
      "get": {
        "summary": "List permitted users",
        "description": "Lists the users permitted to access a deal.",
        "operationId": "getDealUsers",
        "tags": [ "Deals" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the deal",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "listPermittedUsers",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "array",
                              "items": { "type": "integer" },
                              "description": "The list of permitted users IDs"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": { "success": true, "data": { "id": [ 123, 456 ] } }
              }
            }
          }
        }
      }
    },
    "/deals/{id}/persons": {
      "get": {
        "summary": "List all persons associated with a deal",
        "description": "Lists all persons associated with a deal, regardless of whether the person is the primary contact of the deal, or added as a participant.<br>If a company uses the [Campaigns product](https://pipedrive.readme.io/docs/campaigns-in-pipedrive-api), then this endpoint will also return the `data.marketing_status` field.",
        "operationId": "getDealPersons",
        "tags": [ "Deals" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the deal",
            "required": true,
            "schema": { "type": "integer" }
          },
          {
            "in": "query",
            "name": "start",
            "description": "Pagination start",
            "schema": { "type": "integer", "default": 0 }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Items shown per page",
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "listPersons",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "title": "personItem",
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "integer",
                                    "description": "The ID of the person"
                                  },
                                  "company_id": {
                                    "type": "integer",
                                    "description": "The ID of the company related to the person"
                                  },
                                  "active_flag": {
                                    "type": "boolean",
                                    "description": "Whether the person is active or not"
                                  },
                                  "phone": {
                                    "type": "array",
                                    "description": "A phone number supplied as a string or an array of phone objects related to the person. The structure of the array is as follows: `[{ \"value\": \"12345\", \"primary\": \"true\", \"label\": \"mobile\" }]`. Please note that only `value` is required.",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "value": {
                                          "type": "string",
                                          "description": "The phone number"
                                        },
                                        "primary": {
                                          "type": "boolean",
                                          "description": "Boolean that indicates if phone number is primary for the person or not"
                                        },
                                        "label": {
                                          "type": "string",
                                          "description": "The label that indicates the type of the phone number. (Possible values - work, home, mobile or other)"
                                        }
                                      }
                                    }
                                  },
                                  "email": {
                                    "type": "array",
                                    "description": "An email address as a string or an array of email objects related to the person. The structure of the array is as follows: `[{ \"value\": \"mail@example.com\", \"primary\": \"true\", \"label\": \"main\" } ]`. Please note that only `value` is required.",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "value": {
                                          "type": "string",
                                          "description": "Email"
                                        },
                                        "primary": {
                                          "type": "boolean",
                                          "description": "Boolean that indicates if email is primary for the person or not"
                                        },
                                        "label": {
                                          "type": "string",
                                          "description": "The label that indicates the type of the email. (Possible values - work, home or other)"
                                        }
                                      }
                                    }
                                  },
                                  "first_char": {
                                    "type": "string",
                                    "description": "The first letter of the name of the person"
                                  },
                                  "add_time": {
                                    "type": "string",
                                    "description": "The date and time when the person was added/created. Format: YYYY-MM-DD HH:MM:SS"
                                  },
                                  "update_time": {
                                    "type": "string",
                                    "description": "The last updated date and time of the person. Format: YYYY-MM-DD HH:MM:SS"
                                  },
                                  "visible_to": {
                                    "type": "string",
                                    "description": "The visibility group ID of who can see the person"
                                  },
                                  "picture_id": {
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "integer",
                                            "description": "The ID of the picture associated with the item"
                                          }
                                        }
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "item_type": {
                                            "type": "string",
                                            "description": "The type of item the picture is related to"
                                          },
                                          "item_id": {
                                            "type": "integer",
                                            "description": "The ID of related item"
                                          },
                                          "active_flag": {
                                            "type": "boolean",
                                            "description": "Whether the associated picture is active or not"
                                          },
                                          "add_time": {
                                            "type": "string",
                                            "description": "The add time of the picture"
                                          },
                                          "update_time": {
                                            "type": "string",
                                            "description": "The update time of the picture"
                                          },
                                          "added_by_user_id": {
                                            "type": "integer",
                                            "description": "The ID of the user who added the picture"
                                          },
                                          "pictures": {
                                            "type": "object",
                                            "properties": {
                                              "128": {
                                                "type": "string",
                                                "description": "The URL of the 128*128 picture"
                                              },
                                              "512": {
                                                "type": "string",
                                                "description": "The URL of the 512*512 picture"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  "label": {
                                    "type": "integer",
                                    "description": "The label assigned to the person"
                                  },
                                  "org_name": {
                                    "type": "string",
                                    "description": "The name of the organization associated with the person"
                                  },
                                  "owner_name": {
                                    "type": "string",
                                    "description": "The name of the owner associated with the person"
                                  },
                                  "cc_email": {
                                    "type": "string",
                                    "description": "The BCC email associated with the person"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "title": "additionalPersonInfo",
                                "allOf": [
                                  {
                                    "type": "object",
                                    "title": "personNameInfoWithOrgAndOwnerId",
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "properties": {
                                          "owner_id": {
                                            "title": "owner",
                                            "allOf": [
                                              {
                                                "properties": {
                                                  "id": {
                                                    "type": "integer",
                                                    "description": "The ID of the user"
                                                  },
                                                  "name": {
                                                    "type": "string",
                                                    "description": "The name of the user"
                                                  },
                                                  "email": {
                                                    "type": "string",
                                                    "description": "The email of the user"
                                                  },
                                                  "has_pic": {
                                                    "type": "integer",
                                                    "description": "Whether the user has picture or not. 0 = No picture, 1 = Has picture."
                                                  },
                                                  "pic_hash": {
                                                    "type": "string",
                                                    "nullable": true,
                                                    "description": "The user picture hash"
                                                  },
                                                  "active_flag": {
                                                    "type": "boolean",
                                                    "description": "Whether the user is active or not"
                                                  }
                                                }
                                              },
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "value": {
                                                    "type": "integer",
                                                    "description": "The ID of the owner"
                                                  }
                                                }
                                              }
                                            ]
                                          },
                                          "org_id": {
                                            "title": "relationshipOrganizationInfoItemWithActiveFlag",
                                            "allOf": [
                                              {
                                                "title": "relationshipOrganizationInfoItem",
                                                "allOf": [
                                                  {
                                                    "type": "object",
                                                    "properties": {
                                                      "name": {
                                                        "type": "string",
                                                        "description": "The name of the organization associated with the item"
                                                      },
                                                      "people_count": {
                                                        "type": "integer",
                                                        "description": "The number of people connected with the organization that is associated with the item"
                                                      },
                                                      "owner_id": {
                                                        "type": "integer",
                                                        "description": "The ID of the owner of the organization that is associated with the item"
                                                      },
                                                      "address": {
                                                        "type": "string",
                                                        "description": "The address of the organization"
                                                      },
                                                      "cc_email": {
                                                        "type": "string",
                                                        "description": "The BCC email of the organization associated with the item"
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "type": "object",
                                                    "properties": {
                                                      "value": {
                                                        "type": "integer",
                                                        "description": "The ID of the organization"
                                                      }
                                                    }
                                                  }
                                                ]
                                              },
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "active_flag": {
                                                    "type": "boolean",
                                                    "description": "Whether the associated organization is active or not"
                                                  }
                                                }
                                              }
                                            ]
                                          }
                                        }
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "description": "The name of the person"
                                          },
                                          "first_name": {
                                            "type": "string",
                                            "description": "The first name of the person"
                                          },
                                          "last_name": {
                                            "type": "string",
                                            "description": "The last name of the person"
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  {
                                    "type": "object",
                                    "title": "personCountEmailDealAndActivityInfo",
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "title": "personCountAndEmailInfo",
                                        "allOf": [
                                          {
                                            "type": "object",
                                            "properties": {
                                              "email_messages_count": {
                                                "type": "integer",
                                                "description": "The count of email messages related to the person"
                                              },
                                              "activities_count": {
                                                "type": "integer",
                                                "description": "The count of activities related to the person"
                                              },
                                              "done_activities_count": {
                                                "type": "integer",
                                                "description": "The count of done activities related to the person"
                                              },
                                              "undone_activities_count": {
                                                "type": "integer",
                                                "description": "The count of undone activities related to the person"
                                              },
                                              "files_count": {
                                                "type": "integer",
                                                "description": "The count of files related to the person"
                                              },
                                              "notes_count": {
                                                "type": "integer",
                                                "description": "The count of notes related to the person"
                                              },
                                              "followers_count": {
                                                "type": "integer",
                                                "description": "The count of followers related to the person"
                                              }
                                            }
                                          },
                                          {
                                            "type": "object",
                                            "properties": {
                                              "last_incoming_mail_time": {
                                                "type": "string",
                                                "description": "The date and time of the last incoming email associated with the person"
                                              },
                                              "last_outgoing_mail_time": {
                                                "type": "string",
                                                "description": "The date and time of the last outgoing email associated with the person"
                                              }
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "type": "object",
                                        "title": "dealCountAndActivityInfo",
                                        "allOf": [
                                          {
                                            "type": "object",
                                            "properties": {
                                              "open_deals_count": {
                                                "type": "integer",
                                                "description": "The count of open deals related with the item"
                                              },
                                              "related_open_deals_count": {
                                                "type": "integer",
                                                "description": "The count of related open deals related with the item"
                                              },
                                              "closed_deals_count": {
                                                "type": "integer",
                                                "description": "The count of closed deals related with the item"
                                              },
                                              "related_closed_deals_count": {
                                                "type": "integer",
                                                "description": "The count of related closed deals related with the item"
                                              },
                                              "won_deals_count": {
                                                "type": "integer",
                                                "description": "The count of won deals related with the item"
                                              },
                                              "related_won_deals_count": {
                                                "type": "integer",
                                                "description": "The count of related won deals related with the item"
                                              },
                                              "lost_deals_count": {
                                                "type": "integer",
                                                "description": "The count of lost deals related with the item"
                                              },
                                              "related_lost_deals_count": {
                                                "type": "integer",
                                                "description": "The count of related lost deals related with the item"
                                              }
                                            }
                                          },
                                          {
                                            "type": "object",
                                            "properties": {
                                              "next_activity_date": {
                                                "type": "string",
                                                "description": "The date of the next activity associated with the deal"
                                              },
                                              "next_activity_time": {
                                                "type": "string",
                                                "description": "The time of the next activity associated with the deal"
                                              },
                                              "next_activity_id": {
                                                "type": "integer",
                                                "nullable": true,
                                                "description": "The ID of the next activity associated with the deal"
                                              },
                                              "last_activity_id": {
                                                "type": "integer",
                                                "nullable": true,
                                                "description": "The ID of the last activity associated with the deal"
                                              },
                                              "last_activity_date": {
                                                "type": "string",
                                                "nullable": true,
                                                "description": "The date of the last activity associated with the deal"
                                              }
                                            }
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          "description": "The array of persons"
                        },
                        "additional_data": {
                          "description": "The additional data of the list",
                          "type": "object",
                          "properties": {
                            "start": {
                              "type": "integer",
                              "description": "Pagination start"
                            },
                            "limit": {
                              "type": "integer",
                              "description": "Items shown per page"
                            },
                            "more_items_in_collection": {
                              "type": "boolean",
                              "description": "If there are more list items in the collection than displayed or not"
                            }
                          }
                        },
                        "related_objects": {
                          "type": "object",
                          "properties": {
                            "organization": {
                              "type": "object",
                              "properties": {
                                "ORGANIZATION_ID": {
                                  "type": "object",
                                  "description": "The ID of the organization associated with the item",
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "active_flag": {
                                          "type": "boolean",
                                          "description": "Whether the associated organization is active or not"
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "description": "The ID of the organization associated with the item",
                                      "allOf": [
                                        {
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "type": "integer",
                                              "description": "The ID of the organization associated with the item"
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string",
                                              "description": "The name of the organization associated with the item"
                                            },
                                            "people_count": {
                                              "type": "integer",
                                              "description": "The number of people connected with the organization that is associated with the item"
                                            },
                                            "owner_id": {
                                              "type": "integer",
                                              "description": "The ID of the owner of the organization that is associated with the item"
                                            },
                                            "address": {
                                              "type": "string",
                                              "description": "The address of the organization"
                                            },
                                            "cc_email": {
                                              "type": "string",
                                              "description": "The BCC email of the organization associated with the item"
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  ]
                                }
                              }
                            },
                            "user": {
                              "type": "object",
                              "properties": {
                                "USER_ID": {
                                  "type": "object",
                                  "title": "userDataWithId",
                                  "allOf": [
                                    {
                                      "properties": {
                                        "id": {
                                          "type": "integer",
                                          "description": "The ID of the user"
                                        },
                                        "name": {
                                          "type": "string",
                                          "description": "The name of the user"
                                        },
                                        "email": {
                                          "type": "string",
                                          "description": "The email of the user"
                                        },
                                        "has_pic": {
                                          "type": "integer",
                                          "description": "Whether the user has picture or not. 0 = No picture, 1 = Has picture."
                                        },
                                        "pic_hash": {
                                          "type": "string",
                                          "nullable": true,
                                          "description": "The user picture hash"
                                        },
                                        "active_flag": {
                                          "type": "boolean",
                                          "description": "Whether the user is active or not"
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "description": "The ID of the user"
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "success": true,
                  "data": [
                    {
                      "id": 1,
                      "company_id": 12,
                      "owner_id": {
                        "id": 123,
                        "name": "Jane Doe",
                        "email": "jane@pipedrive.com",
                        "has_pic": 1,
                        "pic_hash": "2611ace8ac6a3afe2f69ed56f9e08c6b",
                        "active_flag": true,
                        "value": 123
                      },
                      "org_id": {
                        "name": "Org Name",
                        "people_count": 1,
                        "owner_id": 123,
                        "address": "Mustamäe tee 3a, 10615 Tallinn",
                        "active_flag": true,
                        "cc_email": "org@pipedrivemail.com",
                        "value": 1234
                      },
                      "name": "Will Smith",
                      "first_name": "Will",
                      "last_name": "Smith",
                      "open_deals_count": 2,
                      "related_open_deals_count": 2,
                      "closed_deals_count": 3,
                      "related_closed_deals_count": 3,
                      "participant_open_deals_count": 1,
                      "participant_closed_deals_count": 1,
                      "email_messages_count": 1,
                      "activities_count": 1,
                      "done_activities_count": 1,
                      "undone_activities_count": 2,
                      "files_count": 2,
                      "notes_count": 2,
                      "followers_count": 3,
                      "won_deals_count": 3,
                      "related_won_deals_count": 3,
                      "lost_deals_count": 1,
                      "related_lost_deals_count": 1,
                      "active_flag": true,
                      "phone": [
                        { "value": "12345", "primary": true, "label": "work" }
                      ],
                      "email": [
                        {
                          "value": "12345@email.com",
                          "primary": true,
                          "label": "work"
                        }
                      ],
                      "primary_email": "12345@email.com",
                      "first_char": "w",
                      "update_time": "2020-05-08 05:30:20",
                      "add_time": "2017-10-18 13:23:07",
                      "visible_to": "3",
                      "marketing_status": "no_consent",
                      "picture_id": {
                        "item_type": "person",
                        "item_id": 25,
                        "active_flag": true,
                        "add_time": "2020-09-08 08:17:52",
                        "update_time": "0000-00-00 00:00:00",
                        "added_by_user_id": 967055,
                        "pictures": {
                          "128": "https://pipedrive-profile-pics.s3.example.com/f8893852574273f2747bf6ef09d11cfb4ac8f269_128.jpg",
                          "512": "https://pipedrive-profile-pics.s3.example.com/f8893852574273f2747bf6ef09d11cfb4ac8f269_512.jpg"
                        },
                        "value": 4
                      },
                      "next_activity_date": "2019-11-29",
                      "next_activity_time": "11:30:00",
                      "next_activity_id": 128,
                      "last_activity_id": 34,
                      "last_activity_date": "2019-11-28",
                      "last_incoming_mail_time": "2019-05-29 18:21:42",
                      "last_outgoing_mail_time": "2019-05-30 03:45:35",
                      "label": 1,
                      "org_name": "Organization name",
                      "owner_name": "Jane Doe",
                      "cc_email": "org@pipedrivemail.com"
                    }
                  ],
                  "additional_data": {
                    "pagination": {
                      "start": 0,
                      "limit": 100,
                      "more_items_in_collection": true
                    }
                  },
                  "related_objects": {
                    "allOf": [
                      {
                        "organization": {
                          "1": {
                            "id": 1,
                            "name": "Org Name",
                            "people_count": 1,
                            "owner_id": 123,
                            "address": "Mustamäe tee 3a, 10615 Tallinn",
                            "active_flag": true,
                            "cc_email": "org@pipedrivemail.com"
                          }
                        }
                      },
                      {
                        "user": {
                          "123": {
                            "id": 123,
                            "name": "Jane Doe",
                            "email": "jane@pipedrive.com",
                            "has_pic": 1,
                            "pic_hash": "2611ace8ac6a3afe2f69ed56f9e08c6b",
                            "active_flag": true
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/deals/{id}/products": {
      "get": {
        "summary": "List products attached to a deal",
        "description": "Lists products attached to a deal.",
        "operationId": "getDealProducts",
        "tags": [ "Deals" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the deal",
            "required": true,
            "schema": { "type": "integer" }
          },
          {
            "in": "query",
            "name": "start",
            "description": "Pagination start",
            "schema": { "type": "integer", "default": 0 }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Items shown per page",
            "schema": { "type": "integer" }
          },
          {
            "in": "query",
            "name": "include_product_data",
            "description": "Whether to fetch product data along with each attached product (1) or not (0, default)",
            "schema": {
              "title": "numberBoolean",
              "type": "number",
              "enum": [ 0, 1 ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "listProducts",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "description": "The array of products",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "integer",
                                    "description": "The ID of the deal-product (the ID of the product attached to the deal)"
                                  },
                                  "deal_id": {
                                    "type": "integer",
                                    "description": "The ID of the deal"
                                  },
                                  "order_nr": {
                                    "type": "integer",
                                    "description": "The order number of the product"
                                  },
                                  "product_id": {
                                    "type": "integer",
                                    "description": "The ID of the product"
                                  },
                                  "product_variation_id": {
                                    "type": "integer",
                                    "description": "The ID of the product variation"
                                  },
                                  "item_price": {
                                    "type": "integer",
                                    "description": "The price value of the product"
                                  },
                                  "discount_percentage": {
                                    "type": "integer",
                                    "description": "The discount percentage of the product"
                                  },
                                  "duration": {
                                    "type": "integer",
                                    "description": "The duration of the product"
                                  },
                                  "duration_unit": {
                                    "type": "string",
                                    "description": "The type of the duration. (For example hourly, daily, etc.)"
                                  },
                                  "sum_no_discount": {
                                    "type": "number",
                                    "description": "The product sum without the discount"
                                  },
                                  "sum": {
                                    "type": "number",
                                    "description": "The sum of all the products attached to the deal"
                                  },
                                  "currency": {
                                    "type": "string",
                                    "description": "The currency associated with the deal product"
                                  },
                                  "enabled_flag": {
                                    "type": "boolean",
                                    "description": "Whether the product is enabled or not"
                                  },
                                  "add_time": {
                                    "type": "string",
                                    "description": "The date and time when the product was added to the deal"
                                  },
                                  "last_edit": {
                                    "type": "string",
                                    "description": "The date and time when the deal product was last edited"
                                  },
                                  "comments": {
                                    "type": "string",
                                    "description": "The comments of the product"
                                  },
                                  "active_flag": {
                                    "type": "boolean",
                                    "description": "Whether the product is active or not"
                                  },
                                  "tax": {
                                    "type": "number",
                                    "description": "The product tax"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "The product name"
                                  },
                                  "sum_formatted": {
                                    "type": "string",
                                    "description": "The formatted sum of the product"
                                  },
                                  "quantity_formatted": {
                                    "type": "string",
                                    "description": "The formatted quantity of the product"
                                  },
                                  "quantity": {
                                    "type": "integer",
                                    "description": "The quantity of the product"
                                  },
                                  "product": {
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "number",
                                            "description": "The ID of the product"
                                          },
                                          "name": {
                                            "type": "string",
                                            "description": "The name of the product"
                                          },
                                          "code": {
                                            "type": "string",
                                            "description": "The product code"
                                          },
                                          "unit": {
                                            "type": "string",
                                            "description": "The unit in which this product is sold"
                                          },
                                          "tax": {
                                            "type": "number",
                                            "description": "The ax percentage",
                                            "default": 0
                                          },
                                          "active_flag": {
                                            "description": "Whether this product is active or not",
                                            "title": "numberBooleanDefault1",
                                            "type": "number",
                                            "default": 1,
                                            "enum": [ 0, 1 ]
                                          },
                                          "selectable": {
                                            "description": "Whether this product is selected in deals or not",
                                            "title": "numberBooleanDefault1",
                                            "type": "number",
                                            "default": 1,
                                            "enum": [ 0, 1 ]
                                          },
                                          "visible_to": {
                                            "allOf": [
                                              {
                                                "type": "string",
                                                "enum": [ "1", "3", "5", "7" ]
                                              }
                                            ],
                                            "description": "Visibility of the product"
                                          },
                                          "owner_id": {
                                            "type": "object",
                                            "description": "Information about the Pipedrive user who owns the product"
                                          }
                                        }
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "prices": {
                                            "type": "object",
                                            "description": "Object of objects, each containing: currency (string), price (number), cost (number, optional), overhead_cost (number, optional)"
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        },
                        "additional_data": {
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "products_quantity_total": {
                                  "type": "integer",
                                  "description": "The total quantity of the products"
                                },
                                "products_sum_total": {
                                  "type": "integer",
                                  "description": "The total sum of the products"
                                },
                                "variations_enabled": {
                                  "type": "boolean",
                                  "description": "Whether variations is enabled or not"
                                },
                                "products_quantity_total_formatted": {
                                  "type": "string",
                                  "description": "The total formatted quantity of the products"
                                },
                                "products_sum_total_formatted": {
                                  "type": "string",
                                  "description": "The total formatted sum of the products"
                                }
                              }
                            },
                            {
                              "type": "object",
                              "properties": {
                                "pagination": {
                                  "description": "Pagination details of the list",
                                  "type": "object",
                                  "properties": {
                                    "start": {
                                      "type": "integer",
                                      "description": "Pagination start"
                                    },
                                    "limit": {
                                      "type": "integer",
                                      "description": "Items shown per page"
                                    },
                                    "more_items_in_collection": {
                                      "type": "boolean",
                                      "description": "Whether there are more list items in the collection than displayed"
                                    },
                                    "next_start": {
                                      "type": "integer",
                                      "description": "Next pagination start"
                                    }
                                  }
                                }
                              }
                            }
                          ]
                        },
                        "related_objects": {
                          "type": "object",
                          "properties": {
                            "user": {
                              "type": "object",
                              "properties": {
                                "USER_ID": {
                                  "type": "object",
                                  "title": "userDataWithId",
                                  "allOf": [
                                    {
                                      "properties": {
                                        "id": {
                                          "type": "integer",
                                          "description": "The ID of the user"
                                        },
                                        "name": {
                                          "type": "string",
                                          "description": "The name of the user"
                                        },
                                        "email": {
                                          "type": "string",
                                          "description": "The email of the user"
                                        },
                                        "has_pic": {
                                          "type": "integer",
                                          "description": "Whether the user has picture or not. 0 = No picture, 1 = Has picture."
                                        },
                                        "pic_hash": {
                                          "type": "string",
                                          "nullable": true,
                                          "description": "The user picture hash"
                                        },
                                        "active_flag": {
                                          "type": "boolean",
                                          "description": "Whether the user is active or not"
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "description": "The ID of the user"
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "success": true,
                  "data": {
                    "id": 7,
                    "deal_id": 5,
                    "order_nr": 1,
                    "product_id": 4,
                    "product_variation_id": null,
                    "item_price": 22,
                    "discount_percentage": 0.2,
                    "duration": 1,
                    "duration_unit": null,
                    "sum_no_discount": 0,
                    "sum": 109.78,
                    "currency": "EUR",
                    "enabled_flag": 1,
                    "add_time": "2020-09-18 11:11:06",
                    "last_edit": null,
                    "comments": "This is comment",
                    "active_flag": 1,
                    "tax": 11,
                    "name": "1234",
                    "sum_formatted": "109,78 €",
                    "quantity_formatted": "5",
                    "quantity": 5,
                    "product": {
                      "id": 1,
                      "name": "Regular Pencil",
                      "code": "MPENCIL",
                      "description": null,
                      "unit": "",
                      "tax": 0,
                      "category": null,
                      "active_flag": true,
                      "selectable": 1,
                      "first_char": "r",
                      "visible_to": "3",
                      "owner_id": {
                        "id": 10100010,
                        "name": "Example User",
                        "email": "example@test.com",
                        "has_pic": true,
                        "pic_hash": "5df5332929fab76702207f38b29a5d82",
                        "active_flag": true,
                        "value": 10100010
                      },
                      "files_count": null,
                      "add_time": "2019-12-19 11:36:49",
                      "update_time": "2019-12-26 13:35:17",
                      "prices": {
                        "EUR": {
                          "id": 1,
                          "product_id": 1,
                          "price": 5,
                          "currency": "EUR",
                          "cost": 2,
                          "overhead_cost": 3
                        }
                      }
                    }
                  },
                  "additional_data": {
                    "products_quantity_total": 6,
                    "products_sum_total": 3342,
                    "variations_enabled": false,
                    "products_quantity_total_formatted": "6",
                    "products_sum_total_formatted": "3 342,79 €",
                    "pagination": {
                      "start": 0,
                      "limit": 100,
                      "more_items_in_collection": false
                    }
                  },
                  "related_objects": {
                    "user": {
                      "10100010": {
                        "id": 10100010,
                        "name": "Test User",
                        "email": "example@test.com",
                        "has_pic": true,
                        "pic_hash": "5df5332929fab76702207f38b29a5d88",
                        "active_flag": true
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add a product to a deal",
        "description": "Adds a product to a deal, creating a new item called a deal-product.",
        "operationId": "addDealProduct",
        "tags": [ "Deals" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the deal",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "addDealProductRequest",
                "allOf": [
                  {
                    "title": "basicDealProductRequest",
                    "type": "object",
                    "required": [ "product_id", "item_price", "quantity" ],
                    "properties": {
                      "product_id": {
                        "type": "integer",
                        "description": "The ID of the product to use"
                      },
                      "item_price": {
                        "type": "number",
                        "description": "The price at which this product will be added to the deal"
                      },
                      "quantity": {
                        "type": "integer",
                        "description": "Quantity – e.g. how many items of this product will be added to the deal"
                      },
                      "discount_percentage": {
                        "type": "number",
                        "default": 0,
                        "description": "The discount %. If omitted, will be set to 0."
                      },
                      "duration": {
                        "type": "number",
                        "default": 1,
                        "description": "The duration of the product. If omitted, will be set to 1."
                      },
                      "duration_unit": {
                        "type": "string",
                        "description": "The unit duration of the product",
                        "allOf": [
                          {
                            "title": "dealProductUnitDuration",
                            "type": "string",
                            "enum": [
                              "hourly",
                              "daily",
                              "weekly",
                              "monthly",
                              "yearly"
                            ]
                          }
                        ]
                      },
                      "product_variation_id": {
                        "type": "integer",
                        "nullable": true,
                        "description": "The ID of the product variation to use. When omitted, no variation will be used."
                      },
                      "comments": {
                        "type": "string",
                        "description": "A textual comment associated with this product-deal attachment"
                      },
                      "tax": {
                        "type": "number",
                        "description": "The tax percentage",
                        "default": 0
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Add a product to the deal",
            "content": {
              "application/json": {
                "schema": {
                  "title": "getAddProductAttachement",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "If the response is successful or not"
                    },
                    "data": {
                      "description": "The added product object attached to the deal",
                      "allOf": [
                        {
                          "allOf": [
                            {
                              "allOf": [
                                {
                                  "title": "basicDealProductRequest",
                                  "type": "object",
                                  "required": [
                                    "product_id",
                                    "item_price",
                                    "quantity"
                                  ],
                                  "properties": {
                                    "product_id": {
                                      "type": "integer",
                                      "description": "The ID of the product to use"
                                    },
                                    "item_price": {
                                      "type": "number",
                                      "description": "The price at which this product will be added to the deal"
                                    },
                                    "quantity": {
                                      "type": "integer",
                                      "description": "Quantity – e.g. how many items of this product will be added to the deal"
                                    },
                                    "discount_percentage": {
                                      "type": "number",
                                      "default": 0,
                                      "description": "The discount %. If omitted, will be set to 0."
                                    },
                                    "duration": {
                                      "type": "number",
                                      "default": 1,
                                      "description": "The duration of the product. If omitted, will be set to 1."
                                    },
                                    "duration_unit": {
                                      "type": "string",
                                      "description": "The unit duration of the product",
                                      "allOf": [
                                        {
                                          "title": "dealProductUnitDuration",
                                          "type": "string",
                                          "enum": [
                                            "hourly",
                                            "daily",
                                            "weekly",
                                            "monthly",
                                            "yearly"
                                          ]
                                        }
                                      ]
                                    },
                                    "product_variation_id": {
                                      "type": "integer",
                                      "nullable": true,
                                      "description": "The ID of the product variation to use. When omitted, no variation will be used."
                                    },
                                    "comments": {
                                      "type": "string",
                                      "description": "A textual comment associated with this product-deal attachment"
                                    },
                                    "tax": {
                                      "type": "number",
                                      "description": "The tax percentage",
                                      "default": 0
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "integer",
                                      "description": "The ID of the deal-product (the ID of the product attached to the deal)"
                                    },
                                    "company_id": {
                                      "type": "integer",
                                      "description": "The ID of the company"
                                    },
                                    "deal_id": {
                                      "type": "integer",
                                      "description": "The ID of the deal"
                                    },
                                    "product_id": {
                                      "type": "integer",
                                      "description": "The ID of the product"
                                    },
                                    "duration_unit": {
                                      "type": "string",
                                      "description": "The type of the duration. (For example hourly, daily, etc.)"
                                    },
                                    "sum_no_discount": {
                                      "type": "number",
                                      "description": "The product sum without the discount"
                                    },
                                    "sum": {
                                      "type": "number",
                                      "description": "The sum of all the products attached to the deal"
                                    },
                                    "currency": {
                                      "type": "string",
                                      "description": "The currency associated with the deal product"
                                    },
                                    "add_time": {
                                      "type": "string",
                                      "description": "The date and time when the product was added to the deal"
                                    },
                                    "last_edit": {
                                      "type": "string",
                                      "description": "The date and time when the deal product was last edited"
                                    },
                                    "active_flag": {
                                      "type": "boolean",
                                      "description": "Whether the product is active or not"
                                    },
                                    "tax": {
                                      "type": "number",
                                      "description": "The product tax"
                                    },
                                    "name": {
                                      "type": "string",
                                      "description": "The product name"
                                    }
                                  }
                                }
                              ]
                            },
                            {
                              "type": "object",
                              "properties": {
                                "product_attachment_id": {
                                  "type": "integer",
                                  "description": "The ID of the deal-product (the ID of the product attached to the deal)"
                                }
                              }
                            }
                          ]
                        }
                      ]
                    }
                  }
                },
                "example": {
                  "success": true,
                  "data": {
                    "id": 1,
                    "company_id": 123,
                    "deal_id": 456,
                    "order_nr": 1,
                    "product_id": 789,
                    "product_variation_id": 555,
                    "item_price": 300,
                    "discount_percentage": 5,
                    "duration": 1,
                    "duration_unit": "daily",
                    "sum_no_discount": 0,
                    "sum": 2850,
                    "currency": "USD",
                    "enabled_flag": 1,
                    "add_time": "2019-11-27 11:40:36",
                    "last_edit": "",
                    "comments": "This is a product comment",
                    "active_flag": true,
                    "tax": 10,
                    "name": "Product name",
                    "quantity": 5
                  }
                }
              }
            }
          }
        }
      }
    },
    "/deals/{id}/products/{product_attachment_id}": {
      "put": {
        "summary": "Update the product attached to a deal",
        "description": "Updates the details of the product that has been attached to a deal.",
        "operationId": "updateDealProduct",
        "tags": [ "Deals" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the deal",
            "required": true,
            "schema": { "type": "integer" }
          },
          {
            "in": "path",
            "name": "product_attachment_id",
            "required": true,
            "schema": { "type": "integer" },
            "description": "The ID of the deal-product (the ID of the product attached to the deal)"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "UpdateDealProductRequest",
                "type": "object",
                "required": [ "product_id" ],
                "properties": {
                  "product_id": {
                    "type": "integer",
                    "description": "The ID of the product to use"
                  },
                  "item_price": {
                    "type": "number",
                    "description": "The price at which this product will be added to the deal"
                  },
                  "quantity": {
                    "type": "integer",
                    "description": "How many items of this product will be added to the deal"
                  },
                  "discount_percentage": {
                    "type": "number",
                    "default": 0,
                    "description": "The discount %. If omitted, will be set to 0."
                  },
                  "duration": {
                    "type": "number",
                    "default": 1,
                    "description": "The duration of the product"
                  },
                  "duration_unit": {
                    "type": "string",
                    "description": "The unit duration of the product",
                    "allOf": [
                      {
                        "title": "dealProductUnitDuration",
                        "type": "string",
                        "enum": [
                          "hourly",
                          "daily",
                          "weekly",
                          "monthly",
                          "yearly"
                        ]
                      }
                    ]
                  },
                  "product_variation_id": {
                    "type": "integer",
                    "description": "The ID of the product variation to use. When omitted, no variation will be used."
                  },
                  "comments": {
                    "type": "string",
                    "description": "A textual comment associated with this product-deal attachment"
                  },
                  "tax": {
                    "type": "number",
                    "description": "The tax percentage",
                    "default": 0
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update product attachment details",
            "content": {
              "application/json": {
                "schema": {
                  "title": "getProductAttachement",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "If the response is successful or not"
                    },
                    "data": {
                      "description": "The updated product object attached to the deal",
                      "allOf": [
                        {
                          "allOf": [
                            {
                              "title": "basicDealProductRequest",
                              "type": "object",
                              "required": [
                                "product_id",
                                "item_price",
                                "quantity"
                              ],
                              "properties": {
                                "product_id": {
                                  "type": "integer",
                                  "description": "The ID of the product to use"
                                },
                                "item_price": {
                                  "type": "number",
                                  "description": "The price at which this product will be added to the deal"
                                },
                                "quantity": {
                                  "type": "integer",
                                  "description": "Quantity – e.g. how many items of this product will be added to the deal"
                                },
                                "discount_percentage": {
                                  "type": "number",
                                  "default": 0,
                                  "description": "The discount %. If omitted, will be set to 0."
                                },
                                "duration": {
                                  "type": "number",
                                  "default": 1,
                                  "description": "The duration of the product. If omitted, will be set to 1."
                                },
                                "duration_unit": {
                                  "type": "string",
                                  "description": "The unit duration of the product",
                                  "allOf": [
                                    {
                                      "title": "dealProductUnitDuration",
                                      "type": "string",
                                      "enum": [
                                        "hourly",
                                        "daily",
                                        "weekly",
                                        "monthly",
                                        "yearly"
                                      ]
                                    }
                                  ]
                                },
                                "product_variation_id": {
                                  "type": "integer",
                                  "nullable": true,
                                  "description": "The ID of the product variation to use. When omitted, no variation will be used."
                                },
                                "comments": {
                                  "type": "string",
                                  "description": "A textual comment associated with this product-deal attachment"
                                },
                                "tax": {
                                  "type": "number",
                                  "description": "The tax percentage",
                                  "default": 0
                                }
                              }
                            },
                            {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "description": "The ID of the deal-product (the ID of the product attached to the deal)"
                                },
                                "company_id": {
                                  "type": "integer",
                                  "description": "The ID of the company"
                                },
                                "deal_id": {
                                  "type": "integer",
                                  "description": "The ID of the deal"
                                },
                                "product_id": {
                                  "type": "integer",
                                  "description": "The ID of the product"
                                },
                                "duration_unit": {
                                  "type": "string",
                                  "description": "The type of the duration. (For example hourly, daily, etc.)"
                                },
                                "sum_no_discount": {
                                  "type": "number",
                                  "description": "The product sum without the discount"
                                },
                                "sum": {
                                  "type": "number",
                                  "description": "The sum of all the products attached to the deal"
                                },
                                "currency": {
                                  "type": "string",
                                  "description": "The currency associated with the deal product"
                                },
                                "add_time": {
                                  "type": "string",
                                  "description": "The date and time when the product was added to the deal"
                                },
                                "last_edit": {
                                  "type": "string",
                                  "description": "The date and time when the deal product was last edited"
                                },
                                "active_flag": {
                                  "type": "boolean",
                                  "description": "Whether the product is active or not"
                                },
                                "tax": {
                                  "type": "number",
                                  "description": "The product tax"
                                },
                                "name": {
                                  "type": "string",
                                  "description": "The product name"
                                }
                              }
                            }
                          ]
                        }
                      ]
                    }
                  }
                },
                "example": {
                  "success": true,
                  "data": {
                    "id": 1,
                    "company_id": 123,
                    "deal_id": 456,
                    "order_nr": 1,
                    "product_id": 789,
                    "product_variation_id": 555,
                    "item_price": 300,
                    "discount_percentage": 5,
                    "duration": 1,
                    "duration_unit": "daily",
                    "sum_no_discount": 0,
                    "sum": 2850,
                    "currency": "USD",
                    "enabled_flag": 1,
                    "add_time": "2019-11-27 11:40:36",
                    "last_edit": "",
                    "comments": "This is a product comment",
                    "active_flag": true,
                    "tax": 10,
                    "name": "Product name",
                    "quantity": 5
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete an attached product from a deal",
        "description": "Deletes a product attachment from a deal, using the `product_attachment_id`.",
        "operationId": "deleteDealProduct",
        "tags": [ "Deals" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the deal",
            "required": true,
            "schema": { "type": "integer" }
          },
          {
            "in": "path",
            "name": "product_attachment_id",
            "required": true,
            "schema": { "type": "integer" },
            "description": "The product attachment ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete an attached product from a deal",
            "content": {
              "application/json": {
                "schema": {
                  "title": "deleteDealProduct",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "If the request was successful or not"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "description": "The ID of an attached product that was deleted from the deal"
                        }
                      }
                    }
                  }
                },
                "example": { "success": true, "data": { "id": 123 } }
              }
            }
          }
        }
      }
    },
    "/dealFields": {
      "get": {
        "summary": "Get all deal fields",
        "description": "Returns data about all deal fields.",
        "operationId": "getDealFields",
        "parameters": [
          {
            "in": "query",
            "name": "start",
            "description": "Pagination start",
            "schema": { "type": "integer", "default": 0 }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Items shown per page",
            "schema": { "type": "integer" }
          }
        ],
        "tags": [ "DealFields" ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "fields",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer",
                                "description": "The ID of the field. Value is `null` in case of subfields."
                              },
                              "key": {
                                "type": "string",
                                "description": "The key of the field. For custom fields this is generated upon creation."
                              },
                              "name": {
                                "type": "string",
                                "description": "The name of the field"
                              },
                              "order_nr": {
                                "type": "integer",
                                "description": "The order number of the field"
                              },
                              "field_type": {
                                "allOf": [
                                  {
                                    "type": "string",
                                    "enum": [
                                      "address",
                                      "date",
                                      "daterange",
                                      "double",
                                      "enum",
                                      "monetary",
                                      "org",
                                      "people",
                                      "phone",
                                      "set",
                                      "text",
                                      "time",
                                      "timerange",
                                      "user",
                                      "varchar",
                                      "varchar_auto",
                                      "visible_to"
                                    ],
                                    "description": "The type of the field<table><tr><th>Value</th><th>Description</th></tr><tr><td>`address`</td><td>Address field (has multiple subfields, autocompleted by Google Maps)</td></tr><tr><td>`date`</td><td>Date (format YYYY-MM-DD)</td></tr><tr><td>`daterange`</td><td>Date-range field (has a start date and end date value, both YYYY-MM-DD)</td></tr><tr><td>`double`</td><td>Numeric value</td></tr><tr><td>`enum`</td><td>Options field with a single possible chosen option</td></tr><tr></tr><tr><td>`monetary`</td><td>Monetary field (has a numeric value and a currency value)</td></tr><tr><td>`org`</td><td>Organization field (contains an organization ID which is stored on the same account)</td></tr><tr><td>`people`</td><td>Person field (contains a person ID which is stored on the same account)</td></tr><tr><td>`phone`</td><td>Phone field (up to 255 numbers and/or characters)</td></tr><tr><td>`set`</td><td>Options field with a possibility of having multiple chosen options</td></tr><tr><td>`text`</td><td>Long text (up to 65k characters)</td></tr><tr><td>`time`</td><td>Time field (format HH:MM:SS)</td></tr><tr><td>`timerange`</td><td>Time-range field (has a start time and end time value, both HH:MM:SS)</td></tr><tr><td>`user`</td><td>User field (contains a user ID of another Pipedrive user)</td></tr><tr><td>`varchar`</td><td>Text (up to 255 characters)</td></tr><tr><td>`varchar_auto`</td><td>Autocomplete text (up to 255 characters)</td></tr><tr><td>`visible_to`</td><td>System field that keeps item's visibility setting</td></tr></table>"
                                  }
                                ]
                              },
                              "add_time": {
                                "type": "string",
                                "format": "datetime",
                                "description": "The creation time of the field"
                              },
                              "update_time": {
                                "type": "string",
                                "format": "datetime",
                                "description": "The update time of the field"
                              },
                              "last_updated_by_user_id": {
                                "type": "integer",
                                "description": "The ID of the user who created or most recently updated the field, only applicable for custom fields"
                              },
                              "active_flag": {
                                "type": "boolean",
                                "description": "The active flag of the field"
                              },
                              "edit_flag": {
                                "type": "boolean",
                                "description": "The edit flag of the field"
                              },
                              "index_visible_flag": {
                                "type": "boolean",
                                "description": "Not used"
                              },
                              "details_visible_flag": {
                                "type": "boolean",
                                "description": "Not used"
                              },
                              "add_visible_flag": {
                                "type": "boolean",
                                "description": "Not used"
                              },
                              "important_flag": {
                                "type": "boolean",
                                "description": "Not used"
                              },
                              "bulk_edit_allowed": {
                                "type": "boolean",
                                "description": "Whether or not the field of an item can be edited in bulk"
                              },
                              "searchable_flag": {
                                "type": "boolean",
                                "description": "Whether or not items can be searched by this field"
                              },
                              "filtering_allowed": {
                                "type": "boolean",
                                "description": "Whether or not items can be filtered by this field"
                              },
                              "sortable_flag": {
                                "type": "boolean",
                                "description": "Whether or not items can be sorted by this field"
                              },
                              "mandatory_flag": {
                                "type": "boolean",
                                "description": "Whether or not the field is mandatory"
                              },
                              "options": {
                                "type": "array",
                                "nullable": true,
                                "items": { "type": "object" },
                                "description": "The options of the field. When there are no options, `null` is returned."
                              },
                              "options_deleted": {
                                "type": "array",
                                "items": { "type": "object" },
                                "description": "The deleted options of the field. Only present when there is at least 1 deleted option."
                              },
                              "is_subfield": {
                                "type": "boolean",
                                "description": "Whether or not the field is a subfield of another field. Only present if field is subfield."
                              },
                              "subfields": {
                                "type": "array",
                                "items": { "type": "object" },
                                "description": "The subfields of the field. Only present when the field has subfields."
                              }
                            }
                          }
                        },
                        "additional_data": {
                          "description": "The additional data of the list",
                          "type": "object",
                          "properties": {
                            "start": {
                              "type": "integer",
                              "description": "Pagination start"
                            },
                            "limit": {
                              "type": "integer",
                              "description": "Items shown per page"
                            },
                            "more_items_in_collection": {
                              "type": "boolean",
                              "description": "If there are more list items in the collection than displayed or not"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "success": true,
                  "data": [
                    {
                      "id": 1,
                      "key": "title",
                      "name": "Title",
                      "order_nr": 2,
                      "field_type": "varchar",
                      "add_time": "2019-02-04 13:58:03",
                      "update_time": "2019-02-04 13:58:03",
                      "last_updated_by_user_id": 1,
                      "active_flag": true,
                      "edit_flag": false,
                      "index_visible_flag": true,
                      "details_visible_flag": true,
                      "add_visible_flag": true,
                      "important_flag": false,
                      "bulk_edit_allowed": true,
                      "searchable_flag": false,
                      "filtering_allowed": true,
                      "sortable_flag": true,
                      "options": null,
                      "mandatory_flag": true
                    },
                    {
                      "id": 2,
                      "key": "9dc80c50d78a15643bfc4ca79d76156a73a1ca0e",
                      "name": "Customer Type",
                      "order_nr": 1,
                      "field_type": "enum",
                      "add_time": "2019-02-04 13:58:03",
                      "update_time": "2019-02-04 13:58:03",
                      "last_updated_by_user_id": 1,
                      "active_flag": true,
                      "edit_flag": true,
                      "index_visible_flag": true,
                      "details_visible_flag": true,
                      "add_visible_flag": false,
                      "important_flag": false,
                      "bulk_edit_allowed": true,
                      "searchable_flag": false,
                      "filtering_allowed": true,
                      "sortable_flag": true,
                      "options": [
                        { "id": 190, "label": "Private person" },
                        { "id": 191, "label": "Company" },
                        { "id": 192, "label": "Government" }
                      ],
                      "mandatory_flag": true
                    }
                  ],
                  "additional_data": {
                    "pagination": {
                      "start": 0,
                      "limit": 100,
                      "more_items_in_collection": false
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add a new deal field",
        "description": "Adds a new deal field. For more information, see the tutorial for <a href=\"https://pipedrive.readme.io/docs/adding-a-new-custom-field\" target=\"_blank\" rel=\"noopener noreferrer\">adding a new custom field</a>.",
        "operationId": "addDealField",
        "tags": [ "DealFields" ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "createFieldRequest",
                "allOf": [
                  {
                    "type": "object",
                    "required": [ "name" ],
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The name of the field"
                      },
                      "options": {
                        "type": "string",
                        "description": "When `field_type` is either set or enum, possible options must be supplied as a JSON-encoded sequential array of objects. Example: `[{\"label\":\"New Item\"}]`"
                      },
                      "add_visible_flag": {
                        "type": "boolean",
                        "enum": [ true, false ],
                        "default": true,
                        "description": "Whether the field is available in the 'add new' modal or not (both in the web and mobile app)"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "required": [ "field_type" ],
                    "properties": {
                      "field_type": {
                        "type": "string",
                        "enum": [
                          "address",
                          "date",
                          "daterange",
                          "double",
                          "enum",
                          "monetary",
                          "org",
                          "people",
                          "phone",
                          "set",
                          "text",
                          "time",
                          "timerange",
                          "user",
                          "varchar",
                          "varchar_auto",
                          "visible_to"
                        ],
                        "description": "The type of the field<table><tr><th>Value</th><th>Description</th></tr><tr><td>`address`</td><td>Address field (has multiple subfields, autocompleted by Google Maps)</td></tr><tr><td>`date`</td><td>Date (format YYYY-MM-DD)</td></tr><tr><td>`daterange`</td><td>Date-range field (has a start date and end date value, both YYYY-MM-DD)</td></tr><tr><td>`double`</td><td>Numeric value</td></tr><tr><td>`enum`</td><td>Options field with a single possible chosen option</td></tr><tr></tr><tr><td>`monetary`</td><td>Monetary field (has a numeric value and a currency value)</td></tr><tr><td>`org`</td><td>Organization field (contains an organization ID which is stored on the same account)</td></tr><tr><td>`people`</td><td>Person field (contains a person ID which is stored on the same account)</td></tr><tr><td>`phone`</td><td>Phone field (up to 255 numbers and/or characters)</td></tr><tr><td>`set`</td><td>Options field with a possibility of having multiple chosen options</td></tr><tr><td>`text`</td><td>Long text (up to 65k characters)</td></tr><tr><td>`time`</td><td>Time field (format HH:MM:SS)</td></tr><tr><td>`timerange`</td><td>Time-range field (has a start time and end time value, both HH:MM:SS)</td></tr><tr><td>`user`</td><td>User field (contains a user ID of another Pipedrive user)</td></tr><tr><td>`varchar`</td><td>Text (up to 255 characters)</td></tr><tr><td>`varchar_auto`</td><td>Autocomplete text (up to 255 characters)</td></tr><tr><td>`visible_to`</td><td>System field that keeps item's visibility setting</td></tr></table>"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "field",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "description": "The ID of the field. Value is `null` in case of subfields."
                            },
                            "key": {
                              "type": "string",
                              "description": "The key of the field. For custom fields this is generated upon creation."
                            },
                            "name": {
                              "type": "string",
                              "description": "The name of the field"
                            },
                            "order_nr": {
                              "type": "integer",
                              "description": "The order number of the field"
                            },
                            "field_type": {
                              "allOf": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "address",
                                    "date",
                                    "daterange",
                                    "double",
                                    "enum",
                                    "monetary",
                                    "org",
                                    "people",
                                    "phone",
                                    "set",
                                    "text",
                                    "time",
                                    "timerange",
                                    "user",
                                    "varchar",
                                    "varchar_auto",
                                    "visible_to"
                                  ],
                                  "description": "The type of the field<table><tr><th>Value</th><th>Description</th></tr><tr><td>`address`</td><td>Address field (has multiple subfields, autocompleted by Google Maps)</td></tr><tr><td>`date`</td><td>Date (format YYYY-MM-DD)</td></tr><tr><td>`daterange`</td><td>Date-range field (has a start date and end date value, both YYYY-MM-DD)</td></tr><tr><td>`double`</td><td>Numeric value</td></tr><tr><td>`enum`</td><td>Options field with a single possible chosen option</td></tr><tr></tr><tr><td>`monetary`</td><td>Monetary field (has a numeric value and a currency value)</td></tr><tr><td>`org`</td><td>Organization field (contains an organization ID which is stored on the same account)</td></tr><tr><td>`people`</td><td>Person field (contains a person ID which is stored on the same account)</td></tr><tr><td>`phone`</td><td>Phone field (up to 255 numbers and/or characters)</td></tr><tr><td>`set`</td><td>Options field with a possibility of having multiple chosen options</td></tr><tr><td>`text`</td><td>Long text (up to 65k characters)</td></tr><tr><td>`time`</td><td>Time field (format HH:MM:SS)</td></tr><tr><td>`timerange`</td><td>Time-range field (has a start time and end time value, both HH:MM:SS)</td></tr><tr><td>`user`</td><td>User field (contains a user ID of another Pipedrive user)</td></tr><tr><td>`varchar`</td><td>Text (up to 255 characters)</td></tr><tr><td>`varchar_auto`</td><td>Autocomplete text (up to 255 characters)</td></tr><tr><td>`visible_to`</td><td>System field that keeps item's visibility setting</td></tr></table>"
                                }
                              ]
                            },
                            "add_time": {
                              "type": "string",
                              "format": "datetime",
                              "description": "The creation time of the field"
                            },
                            "update_time": {
                              "type": "string",
                              "format": "datetime",
                              "description": "The update time of the field"
                            },
                            "last_updated_by_user_id": {
                              "type": "integer",
                              "description": "The ID of the user who created or most recently updated the field, only applicable for custom fields"
                            },
                            "active_flag": {
                              "type": "boolean",
                              "description": "The active flag of the field"
                            },
                            "edit_flag": {
                              "type": "boolean",
                              "description": "The edit flag of the field"
                            },
                            "index_visible_flag": {
                              "type": "boolean",
                              "description": "Not used"
                            },
                            "details_visible_flag": {
                              "type": "boolean",
                              "description": "Not used"
                            },
                            "add_visible_flag": {
                              "type": "boolean",
                              "description": "Not used"
                            },
                            "important_flag": {
                              "type": "boolean",
                              "description": "Not used"
                            },
                            "bulk_edit_allowed": {
                              "type": "boolean",
                              "description": "Whether or not the field of an item can be edited in bulk"
                            },
                            "searchable_flag": {
                              "type": "boolean",
                              "description": "Whether or not items can be searched by this field"
                            },
                            "filtering_allowed": {
                              "type": "boolean",
                              "description": "Whether or not items can be filtered by this field"
                            },
                            "sortable_flag": {
                              "type": "boolean",
                              "description": "Whether or not items can be sorted by this field"
                            },
                            "mandatory_flag": {
                              "type": "boolean",
                              "description": "Whether or not the field is mandatory"
                            },
                            "options": {
                              "type": "array",
                              "nullable": true,
                              "items": { "type": "object" },
                              "description": "The options of the field. When there are no options, `null` is returned."
                            },
                            "options_deleted": {
                              "type": "array",
                              "items": { "type": "object" },
                              "description": "The deleted options of the field. Only present when there is at least 1 deleted option."
                            },
                            "is_subfield": {
                              "type": "boolean",
                              "description": "Whether or not the field is a subfield of another field. Only present if field is subfield."
                            },
                            "subfields": {
                              "type": "array",
                              "items": { "type": "object" },
                              "description": "The subfields of the field. Only present when the field has subfields."
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "success": true,
                  "data": {
                    "id": 2,
                    "key": "9dc80c50d78a15643bfc4ca79d76156a73a1ca0e",
                    "name": "Customer Type",
                    "order_nr": 1,
                    "field_type": "enum",
                    "add_time": "2019-02-04 13:58:03",
                    "update_time": "2019-02-04 13:58:03",
                    "last_updated_by_user_id": 1,
                    "active_flag": true,
                    "edit_flag": true,
                    "index_visible_flag": true,
                    "details_visible_flag": true,
                    "add_visible_flag": false,
                    "important_flag": false,
                    "bulk_edit_allowed": true,
                    "searchable_flag": false,
                    "filtering_allowed": true,
                    "sortable_flag": true,
                    "options": [
                      { "id": 190, "label": "Private person" },
                      { "id": 191, "label": "Company" },
                      { "id": 192, "label": "Government" }
                    ],
                    "mandatory_flag": true
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete multiple deal fields in bulk",
        "description": "Marks multiple deal fields as deleted.",
        "operationId": "deleteDealFields",
        "tags": [ "DealFields" ],
        "parameters": [
          {
            "in": "query",
            "name": "ids",
            "schema": { "type": "string" },
            "required": true,
            "description": "The comma-separated field IDs to delete"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "deleteFields",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "array",
                              "items": { "type": "integer" },
                              "description": "The list of deleted field IDs"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": { "success": true, "data": { "id": [ 123, 456 ] } }
              }
            }
          }
        }
      }
    },
    "/dealFields/{id}": {
      "get": {
        "summary": "Get one deal field",
        "description": "Returns data about a specific deal field.",
        "operationId": "getDealField",
        "tags": [ "DealFields" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the field",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "field",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "description": "The ID of the field. Value is `null` in case of subfields."
                            },
                            "key": {
                              "type": "string",
                              "description": "The key of the field. For custom fields this is generated upon creation."
                            },
                            "name": {
                              "type": "string",
                              "description": "The name of the field"
                            },
                            "order_nr": {
                              "type": "integer",
                              "description": "The order number of the field"
                            },
                            "field_type": {
                              "allOf": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "address",
                                    "date",
                                    "daterange",
                                    "double",
                                    "enum",
                                    "monetary",
                                    "org",
                                    "people",
                                    "phone",
                                    "set",
                                    "text",
                                    "time",
                                    "timerange",
                                    "user",
                                    "varchar",
                                    "varchar_auto",
                                    "visible_to"
                                  ],
                                  "description": "The type of the field<table><tr><th>Value</th><th>Description</th></tr><tr><td>`address`</td><td>Address field (has multiple subfields, autocompleted by Google Maps)</td></tr><tr><td>`date`</td><td>Date (format YYYY-MM-DD)</td></tr><tr><td>`daterange`</td><td>Date-range field (has a start date and end date value, both YYYY-MM-DD)</td></tr><tr><td>`double`</td><td>Numeric value</td></tr><tr><td>`enum`</td><td>Options field with a single possible chosen option</td></tr><tr></tr><tr><td>`monetary`</td><td>Monetary field (has a numeric value and a currency value)</td></tr><tr><td>`org`</td><td>Organization field (contains an organization ID which is stored on the same account)</td></tr><tr><td>`people`</td><td>Person field (contains a person ID which is stored on the same account)</td></tr><tr><td>`phone`</td><td>Phone field (up to 255 numbers and/or characters)</td></tr><tr><td>`set`</td><td>Options field with a possibility of having multiple chosen options</td></tr><tr><td>`text`</td><td>Long text (up to 65k characters)</td></tr><tr><td>`time`</td><td>Time field (format HH:MM:SS)</td></tr><tr><td>`timerange`</td><td>Time-range field (has a start time and end time value, both HH:MM:SS)</td></tr><tr><td>`user`</td><td>User field (contains a user ID of another Pipedrive user)</td></tr><tr><td>`varchar`</td><td>Text (up to 255 characters)</td></tr><tr><td>`varchar_auto`</td><td>Autocomplete text (up to 255 characters)</td></tr><tr><td>`visible_to`</td><td>System field that keeps item's visibility setting</td></tr></table>"
                                }
                              ]
                            },
                            "add_time": {
                              "type": "string",
                              "format": "datetime",
                              "description": "The creation time of the field"
                            },
                            "update_time": {
                              "type": "string",
                              "format": "datetime",
                              "description": "The update time of the field"
                            },
                            "last_updated_by_user_id": {
                              "type": "integer",
                              "description": "The ID of the user who created or most recently updated the field, only applicable for custom fields"
                            },
                            "active_flag": {
                              "type": "boolean",
                              "description": "The active flag of the field"
                            },
                            "edit_flag": {
                              "type": "boolean",
                              "description": "The edit flag of the field"
                            },
                            "index_visible_flag": {
                              "type": "boolean",
                              "description": "Not used"
                            },
                            "details_visible_flag": {
                              "type": "boolean",
                              "description": "Not used"
                            },
                            "add_visible_flag": {
                              "type": "boolean",
                              "description": "Not used"
                            },
                            "important_flag": {
                              "type": "boolean",
                              "description": "Not used"
                            },
                            "bulk_edit_allowed": {
                              "type": "boolean",
                              "description": "Whether or not the field of an item can be edited in bulk"
                            },
                            "searchable_flag": {
                              "type": "boolean",
                              "description": "Whether or not items can be searched by this field"
                            },
                            "filtering_allowed": {
                              "type": "boolean",
                              "description": "Whether or not items can be filtered by this field"
                            },
                            "sortable_flag": {
                              "type": "boolean",
                              "description": "Whether or not items can be sorted by this field"
                            },
                            "mandatory_flag": {
                              "type": "boolean",
                              "description": "Whether or not the field is mandatory"
                            },
                            "options": {
                              "type": "array",
                              "nullable": true,
                              "items": { "type": "object" },
                              "description": "The options of the field. When there are no options, `null` is returned."
                            },
                            "options_deleted": {
                              "type": "array",
                              "items": { "type": "object" },
                              "description": "The deleted options of the field. Only present when there is at least 1 deleted option."
                            },
                            "is_subfield": {
                              "type": "boolean",
                              "description": "Whether or not the field is a subfield of another field. Only present if field is subfield."
                            },
                            "subfields": {
                              "type": "array",
                              "items": { "type": "object" },
                              "description": "The subfields of the field. Only present when the field has subfields."
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "success": true,
                  "data": {
                    "id": 2,
                    "key": "9dc80c50d78a15643bfc4ca79d76156a73a1ca0e",
                    "name": "Customer Type",
                    "order_nr": 1,
                    "field_type": "enum",
                    "add_time": "2019-02-04 13:58:03",
                    "update_time": "2019-02-04 13:58:03",
                    "last_updated_by_user_id": 1,
                    "active_flag": true,
                    "edit_flag": true,
                    "index_visible_flag": true,
                    "details_visible_flag": true,
                    "add_visible_flag": false,
                    "important_flag": false,
                    "bulk_edit_allowed": true,
                    "searchable_flag": false,
                    "filtering_allowed": true,
                    "sortable_flag": true,
                    "options": [
                      { "id": 190, "label": "Private person" },
                      { "id": 191, "label": "Company" },
                      { "id": 192, "label": "Government" }
                    ],
                    "mandatory_flag": true
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a deal field",
        "description": "Marks a field as deleted. For more information, see the tutorial for <a href=\"https://pipedrive.readme.io/docs/deleting-a-custom-field\" target=\"_blank\" rel=\"noopener noreferrer\">deleting a custom field</a>.",
        "operationId": "deleteDealField",
        "tags": [ "DealFields" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the field",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "deleteField",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "description": "The ID of the field that was deleted"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": { "success": true, "data": { "id": 123 } }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update a deal field",
        "description": "Updates a deal field. For more information, see the tutorial for <a href=\" https://pipedrive.readme.io/docs/updating-custom-field-value \" target=\"_blank\" rel=\"noopener noreferrer\">updating custom fields' values</a>.",
        "operationId": "updateDealField",
        "tags": [ "DealFields" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the field",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "updateFieldRequest",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the field"
                  },
                  "options": {
                    "type": "string",
                    "description": "When `field_type` is either set or enum, possible options must be supplied as a JSON-encoded sequential array of objects. All active items must be supplied and already existing items must have their ID supplied. New items only require a label. Example: `[{\"id\":123,\"label\":\"Existing Item\"},{\"label\":\"New Item\"}]`"
                  },
                  "add_visible_flag": {
                    "type": "boolean",
                    "enum": [ true, false ],
                    "default": true,
                    "description": "Whether the field is available in 'add new' modal or not (both in web and mobile app)"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "field",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "description": "The ID of the field. Value is `null` in case of subfields."
                            },
                            "key": {
                              "type": "string",
                              "description": "The key of the field. For custom fields this is generated upon creation."
                            },
                            "name": {
                              "type": "string",
                              "description": "The name of the field"
                            },
                            "order_nr": {
                              "type": "integer",
                              "description": "The order number of the field"
                            },
                            "field_type": {
                              "allOf": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "address",
                                    "date",
                                    "daterange",
                                    "double",
                                    "enum",
                                    "monetary",
                                    "org",
                                    "people",
                                    "phone",
                                    "set",
                                    "text",
                                    "time",
                                    "timerange",
                                    "user",
                                    "varchar",
                                    "varchar_auto",
                                    "visible_to"
                                  ],
                                  "description": "The type of the field<table><tr><th>Value</th><th>Description</th></tr><tr><td>`address`</td><td>Address field (has multiple subfields, autocompleted by Google Maps)</td></tr><tr><td>`date`</td><td>Date (format YYYY-MM-DD)</td></tr><tr><td>`daterange`</td><td>Date-range field (has a start date and end date value, both YYYY-MM-DD)</td></tr><tr><td>`double`</td><td>Numeric value</td></tr><tr><td>`enum`</td><td>Options field with a single possible chosen option</td></tr><tr></tr><tr><td>`monetary`</td><td>Monetary field (has a numeric value and a currency value)</td></tr><tr><td>`org`</td><td>Organization field (contains an organization ID which is stored on the same account)</td></tr><tr><td>`people`</td><td>Person field (contains a person ID which is stored on the same account)</td></tr><tr><td>`phone`</td><td>Phone field (up to 255 numbers and/or characters)</td></tr><tr><td>`set`</td><td>Options field with a possibility of having multiple chosen options</td></tr><tr><td>`text`</td><td>Long text (up to 65k characters)</td></tr><tr><td>`time`</td><td>Time field (format HH:MM:SS)</td></tr><tr><td>`timerange`</td><td>Time-range field (has a start time and end time value, both HH:MM:SS)</td></tr><tr><td>`user`</td><td>User field (contains a user ID of another Pipedrive user)</td></tr><tr><td>`varchar`</td><td>Text (up to 255 characters)</td></tr><tr><td>`varchar_auto`</td><td>Autocomplete text (up to 255 characters)</td></tr><tr><td>`visible_to`</td><td>System field that keeps item's visibility setting</td></tr></table>"
                                }
                              ]
                            },
                            "add_time": {
                              "type": "string",
                              "format": "datetime",
                              "description": "The creation time of the field"
                            },
                            "update_time": {
                              "type": "string",
                              "format": "datetime",
                              "description": "The update time of the field"
                            },
                            "last_updated_by_user_id": {
                              "type": "integer",
                              "description": "The ID of the user who created or most recently updated the field, only applicable for custom fields"
                            },
                            "active_flag": {
                              "type": "boolean",
                              "description": "The active flag of the field"
                            },
                            "edit_flag": {
                              "type": "boolean",
                              "description": "The edit flag of the field"
                            },
                            "index_visible_flag": {
                              "type": "boolean",
                              "description": "Not used"
                            },
                            "details_visible_flag": {
                              "type": "boolean",
                              "description": "Not used"
                            },
                            "add_visible_flag": {
                              "type": "boolean",
                              "description": "Not used"
                            },
                            "important_flag": {
                              "type": "boolean",
                              "description": "Not used"
                            },
                            "bulk_edit_allowed": {
                              "type": "boolean",
                              "description": "Whether or not the field of an item can be edited in bulk"
                            },
                            "searchable_flag": {
                              "type": "boolean",
                              "description": "Whether or not items can be searched by this field"
                            },
                            "filtering_allowed": {
                              "type": "boolean",
                              "description": "Whether or not items can be filtered by this field"
                            },
                            "sortable_flag": {
                              "type": "boolean",
                              "description": "Whether or not items can be sorted by this field"
                            },
                            "mandatory_flag": {
                              "type": "boolean",
                              "description": "Whether or not the field is mandatory"
                            },
                            "options": {
                              "type": "array",
                              "nullable": true,
                              "items": { "type": "object" },
                              "description": "The options of the field. When there are no options, `null` is returned."
                            },
                            "options_deleted": {
                              "type": "array",
                              "items": { "type": "object" },
                              "description": "The deleted options of the field. Only present when there is at least 1 deleted option."
                            },
                            "is_subfield": {
                              "type": "boolean",
                              "description": "Whether or not the field is a subfield of another field. Only present if field is subfield."
                            },
                            "subfields": {
                              "type": "array",
                              "items": { "type": "object" },
                              "description": "The subfields of the field. Only present when the field has subfields."
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "success": true,
                  "data": {
                    "id": 2,
                    "key": "9dc80c50d78a15643bfc4ca79d76156a73a1ca0e",
                    "name": "Customer Type",
                    "order_nr": 1,
                    "field_type": "enum",
                    "add_time": "2019-02-04 13:58:03",
                    "update_time": "2019-02-04 13:58:03",
                    "last_updated_by_user_id": 1,
                    "active_flag": true,
                    "edit_flag": true,
                    "index_visible_flag": true,
                    "details_visible_flag": true,
                    "add_visible_flag": false,
                    "important_flag": false,
                    "bulk_edit_allowed": true,
                    "searchable_flag": false,
                    "filtering_allowed": true,
                    "sortable_flag": true,
                    "options": [
                      { "id": 190, "label": "Private person" },
                      { "id": 191, "label": "Company" },
                      { "id": 192, "label": "Government" }
                    ],
                    "mandatory_flag": true
                  }
                }
              }
            }
          }
        }
      }
    },
    "/files": {
      "get": {
        "summary": "Get all files",
        "description": "Returns data about all files.",
        "operationId": "getFiles",
        "tags": [ "Files" ],
        "parameters": [
          {
            "in": "query",
            "name": "start",
            "description": "Pagination start",
            "schema": { "type": "integer", "default": 0 }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Items shown per page",
            "schema": { "type": "integer" }
          },
          {
            "in": "query",
            "name": "sort",
            "schema": { "type": "string" },
            "description": "The field names and sorting mode separated by a comma (`field_name_1 ASC`, `field_name_2 DESC`). Only first-level field keys are supported (no nested keys). Supported fields: `id`, `user_id`, `deal_id`, `person_id`, `org_id`, `product_id`, `add_time`, `update_time`, `file_name`, `file_type`, `file_size`, `comment`."
          }
        ],
        "responses": {
          "200": {
            "description": "Get data about all files uploaded to Pipedrive",
            "content": {
              "application/json": {
                "schema": {
                  "title": "getFiles",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "If the request was successful or not"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "The file data",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "description": "The ID of the file"
                          },
                          "user_id": {
                            "type": "integer",
                            "description": "The ID of the user to associate the file with"
                          },
                          "deal_id": {
                            "type": "integer",
                            "description": "The ID of the deal to associate the file with"
                          },
                          "person_id": {
                            "type": "integer",
                            "description": "The ID of the person to associate the file with"
                          },
                          "org_id": {
                            "type": "integer",
                            "description": "The ID of the organization to associate the file with"
                          },
                          "product_id": {
                            "type": "integer",
                            "description": "The ID of the product to associate the file with"
                          },
                          "activity_id": {
                            "type": "integer",
                            "description": "The ID of the activity to associate the file with"
                          },
                          "lead_id": {
                            "type": "string",
                            "description": "The ID of the lead to associate the file with",
                            "format": "uuid"
                          },
                          "add_time": {
                            "type": "string",
                            "description": "The date and time when the file was added/created. Format: YYYY-MM-DD HH:MM:SS"
                          },
                          "update_time": {
                            "type": "string",
                            "description": "The last updated date and time of the file. Format: YYYY-MM-DD HH:MM:SS"
                          },
                          "file_name": {
                            "type": "string",
                            "description": "The original name of the file"
                          },
                          "file_size": {
                            "type": "integer",
                            "description": "The size of the file"
                          },
                          "active_flag": {
                            "type": "boolean",
                            "description": "Whether the user is active or not. false = Not activated, true = Activated"
                          },
                          "inline_flag": {
                            "type": "boolean",
                            "description": "Whether the file was uploaded as inline or not"
                          },
                          "remote_location": {
                            "type": "string",
                            "description": "The location type to send the file to. Only googledrive is supported at the moment."
                          },
                          "remote_id": {
                            "type": "string",
                            "description": "The ID of the remote item"
                          },
                          "cid": {
                            "type": "string",
                            "description": "The ID of the inline attachment"
                          },
                          "s3_bucket": {
                            "type": "string",
                            "description": "The location of the cloud storage"
                          },
                          "mail_message_id": {
                            "type": "string",
                            "description": "The ID of the mail message to associate the file with"
                          },
                          "mail_template_id": {
                            "type": "string",
                            "description": "The ID of the mail template to associate the file with"
                          },
                          "deal_name": {
                            "type": "string",
                            "description": "The name of the deal associated with the file"
                          },
                          "person_name": {
                            "type": "string",
                            "description": "The name of the person associated with the file"
                          },
                          "org_name": {
                            "type": "string",
                            "description": "The name of the organization associated with the file"
                          },
                          "product_name": {
                            "type": "string",
                            "description": "The name of the product associated with the file"
                          },
                          "lead_name": {
                            "type": "string",
                            "description": "The name of the lead associated with the file"
                          },
                          "url": {
                            "type": "string",
                            "description": "The URL of the download file"
                          },
                          "name": {
                            "type": "string",
                            "description": "The visible name of the file"
                          },
                          "description": {
                            "type": "string",
                            "description": "The description of the file"
                          }
                        }
                      },
                      "description": "The array of all uploaded files"
                    },
                    "additional_data": {
                      "type": "object",
                      "properties": {
                        "pagination": {
                          "title": "paginationDetails",
                          "description": "Pagination details of the list",
                          "type": "object",
                          "allOf": [
                            {
                              "description": "The additional data of the list",
                              "type": "object",
                              "properties": {
                                "start": {
                                  "type": "integer",
                                  "description": "Pagination start"
                                },
                                "limit": {
                                  "type": "integer",
                                  "description": "Items shown per page"
                                },
                                "more_items_in_collection": {
                                  "type": "boolean",
                                  "description": "If there are more list items in the collection than displayed or not"
                                }
                              }
                            },
                            {
                              "type": "object",
                              "properties": {
                                "next_start": {
                                  "type": "integer",
                                  "description": "Next pagination start"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  }
                },
                "example": {
                  "success": true,
                  "data": [
                    {
                      "id": 123,
                      "user_id": 456,
                      "deal_id": 1,
                      "person_id": 789,
                      "org_id": 1,
                      "product_id": 1,
                      "activity_id": 1,
                      "lead_id": "adf21080-0e10-11eb-879b-05d71fb426ec",
                      "log_id": null,
                      "add_time": "2020-02-20 14:36:35",
                      "update_time": "2020-02-20 14:57:33",
                      "file_name": "IMG_8189_52233498214699de9579e7b304a81b157b2eb2137e8062.jpg",
                      "file_type": "img",
                      "file_size": 7801780,
                      "active_flag": true,
                      "inline_flag": false,
                      "remote_location": "googledocs",
                      "remote_id": "1mT6jshiv6537IirwOExXJuG1jdR4F0FQ",
                      "cid": "",
                      "s3_bucket": "",
                      "mail_message_id": "",
                      "mail_template_id": "",
                      "deal_name": "",
                      "person_name": "Person",
                      "lead_name": "Test lead name",
                      "org_name": "",
                      "product_name": "",
                      "url": "https://2a7f.pipedrive.com/v1/files/123/download",
                      "name": "test file name",
                      "description": "test file description"
                    },
                    {
                      "id": 123321,
                      "user_id": 456,
                      "deal_id": 1,
                      "person_id": 789987,
                      "org_id": 1,
                      "product_id": 1,
                      "activity_id": 1,
                      "lead_id": "adf21080-0e10-11eb-879b-05d71fb426ec",
                      "log_id": null,
                      "add_time": "2020-02-20 14:36:35",
                      "update_time": "2020-02-20 14:57:33",
                      "file_name": "IMG_8189_52233498214699de9579e7b304a81b157b2eb2137e8062.jpg",
                      "file_type": "img",
                      "file_size": 7801780,
                      "active_flag": true,
                      "inline_flag": false,
                      "remote_location": "googledocs",
                      "remote_id": "1mT6jshiv6537IirwOExXJuG1jdR4F0FQ",
                      "cid": "",
                      "s3_bucket": "",
                      "mail_message_id": "",
                      "mail_template_id": "",
                      "deal_name": "",
                      "person_name": "Person",
                      "org_name": "",
                      "product_name": "",
                      "lead_name": "Test lead name",
                      "url": "https://2a7f.pipedrive.com/v1/files/123321/download",
                      "name": "second test file name",
                      "description": "second test file description"
                    }
                  ],
                  "additional_data": {
                    "pagination": {
                      "start": 0,
                      "limit": 100,
                      "more_items_in_collection": true,
                      "next_start": 100
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add file",
        "description": "Lets you upload a file and associate it with a deal, person, organization, activity, product or lead. For more information, see the tutorial for <a href=\"https://pipedrive.readme.io/docs/adding-a-file\" target=\"_blank\" rel=\"noopener noreferrer\">adding a file</a>.",
        "operationId": "addFile",
        "tags": [ "Files" ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "title": "addFileRequest",
                "type": "object",
                "required": [ "file" ],
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "description": "A single file, supplied in the multipart/form-data encoding and contained within the given boundaries"
                  },
                  "deal_id": {
                    "type": "integer",
                    "description": "The ID of the deal to associate file(s) with"
                  },
                  "person_id": {
                    "type": "integer",
                    "description": "The ID of the person to associate file(s) with"
                  },
                  "org_id": {
                    "type": "integer",
                    "description": "The ID of the organization to associate file(s) with"
                  },
                  "product_id": {
                    "type": "integer",
                    "description": "The ID of the product to associate file(s) with"
                  },
                  "activity_id": {
                    "type": "integer",
                    "description": "The ID of the activity to associate file(s) with"
                  },
                  "lead_id": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The ID of the lead to associate file(s) with"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Add a file from computer or Google Drive and associate it with deal, person, organization, activity or product",
            "content": {
              "application/json": {
                "schema": {
                  "title": "addFile",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "If the request was successful or not"
                    },
                    "data": {
                      "type": "object",
                      "description": "The file data",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "description": "The ID of the file"
                        },
                        "user_id": {
                          "type": "integer",
                          "description": "The ID of the user to associate the file with"
                        },
                        "deal_id": {
                          "type": "integer",
                          "description": "The ID of the deal to associate the file with"
                        },
                        "person_id": {
                          "type": "integer",
                          "description": "The ID of the person to associate the file with"
                        },
                        "org_id": {
                          "type": "integer",
                          "description": "The ID of the organization to associate the file with"
                        },
                        "product_id": {
                          "type": "integer",
                          "description": "The ID of the product to associate the file with"
                        },
                        "activity_id": {
                          "type": "integer",
                          "description": "The ID of the activity to associate the file with"
                        },
                        "lead_id": {
                          "type": "string",
                          "description": "The ID of the lead to associate the file with",
                          "format": "uuid"
                        },
                        "add_time": {
                          "type": "string",
                          "description": "The date and time when the file was added/created. Format: YYYY-MM-DD HH:MM:SS"
                        },
                        "update_time": {
                          "type": "string",
                          "description": "The last updated date and time of the file. Format: YYYY-MM-DD HH:MM:SS"
                        },
                        "file_name": {
                          "type": "string",
                          "description": "The original name of the file"
                        },
                        "file_size": {
                          "type": "integer",
                          "description": "The size of the file"
                        },
                        "active_flag": {
                          "type": "boolean",
                          "description": "Whether the user is active or not. false = Not activated, true = Activated"
                        },
                        "inline_flag": {
                          "type": "boolean",
                          "description": "Whether the file was uploaded as inline or not"
                        },
                        "remote_location": {
                          "type": "string",
                          "description": "The location type to send the file to. Only googledrive is supported at the moment."
                        },
                        "remote_id": {
                          "type": "string",
                          "description": "The ID of the remote item"
                        },
                        "cid": {
                          "type": "string",
                          "description": "The ID of the inline attachment"
                        },
                        "s3_bucket": {
                          "type": "string",
                          "description": "The location of the cloud storage"
                        },
                        "mail_message_id": {
                          "type": "string",
                          "description": "The ID of the mail message to associate the file with"
                        },
                        "mail_template_id": {
                          "type": "string",
                          "description": "The ID of the mail template to associate the file with"
                        },
                        "deal_name": {
                          "type": "string",
                          "description": "The name of the deal associated with the file"
                        },
                        "person_name": {
                          "type": "string",
                          "description": "The name of the person associated with the file"
                        },
                        "org_name": {
                          "type": "string",
                          "description": "The name of the organization associated with the file"
                        },
                        "product_name": {
                          "type": "string",
                          "description": "The name of the product associated with the file"
                        },
                        "lead_name": {
                          "type": "string",
                          "description": "The name of the lead associated with the file"
                        },
                        "url": {
                          "type": "string",
                          "description": "The URL of the download file"
                        },
                        "name": {
                          "type": "string",
                          "description": "The visible name of the file"
                        },
                        "description": {
                          "type": "string",
                          "description": "The description of the file"
                        }
                      }
                    }
                  }
                },
                "example": {
                  "success": true,
                  "data": {
                    "id": 123,
                    "user_id": 456,
                    "deal_id": 1,
                    "person_id": 789,
                    "org_id": 1,
                    "product_id": 1,
                    "activity_id": 1,
                    "lead_id": "adf21080-0e10-11eb-879b-05d71fb426ec",
                    "log_id": null,
                    "add_time": "2020-02-20 14:36:35",
                    "update_time": "2020-02-20 14:36:31",
                    "file_name": "IMG_8189_52233498214699de9579e7b304a81b157b2eb2137e8062.jpg",
                    "file_type": "img",
                    "file_size": 7801780,
                    "active_flag": true,
                    "inline_flag": false,
                    "remote_location": "googledocs",
                    "remote_id": "1mT6jshiv6537IirwOExXJuG1jdR4F0FQ",
                    "cid": "",
                    "s3_bucket": "",
                    "mail_message_id": "",
                    "mail_template_id": "",
                    "deal_name": "",
                    "person_name": "Person",
                    "org_name": "",
                    "product_name": "",
                    "lead_name": "Test lead name",
                    "url": "https://2a7f.pipedrive.com/v1/files/123/download",
                    "name": "IMG_8189.jpg",
                    "description": ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/files/remote": {
      "post": {
        "summary": "Create a remote file and link it to an item",
        "description": "Creates a new empty file in the remote location (`googledrive`) that will be linked to the item you supply. For more information, see the tutorial for <a href=\"https://pipedrive.readme.io/docs/adding-a-remote-file\" target=\"_blank\" rel=\"noopener noreferrer\">adding a remote file</a>.",
        "operationId": "addFileAndLinkIt",
        "tags": [ "Files" ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "title": "addFileAndLinkItRequest",
                "type": "object",
                "required": [
                  "file_type",
                  "title",
                  "item_type",
                  "item_id",
                  "remote_location"
                ],
                "properties": {
                  "file_type": {
                    "type": "string",
                    "enum": [ "gdoc", "gslides", "gsheet", "gform", "gdraw" ],
                    "description": "The file type"
                  },
                  "title": {
                    "type": "string",
                    "description": "The title of the file"
                  },
                  "item_type": {
                    "type": "string",
                    "enum": [ "deal", "organization", "person" ],
                    "description": "The item type"
                  },
                  "item_id": {
                    "type": "integer",
                    "description": "The ID of the item to associate the file with"
                  },
                  "remote_location": {
                    "type": "string",
                    "enum": [ "googledrive" ],
                    "description": "The location type to send the file to. Only `googledrive` is supported at the moment."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Creates a new empty file in the remote location (googledrive) that will be linked to the item you supply - deal, person or organization",
            "content": {
              "application/json": {
                "schema": {
                  "title": "addFileAndLinkIt",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "If the request was successful or not"
                    },
                    "data": {
                      "type": "object",
                      "description": "The file data",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "description": "The ID of the file"
                        },
                        "user_id": {
                          "type": "integer",
                          "description": "The ID of the user to associate the file with"
                        },
                        "deal_id": {
                          "type": "integer",
                          "description": "The ID of the deal to associate the file with"
                        },
                        "person_id": {
                          "type": "integer",
                          "description": "The ID of the person to associate the file with"
                        },
                        "org_id": {
                          "type": "integer",
                          "description": "The ID of the organization to associate the file with"
                        },
                        "product_id": {
                          "type": "integer",
                          "description": "The ID of the product to associate the file with"
                        },
                        "activity_id": {
                          "type": "integer",
                          "description": "The ID of the activity to associate the file with"
                        },
                        "lead_id": {
                          "type": "string",
                          "description": "The ID of the lead to associate the file with",
                          "format": "uuid"
                        },
                        "add_time": {
                          "type": "string",
                          "description": "The date and time when the file was added/created. Format: YYYY-MM-DD HH:MM:SS"
                        },
                        "update_time": {
                          "type": "string",
                          "description": "The last updated date and time of the file. Format: YYYY-MM-DD HH:MM:SS"
                        },
                        "file_name": {
                          "type": "string",
                          "description": "The original name of the file"
                        },
                        "file_size": {
                          "type": "integer",
                          "description": "The size of the file"
                        },
                        "active_flag": {
                          "type": "boolean",
                          "description": "Whether the user is active or not. false = Not activated, true = Activated"
                        },
                        "inline_flag": {
                          "type": "boolean",
                          "description": "Whether the file was uploaded as inline or not"
                        },
                        "remote_location": {
                          "type": "string",
                          "description": "The location type to send the file to. Only googledrive is supported at the moment."
                        },
                        "remote_id": {
                          "type": "string",
                          "description": "The ID of the remote item"
                        },
                        "cid": {
                          "type": "string",
                          "description": "The ID of the inline attachment"
                        },
                        "s3_bucket": {
                          "type": "string",
                          "description": "The location of the cloud storage"
                        },
                        "mail_message_id": {
                          "type": "string",
                          "description": "The ID of the mail message to associate the file with"
                        },
                        "mail_template_id": {
                          "type": "string",
                          "description": "The ID of the mail template to associate the file with"
                        },
                        "deal_name": {
                          "type": "string",
                          "description": "The name of the deal associated with the file"
                        },
                        "person_name": {
                          "type": "string",
                          "description": "The name of the person associated with the file"
                        },
                        "org_name": {
                          "type": "string",
                          "description": "The name of the organization associated with the file"
                        },
                        "product_name": {
                          "type": "string",
                          "description": "The name of the product associated with the file"
                        },
                        "lead_name": {
                          "type": "string",
                          "description": "The name of the lead associated with the file"
                        },
                        "url": {
                          "type": "string",
                          "description": "The URL of the download file"
                        },
                        "name": {
                          "type": "string",
                          "description": "The visible name of the file"
                        },
                        "description": {
                          "type": "string",
                          "description": "The description of the file"
                        }
                      }
                    }
                  }
                },
                "example": {
                  "success": true,
                  "data": {
                    "id": 7195,
                    "user_id": 456,
                    "deal_id": 36,
                    "person_id": 1,
                    "org_id": 15,
                    "product_id": 1,
                    "activity_id": 1,
                    "lead_id": "adf21080-0e10-11eb-879b-05d71fb426ec",
                    "log_id": null,
                    "add_time": "2020-02-21 11:52:28",
                    "update_time": "2020-02-21 11:52:24",
                    "file_name": "",
                    "file_type": "gdoc",
                    "file_size": 0,
                    "active_flag": true,
                    "inline_flag": false,
                    "remote_location": "googledocs",
                    "remote_id": "1gzyh6ExBxIb4RBZbAZxsrrBp45yuXhZWq3Zash5b75c",
                    "cid": "",
                    "s3_bucket": "",
                    "mail_message_id": "",
                    "mail_template_id": "",
                    "deal_name": "test deal",
                    "person_name": "",
                    "org_name": "test org",
                    "product_name": "",
                    "lead_name": "Test lead name 1",
                    "url": "https://app.pipedrive.com/api/v1/files/7195/download",
                    "name": "Test title for remote file",
                    "description": ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/files/remoteLink": {
      "post": {
        "summary": "Link a remote file to an item",
        "description": "Links an existing remote file (`googledrive`) to the item you supply. For more information, see the tutorial for <a href=\"https://pipedrive.readme.io/docs/adding-a-remote-file\" target=\"_blank\" rel=\"noopener noreferrer\">adding a remote file</a>.",
        "operationId": "linkFileToItem",
        "tags": [ "Files" ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "title": "linkFileToItemRequest",
                "type": "object",
                "required": [
                  "item_type",
                  "item_id",
                  "remote_id",
                  "remote_location"
                ],
                "properties": {
                  "item_type": {
                    "type": "string",
                    "enum": [ "deal", "organization", "person" ],
                    "description": "The item type"
                  },
                  "item_id": {
                    "type": "integer",
                    "description": "The ID of the item to associate the file with"
                  },
                  "remote_id": {
                    "type": "string",
                    "description": "The remote item ID"
                  },
                  "remote_location": {
                    "type": "string",
                    "enum": [ "googledrive" ],
                    "description": "The location type to send the file to. Only `googledrive` is supported at the moment."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Links an existing remote file (googledrive) to the item you supply - deal, person, organization",
            "content": {
              "application/json": {
                "schema": {
                  "title": "linkFileToItem",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "If the request was successful or not"
                    },
                    "data": {
                      "type": "object",
                      "description": "The file data",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "description": "The ID of the file"
                        },
                        "user_id": {
                          "type": "integer",
                          "description": "The ID of the user to associate the file with"
                        },
                        "deal_id": {
                          "type": "integer",
                          "description": "The ID of the deal to associate the file with"
                        },
                        "person_id": {
                          "type": "integer",
                          "description": "The ID of the person to associate the file with"
                        },
                        "org_id": {
                          "type": "integer",
                          "description": "The ID of the organization to associate the file with"
                        },
                        "product_id": {
                          "type": "integer",
                          "description": "The ID of the product to associate the file with"
                        },
                        "activity_id": {
                          "type": "integer",
                          "description": "The ID of the activity to associate the file with"
                        },
                        "lead_id": {
                          "type": "string",
                          "description": "The ID of the lead to associate the file with",
                          "format": "uuid"
                        },
                        "add_time": {
                          "type": "string",
                          "description": "The date and time when the file was added/created. Format: YYYY-MM-DD HH:MM:SS"
                        },
                        "update_time": {
                          "type": "string",
                          "description": "The last updated date and time of the file. Format: YYYY-MM-DD HH:MM:SS"
                        },
                        "file_name": {
                          "type": "string",
                          "description": "The original name of the file"
                        },
                        "file_size": {
                          "type": "integer",
                          "description": "The size of the file"
                        },
                        "active_flag": {
                          "type": "boolean",
                          "description": "Whether the user is active or not. false = Not activated, true = Activated"
                        },
                        "inline_flag": {
                          "type": "boolean",
                          "description": "Whether the file was uploaded as inline or not"
                        },
                        "remote_location": {
                          "type": "string",
                          "description": "The location type to send the file to. Only googledrive is supported at the moment."
                        },
                        "remote_id": {
                          "type": "string",
                          "description": "The ID of the remote item"
                        },
                        "cid": {
                          "type": "string",
                          "description": "The ID of the inline attachment"
                        },
                        "s3_bucket": {
                          "type": "string",
                          "description": "The location of the cloud storage"
                        },
                        "mail_message_id": {
                          "type": "string",
                          "description": "The ID of the mail message to associate the file with"
                        },
                        "mail_template_id": {
                          "type": "string",
                          "description": "The ID of the mail template to associate the file with"
                        },
                        "deal_name": {
                          "type": "string",
                          "description": "The name of the deal associated with the file"
                        },
                        "person_name": {
                          "type": "string",
                          "description": "The name of the person associated with the file"
                        },
                        "org_name": {
                          "type": "string",
                          "description": "The name of the organization associated with the file"
                        },
                        "product_name": {
                          "type": "string",
                          "description": "The name of the product associated with the file"
                        },
                        "lead_name": {
                          "type": "string",
                          "description": "The name of the lead associated with the file"
                        },
                        "url": {
                          "type": "string",
                          "description": "The URL of the download file"
                        },
                        "name": {
                          "type": "string",
                          "description": "The visible name of the file"
                        },
                        "description": {
                          "type": "string",
                          "description": "The description of the file"
                        }
                      }
                    }
                  }
                },
                "example": {
                  "success": true,
                  "data": {
                    "id": 7196,
                    "user_id": 456,
                    "deal_id": 35,
                    "person_id": 1,
                    "org_id": 1,
                    "product_id": 1,
                    "activity_id": 1,
                    "lead_id": "adf21080-0e10-11eb-879b-05d71fb426ec",
                    "log_id": null,
                    "add_time": "2020-02-21 12:02:37",
                    "update_time": "2020-02-21 12:02:37",
                    "file_name": "Test title to remote file",
                    "file_type": "gdoc",
                    "file_size": 0,
                    "active_flag": true,
                    "inline_flag": false,
                    "remote_location": "googledocs",
                    "remote_id": "1gzyh6ExBxIb4RBZbAZxsrrBp45yuXhZWq3Zash5b75c",
                    "cid": "",
                    "s3_bucket": "",
                    "mail_message_id": "",
                    "mail_template_id": "",
                    "deal_name": "Test deal name",
                    "person_name": "Test person name",
                    "org_name": "",
                    "product_name": "",
                    "lead_name": "Test lead name",
                    "url": "https://app.pipedrive.com/api/v1/files/7196/download",
                    "name": "Test title for remote file",
                    "description": ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/files/{id}": {
      "delete": {
        "summary": "Delete a file",
        "description": "Marks a file as deleted. After 30 days, the file will be permanently deleted.",
        "operationId": "deleteFile",
        "tags": [ "Files" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the file",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "Delete a file from Pipedrive",
            "content": {
              "application/json": {
                "schema": {
                  "title": "deleteFile",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "If the request was successful or not"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "description": "The ID of the file"
                        }
                      }
                    }
                  }
                },
                "example": { "success": true, "data": { "id": 123 } }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get one file",
        "description": "Returns data about a specific file.",
        "operationId": "getFile",
        "tags": [ "Files" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the file",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "Get data about one specific file uploaded to Pipedrive",
            "content": {
              "application/json": {
                "schema": {
                  "title": "getFile",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "If the request was successful or not"
                    },
                    "data": {
                      "type": "object",
                      "description": "The file data",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "description": "The ID of the file"
                        },
                        "user_id": {
                          "type": "integer",
                          "description": "The ID of the user to associate the file with"
                        },
                        "deal_id": {
                          "type": "integer",
                          "description": "The ID of the deal to associate the file with"
                        },
                        "person_id": {
                          "type": "integer",
                          "description": "The ID of the person to associate the file with"
                        },
                        "org_id": {
                          "type": "integer",
                          "description": "The ID of the organization to associate the file with"
                        },
                        "product_id": {
                          "type": "integer",
                          "description": "The ID of the product to associate the file with"
                        },
                        "activity_id": {
                          "type": "integer",
                          "description": "The ID of the activity to associate the file with"
                        },
                        "lead_id": {
                          "type": "string",
                          "description": "The ID of the lead to associate the file with",
                          "format": "uuid"
                        },
                        "add_time": {
                          "type": "string",
                          "description": "The date and time when the file was added/created. Format: YYYY-MM-DD HH:MM:SS"
                        },
                        "update_time": {
                          "type": "string",
                          "description": "The last updated date and time of the file. Format: YYYY-MM-DD HH:MM:SS"
                        },
                        "file_name": {
                          "type": "string",
                          "description": "The original name of the file"
                        },
                        "file_size": {
                          "type": "integer",
                          "description": "The size of the file"
                        },
                        "active_flag": {
                          "type": "boolean",
                          "description": "Whether the user is active or not. false = Not activated, true = Activated"
                        },
                        "inline_flag": {
                          "type": "boolean",
                          "description": "Whether the file was uploaded as inline or not"
                        },
                        "remote_location": {
                          "type": "string",
                          "description": "The location type to send the file to. Only googledrive is supported at the moment."
                        },
                        "remote_id": {
                          "type": "string",
                          "description": "The ID of the remote item"
                        },
                        "cid": {
                          "type": "string",
                          "description": "The ID of the inline attachment"
                        },
                        "s3_bucket": {
                          "type": "string",
                          "description": "The location of the cloud storage"
                        },
                        "mail_message_id": {
                          "type": "string",
                          "description": "The ID of the mail message to associate the file with"
                        },
                        "mail_template_id": {
                          "type": "string",
                          "description": "The ID of the mail template to associate the file with"
                        },
                        "deal_name": {
                          "type": "string",
                          "description": "The name of the deal associated with the file"
                        },
                        "person_name": {
                          "type": "string",
                          "description": "The name of the person associated with the file"
                        },
                        "org_name": {
                          "type": "string",
                          "description": "The name of the organization associated with the file"
                        },
                        "product_name": {
                          "type": "string",
                          "description": "The name of the product associated with the file"
                        },
                        "lead_name": {
                          "type": "string",
                          "description": "The name of the lead associated with the file"
                        },
                        "url": {
                          "type": "string",
                          "description": "The URL of the download file"
                        },
                        "name": {
                          "type": "string",
                          "description": "The visible name of the file"
                        },
                        "description": {
                          "type": "string",
                          "description": "The description of the file"
                        }
                      }
                    }
                  }
                },
                "example": {
                  "success": true,
                  "data": {
                    "id": 123,
                    "user_id": 456,
                    "deal_id": 1,
                    "person_id": 789,
                    "org_id": 1,
                    "product_id": 1,
                    "activity_id": 1,
                    "lead_id": "adf21080-0e10-11eb-879b-05d71fb426ec",
                    "log_id": null,
                    "add_time": "2020-02-20 14:36:35",
                    "update_time": "2020-02-20 14:57:33",
                    "file_name": "IMG_8189_52233498214699de9579e7b304a81b157b2eb2137e8062.jpg",
                    "file_type": "img",
                    "file_size": 7801780,
                    "active_flag": true,
                    "inline_flag": false,
                    "remote_location": "googledocs",
                    "remote_id": "1mT6jshiv6537IirwOExXJuG1jdR4F0FQ",
                    "cid": "",
                    "s3_bucket": "",
                    "mail_message_id": "",
                    "mail_template_id": "",
                    "deal_name": "",
                    "person_name": "Person",
                    "org_name": "",
                    "product_name": "",
                    "lead_name": "Test lead name",
                    "url": "https://2a7f.pipedrive.com/v1/files/123/download",
                    "name": "test file name",
                    "description": "test file description"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update file details",
        "description": "Updates the properties of a file.",
        "operationId": "updateFile",
        "tags": [ "Files" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the file",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "title": "updateFileRequest",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The visible name of the file"
                  },
                  "description": {
                    "type": "string",
                    "description": "The description of the file"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update file name and description",
            "content": {
              "application/json": {
                "schema": {
                  "title": "updateFile",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "If the request was successful or not"
                    },
                    "data": {
                      "type": "object",
                      "description": "The file data",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "description": "The ID of the file"
                        },
                        "user_id": {
                          "type": "integer",
                          "description": "The ID of the user to associate the file with"
                        },
                        "deal_id": {
                          "type": "integer",
                          "description": "The ID of the deal to associate the file with"
                        },
                        "person_id": {
                          "type": "integer",
                          "description": "The ID of the person to associate the file with"
                        },
                        "org_id": {
                          "type": "integer",
                          "description": "The ID of the organization to associate the file with"
                        },
                        "product_id": {
                          "type": "integer",
                          "description": "The ID of the product to associate the file with"
                        },
                        "activity_id": {
                          "type": "integer",
                          "description": "The ID of the activity to associate the file with"
                        },
                        "lead_id": {
                          "type": "string",
                          "description": "The ID of the lead to associate the file with",
                          "format": "uuid"
                        },
                        "add_time": {
                          "type": "string",
                          "description": "The date and time when the file was added/created. Format: YYYY-MM-DD HH:MM:SS"
                        },
                        "update_time": {
                          "type": "string",
                          "description": "The last updated date and time of the file. Format: YYYY-MM-DD HH:MM:SS"
                        },
                        "file_name": {
                          "type": "string",
                          "description": "The original name of the file"
                        },
                        "file_size": {
                          "type": "integer",
                          "description": "The size of the file"
                        },
                        "active_flag": {
                          "type": "boolean",
                          "description": "Whether the user is active or not. false = Not activated, true = Activated"
                        },
                        "inline_flag": {
                          "type": "boolean",
                          "description": "Whether the file was uploaded as inline or not"
                        },
                        "remote_location": {
                          "type": "string",
                          "description": "The location type to send the file to. Only googledrive is supported at the moment."
                        },
                        "remote_id": {
                          "type": "string",
                          "description": "The ID of the remote item"
                        },
                        "cid": {
                          "type": "string",
                          "description": "The ID of the inline attachment"
                        },
                        "s3_bucket": {
                          "type": "string",
                          "description": "The location of the cloud storage"
                        },
                        "mail_message_id": {
                          "type": "string",
                          "description": "The ID of the mail message to associate the file with"
                        },
                        "mail_template_id": {
                          "type": "string",
                          "description": "The ID of the mail template to associate the file with"
                        },
                        "deal_name": {
                          "type": "string",
                          "description": "The name of the deal associated with the file"
                        },
                        "person_name": {
                          "type": "string",
                          "description": "The name of the person associated with the file"
                        },
                        "org_name": {
                          "type": "string",
                          "description": "The name of the organization associated with the file"
                        },
                        "product_name": {
                          "type": "string",
                          "description": "The name of the product associated with the file"
                        },
                        "lead_name": {
                          "type": "string",
                          "description": "The name of the lead associated with the file"
                        },
                        "url": {
                          "type": "string",
                          "description": "The URL of the download file"
                        },
                        "name": {
                          "type": "string",
                          "description": "The visible name of the file"
                        },
                        "description": {
                          "type": "string",
                          "description": "The description of the file"
                        }
                      }
                    }
                  }
                },
                "example": {
                  "success": true,
                  "data": {
                    "id": 123,
                    "user_id": 456,
                    "deal_id": 1,
                    "person_id": 789,
                    "org_id": 1,
                    "product_id": 1,
                    "activity_id": 1,
                    "lead_id": "adf21080-0e10-11eb-879b-05d71fb426ec",
                    "log_id": null,
                    "add_time": "2020-02-20 14:36:35",
                    "update_time": "2020-02-20 14:57:33",
                    "file_name": "IMG_8189_52233498214699de9579e7b304a81b157b2eb2137e8062.jpg",
                    "file_type": "img",
                    "file_size": 7801780,
                    "active_flag": true,
                    "inline_flag": false,
                    "remote_location": "googledocs",
                    "remote_id": "1mT6jshiv6537IirwOExXJuG1jdR4F0FQ",
                    "cid": "",
                    "s3_bucket": "",
                    "mail_message_id": "",
                    "mail_template_id": "",
                    "deal_name": "",
                    "person_name": "Person",
                    "org_name": "",
                    "product_name": "",
                    "lead_name": "Test lead name",
                    "url": "https://2a7f.pipedrive.com/v1/files/123/download",
                    "name": "test file name",
                    "description": "test file description"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/files/{id}/download": {
      "get": {
        "summary": "Download one file",
        "description": "Initializes a file download.",
        "operationId": "downloadFile",
        "tags": [ "Files" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the file",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "title": "downloadFile",
                  "type": "string",
                  "format": "byte"
                }
              }
            }
          }
        }
      }
    },
    "/filters": {
      "delete": {
        "summary": "Delete multiple filters in bulk",
        "description": "Marks multiple filters as deleted.",
        "operationId": "deleteFilters",
        "tags": [ "Filters" ],
        "parameters": [
          {
            "in": "query",
            "name": "ids",
            "required": true,
            "schema": { "type": "string" },
            "description": "The comma-separated filter IDs to delete"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "deleteFilters",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "array",
                              "description": "The array of the IDs of the deleted filter",
                              "items": { "type": "integer" }
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": { "success": true, "data": { "id": [ 1, 2, 3 ] } }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get all filters",
        "description": "Returns data about all filters.",
        "operationId": "getFilters",
        "tags": [ "Filters" ],
        "parameters": [
          {
            "in": "query",
            "name": "type",
            "schema": {
              "type": "string",
              "enum": [
                "deals",
                "leads",
                "org",
                "people",
                "products",
                "activity"
              ]
            },
            "description": "The types of filters to fetch"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "getFilters",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "array",
                          "description": "The array of filters",
                          "items": {
                            "description": "The filter object",
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer",
                                "description": "The ID of the filter"
                              },
                              "name": {
                                "type": "string",
                                "description": "The name of the filter"
                              },
                              "active_flag": {
                                "type": "boolean",
                                "description": "The active flag of the filter"
                              },
                              "type": {
                                "type": "string",
                                "description": "The type of the item"
                              },
                              "user_id": {
                                "type": "integer",
                                "description": "The owner of the filter"
                              },
                              "add_time": {
                                "type": "string",
                                "description": "The date and time when the filter was added"
                              },
                              "update_time": {
                                "type": "string",
                                "description": "The date and time when the filter was updated"
                              },
                              "visible_to": {
                                "type": "integer",
                                "description": "The visibility group ID of who can see then filter"
                              },
                              "custom_view_id": {
                                "type": "integer",
                                "description": "Used by Pipedrive webapp"
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "success": true,
                  "data": [
                    {
                      "id": 1,
                      "name": "All open deals",
                      "active_flag": true,
                      "type": "deals",
                      "temporary_flag": null,
                      "user_id": 927097,
                      "add_time": "2019-10-15 11:01:53",
                      "update_time": "2019-10-15 11:01:53",
                      "visible_to": 7,
                      "custom_view_id": 1
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add a new filter",
        "description": "Adds a new filter, returns the ID upon success. Note that in the conditions JSON object only one first-level condition group is supported, and it must be glued with 'AND', and only two second level condition groups are supported of which one must be glued with 'AND' and the second with 'OR'. Other combinations do not work (yet) but the syntax supports introducing them in future. For more information, see the tutorial for <a href=\"https://pipedrive.readme.io/docs/adding-a-filter\" target=\"_blank\" rel=\"noopener noreferrer\">adding a filter</a>.",
        "operationId": "addFilter",
        "tags": [ "Filters" ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "addFilterRequest",
                "type": "object",
                "required": [ "name", "conditions", "type" ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the filter"
                  },
                  "conditions": {
                    "type": "object",
                    "description": "The conditions of the filter as a JSON object. Please note that a maximum of 16 conditions is allowed per filter and `date` values must be supplied in the `YYYY-MM-DD` format. It requires a minimum structure as follows: `{\"glue\":\"and\",\"conditions\":[{\"glue\":\"and\",\"conditions\": [CONDITION_OBJECTS]},{\"glue\":\"or\",\"conditions\":[CONDITION_OBJECTS]}]}`. Replace `CONDITION_OBJECTS` with JSON objects of the following structure: `{\"object\":\"\",\"field_id\":\"\", \"operator\":\"\",\"value\":\"\", \"extra_value\":\"\"}` or leave the array empty. Depending on the object type you should use another API endpoint to get `field_id`. There are five types of objects you can choose from: `\"person\"`, `\"deal\"`, `\"organization\"`, `\"product\"`, `\"activity\"` and you can use these types of operators depending on what type of a field you have: `\"IS NOT NULL\"`, `\"IS NULL\"`, `\"<=\"`, `\">=\"`, `\"<\"`, `\">\"`, `\"!=\"`, `\"=\"`, `\"LIKE '$%'\"`, `\"LIKE '%$%'\"`, `\"NOT LIKE '$%'\"`. To get a better understanding of how filters work try creating them directly from the Pipedrive application."
                  },
                  "type": {
                    "type": "string",
                    "allOf": [
                      {
                        "type": "string",
                        "enum": [
                          "deals",
                          "leads",
                          "org",
                          "people",
                          "products",
                          "activity"
                        ]
                      }
                    ],
                    "description": "The type of filter to create"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "postFilter",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "description": "The ID of the created filter"
                            },
                            "name": {
                              "type": "string",
                              "description": "The name of the created filter"
                            },
                            "active_flag": {
                              "type": "boolean",
                              "description": "The activity flag of the created filter"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "deals",
                                "leads",
                                "org",
                                "people",
                                "products",
                                "activity"
                              ]
                            },
                            "temporary_flag": {
                              "type": "boolean",
                              "description": "If the created filter is temporary or not"
                            },
                            "user_id": {
                              "type": "integer",
                              "description": "The user ID of the created filter"
                            },
                            "add_time": {
                              "type": "string",
                              "description": "The add time of the created filter"
                            },
                            "update_time": {
                              "type": "string",
                              "description": "The update time of the created filter"
                            },
                            "visible_to": {
                              "type": "integer",
                              "description": "The visibility group ID of the created filter"
                            },
                            "custom_view_id": {
                              "type": "integer",
                              "description": "The custom view ID of the created filter"
                            },
                            "conditions": {
                              "type": "object",
                              "description": "The created filter conditions object"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "success": true,
                  "data": {
                    "id": 1,
                    "name": "Deal title is 'my title'",
                    "active_flag": true,
                    "type": "deals",
                    "temporary_flag": false,
                    "user_id": 1,
                    "add_time": "2018-01-27 08:49:26",
                    "update_time": "2018-01-27 08:49:26",
                    "visible_to": 1,
                    "custom_view_id": 1,
                    "conditions": {
                      "glue": "and",
                      "conditions": [
                        {
                          "glue": "and",
                          "conditions": [
                            {
                              "object": "deal",
                              "field_id": "123141",
                              "operator": "=",
                              "value": "my title"
                            }
                          ]
                        },
                        { "glue": "or", "conditions": [ null ] }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/filters/helpers": {
      "get": {
        "summary": "Get all filter helpers",
        "description": "Returns all supported filter helpers. It helps to know what conditions and helpers are available when you want to <a href=\"/docs/api/v1/Filters#addFilter\">add</a> or <a href=\"/docs/api/v1/Filters#updateFilter\">update</a> filters. For more information, see the tutorial for <a href=\"https://pipedrive.readme.io/docs/adding-a-filter\" target=\"_blank\" rel=\"noopener noreferrer\">adding a filter</a>.",
        "operationId": "getFilterHelpers",
        "tags": [ "Filters" ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "getFilterHelpers",
                  "type": "object",
                  "description": "The rules for filters"
                },
                "example": {
                  "success": true,
                  "data": {
                    "operators": {
                      "int": {
                        "=": "is",
                        "!=": "is not",
                        ">": "is more than",
                        "<": "is less than",
                        ">=": "is more or equal to",
                        "<=": "is less or equal to",
                        "IS NULL": "is empty",
                        "IS NOT NULL": "is not empty"
                      },
                      "double": {
                        "=": "is",
                        "!=": "is not",
                        ">": "is more than",
                        "<": "is less than",
                        ">=": "is more or equal to",
                        "<=": "is less or equal to",
                        "IS NULL": "is empty",
                        "IS NOT NULL": "is not empty"
                      },
                      "monetary": {
                        "=": "is",
                        "!=": "is not",
                        ">": "is more than",
                        "<": "is less than",
                        ">=": "is more or equal to",
                        "<=": "is less or equal to",
                        "IS NULL": "is empty",
                        "IS NOT NULL": "is not empty"
                      },
                      "time": {
                        "=": "is",
                        "!=": "is not",
                        "<": "is before",
                        ">": "is after",
                        ">=": "is exactly or after than",
                        "<=": "is exactly or before than",
                        "IS NULL": "is empty",
                        "IS NOT NULL": "is not empty"
                      },
                      "date": {
                        "=": "is",
                        "!=": "is not",
                        ">": "is later than",
                        "<": "is earlier than",
                        ">=": "is exactly or later than",
                        "<=": "is exactly or earlier than",
                        "IS NULL": "is empty",
                        "IS NOT NULL": "is not empty"
                      },
                      "entered_stage": {
                        "=": "is",
                        "!=": "is not",
                        ">": "is later than",
                        "<": "is earlier than",
                        ">=": "is exactly or later than",
                        "<=": "is exactly or earlier than"
                      },
                      "timerange": {
                        "=": "starts at",
                        "!=": "does not start at",
                        "ends_at": "ends at",
                        "does_not_end_at": "does not end at",
                        "<": "starts before",
                        "<=": "starts exactly on or before",
                        "ends_before": "ends before",
                        "ends_e_before": "ends exactly on or before",
                        ">": "starts after",
                        "ends_after": "ends after",
                        ">=": "starts exactly or after",
                        "ends_e_after": "ends exactly or after",
                        "includes": "does include",
                        "IS NULL": "is empty",
                        "IS NOT NULL": "is not empty"
                      },
                      "daterange": {
                        "=": "starts at",
                        "!=": "does not start at",
                        "ends_at": "ends at",
                        "does_not_end_at": "does not end at",
                        "<": "starts before",
                        "<=": "starts exactly on or before",
                        "ends_before": "ends before",
                        "ends_e_before": "ends exactly on or before",
                        ">": "starts after",
                        "ends_after": "ends after",
                        ">=": "starts exactly or after",
                        "ends_e_after": "ends exactly or after",
                        "includes": "does include",
                        "IS NULL": "is empty",
                        "IS NOT NULL": "is not empty"
                      },
                      "varchar": {
                        "=": "is",
                        "!=": "is not",
                        "IS NULL": "is empty",
                        "IS NOT NULL": "is not empty",
                        "LIKE '%$%'": "contains",
                        "LIKE '$%'": "starts with",
                        "NOT LIKE '$%'": "does not start with"
                      },
                      "stage": {
                        "=": "is",
                        "!=": "is not",
                        "has_been": "has been"
                      },
                      "title": {
                        "=": "is",
                        "LIKE '$%'": "starts with",
                        "LIKE '%$%'": "contains",
                        "NOT LIKE '$%'": "does not start with"
                      },
                      "set": {
                        "=": "is",
                        "!=": "is not",
                        "contains": "contains",
                        "not_contains": "does not contain",
                        "IS NULL": "is empty",
                        "IS NOT NULL": "is not empty"
                      },
                      "enum": [
                        { "=": "is" },
                        { "!=": "is not" },
                        { "IS NULL": "is empty" },
                        { "IS NOT NULL": "is not empty" }
                      ],
                      "deal": {
                        "=": "is",
                        "!=": "is not",
                        "IS NULL": "is empty",
                        "IS NOT NULL": "is not empty"
                      },
                      "product": {
                        "=": "is",
                        "!=": "is not",
                        "IS NULL": "is empty",
                        "IS NOT NULL": "is not empty"
                      },
                      "user": {
                        "=": "is",
                        "!=": "is not",
                        "IS NULL": "is empty",
                        "IS NOT NULL": "is not empty",
                        "belongs_to_team": "belongs to team"
                      },
                      "status": { "=": "is", "!=": "is not" },
                      "visible_to": { "=": "is", "!=": "is not" },
                      "currency": { "=": "is", "!=": "is not" },
                      "pipeline": { "=": "is", "!=": "is not" },
                      "person": {
                        "=": "is",
                        "!=": "is not",
                        "IS NULL": "is empty",
                        "IS NOT NULL": "is not empty"
                      },
                      "organization": {
                        "=": "is",
                        "!=": "is not",
                        "IS NULL": "is empty",
                        "IS NOT NULL": "is not empty"
                      }
                    },
                    "relative_dates": {
                      "Relative date intervals": {
                        "last_quarter": "last quarter",
                        "this_quarter": "this quarter",
                        "last_month": "last month",
                        "this_month": "this month",
                        "last_week": "last week",
                        "this_week": "this week",
                        "next_week": "next week",
                        "next_month": "next month"
                      },
                      "Relative dates": {
                        "6_months_ago": "6 months ago",
                        "5_months_ago": "5 months ago",
                        "4_months_ago": "4 months ago",
                        "3_months_ago": "3 months ago",
                        "2_months_ago": "2 months ago",
                        "1_months_ago": "1 month ago",
                        "3_weeks_ago": "3 weeks ago",
                        "2_weeks_ago": "2 weeks ago",
                        "1_week_ago": "1 week ago",
                        "yesterday": "yesterday",
                        "before_today": "before today",
                        "today": "today",
                        "now": "now",
                        "later_or_today": "today or later",
                        "before_tomorrow": "before tomorrow",
                        "tomorrow": "tomorrow",
                        "later_or_tomorrow": "tomorrow or later",
                        "in_1_week": "in 1 week",
                        "in_2_weeks": "in 2 weeks",
                        "in_3_weeks": "in 3 weeks",
                        "in_1_month": "in 1 month",
                        "in_2_months": "in 2 months",
                        "in_3_months": "in 3 months",
                        "in_4_months": "in 4 months",
                        "in_5_months": "in 5 months",
                        "in_6_months": "in 6 months"
                      },
                      "Deal specific": { "rotten_time": "Rotten time" }
                    },
                    "address_field_components": {
                      "subpremise": "Apartment/suite no",
                      "street_number": "House number",
                      "route": "Street/road name",
                      "sublocality": "District/sublocality",
                      "locality": "City/town/village/locality",
                      "admin_area_level_1": "State/county",
                      "admin_area_level_2": "Region",
                      "country": "Country",
                      "postal_code": "ZIP/Postal code",
                      "formatted_address": "Full/combined address"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/filters/{id}": {
      "delete": {
        "summary": "Delete a filter",
        "description": "Marks a filter as deleted.",
        "operationId": "deleteFilter",
        "tags": [ "Filters" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the filter",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "deleteFilter",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "description": "The ID of the deleted filter"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": { "success": true, "data": { "id": 1 } }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get one filter",
        "description": "Returns data about a specific filter. Note that this also returns the condition lines of the filter.",
        "operationId": "getFilter",
        "tags": [ "Filters" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the filter",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "getFilter",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "description": "The filter object",
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "description": "The ID of the filter"
                            },
                            "name": {
                              "type": "string",
                              "description": "The name of the filter"
                            },
                            "active_flag": {
                              "type": "boolean",
                              "description": "The active flag of the filter"
                            },
                            "type": {
                              "type": "string",
                              "description": "The type of the item"
                            },
                            "user_id": {
                              "type": "integer",
                              "description": "The owner of the filter"
                            },
                            "add_time": {
                              "type": "string",
                              "description": "The date and time when the filter was added"
                            },
                            "update_time": {
                              "type": "string",
                              "description": "The date and time when the filter was updated"
                            },
                            "visible_to": {
                              "type": "integer",
                              "description": "The visibility group ID of who can see then filter"
                            },
                            "custom_view_id": {
                              "type": "integer",
                              "description": "Used by Pipedrive webapp"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "success": true,
                  "data": {
                    "id": 1,
                    "name": "All open deals",
                    "active_flag": true,
                    "type": "deals",
                    "temporary_flag": null,
                    "user_id": 927097,
                    "add_time": "2019-10-15 11:01:53",
                    "update_time": "2019-10-15 11:01:53",
                    "visible_to": 7,
                    "custom_view_id": 1
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update filter",
        "description": "Updates an existing filter.",
        "operationId": "updateFilter",
        "tags": [ "Filters" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the filter",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "updateFilterRequest",
                "type": "object",
                "required": [ "conditions" ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the filter"
                  },
                  "conditions": {
                    "type": "object",
                    "description": "The conditions of the filter as a JSON object. Please note that a maximum of 16 conditions is allowed per filter and `date` values must be supplied in the `YYYY-MM-DD` format. It requires a minimum structure as follows: `{\"glue\":\"and\",\"conditions\":[{\"glue\":\"and\",\"conditions\": [CONDITION_OBJECTS]},{\"glue\":\"or\",\"conditions\":[CONDITION_OBJECTS]}]}`. Replace `CONDITION_OBJECTS` with JSON objects of the following structure: `{\"object\":\"\",\"field_id\":\"\", \"operator\":\"\",\"value\":\"\", \"extra_value\":\"\"}` or leave the array empty. Depending on the object type you should use another API endpoint to get `field_id`. There are five types of objects you can choose from: `\"person\"`, `\"deal\"`, `\"organization\"`, `\"product\"`, `\"activity\"` and you can use these types of operators depending on what type of a field you have: `\"IS NOT NULL\"`, `\"IS NULL\"`, `\"<=\"`, `\">=\"`, `\"<\"`, `\">\"`, `\"!=\"`, `\"=\"`, `\"LIKE '$%'\"`, `\"LIKE '%$%'\"`, `\"NOT LIKE '$%'\"`. To get a better understanding of how filters work try creating them directly from the Pipedrive application."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "postFilter",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "description": "The ID of the created filter"
                            },
                            "name": {
                              "type": "string",
                              "description": "The name of the created filter"
                            },
                            "active_flag": {
                              "type": "boolean",
                              "description": "The activity flag of the created filter"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "deals",
                                "leads",
                                "org",
                                "people",
                                "products",
                                "activity"
                              ]
                            },
                            "temporary_flag": {
                              "type": "boolean",
                              "description": "If the created filter is temporary or not"
                            },
                            "user_id": {
                              "type": "integer",
                              "description": "The user ID of the created filter"
                            },
                            "add_time": {
                              "type": "string",
                              "description": "The add time of the created filter"
                            },
                            "update_time": {
                              "type": "string",
                              "description": "The update time of the created filter"
                            },
                            "visible_to": {
                              "type": "integer",
                              "description": "The visibility group ID of the created filter"
                            },
                            "custom_view_id": {
                              "type": "integer",
                              "description": "The custom view ID of the created filter"
                            },
                            "conditions": {
                              "type": "object",
                              "description": "The created filter conditions object"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "success": true,
                  "data": {
                    "id": 1,
                    "name": "Deal title is 'my title'",
                    "active_flag": true,
                    "type": "deals",
                    "temporary_flag": false,
                    "user_id": 1,
                    "add_time": "2018-01-27 08:49:26",
                    "update_time": "2018-01-27 08:49:26",
                    "visible_to": 1,
                    "custom_view_id": 1,
                    "conditions": {
                      "glue": "and",
                      "conditions": [
                        {
                          "glue": "and",
                          "conditions": [
                            {
                              "object": "deal",
                              "field_id": "123141",
                              "operator": "=",
                              "value": "my title"
                            }
                          ]
                        },
                        { "glue": "or", "conditions": [ null ] }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/goals": {
      "post": {
        "summary": "Add a new goal",
        "description": "Adds a new goal. Along with adding a new goal, a report is created to track the progress of your goal.",
        "operationId": "addGoal",
        "tags": [ "Goals" ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "addGoalRequest",
                "type": "object",
                "required": [
                  "type",
                  "assignee",
                  "expected_outcome",
                  "duration",
                  "interval"
                ],
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "The title of the goal"
                  },
                  "assignee": {
                    "type": "object",
                    "description": "Who this goal is assigned to. It requires the following JSON structure: `{ \"id\": \"1\", \"type\": \"person\" }`. `type` can be either `person`, `company` or `team`. ID of the assignee person, company or team."
                  },
                  "type": {
                    "type": "object",
                    "description": "The type of the goal. It requires the following JSON structure: `{ \"name\": \"deals_started\", \"params\": { \"pipeline_id\": [1, 2], \"activity_type_id\": [9] } }`. Type can be one of: `deals_won`, `deals_progressed`, `activities_completed`, `activities_added`, `deals_started` or `revenue_forecast`. `params` can include `pipeline_id`, `stage_id` or `activity_type_id`. `stage_id` is related to only `deals_progressed` type of goals and `activity_type_id` to `activities_completed` or `activities_added` types of goals. The `pipeline_id` and `activity_type_id` need to be given as an array of integers. To track the goal in all pipelines, set `pipeline_id` as `null` and similarly, to track the goal for all activities, set `activity_type_id` as `null`.”"
                  },
                  "expected_outcome": {
                    "type": "object",
                    "description": "The expected outcome of the goal. Expected outcome can be tracked either by `quantity` or by `sum`. It requires the following JSON structure: `{ \"target\": \"50\", \"tracking_metric\": \"quantity\" }` or `{ \"target\": \"50\", \"tracking_metric\": \"sum\", \"currency_id\": 1 }`. `currency_id` should only be added to `sum` type of goals."
                  },
                  "duration": {
                    "type": "object",
                    "description": "The date when the goal starts and ends. It requires the following JSON structure: `{ \"start\": \"2019-01-01\", \"end\": \"2022-12-31\" }`. Date in format of YYYY-MM-DD. \"end\" can be set to `null` for an infinite, open-ended goal."
                  },
                  "interval": {
                    "type": "string",
                    "enum": [ "weekly", "monthly", "quarterly", "yearly" ],
                    "description": "The interval of the goal"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response containing payload in the `data.goal` object",
            "content": {
              "application/json": {
                "schema": {
                  "title": "addOrUpdateGoal",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "If the request was successful or not"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "goal": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "The ID of the goal"
                            },
                            "owner_id": {
                              "type": "integer",
                              "description": "The ID of the creator of the goal"
                            },
                            "title": {
                              "type": "string",
                              "description": "The title of the goal"
                            },
                            "type": {
                              "type": "object",
                              "description": "The type of the goal",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "The name of the goal type"
                                },
                                "params": {
                                  "type": "object",
                                  "description": "The parameters that accompany the goal type",
                                  "properties": {
                                    "pipeline_id": {
                                      "type": "array",
                                      "description": "The IDs of pipelines of the goal",
                                      "items": { "type": "integer" }
                                    },
                                    "activity_type_id": {
                                      "type": "array",
                                      "description": "The IDs of activity types of the goal",
                                      "items": { "type": "integer" }
                                    }
                                  }
                                }
                              }
                            },
                            "assignee": {
                              "type": "object",
                              "description": "Who the goal is assigned to",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "description": "The ID of the goal assignee"
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The type of the assignee"
                                }
                              }
                            },
                            "interval": {
                              "type": "string",
                              "description": "The interval of the goal"
                            },
                            "duration": {
                              "type": "object",
                              "description": "The duration of the goal",
                              "properties": {
                                "start": {
                                  "type": "string",
                                  "description": "The start date of the goal"
                                },
                                "end": {
                                  "type": "string",
                                  "description": "The end date of the goal"
                                }
                              }
                            },
                            "expected_outcome": {
                              "type": "object",
                              "description": "The expected outcome of the goal",
                              "properties": {
                                "target": {
                                  "type": "integer",
                                  "description": "The numeric target of the goal"
                                },
                                "tracking_metric": {
                                  "type": "string",
                                  "description": "The tracking metric of the goal"
                                }
                              }
                            },
                            "is_active": {
                              "type": "boolean",
                              "description": "Whether the goal is currently active or not"
                            },
                            "report_ids": {
                              "type": "array",
                              "description": "The IDs of the reports that belong to the goal",
                              "items": { "type": "string" }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "success": true,
                  "statusCode": 20000,
                  "statusText": "OK",
                  "service": "statistics-goals-api",
                  "data": {
                    "goal": {
                      "id": "5665cef556ddff22606fc8f6c0004807",
                      "owner_id": 987654,
                      "title": "Some example goal",
                      "type": {
                        "name": "Deals started",
                        "params": {
                          "pipeline_id": [ 5, 2 ],
                          "activity_type_id": [ 9 ]
                        }
                      },
                      "assignee": { "type": "company", "id": 123456 },
                      "interval": "weekly",
                      "duration": {
                        "start": "2019-11-01",
                        "end": "2020-10-30"
                      },
                      "expected_outcome": {
                        "target": 100,
                        "tracking_metric": "quantity"
                      },
                      "is_active": false,
                      "report_ids": [ "f37bd66a2ab64d28ff6a9b6d2289813a" ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/goals/find": {
      "get": {
        "summary": "Find goals",
        "description": "Returns data about goals based on criteria. For searching, append `{searchField}={searchValue}` to the URL, where `searchField` can be any one of the lowest-level fields in dot-notation (e.g. `type.params.pipeline_id`; `title`). `searchValue` should be the value you are looking for on that field. Additionally, `is_active=<true|false>` can be provided to search for only active/inactive goals. When providing `period.start`, `period.end` must also be provided and vice versa.",
        "operationId": "getGoals",
        "tags": [ "Goals" ],
        "parameters": [
          {
            "in": "query",
            "name": "type.name",
            "schema": {
              "type": "string",
              "enum": [
                "deals_won",
                "deals_progressed",
                "activities_completed",
                "activities_added",
                "deals_started"
              ]
            },
            "description": "The type of the goal. If provided, everyone's goals will be returned."
          },
          {
            "in": "query",
            "name": "title",
            "schema": { "type": "string" },
            "description": "The title of the goal"
          },
          {
            "in": "query",
            "name": "is_active",
            "schema": {
              "type": "boolean",
              "enum": [ true, false ],
              "default": true
            },
            "description": "Whether the goal is active or not"
          },
          {
            "in": "query",
            "name": "assignee.id",
            "schema": { "type": "integer" },
            "description": "The ID of the user who's goal to fetch. When omitted, only your goals will be returned."
          },
          {
            "in": "query",
            "name": "assignee.type",
            "schema": {
              "type": "string",
              "enum": [ "person", "company", "team" ]
            },
            "description": "The type of the goal's assignee. If provided, everyone's goals will be returned."
          },
          {
            "in": "query",
            "name": "expected_outcome.target",
            "schema": { "type": "number" },
            "description": "The numeric value of the outcome. If provided, everyone's goals will be returned."
          },
          {
            "in": "query",
            "name": "expected_outcome.tracking_metric",
            "schema": { "type": "string", "enum": [ "quantity", "sum" ] },
            "description": "The tracking metric of the expected outcome of the goal. If provided, everyone's goals will be returned."
          },
          {
            "in": "query",
            "name": "expected_outcome.currency_id",
            "schema": { "type": "integer" },
            "description": "The numeric ID of the goal's currency. Only applicable to goals with `expected_outcome.tracking_metric` with value `sum`. If provided, everyone's goals will be returned."
          },
          {
            "in": "query",
            "name": "type.params.pipeline_id",
            "schema": { "type": "array", "items": { "type": "integer" } },
            "description": "An array of pipeline IDs or `null` for all pipelines. If provided, everyone's goals will be returned."
          },
          {
            "in": "query",
            "name": "type.params.stage_id",
            "schema": { "type": "integer" },
            "description": "The ID of the stage. Applicable to only `deals_progressed` type of goals. If provided, everyone's goals will be returned."
          },
          {
            "in": "query",
            "name": "type.params.activity_type_id",
            "schema": { "type": "array", "items": { "type": "integer" } },
            "description": "An array of IDs or `null` for all activity types. Only applicable for `activities_completed` and/or `activities_added` types of goals. If provided, everyone's goals will be returned."
          },
          {
            "in": "query",
            "name": "period.start",
            "schema": { "type": "string", "format": "date" },
            "description": "The start date of the period for which to find goals. Date in format of YYYY-MM-DD. When `period.start` is provided, `period.end` must be provided too."
          },
          {
            "in": "query",
            "name": "period.end",
            "schema": { "type": "string", "format": "date" },
            "description": "The end date of the period for which to find goals. Date in format of YYYY-MM-DD."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response containing payload in the `data.goal` object",
            "content": {
              "application/json": {
                "schema": {
                  "title": "getGoals",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "If the request was successful or not"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "goals": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "The ID of the goal"
                              },
                              "owner_id": {
                                "type": "integer",
                                "description": "The ID of the creator of the goal"
                              },
                              "title": {
                                "type": "string",
                                "description": "The title of the goal"
                              },
                              "type": {
                                "type": "object",
                                "description": "The type of the goal",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "The name of the goal type"
                                  },
                                  "params": {
                                    "type": "object",
                                    "description": "The parameters that accompany the goal type",
                                    "properties": {
                                      "pipeline_id": {
                                        "type": "array",
                                        "description": "The IDs of pipelines of the goal",
                                        "items": { "type": "integer" }
                                      },
                                      "activity_type_id": {
                                        "type": "array",
                                        "description": "The IDs of activity types of the goal",
                                        "items": { "type": "integer" }
                                      }
                                    }
                                  }
                                }
                              },
                              "assignee": {
                                "type": "object",
                                "description": "Who the goal is assigned to",
                                "properties": {
                                  "id": {
                                    "type": "integer",
                                    "description": "The ID of the goal assignee"
                                  },
                                  "type": {
                                    "type": "string",
                                    "description": "The type of the assignee"
                                  }
                                }
                              },
                              "interval": {
                                "type": "string",
                                "description": "The interval of the goal"
                              },
                              "duration": {
                                "type": "object",
                                "description": "The duration of the goal",
                                "properties": {
                                  "start": {
                                    "type": "string",
                                    "description": "The start date of the goal"
                                  },
                                  "end": {
                                    "type": "string",
                                    "description": "The end date of the goal"
                                  }
                                }
                              },
                              "expected_outcome": {
                                "type": "object",
                                "description": "The expected outcome of the goal",
                                "properties": {
                                  "target": {
                                    "type": "integer",
                                    "description": "The numeric target of the goal"
                                  },
                                  "tracking_metric": {
                                    "type": "string",
                                    "description": "The tracking metric of the goal"
                                  }
                                }
                              },
                              "is_active": {
                                "type": "boolean",
                                "description": "Whether the goal is currently active or not"
                              },
                              "report_ids": {
                                "type": "array",
                                "description": "The IDs of the reports that belong to the goal",
                                "items": { "type": "string" }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "success": true,
                  "statusCode": 20000,
                  "statusText": "OK",
                  "service": "statistics-goals-api",
                  "data": {
                    "goals": [
                      {
                        "id": "5665cef556ddff22606fc8f6c0004807",
                        "owner_id": 987654,
                        "title": "Some example goal",
                        "type": {
                          "name": "Deals started",
                          "params": {
                            "pipeline_id": [ 5, 2 ],
                            "activity_type_id": [ 9 ]
                          }
                        },
                        "assignee": { "type": "company", "id": 123456 },
                        "interval": "weekly",
                        "duration": {
                          "start": "2019-11-01",
                          "end": "2020-10-30"
                        },
                        "expected_outcome": {
                          "target": 100,
                          "tracking_metric": "quantity"
                        },
                        "is_active": false,
                        "report_ids": [ "f37bd66a2ab64d28ff6a9b6d2289813a" ]
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/goals/{id}": {
      "put": {
        "summary": "Update existing goal",
        "description": "Updates an existing goal.",
        "operationId": "updateGoal",
        "tags": [ "Goals" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "type": "string" },
            "description": "The ID of the goal"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "basicGoalRequest",
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "The title of the goal"
                  },
                  "assignee": {
                    "type": "object",
                    "description": "Who this goal is assigned to. It requires the following JSON structure: `{ \"id\": \"1\", \"type\": \"person\" }`. `type` can be either `person`, `company` or `team`. ID of the assignee person, company or team."
                  },
                  "type": {
                    "type": "object",
                    "description": "The type of the goal. It requires the following JSON structure: `{ \"name\": \"deals_started\", \"params\": { \"pipeline_id\": [1, 2], \"activity_type_id\": [9] } }`. Type can be one of: `deals_won`, `deals_progressed`, `activities_completed`, `activities_added`, `deals_started` or `revenue_forecast`. `params` can include `pipeline_id`, `stage_id` or `activity_type_id`. `stage_id` is related to only `deals_progressed` type of goals and `activity_type_id` to `activities_completed` or `activities_added` types of goals. The `pipeline_id` and `activity_type_id` need to be given as an array of integers. To track the goal in all pipelines, set `pipeline_id` as `null` and similarly, to track the goal for all activities, set `activity_type_id` as `null`.”"
                  },
                  "expected_outcome": {
                    "type": "object",
                    "description": "The expected outcome of the goal. Expected outcome can be tracked either by `quantity` or by `sum`. It requires the following JSON structure: `{ \"target\": \"50\", \"tracking_metric\": \"quantity\" }` or `{ \"target\": \"50\", \"tracking_metric\": \"sum\", \"currency_id\": 1 }`. `currency_id` should only be added to `sum` type of goals."
                  },
                  "duration": {
                    "type": "object",
                    "description": "The date when the goal starts and ends. It requires the following JSON structure: `{ \"start\": \"2019-01-01\", \"end\": \"2022-12-31\" }`. Date in format of YYYY-MM-DD. \"end\" can be set to `null` for an infinite, open-ended goal."
                  },
                  "interval": {
                    "type": "string",
                    "enum": [ "weekly", "monthly", "quarterly", "yearly" ],
                    "description": "The interval of the goal"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response containing payload in the `data.goal` object",
            "content": {
              "application/json": {
                "schema": {
                  "title": "addOrUpdateGoal",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "If the request was successful or not"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "goal": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "The ID of the goal"
                            },
                            "owner_id": {
                              "type": "integer",
                              "description": "The ID of the creator of the goal"
                            },
                            "title": {
                              "type": "string",
                              "description": "The title of the goal"
                            },
                            "type": {
                              "type": "object",
                              "description": "The type of the goal",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "The name of the goal type"
                                },
                                "params": {
                                  "type": "object",
                                  "description": "The parameters that accompany the goal type",
                                  "properties": {
                                    "pipeline_id": {
                                      "type": "array",
                                      "description": "The IDs of pipelines of the goal",
                                      "items": { "type": "integer" }
                                    },
                                    "activity_type_id": {
                                      "type": "array",
                                      "description": "The IDs of activity types of the goal",
                                      "items": { "type": "integer" }
                                    }
                                  }
                                }
                              }
                            },
                            "assignee": {
                              "type": "object",
                              "description": "Who the goal is assigned to",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "description": "The ID of the goal assignee"
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The type of the assignee"
                                }
                              }
                            },
                            "interval": {
                              "type": "string",
                              "description": "The interval of the goal"
                            },
                            "duration": {
                              "type": "object",
                              "description": "The duration of the goal",
                              "properties": {
                                "start": {
                                  "type": "string",
                                  "description": "The start date of the goal"
                                },
                                "end": {
                                  "type": "string",
                                  "description": "The end date of the goal"
                                }
                              }
                            },
                            "expected_outcome": {
                              "type": "object",
                              "description": "The expected outcome of the goal",
                              "properties": {
                                "target": {
                                  "type": "integer",
                                  "description": "The numeric target of the goal"
                                },
                                "tracking_metric": {
                                  "type": "string",
                                  "description": "The tracking metric of the goal"
                                }
                              }
                            },
                            "is_active": {
                              "type": "boolean",
                              "description": "Whether the goal is currently active or not"
                            },
                            "report_ids": {
                              "type": "array",
                              "description": "The IDs of the reports that belong to the goal",
                              "items": { "type": "string" }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "success": true,
                  "statusCode": 20000,
                  "statusText": "OK",
                  "service": "statistics-goals-api",
                  "data": {
                    "goal": {
                      "id": "5665cef556ddff22606fc8f6c0004807",
                      "owner_id": 987654,
                      "title": "Some example goal",
                      "type": {
                        "name": "Deals started",
                        "params": {
                          "pipeline_id": [ 5, 2 ],
                          "activity_type_id": [ 9 ]
                        }
                      },
                      "assignee": { "type": "company", "id": 123456 },
                      "interval": "weekly",
                      "duration": {
                        "start": "2019-11-01",
                        "end": "2020-10-30"
                      },
                      "expected_outcome": {
                        "target": 100,
                        "tracking_metric": "quantity"
                      },
                      "is_active": false,
                      "report_ids": [ "f37bd66a2ab64d28ff6a9b6d2289813a" ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete existing goal",
        "description": "Marks a goal as deleted.",
        "operationId": "deleteGoal",
        "tags": [ "Goals" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "type": "string" },
            "description": "The ID of the goal"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with id 'success' field only",
            "content": {
              "application/json": {
                "schema": {
                  "title": "deleteGoal",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "If the request was successful or not"
                    }
                  }
                },
                "example": {
                  "success": true,
                  "statusCode": 20000,
                  "statusText": "OK",
                  "service": "statistics-goals-api"
                }
              }
            }
          }
        }
      }
    },
    "/goals/{id}/results": {
      "get": {
        "summary": "Get result of a goal",
        "description": "Gets the progress of a goal for the specified period.",
        "operationId": "getGoalResult",
        "tags": [ "Goals" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "type": "string" },
            "description": "The ID of the goal that the results are looked for"
          },
          {
            "in": "query",
            "name": "period.start",
            "required": true,
            "schema": { "type": "string", "format": "date" },
            "description": "The start date of the period for which to find the goal's progress. Format: YYYY-MM-DD. This date must be the same or after the goal duration start date.\n"
          },
          {
            "in": "query",
            "name": "period.end",
            "required": true,
            "schema": { "type": "string", "format": "date" },
            "description": "The end date of the period for which to find the goal's progress. Format: YYYY-MM-DD. This date must be the same or before the goal duration end date.\n"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response containing payload in the `data.goal` object",
            "content": {
              "application/json": {
                "schema": {
                  "title": "getGoalResult",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "If the request was successful or not"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "progress": {
                          "type": "integer",
                          "description": "The numeric progress of the goal"
                        },
                        "goal": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "The ID of the goal"
                            },
                            "owner_id": {
                              "type": "integer",
                              "description": "The ID of the creator of the goal"
                            },
                            "title": {
                              "type": "string",
                              "description": "The title of the goal"
                            },
                            "type": {
                              "type": "object",
                              "description": "The type of the goal",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "The name of the goal type"
                                },
                                "params": {
                                  "type": "object",
                                  "description": "The parameters that accompany the goal type",
                                  "properties": {
                                    "pipeline_id": {
                                      "type": "array",
                                      "description": "The IDs of pipelines of the goal",
                                      "items": { "type": "integer" }
                                    },
                                    "activity_type_id": {
                                      "type": "array",
                                      "description": "The IDs of activity types of the goal",
                                      "items": { "type": "integer" }
                                    }
                                  }
                                }
                              }
                            },
                            "assignee": {
                              "type": "object",
                              "description": "Who the goal is assigned to",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "description": "The ID of the goal assignee"
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The type of the assignee"
                                }
                              }
                            },
                            "interval": {
                              "type": "string",
                              "description": "The interval of the goal"
                            },
                            "duration": {
                              "type": "object",
                              "description": "The duration of the goal",
                              "properties": {
                                "start": {
                                  "type": "string",
                                  "description": "The start date of the goal"
                                },
                                "end": {
                                  "type": "string",
                                  "description": "The end date of the goal"
                                }
                              }
                            },
                            "expected_outcome": {
                              "type": "object",
                              "description": "The expected outcome of the goal",
                              "properties": {
                                "target": {
                                  "type": "integer",
                                  "description": "The numeric target of the goal"
                                },
                                "tracking_metric": {
                                  "type": "string",
                                  "description": "The tracking metric of the goal"
                                }
                              }
                            },
                            "is_active": {
                              "type": "boolean",
                              "description": "Whether the goal is currently active or not"
                            },
                            "report_ids": {
                              "type": "array",
                              "description": "The IDs of the reports that belong to the goal",
                              "items": { "type": "string" }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "success": true,
                  "statusCode": 20000,
                  "statusText": "OK",
                  "service": "statistics-goals-api",
                  "data": {
                    "goal": {
                      "id": "5665cef556ddff22606fc8f6c0004807",
                      "owner_id": 987654,
                      "title": "Some example goal",
                      "type": {
                        "name": "Deals started",
                        "params": {
                          "pipeline_id": [ 5, 2 ],
                          "activity_type_id": [ 9 ]
                        }
                      },
                      "assignee": { "type": "company", "id": 123456 },
                      "interval": "weekly",
                      "duration": {
                        "start": "2019-11-01",
                        "end": "2020-10-30"
                      },
                      "expected_outcome": {
                        "target": 100,
                        "tracking_metric": "quantity"
                      },
                      "is_active": false,
                      "report_ids": [ "f37bd66a2ab64d28ff6a9b6d2289813a" ]
                    },
                    "progress": 3
                  }
                }
              }
            }
          }
        }
      }
    },
    "/itemSearch": {
      "get": {
        "summary": "Perform a search from multiple item types",
        "description": "Performs a search from your choice of item types and fields.",
        "operationId": "searchItem",
        "tags": [ "ItemSearch" ],
        "parameters": [
          {
            "in": "query",
            "name": "term",
            "required": true,
            "schema": { "type": "string" },
            "description": "The search term to look for. Minimum 2 characters (or 1 if using `exact_match`). Please note that the search term has to be URL encoded."
          },
          {
            "in": "query",
            "name": "item_types",
            "schema": {
              "type": "string",
              "enum": [
                "deal",
                "person",
                "organization",
                "product",
                "lead",
                "file",
                "mail_attachment",
                "project"
              ]
            },
            "description": "A comma-separated string array. The type of items to perform the search from. Defaults to all."
          },
          {
            "in": "query",
            "name": "fields",
            "schema": {
              "type": "string",
              "enum": [
                "address",
                "code",
                "custom_fields",
                "email",
                "name",
                "notes",
                "organization_name",
                "person_name",
                "phone",
                "title",
                "description"
              ]
            },
            "description": "A comma-separated string array. The fields to perform the search from. Defaults to all. Relevant for each item type are:<br> <table> <tr><th><b>Item type</b></th><th><b>Field</b></th></tr> <tr><td>Deal</td><td>`custom_fields`, `notes`, `title`</td></tr> <tr><td>Person</td><td>`custom_fields`, `email`, `name`, `notes`, `phone`</td></tr> <tr><td>Organization</td><td>`address`, `custom_fields`, `name`, `notes`</td></tr> <tr><td>Product</td><td>`code`, `custom_fields`, `name`</td></tr> <tr><td>Lead</td><td>`custom_fields`, `notes`, `email`, `organization_name`, `person_name`, `phone`, `title`</td></tr> <tr><td>File</td><td>`name`</td></tr> <tr><td>Mail attachment</td><td>`name`</td></tr> <tr><td>Project</td><td> `custom_fields`, `notes`, `title`, `description` </td></tr> </table> <br> When searching for leads, the email, organization_name, person_name, and phone fields will return results only for leads not linked to contacts. For searching leads by person or organization values, please use `search_for_related_items`."
          },
          {
            "in": "query",
            "name": "search_for_related_items",
            "schema": { "type": "boolean", "enum": [ true, false ] },
            "description": "When enabled, the response will include up to 100 newest related leads and 100 newest related deals for each found person and organization and up to 100 newest related persons for each found organization."
          },
          {
            "in": "query",
            "name": "exact_match",
            "schema": { "type": "boolean", "enum": [ true, false ] },
            "description": "When enabled, only full exact matches against the given term are returned. It is <b>not</b> case sensitive."
          },
          {
            "in": "query",
            "name": "include_fields",
            "schema": {
              "type": "string",
              "enum": [ "deal.cc_email", "person.picture", "product.price" ]
            },
            "description": "A comma-separated string array. Supports including optional fields in the results which are not provided by default."
          },
          {
            "in": "query",
            "name": "start",
            "schema": { "type": "integer", "default": 0 },
            "description": "Pagination start. Note that the pagination is based on main results and does not include related items when using `search_for_related_items` parameter."
          },
          {
            "in": "query",
            "name": "limit",
            "schema": { "type": "integer" },
            "description": "Items shown per page"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "searchItem",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "description": "The array of found items",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "result_score": {
                                    "type": "number",
                                    "description": "Search result relevancy"
                                  },
                                  "item": {
                                    "type": "object",
                                    "description": "Item"
                                  }
                                }
                              }
                            },
                            "related_items": {
                              "type": "array",
                              "description": "The array of related items if `search_for_related_items` was enabled",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "result_score": {
                                    "type": "number",
                                    "description": "Search result relevancy"
                                  },
                                  "item": {
                                    "type": "object",
                                    "description": "Item"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "additional_data": {
                          "type": "object",
                          "properties": {
                            "pagination": {
                              "description": "Pagination details of the list",
                              "type": "object",
                              "properties": {
                                "start": {
                                  "type": "integer",
                                  "description": "Pagination start"
                                },
                                "limit": {
                                  "type": "integer",
                                  "description": "Items shown per page"
                                },
                                "more_items_in_collection": {
                                  "type": "boolean",
                                  "description": "Whether there are more list items in the collection than displayed"
                                },
                                "next_start": {
                                  "type": "integer",
                                  "description": "Next pagination start"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "success": true,
                  "data": {
                    "items": [
                      {
                        "result_score": 1.22724,
                        "item": {
                          "id": 42,
                          "type": "deal",
                          "title": "Sample Deal",
                          "value": 53883,
                          "currency": "USD",
                          "status": "open",
                          "visible_to": 3,
                          "owner": { "id": 69 },
                          "stage": { "id": 3, "name": "Demo Scheduled" },
                          "person": { "id": 6, "name": "Sample Person" },
                          "organization": {
                            "id": 9,
                            "name": "Sample Organization",
                            "address": "Dabas, Hungary"
                          },
                          "custom_fields": [ "Sample text" ],
                          "notes": [ "Sample note" ]
                        }
                      },
                      {
                        "result_score": 0.31335002,
                        "item": {
                          "id": 9,
                          "type": "organization",
                          "name": "Sample Organization",
                          "address": "Dabas, Hungary",
                          "visible_to": 3,
                          "owner": { "id": 69 },
                          "custom_fields": [ ],
                          "notes": [ ]
                        }
                      },
                      {
                        "result_score": 0.29955,
                        "item": {
                          "id": 6,
                          "type": "person",
                          "name": "Sample Person",
                          "phones": [
                            "555123123",
                            "+372 (55) 123468",
                            "0231632772"
                          ],
                          "emails": [
                            "primary@email.com",
                            "secondary@email.com"
                          ],
                          "visible_to": 1,
                          "owner": { "id": 69 },
                          "organization": {
                            "id": 9,
                            "name": "Sample Organization",
                            "address": "Dabas, Hungary"
                          },
                          "custom_fields": [ "Custom Field Text" ],
                          "notes": [ "Person note" ]
                        }
                      },
                      {
                        "result_score": 0.0093,
                        "item": {
                          "id": 4,
                          "type": "mail_attachment",
                          "name": "Sample mail attachment.txt",
                          "url": "/files/4/download"
                        }
                      },
                      {
                        "result_score": 0.0093,
                        "item": {
                          "id": 3,
                          "type": "file",
                          "name": "Sample file attachment.txt",
                          "url": "/files/3/download",
                          "deal": { "id": 42, "title": "Sample Deal" },
                          "person": { "id": 6, "name": "Sample Person" },
                          "organization": {
                            "id": 9,
                            "name": "Sample Organization",
                            "address": "Dabas, Hungary"
                          }
                        }
                      },
                      {
                        "result_score": 0.0011999999,
                        "item": {
                          "id": 1,
                          "type": "product",
                          "name": "Sample Product",
                          "code": "product-code",
                          "visible_to": 3,
                          "owner": { "id": 69 },
                          "custom_fields": [ ]
                        }
                      }
                    ],
                    "related_items": [
                      {
                        "result_score": 0,
                        "item": {
                          "id": 2,
                          "type": "deal",
                          "title": "Other deal",
                          "value": 100,
                          "currency": "USD",
                          "status": "open",
                          "visible_to": 3,
                          "owner": { "id": 1 },
                          "stage": { "id": 1, "name": "Lead In" },
                          "person": { "id": 1, "name": "Sample Person" }
                        }
                      }
                    ]
                  },
                  "additional_data": {
                    "pagination": {
                      "start": 0,
                      "limit": 100,
                      "more_items_in_collection": false
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/itemSearch/field": {
      "get": {
        "summary": "Perform a search using a specific field from an item type",
        "description": "Performs a search from the values of a specific field. Results can either be the distinct values of the field (useful for searching autocomplete field values), or the IDs of actual items (deals, leads, persons, organizations or products).",
        "operationId": "searchItemByField",
        "tags": [ "ItemSearch" ],
        "parameters": [
          {
            "in": "query",
            "name": "term",
            "required": true,
            "schema": { "type": "string" },
            "description": "The search term to look for. Minimum 2 characters (or 1 if using `exact_match`). Please note that the search term has to be URL encoded."
          },
          {
            "in": "query",
            "name": "field_type",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "dealField",
                "leadField",
                "personField",
                "organizationField",
                "productField",
                "projectField"
              ]
            },
            "description": "The type of the field to perform the search from"
          },
          {
            "in": "query",
            "name": "exact_match",
            "schema": {
              "type": "boolean",
              "enum": [ true, false ],
              "default": false
            },
            "description": "When enabled, only full exact matches against the given term are returned. The search <b>is</b> case sensitive."
          },
          {
            "in": "query",
            "name": "field_key",
            "required": true,
            "schema": { "type": "string" },
            "description": "The key of the field to search from. The field key can be obtained by fetching the list of the fields using any of the fields' API GET methods (dealFields, personFields, etc.)."
          },
          {
            "in": "query",
            "name": "return_item_ids",
            "schema": { "type": "boolean", "enum": [ true, false ] },
            "description": "Whether to return the IDs of the matching items or not. When not set or set to `0` or `false`, only distinct values of the searched field are returned. When set to `1` or `true`, the ID of each found item is returned."
          },
          {
            "in": "query",
            "name": "start",
            "schema": { "type": "integer" },
            "description": "Pagination start"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": { "type": "integer" },
            "description": "Items shown per page"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "searchItemByField",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "description": "The array of results",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer",
                                "description": "The ID of the item"
                              },
                              "$field_key": {
                                "description": "The value of the searched `field_key`"
                              }
                            }
                          }
                        },
                        "additional_data": {
                          "type": "object",
                          "properties": {
                            "pagination": {
                              "description": "Pagination details of the list",
                              "type": "object",
                              "properties": {
                                "start": {
                                  "type": "integer",
                                  "description": "Pagination start"
                                },
                                "limit": {
                                  "type": "integer",
                                  "description": "Items shown per page"
                                },
                                "more_items_in_collection": {
                                  "type": "boolean",
                                  "description": "Whether there are more list items in the collection than displayed"
                                },
                                "next_start": {
                                  "type": "integer",
                                  "description": "Next pagination start"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "success": true,
                  "data": [
                    { "id": 1, "name": "Jane Doe" },
                    { "id": 2, "name": "John Doe" }
                  ],
                  "additional_data": {
                    "pagination": {
                      "start": 0,
                      "limit": 100,
                      "more_items_in_collection": false
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/leads": {
      "get": {
        "tags": [ "Leads" ],
        "summary": "Get all leads",
        "description": "Returns multiple leads. Leads are sorted by the time they were created, from oldest to newest. Pagination can be controlled using `limit` and `start` query parameters. If a lead contains custom fields, the fields' values will be included in the response in the same format as with the `Deals` endpoints. If a custom field's value hasn't been set for the lead, it won't appear in the response. Please note that leads do not have a separate set of custom fields, instead they inherit the custom fields' structure from deals.\n",
        "operationId": "getLeads",
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "description": "For pagination, the limit of entries to be returned. If not provided, 100 items will be returned.",
            "schema": { "type": "integer", "example": 100 }
          },
          {
            "in": "query",
            "name": "start",
            "description": "For pagination, the position that represents the first result for the page",
            "schema": { "type": "integer", "example": 0 }
          },
          {
            "in": "query",
            "name": "archived_status",
            "description": "Filtering based on the archived status of a lead. If not provided, `All` is used.",
            "schema": {
              "type": "string",
              "enum": [ "archived", "not_archived", "all" ]
            }
          },
          {
            "in": "query",
            "name": "owner_id",
            "description": "If supplied, only leads matching the given user will be returned. However, `filter_id` takes precedence over `owner_id` when supplied.",
            "schema": { "type": "integer", "example": 1 }
          },
          {
            "in": "query",
            "name": "person_id",
            "description": "If supplied, only leads matching the given person will be returned. However, `filter_id` takes precedence over `person_id` when supplied.",
            "schema": { "type": "integer", "example": 1 }
          },
          {
            "in": "query",
            "name": "organization_id",
            "description": "If supplied, only leads matching the given organization will be returned. However, `filter_id` takes precedence over `organization_id` when supplied.",
            "schema": { "type": "integer", "example": 1 }
          },
          {
            "in": "query",
            "name": "filter_id",
            "description": "The ID of the filter to use",
            "schema": { "type": "integer", "example": 1 }
          },
          {
            "in": "query",
            "name": "sort",
            "description": "The field names and sorting mode separated by a comma (`field_name_1 ASC`, `field_name_2 DESC`). Only first-level field keys are supported (no nested keys).",
            "schema": {
              "type": "string",
              "enum": [
                "id",
                "title",
                "owner_id",
                "creator_id",
                "was_seen",
                "expected_close_date",
                "next_activity_id",
                "add_time",
                "update_time"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response containing payload in the `data` field",
            "content": {
              "application/json": {
                "schema": {
                  "title": "getLeads",
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean" },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The unique ID of the lead in the UUID format"
                          },
                          "title": {
                            "type": "string",
                            "description": "The title of the lead"
                          },
                          "owner_id": {
                            "type": "integer",
                            "description": "The ID of the user who owns the lead"
                          },
                          "creator_id": {
                            "type": "integer",
                            "description": "The ID of the user who created the lead"
                          },
                          "label_ids": {
                            "type": "array",
                            "description": "The IDs of the lead labels which are associated with the lead",
                            "items": { "type": "string", "format": "uuid" }
                          },
                          "person_id": {
                            "type": "integer",
                            "nullable": true,
                            "description": "The ID of a person which this lead is linked to"
                          },
                          "organization_id": {
                            "type": "integer",
                            "nullable": true,
                            "description": "The ID of an organization which this lead is linked to"
                          },
                          "source_name": {
                            "type": "string",
                            "description": "Defines where the lead comes from. Will be `API` if the lead was created through the Public API and will be `Manually created` if the lead was created manually through the UI.\n"
                          },
                          "is_archived": {
                            "type": "boolean",
                            "description": "A flag indicating whether the lead is archived or not"
                          },
                          "was_seen": {
                            "type": "boolean",
                            "description": "A flag indicating whether the lead was seen by someone in the Pipedrive UI"
                          },
                          "value": {
                            "type": "object",
                            "description": "The potential value of the lead",
                            "required": [ "amount", "currency" ],
                            "properties": {
                              "amount": { "type": "number" },
                              "currency": { "type": "string" }
                            }
                          },
                          "expected_close_date": {
                            "type": "string",
                            "format": "date",
                            "nullable": true,
                            "description": "The date of when the deal which will be created from the lead is expected to be closed. In ISO 8601 format: YYYY-MM-DD."
                          },
                          "next_activity_id": {
                            "type": "integer",
                            "nullable": true,
                            "description": "The ID of the next activity associated with the lead"
                          },
                          "add_time": {
                            "type": "string",
                            "description": "The date and time of when the lead was created. In ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.",
                            "format": "date-time"
                          },
                          "update_time": {
                            "type": "string",
                            "description": "The date and time of when the lead was last updated. In ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.",
                            "format": "date-time"
                          },
                          "visible_to": {
                            "type": "string",
                            "allOf": [
                              { "type": "string", "enum": [ "1", "3", "5", "7" ] }
                            ],
                            "description": "The visibility of the lead. If omitted, the visibility will be set to the default visibility setting of this item type for the authorized user.<table><tr><th>Value</th><th>Description</th></tr><tr><td>`1`</td><td>Owner &amp; followers (private)</td></tr><tr><td>`3`</td><td>Entire company (shared)</td></tr></table>"
                          },
                          "cc_email": {
                            "type": "string",
                            "description": "The BCC email of the lead"
                          }
                        }
                      }
                    },
                    "additional_data": {
                      "description": "The additional data of the list",
                      "type": "object",
                      "properties": {
                        "start": {
                          "type": "integer",
                          "description": "Pagination start"
                        },
                        "limit": {
                          "type": "integer",
                          "description": "Items shown per page"
                        },
                        "more_items_in_collection": {
                          "type": "boolean",
                          "description": "If there are more list items in the collection than displayed or not"
                        }
                      }
                    }
                  }
                },
                "example": {
                  "success": true,
                  "data": [
                    {
                      "id": "adf21080-0e10-11eb-879b-05d71fb426ec",
                      "title": "Jane Doe Lead",
                      "owner_id": 1,
                      "creator_id": 1,
                      "label_ids": [
                        "f08b42a0-4e75-11ea-9643-03698ef1cfd6",
                        "f08b42a1-4e75-11ea-9643-03698ef1cfd6"
                      ],
                      "person_id": 1092,
                      "organization_id": null,
                      "source_name": "API",
                      "is_archived": false,
                      "was_seen": false,
                      "value": { "amount": 999, "currency": "USD" },
                      "expected_close_date": null,
                      "next_activity_id": 1,
                      "add_time": "2020-10-14T11:30:36.551Z",
                      "update_time": "2020-10-14T11:30:36.551Z",
                      "visible_to": "3",
                      "cc_email": "company+1+leadntPaYKA5QRxXkh6WMNHiGh@dev.pipedrivemail.com"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [ "Leads" ],
        "summary": "Add a lead",
        "description": "Creates a lead. A lead always has to be linked to a person or an organization or both. All leads created through the Pipedrive API will have a lead source `API` assigned. Here's the tutorial for <a href=\"https://pipedrive.readme.io/docs/adding-a-lead\" target=\"_blank\" rel=\"noopener noreferrer\">adding a lead</a>. If a lead contains custom fields, the fields' values will be included in the response in the same format as with the `Deals` endpoints. If a custom field's value hasn't been set for the lead, it won't appear in the response. Please note that leads do not have a separate set of custom fields, instead they inherit the custom fields' structure from deals. See an example given in the <a href=\"https://pipedrive.readme.io/docs/updating-custom-field-value\" target=\"_blank\" rel=\"noopener noreferrer\">updating custom fields' values tutorial</a>.",
        "operationId": "addLead",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "addLeadRequest",
                "type": "object",
                "required": [ "title" ],
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "The name of the lead"
                  },
                  "owner_id": {
                    "type": "integer",
                    "description": "The ID of the user which will be the owner of the created lead. If not provided, the user making the request will be used."
                  },
                  "label_ids": {
                    "type": "array",
                    "description": "The IDs of the lead labels which will be associated with the lead",
                    "items": { "type": "string", "format": "uuid" }
                  },
                  "person_id": {
                    "type": "integer",
                    "description": "The ID of a person which this lead will be linked to. If the person does not exist yet, it needs to be created first. This property is required unless `organization_id` is specified."
                  },
                  "organization_id": {
                    "type": "integer",
                    "description": "The ID of an organization which this lead will be linked to. If the organization does not exist yet, it needs to be created first. This property is required unless `person_id` is specified."
                  },
                  "value": {
                    "type": "object",
                    "description": "The potential value of the lead",
                    "required": [ "amount", "currency" ],
                    "properties": {
                      "amount": { "type": "number" },
                      "currency": { "type": "string" }
                    }
                  },
                  "expected_close_date": {
                    "type": "string",
                    "format": "date",
                    "description": "The date of when the deal which will be created from the lead is expected to be closed. In ISO 8601 format: YYYY-MM-DD."
                  },
                  "visible_to": {
                    "type": "string",
                    "allOf": [
                      { "type": "string", "enum": [ "1", "3", "5", "7" ] }
                    ],
                    "description": "The visibility of the lead. If omitted, the visibility will be set to the default visibility setting of this item type for the authorized user. Read more about visibility groups <a href=\"https://support.pipedrive.com/en/article/visibility-groups\" target=\"_blank\" rel=\"noopener noreferrer\">here</a>.<h4>Essential / Advanced plan</h4><table><tr><th style=\"width: 40px\">Value</th><th>Description</th></tr><tr><td>`1`</td><td>Owner &amp; followers</td><tr><td>`3`</td><td>Entire company</td></tr></table><h4>Professional / Enterprise plan</h4><table><tr><th style=\"width: 40px\">Value</th><th>Description</th></tr><tr><td>`1`</td><td>Owner only</td><tr><td>`3`</td><td>Owner's visibility group</td></tr><tr><td>`5`</td><td>Owner's visibility group and sub-groups</td></tr><tr><td>`7`</td><td>Entire company</td></tr></table>"
                  },
                  "was_seen": {
                    "type": "boolean",
                    "enum": [ true, false ],
                    "description": "A flag indicating whether the lead was seen by someone in the Pipedrive UI"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful response containing payload in the `data` field",
            "content": {
              "application/json": {
                "schema": {
                  "title": "oneLead",
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean" },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "description": "The unique ID of the lead in the UUID format"
                        },
                        "title": {
                          "type": "string",
                          "description": "The title of the lead"
                        },
                        "owner_id": {
                          "type": "integer",
                          "description": "The ID of the user who owns the lead"
                        },
                        "creator_id": {
                          "type": "integer",
                          "description": "The ID of the user who created the lead"
                        },
                        "label_ids": {
                          "type": "array",
                          "description": "The IDs of the lead labels which are associated with the lead",
                          "items": { "type": "string", "format": "uuid" }
                        },
                        "person_id": {
                          "type": "integer",
                          "nullable": true,
                          "description": "The ID of a person which this lead is linked to"
                        },
                        "organization_id": {
                          "type": "integer",
                          "nullable": true,
                          "description": "The ID of an organization which this lead is linked to"
                        },
                        "source_name": {
                          "type": "string",
                          "description": "Defines where the lead comes from. Will be `API` if the lead was created through the Public API and will be `Manually created` if the lead was created manually through the UI.\n"
                        },
                        "is_archived": {
                          "type": "boolean",
                          "description": "A flag indicating whether the lead is archived or not"
                        },
                        "was_seen": {
                          "type": "boolean",
                          "description": "A flag indicating whether the lead was seen by someone in the Pipedrive UI"
                        },
                        "value": {
                          "type": "object",
                          "description": "The potential value of the lead",
                          "required": [ "amount", "currency" ],
                          "properties": {
                            "amount": { "type": "number" },
                            "currency": { "type": "string" }
                          }
                        },
                        "expected_close_date": {
                          "type": "string",
                          "format": "date",
                          "nullable": true,
                          "description": "The date of when the deal which will be created from the lead is expected to be closed. In ISO 8601 format: YYYY-MM-DD."
                        },
                        "next_activity_id": {
                          "type": "integer",
                          "nullable": true,
                          "description": "The ID of the next activity associated with the lead"
                        },
                        "add_time": {
                          "type": "string",
                          "description": "The date and time of when the lead was created. In ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.",
                          "format": "date-time"
                        },
                        "update_time": {
                          "type": "string",
                          "description": "The date and time of when the lead was last updated. In ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.",
                          "format": "date-time"
                        },
                        "visible_to": {
                          "type": "string",
                          "allOf": [
                            { "type": "string", "enum": [ "1", "3", "5", "7" ] }
                          ],
                          "description": "The visibility of the lead. If omitted, the visibility will be set to the default visibility setting of this item type for the authorized user.<table><tr><th>Value</th><th>Description</th></tr><tr><td>`1`</td><td>Owner &amp; followers (private)</td></tr><tr><td>`3`</td><td>Entire company (shared)</td></tr></table>"
                        },
                        "cc_email": {
                          "type": "string",
                          "description": "The BCC email of the lead"
                        }
                      }
                    }
                  }
                },
                "example": {
                  "success": true,
                  "data": {
                    "id": "adf21080-0e10-11eb-879b-05d71fb426ec",
                    "title": "Jane Doe Lead",
                    "owner_id": 1,
                    "creator_id": 1,
                    "label_ids": [
                      "f08b42a0-4e75-11ea-9643-03698ef1cfd6",
                      "f08b42a1-4e75-11ea-9643-03698ef1cfd6"
                    ],
                    "person_id": 1092,
                    "organization_id": null,
                    "source_name": "API",
                    "is_archived": false,
                    "was_seen": false,
                    "value": { "amount": 999, "currency": "USD" },
                    "expected_close_date": null,
                    "next_activity_id": 1,
                    "add_time": "2020-10-14T11:30:36.551Z",
                    "update_time": "2020-10-14T11:30:36.551Z",
                    "visible_to": "3",
                    "cc_email": "company+1+leadntPaYKA5QRxXkh6WMNHiGh@dev.pipedrivemail.com"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/leads/{id}": {
      "get": {
        "tags": [ "Leads" ],
        "summary": "Get one lead",
        "description": "Returns details of a specific lead. If a lead contains custom fields, the fields' values will be included in the response in the same format as with the `Deals` endpoints. If a custom field's value hasn't been set for the lead, it won't appear in the response. Please note that leads do not have a separate set of custom fields, instead they inherit the custom fields’ structure from deals.",
        "operationId": "getLead",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the lead",
            "required": true,
            "schema": { "type": "string", "format": "uuid" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response containing payload in the `data` field",
            "content": {
              "application/json": {
                "schema": {
                  "title": "oneLead",
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean" },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "description": "The unique ID of the lead in the UUID format"
                        },
                        "title": {
                          "type": "string",
                          "description": "The title of the lead"
                        },
                        "owner_id": {
                          "type": "integer",
                          "description": "The ID of the user who owns the lead"
                        },
                        "creator_id": {
                          "type": "integer",
                          "description": "The ID of the user who created the lead"
                        },
                        "label_ids": {
                          "type": "array",
                          "description": "The IDs of the lead labels which are associated with the lead",
                          "items": { "type": "string", "format": "uuid" }
                        },
                        "person_id": {
                          "type": "integer",
                          "nullable": true,
                          "description": "The ID of a person which this lead is linked to"
                        },
                        "organization_id": {
                          "type": "integer",
                          "nullable": true,
                          "description": "The ID of an organization which this lead is linked to"
                        },
                        "source_name": {
                          "type": "string",
                          "description": "Defines where the lead comes from. Will be `API` if the lead was created through the Public API and will be `Manually created` if the lead was created manually through the UI.\n"
                        },
                        "is_archived": {
                          "type": "boolean",
                          "description": "A flag indicating whether the lead is archived or not"
                        },
                        "was_seen": {
                          "type": "boolean",
                          "description": "A flag indicating whether the lead was seen by someone in the Pipedrive UI"
                        },
                        "value": {
                          "type": "object",
                          "description": "The potential value of the lead",
                          "required": [ "amount", "currency" ],
                          "properties": {
                            "amount": { "type": "number" },
                            "currency": { "type": "string" }
                          }
                        },
                        "expected_close_date": {
                          "type": "string",
                          "format": "date",
                          "nullable": true,
                          "description": "The date of when the deal which will be created from the lead is expected to be closed. In ISO 8601 format: YYYY-MM-DD."
                        },
                        "next_activity_id": {
                          "type": "integer",
                          "nullable": true,
                          "description": "The ID of the next activity associated with the lead"
                        },
                        "add_time": {
                          "type": "string",
                          "description": "The date and time of when the lead was created. In ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.",
                          "format": "date-time"
                        },
                        "update_time": {
                          "type": "string",
                          "description": "The date and time of when the lead was last updated. In ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.",
                          "format": "date-time"
                        },
                        "visible_to": {
                          "type": "string",
                          "allOf": [
                            { "type": "string", "enum": [ "1", "3", "5", "7" ] }
                          ],
                          "description": "The visibility of the lead. If omitted, the visibility will be set to the default visibility setting of this item type for the authorized user.<table><tr><th>Value</th><th>Description</th></tr><tr><td>`1`</td><td>Owner &amp; followers (private)</td></tr><tr><td>`3`</td><td>Entire company (shared)</td></tr></table>"
                        },
                        "cc_email": {
                          "type": "string",
                          "description": "The BCC email of the lead"
                        }
                      }
                    }
                  }
                },
                "example": {
                  "success": true,
                  "data": {
                    "id": "adf21080-0e10-11eb-879b-05d71fb426ec",
                    "title": "Jane Doe Lead",
                    "owner_id": 1,
                    "creator_id": 1,
                    "label_ids": [
                      "f08b42a0-4e75-11ea-9643-03698ef1cfd6",
                      "f08b42a1-4e75-11ea-9643-03698ef1cfd6"
                    ],
                    "person_id": 1092,
                    "organization_id": null,
                    "source_name": "API",
                    "is_archived": false,
                    "was_seen": false,
                    "value": { "amount": 999, "currency": "USD" },
                    "expected_close_date": null,
                    "next_activity_id": 1,
                    "add_time": "2020-10-14T11:30:36.551Z",
                    "update_time": "2020-10-14T11:30:36.551Z",
                    "visible_to": "3",
                    "cc_email": "company+1+leadntPaYKA5QRxXkh6WMNHiGh@dev.pipedrivemail.com"
                  }
                }
              }
            }
          },
          "404": {
            "description": "A resource describing an error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "leadResponse404",
                  "properties": {
                    "success": { "type": "boolean", "example": false },
                    "error": {
                      "type": "string",
                      "description": "The description of the error"
                    },
                    "error_info": {
                      "type": "string",
                      "description": "A message describing how to solve the problem"
                    },
                    "data": {
                      "type": "object",
                      "nullable": true,
                      "example": null
                    },
                    "additional_data": {
                      "type": "object",
                      "nullable": true,
                      "example": null
                    }
                  }
                },
                "example": {
                  "success": false,
                  "error": "requested lead not found",
                  "error_info": "Object was not found.",
                  "data": null,
                  "additional_data": null
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [ "Leads" ],
        "summary": "Update a lead",
        "description": "Updates one or more properties of a lead. Only properties included in the request will be updated. Send `null` to unset a property (applicable for example for `value`, `person_id` or `organization_id`). If a lead contains custom fields, the fields' values will be included in the response in the same format as with the `Deals` endpoints. If a custom field's value hasn't been set for the lead, it won't appear in the response. Please note that leads do not have a separate set of custom fields, instead they inherit the custom fields’ structure from deals. See an example given in the <a href=\"https://pipedrive.readme.io/docs/updating-custom-field-value\" target=\"_blank\" rel=\"noopener noreferrer\">updating custom fields’ values tutorial</a>.",
        "operationId": "updateLead",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the lead",
            "required": true,
            "schema": { "type": "string", "format": "uuid" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "updateLeadRequest",
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "nullable": true,
                    "description": "The name of the lead"
                  },
                  "owner_id": {
                    "type": "integer",
                    "description": "The ID of the user which will be the owner of the created lead. If not provided, the user making the request will be used."
                  },
                  "label_ids": {
                    "type": "array",
                    "description": "The IDs of the lead labels which will be associated with the lead",
                    "items": { "type": "string", "format": "uuid" }
                  },
                  "person_id": {
                    "type": "integer",
                    "nullable": true,
                    "description": "The ID of a person which this lead will be linked to. If the person does not exist yet, it needs to be created first. A lead always has to be linked to a person or organization or both.\n"
                  },
                  "organization_id": {
                    "type": "integer",
                    "nullable": true,
                    "description": "The ID of an organization which this lead will be linked to. If the organization does not exist yet, it needs to be created first. A lead always has to be linked to a person or organization or both."
                  },
                  "is_archived": {
                    "type": "boolean",
                    "description": "A flag indicating whether the lead is archived or not"
                  },
                  "value": {
                    "type": "object",
                    "description": "The potential value of the lead",
                    "required": [ "amount", "currency" ],
                    "properties": {
                      "amount": { "type": "number" },
                      "currency": { "type": "string" }
                    },
                    "nullable": true
                  },
                  "expected_close_date": {
                    "type": "string",
                    "format": "date",
                    "nullable": true,
                    "description": "The date of when the deal which will be created from the lead is expected to be closed. In ISO 8601 format: YYYY-MM-DD."
                  },
                  "visible_to": {
                    "type": "string",
                    "allOf": [
                      { "type": "string", "enum": [ "1", "3", "5", "7" ] }
                    ],
                    "description": "The visibility of the lead. If omitted, the visibility will be set to the default visibility setting of this item type for the authorized user. Read more about visibility groups <a href=\"https://support.pipedrive.com/en/article/visibility-groups\" target=\"_blank\" rel=\"noopener noreferrer\">here</a>.<h4>Essential / Advanced plan</h4><table><tr><th style=\"width: 40px\">Value</th><th>Description</th></tr><tr><td>`1`</td><td>Owner &amp; followers</td><tr><td>`3`</td><td>Entire company</td></tr></table><h4>Professional / Enterprise plan</h4><table><tr><th style=\"width: 40px\">Value</th><th>Description</th></tr><tr><td>`1`</td><td>Owner only</td><tr><td>`3`</td><td>Owner's visibility group</td></tr><tr><td>`5`</td><td>Owner's visibility group and sub-groups</td></tr><tr><td>`7`</td><td>Entire company</td></tr></table>"
                  },
                  "was_seen": {
                    "type": "boolean",
                    "enum": [ true, false ],
                    "description": "A flag indicating whether the lead was seen by someone in the Pipedrive UI"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response containing payload in the `data` field",
            "content": {
              "application/json": {
                "schema": {
                  "title": "oneLead",
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean" },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "description": "The unique ID of the lead in the UUID format"
                        },
                        "title": {
                          "type": "string",
                          "description": "The title of the lead"
                        },
                        "owner_id": {
                          "type": "integer",
                          "description": "The ID of the user who owns the lead"
                        },
                        "creator_id": {
                          "type": "integer",
                          "description": "The ID of the user who created the lead"
                        },
                        "label_ids": {
                          "type": "array",
                          "description": "The IDs of the lead labels which are associated with the lead",
                          "items": { "type": "string", "format": "uuid" }
                        },
                        "person_id": {
                          "type": "integer",
                          "nullable": true,
                          "description": "The ID of a person which this lead is linked to"
                        },
                        "organization_id": {
                          "type": "integer",
                          "nullable": true,
                          "description": "The ID of an organization which this lead is linked to"
                        },
                        "source_name": {
                          "type": "string",
                          "description": "Defines where the lead comes from. Will be `API` if the lead was created through the Public API and will be `Manually created` if the lead was created manually through the UI.\n"
                        },
                        "is_archived": {
                          "type": "boolean",
                          "description": "A flag indicating whether the lead is archived or not"
                        },
                        "was_seen": {
                          "type": "boolean",
                          "description": "A flag indicating whether the lead was seen by someone in the Pipedrive UI"
                        },
                        "value": {
                          "type": "object",
                          "description": "The potential value of the lead",
                          "required": [ "amount", "currency" ],
                          "properties": {
                            "amount": { "type": "number" },
                            "currency": { "type": "string" }
                          }
                        },
                        "expected_close_date": {
                          "type": "string",
                          "format": "date",
                          "nullable": true,
                          "description": "The date of when the deal which will be created from the lead is expected to be closed. In ISO 8601 format: YYYY-MM-DD."
                        },
                        "next_activity_id": {
                          "type": "integer",
                          "nullable": true,
                          "description": "The ID of the next activity associated with the lead"
                        },
                        "add_time": {
                          "type": "string",
                          "description": "The date and time of when the lead was created. In ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.",
                          "format": "date-time"
                        },
                        "update_time": {
                          "type": "string",
                          "description": "The date and time of when the lead was last updated. In ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.",
                          "format": "date-time"
                        },
                        "visible_to": {
                          "type": "string",
                          "allOf": [
                            { "type": "string", "enum": [ "1", "3", "5", "7" ] }
                          ],
                          "description": "The visibility of the lead. If omitted, the visibility will be set to the default visibility setting of this item type for the authorized user.<table><tr><th>Value</th><th>Description</th></tr><tr><td>`1`</td><td>Owner &amp; followers (private)</td></tr><tr><td>`3`</td><td>Entire company (shared)</td></tr></table>"
                        },
                        "cc_email": {
                          "type": "string",
                          "description": "The BCC email of the lead"
                        }
                      }
                    }
                  }
                },
                "example": {
                  "success": true,
                  "data": {
                    "id": "adf21080-0e10-11eb-879b-05d71fb426ec",
                    "title": "Jane Doe Lead",
                    "owner_id": 1,
                    "creator_id": 1,
                    "label_ids": [
                      "f08b42a0-4e75-11ea-9643-03698ef1cfd6",
                      "f08b42a1-4e75-11ea-9643-03698ef1cfd6"
                    ],
                    "person_id": 1092,
                    "organization_id": null,
                    "source_name": "API",
                    "is_archived": false,
                    "was_seen": false,
                    "value": { "amount": 999, "currency": "USD" },
                    "expected_close_date": null,
                    "next_activity_id": 1,
                    "add_time": "2020-10-14T11:30:36.551Z",
                    "update_time": "2020-10-14T11:30:36.551Z",
                    "visible_to": "3",
                    "cc_email": "company+1+leadntPaYKA5QRxXkh6WMNHiGh@dev.pipedrivemail.com"
                  }
                }
              }
            }
          },
          "404": {
            "description": "A resource describing an error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "leadResponse404",
                  "properties": {
                    "success": { "type": "boolean", "example": false },
                    "error": {
                      "type": "string",
                      "description": "The description of the error"
                    },
                    "error_info": {
                      "type": "string",
                      "description": "A message describing how to solve the problem"
                    },
                    "data": {
                      "type": "object",
                      "nullable": true,
                      "example": null
                    },
                    "additional_data": {
                      "type": "object",
                      "nullable": true,
                      "example": null
                    }
                  }
                },
                "example": {
                  "success": false,
                  "error": "requested lead not found",
                  "error_info": "Object was not found.",
                  "data": null,
                  "additional_data": null
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [ "Leads" ],
        "summary": "Delete a lead",
        "description": "Deletes a specific lead.",
        "operationId": "deleteLead",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the lead",
            "required": true,
            "schema": { "type": "string", "format": "uuid" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with id value only. Used in DELETE calls.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "leadId",
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean" },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": { "type": "string", "format": "uuid" }
                      }
                    }
                  }
                },
                "example": {
                  "success": true,
                  "data": { "id": "adf21080-0e10-11eb-879b-05d71fb426ec" }
                }
              }
            }
          },
          "404": {
            "description": "A resource describing an error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "leadResponse404",
                  "properties": {
                    "success": { "type": "boolean", "example": false },
                    "error": {
                      "type": "string",
                      "description": "The description of the error"
                    },
                    "error_info": {
                      "type": "string",
                      "description": "A message describing how to solve the problem"
                    },
                    "data": {
                      "type": "object",
                      "nullable": true,
                      "example": null
                    },
                    "additional_data": {
                      "type": "object",
                      "nullable": true,
                      "example": null
                    }
                  }
                },
                "example": {
                  "success": false,
                  "error": "requested lead not found",
                  "error_info": "Object was not found.",
                  "data": null,
                  "additional_data": null
                }
              }
            }
          }
        }
      }
    },
    "/leads/{id}/permittedUsers": {
      "get": {
        "summary": "List permitted users",
        "description": "Lists the users permitted to access a lead.",
        "operationId": "getLeadUsers",
        "tags": [ "Leads" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the lead",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Lists users permitted to access a lead",
            "content": {
              "application/json": {
                "schema": {
                  "title": "userIds",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": { "type": "integer" },
                          "description": "The list of user IDs"
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "success": true,
                  "data": [ 10100010, 22302444, 33511023 ]
                }
              }
            }
          }
        }
      }
    },
    "/leads/search": {
      "get": {
        "summary": "Search leads",
        "description": "Searches all leads by title, notes and/or custom fields. This endpoint is a wrapper of <a href=\"https://developers.pipedrive.com/docs/api/v1/ItemSearch#searchItem\">/v1/itemSearch</a> with a narrower OAuth scope. Found leads can be filtered by the person ID and the organization ID.",
        "operationId": "searchLeads",
        "tags": [ "Leads" ],
        "parameters": [
          {
            "in": "query",
            "name": "term",
            "required": true,
            "schema": { "type": "string" },
            "description": "The search term to look for. Minimum 2 characters (or 1 if using `exact_match`). Please note that the search term has to be URL encoded."
          },
          {
            "in": "query",
            "name": "fields",
            "schema": {
              "type": "string",
              "enum": [ "custom_fields", "notes", "title" ]
            },
            "description": "A comma-separated string array. The fields to perform the search from. Defaults to all of them."
          },
          {
            "in": "query",
            "name": "exact_match",
            "schema": { "type": "boolean", "enum": [ true, false ] },
            "description": "When enabled, only full exact matches against the given term are returned. It is <b>not</b> case sensitive."
          },
          {
            "in": "query",
            "name": "person_id",
            "schema": { "type": "integer" },
            "description": "Will filter leads by the provided person ID. The upper limit of found leads associated with the person is 2000."
          },
          {
            "in": "query",
            "name": "organization_id",
            "schema": { "type": "integer" },
            "description": "Will filter leads by the provided organization ID. The upper limit of found leads associated with the organization is 2000."
          },
          {
            "in": "query",
            "name": "include_fields",
            "schema": { "type": "string", "enum": [ "lead.was_seen" ] },
            "description": "Supports including optional fields in the results which are not provided by default"
          },
          {
            "in": "query",
            "name": "start",
            "schema": { "type": "integer", "default": 0 },
            "description": "Pagination start. Note that the pagination is based on main results and does not include related items when using `search_for_related_items` parameter."
          },
          {
            "in": "query",
            "name": "limit",
            "schema": { "type": "integer" },
            "description": "Items shown per page"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "searchLeads",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "description": "The array of leads",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "result_score": {
                                    "type": "number",
                                    "description": "Search result relevancy"
                                  },
                                  "item": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string",
                                        "description": "The ID of the lead"
                                      },
                                      "type": {
                                        "type": "string",
                                        "description": "The type of the item"
                                      },
                                      "title": {
                                        "type": "string",
                                        "description": "The title of the lead"
                                      },
                                      "owner": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "integer",
                                            "description": "The ID of the owner of the lead"
                                          }
                                        }
                                      },
                                      "person": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "integer",
                                            "description": "The ID of the person the lead is associated with"
                                          },
                                          "name": {
                                            "type": "string",
                                            "description": "The name of the person the lead is associated with"
                                          }
                                        }
                                      },
                                      "organization": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "integer",
                                            "description": "The ID of the organization the lead is associated with"
                                          },
                                          "name": {
                                            "type": "string",
                                            "description": "The name of the organization the lead is associated with"
                                          }
                                        }
                                      },
                                      "phones": {
                                        "type": "array",
                                        "items": { "type": "string" }
                                      },
                                      "emails": {
                                        "type": "array",
                                        "items": { "type": "string" }
                                      },
                                      "custom_fields": {
                                        "type": "array",
                                        "items": { "type": "string" },
                                        "description": "Custom fields"
                                      },
                                      "notes": {
                                        "type": "array",
                                        "description": "An array of notes",
                                        "items": { "type": "string" }
                                      },
                                      "value": {
                                        "type": "integer",
                                        "description": "The value of the lead"
                                      },
                                      "currency": {
                                        "type": "string",
                                        "description": "The currency of the lead"
                                      },
                                      "visible_to": {
                                        "type": "integer",
                                        "description": "The visibility of the lead"
                                      },
                                      "is_archived": {
                                        "type": "boolean",
                                        "description": "A flag indicating whether the lead is archived or not"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "additional_data": {
                          "type": "object",
                          "properties": {
                            "pagination": {
                              "description": "Pagination details of the list",
                              "type": "object",
                              "properties": {
                                "start": {
                                  "type": "integer",
                                  "description": "Pagination start"
                                },
                                "limit": {
                                  "type": "integer",
                                  "description": "Items shown per page"
                                },
                                "more_items_in_collection": {
                                  "type": "boolean",
                                  "description": "Whether there are more list items in the collection than displayed"
                                },
                                "next_start": {
                                  "type": "integer",
                                  "description": "Next pagination start"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "success": true,
                  "data": {
                    "items": [
                      {
                        "result_score": 0.29,
                        "item": {
                          "id": "39c433f0-8a4c-11ec-8728-09968f0a1ca0",
                          "type": "lead",
                          "title": "John Doe lead",
                          "owner": { "id": 1 },
                          "person": { "id": 1, "name": "John Doe" },
                          "organization": { "id": 1, "name": "John company" },
                          "phones": [ ],
                          "emails": [ "john@doe.com" ],
                          "custom_fields": [ ],
                          "notes": [ ],
                          "value": 100,
                          "currency": "USD",
                          "visible_to": 3,
                          "is_archived": false
                        }
                      }
                    ]
                  },
                  "additional_data": {
                    "description": "The additional data of the list",
                    "type": "object",
                    "properties": {
                      "start": {
                        "type": "integer",
                        "description": "Pagination start"
                      },
                      "limit": {
                        "type": "integer",
                        "description": "Items shown per page"
                      },
                      "more_items_in_collection": {
                        "type": "boolean",
                        "description": "If there are more list items in the collection than displayed or not"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/leadLabels": {
      "get": {
        "tags": [ "LeadLabels" ],
        "summary": "Get all lead labels",
        "description": "Returns details of all lead labels. This endpoint does not support pagination and all labels are always returned.",
        "operationId": "getLeadLabels",
        "responses": {
          "200": {
            "description": "Successful response containing payload in the `data` field",
            "content": {
              "application/json": {
                "schema": {
                  "title": "getLeadLabels",
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean" },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The unique ID of the lead label"
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the lead label"
                          },
                          "color": {
                            "type": "string",
                            "enum": [
                              "green",
                              "blue",
                              "red",
                              "yellow",
                              "purple",
                              "gray"
                            ],
                            "description": "The color of the label. Only a subset of colors can be used."
                          },
                          "add_time": {
                            "type": "string",
                            "description": "The date and time of when the lead label was created. In ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.",
                            "format": "date-time"
                          },
                          "update_time": {
                            "type": "string",
                            "description": "The date and time of when the lead label was last updated. In ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.",
                            "format": "date-time"
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "success": true,
                  "data": [
                    {
                      "id": "f08b42a0-4e75-11ea-9643-03698ef1cfd6",
                      "name": "Hot",
                      "color": "red",
                      "add_time": "2020-02-13T15:31:44.000Z",
                      "update_time": "2020-02-13T15:31:44.000Z"
                    },
                    {
                      "id": "f08b42a1-4e75-11ea-9643-03698ef1cfd6",
                      "name": "Cold",
                      "color": "blue",
                      "add_time": "2020-02-13T15:31:44.000Z",
                      "update_time": "2020-02-13T15:31:44.000Z"
                    },
                    {
                      "id": "f08b69b0-4e75-11ea-9643-03698ef1cfd6",
                      "name": "Warm",
                      "color": "yellow",
                      "add_time": "2020-02-13T15:31:44.000Z",
                      "update_time": "2020-02-13T15:31:44.000Z"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [ "LeadLabels" ],
        "summary": "Add a lead label",
        "description": "Creates a lead label.",
        "operationId": "addLeadLabel",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "addLeadLabelRequest",
                "type": "object",
                "required": [ "name", "color" ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the lead label"
                  },
                  "color": {
                    "type": "string",
                    "enum": [
                      "green",
                      "blue",
                      "red",
                      "yellow",
                      "purple",
                      "gray"
                    ],
                    "description": "The color of the label. Only a subset of colors can be used."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response containing payload in the `data` field",
            "content": {
              "application/json": {
                "schema": {
                  "title": "addOrUpdateLeadLabel",
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean" },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "description": "The unique ID of the lead label"
                        },
                        "name": {
                          "type": "string",
                          "description": "The name of the lead label"
                        },
                        "color": {
                          "type": "string",
                          "enum": [
                            "green",
                            "blue",
                            "red",
                            "yellow",
                            "purple",
                            "gray"
                          ],
                          "description": "The color of the label. Only a subset of colors can be used."
                        },
                        "add_time": {
                          "type": "string",
                          "description": "The date and time of when the lead label was created. In ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.",
                          "format": "date-time"
                        },
                        "update_time": {
                          "type": "string",
                          "description": "The date and time of when the lead label was last updated. In ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.",
                          "format": "date-time"
                        }
                      }
                    }
                  }
                },
                "example": {
                  "success": true,
                  "data": {
                    "id": "f08b42a0-4e75-11ea-9643-03698ef1cfd6",
                    "name": "Hot",
                    "color": "red",
                    "add_time": "2020-02-13T15:31:44.000Z",
                    "update_time": "2020-10-14T13:11:36.000Z"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/leadLabels/{id}": {
      "patch": {
        "tags": [ "LeadLabels" ],
        "summary": "Update a lead label",
        "description": "Updates one or more properties of a lead label. Only properties included in the request will be updated.\n",
        "operationId": "updateLeadLabel",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the lead label",
            "required": true,
            "schema": { "type": "string", "format": "uuid" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "updateLeadLabelRequest",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the lead label"
                  },
                  "color": {
                    "type": "string",
                    "enum": [
                      "green",
                      "blue",
                      "red",
                      "yellow",
                      "purple",
                      "gray"
                    ],
                    "description": "The color of the label. Only a subset of colors can be used."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response containing payload in the `data` field",
            "content": {
              "application/json": {
                "schema": {
                  "title": "addOrUpdateLeadLabel",
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean" },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "description": "The unique ID of the lead label"
                        },
                        "name": {
                          "type": "string",
                          "description": "The name of the lead label"
                        },
                        "color": {
                          "type": "string",
                          "enum": [
                            "green",
                            "blue",
                            "red",
                            "yellow",
                            "purple",
                            "gray"
                          ],
                          "description": "The color of the label. Only a subset of colors can be used."
                        },
                        "add_time": {
                          "type": "string",
                          "description": "The date and time of when the lead label was created. In ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.",
                          "format": "date-time"
                        },
                        "update_time": {
                          "type": "string",
                          "description": "The date and time of when the lead label was last updated. In ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.",
                          "format": "date-time"
                        }
                      }
                    }
                  }
                },
                "example": {
                  "success": true,
                  "data": {
                    "id": "f08b42a0-4e75-11ea-9643-03698ef1cfd6",
                    "name": "Hot",
                    "color": "red",
                    "add_time": "2020-02-13T15:31:44.000Z",
                    "update_time": "2020-10-14T13:11:36.000Z"
                  }
                }
              }
            }
          },
          "404": {
            "description": "A resource describing an error",
            "content": {
              "application/json": {
                "schema": {
                  "title": "leadResponse404",
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean", "example": false },
                    "error": {
                      "type": "string",
                      "description": "The description of the error"
                    },
                    "error_info": {
                      "type": "string",
                      "description": "A message describing how to solve the problem"
                    },
                    "data": {
                      "type": "object",
                      "nullable": true,
                      "example": null
                    },
                    "additional_data": {
                      "type": "object",
                      "nullable": true,
                      "example": null
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [ "LeadLabels" ],
        "summary": "Delete a lead label",
        "description": "Deletes a specific lead label.",
        "operationId": "deleteLeadLabel",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the lead label",
            "required": true,
            "schema": { "type": "string", "format": "uuid" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with id value only. Used in DELETE calls.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "leadId",
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean" },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": { "type": "string", "format": "uuid" }
                      }
                    }
                  }
                },
                "example": {
                  "success": true,
                  "data": { "id": "adf21080-0e10-11eb-879b-05d71fb426ec" }
                }
              }
            }
          },
          "404": {
            "description": "A resource describing an error",
            "content": {
              "application/json": {
                "schema": {
                  "title": "leadResponse404",
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean", "example": false },
                    "error": {
                      "type": "string",
                      "description": "The description of the error"
                    },
                    "error_info": {
                      "type": "string",
                      "description": "A message describing how to solve the problem"
                    },
                    "data": {
                      "type": "object",
                      "nullable": true,
                      "example": null
                    },
                    "additional_data": {
                      "type": "object",
                      "nullable": true,
                      "example": null
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/leadSources": {
      "get": {
        "tags": [ "LeadSources" ],
        "summary": "Get all lead sources",
        "description": "Returns all lead sources. Please note that the list of lead sources is fixed, it cannot be modified. All leads created through the Pipedrive API will have a lead source `API` assigned.\n",
        "operationId": "getLeadSources",
        "responses": {
          "200": {
            "description": "The successful response containing payload in the `data` field.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "getLeadSources",
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean" },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The unique name of a lead source"
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "success": true,
                  "data": [
                    { "name": "Manually created" },
                    { "name": "Deal" },
                    { "name": "Web forms" },
                    { "name": "Prospector" },
                    { "name": "Leadbooster" },
                    { "name": "Live chat" },
                    { "name": "Import" },
                    { "name": "Website visitors" },
                    { "name": "Workflow automation" },
                    { "name": "API" }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/legacyTeams": {
      "get": {
        "summary": "Get all teams",
        "description": "Returns data about teams within the company.",
        "operationId": "getTeams",
        "deprecated": true,
        "tags": [ "LegacyTeams" ],
        "parameters": [
          {
            "in": "query",
            "name": "order_by",
            "schema": {
              "type": "string",
              "enum": [ "id", "name", "manager_id", "active_flag" ],
              "default": "id"
            },
            "description": "The field name to sort returned teams by"
          },
          {
            "in": "query",
            "name": "skip_users",
            "schema": {
              "title": "numberBooleanDefault0",
              "type": "number",
              "default": 0,
              "enum": [ 0, 1 ]
            },
            "description": "When enabled, the teams will not include IDs of member users"
          }
        ],
        "responses": {
          "200": {
            "description": "The list of team objects",
            "content": {
              "application/json": {
                "schema": {
                  "title": "teams",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "title": "baseTeam",
                            "allOf": [
                              {
                                "title": "teamId",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "integer",
                                    "description": "The team ID"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "title": "updateTeamWithAdditionalProperties",
                                "allOf": [
                                  {
                                    "title": "updateTeamRequest",
                                    "allOf": [
                                      {
                                        "title": "addTeamRequest",
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "description": "The team name"
                                          },
                                          "description": {
                                            "type": "string",
                                            "description": "The team description"
                                          },
                                          "manager_id": {
                                            "type": "integer",
                                            "description": "The team manager ID"
                                          },
                                          "users": {
                                            "type": "array",
                                            "items": { "type": "integer" },
                                            "description": "The list of user IDs"
                                          }
                                        }
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "active_flag": {
                                            "allOf": [
                                              {
                                                "title": "numberBoolean",
                                                "type": "number",
                                                "enum": [ 0, 1 ]
                                              }
                                            ],
                                            "description": "Flag that indicates whether the team is active"
                                          },
                                          "deleted_flag": {
                                            "allOf": [
                                              {
                                                "title": "numberBoolean",
                                                "type": "number",
                                                "enum": [ 0, 1 ]
                                              }
                                            ],
                                            "description": "Flag that indicates whether the team is deleted"
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  {
                                    "type": "object",
                                    "title": "baseTeamAdditionalProperties",
                                    "properties": {
                                      "add_time": {
                                        "type": "string",
                                        "description": "The team creation time. Format: YYYY-MM-DD HH:MM:SS"
                                      },
                                      "created_by_user_id": {
                                        "type": "integer",
                                        "description": "The ID of the user who created the team"
                                      }
                                    }
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "success": true,
                  "data": [
                    {
                      "id": 1,
                      "name": "Closers",
                      "description": "Berlin office Sales Team",
                      "manager_id": 4,
                      "users": [ 2, 3, 4, 5 ],
                      "active_flag": 1,
                      "deleted_flag": 0,
                      "add_time": "2019-10-07 09:06:09",
                      "created_by_user_id": 2
                    },
                    {
                      "id": 2,
                      "name": "Coffee",
                      "description": "London office Sales Team",
                      "manager_id": 7,
                      "users": [ 5, 8 ],
                      "active_flag": 0,
                      "deleted_flag": 0,
                      "add_time": "2018-04-11 12:54:43",
                      "created_by_user_id": 7
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add a new team",
        "description": "Adds a new team to the company and returns the created object.",
        "operationId": "addTeam",
        "deprecated": true,
        "tags": [ "LegacyTeams" ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "addTeamRequest",
                "type": "object",
                "properties": {
                  "name": { "type": "string", "description": "The team name" },
                  "description": {
                    "type": "string",
                    "description": "The team description"
                  },
                  "manager_id": {
                    "type": "integer",
                    "description": "The team manager ID"
                  },
                  "users": {
                    "type": "array",
                    "items": { "type": "integer" },
                    "description": "The list of user IDs"
                  }
                },
                "required": [ "name", "manager_id" ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The team data",
            "content": {
              "application/json": {
                "schema": {
                  "title": "team",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "title": "baseTeam",
                          "allOf": [
                            {
                              "title": "teamId",
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "description": "The team ID"
                                }
                              }
                            },
                            {
                              "type": "object",
                              "title": "updateTeamWithAdditionalProperties",
                              "allOf": [
                                {
                                  "title": "updateTeamRequest",
                                  "allOf": [
                                    {
                                      "title": "addTeamRequest",
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "The team name"
                                        },
                                        "description": {
                                          "type": "string",
                                          "description": "The team description"
                                        },
                                        "manager_id": {
                                          "type": "integer",
                                          "description": "The team manager ID"
                                        },
                                        "users": {
                                          "type": "array",
                                          "items": { "type": "integer" },
                                          "description": "The list of user IDs"
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "active_flag": {
                                          "allOf": [
                                            {
                                              "title": "numberBoolean",
                                              "type": "number",
                                              "enum": [ 0, 1 ]
                                            }
                                          ],
                                          "description": "Flag that indicates whether the team is active"
                                        },
                                        "deleted_flag": {
                                          "allOf": [
                                            {
                                              "title": "numberBoolean",
                                              "type": "number",
                                              "enum": [ 0, 1 ]
                                            }
                                          ],
                                          "description": "Flag that indicates whether the team is deleted"
                                        }
                                      }
                                    }
                                  ]
                                },
                                {
                                  "type": "object",
                                  "title": "baseTeamAdditionalProperties",
                                  "properties": {
                                    "add_time": {
                                      "type": "string",
                                      "description": "The team creation time. Format: YYYY-MM-DD HH:MM:SS"
                                    },
                                    "created_by_user_id": {
                                      "type": "integer",
                                      "description": "The ID of the user who created the team"
                                    }
                                  }
                                }
                              ]
                            }
                          ]
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "success": true,
                  "data": {
                    "id": 1,
                    "name": "Closers",
                    "description": "Berlin office Sales Team",
                    "manager_id": 4,
                    "users": [ 2, 3, 5 ],
                    "active_flag": 1,
                    "deleted_flag": 0,
                    "add_time": "2019-10-07 09:06:09",
                    "created_by_user_id": 2
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "failResponse",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "If the response is successful or not"
                    },
                    "error": {
                      "type": "string",
                      "description": "The error message"
                    }
                  }
                },
                "example": {
                  "success": false,
                  "error": "You do not have permissions to do this."
                }
              }
            }
          }
        }
      }
    },
    "/legacyTeams/{id}": {
      "get": {
        "summary": "Get a single team",
        "description": "Returns data about a specific team.",
        "operationId": "getTeam",
        "deprecated": true,
        "tags": [ "LegacyTeams" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the team",
            "required": true,
            "schema": { "type": "integer" }
          },
          {
            "in": "query",
            "name": "skip_users",
            "schema": {
              "title": "numberBooleanDefault0",
              "type": "number",
              "default": 0,
              "enum": [ 0, 1 ]
            },
            "description": "When enabled, the teams will not include IDs of member users"
          }
        ],
        "responses": {
          "200": {
            "description": "The team data",
            "content": {
              "application/json": {
                "schema": {
                  "title": "team",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "title": "baseTeam",
                          "allOf": [
                            {
                              "title": "teamId",
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "description": "The team ID"
                                }
                              }
                            },
                            {
                              "type": "object",
                              "title": "updateTeamWithAdditionalProperties",
                              "allOf": [
                                {
                                  "title": "updateTeamRequest",
                                  "allOf": [
                                    {
                                      "title": "addTeamRequest",
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "The team name"
                                        },
                                        "description": {
                                          "type": "string",
                                          "description": "The team description"
                                        },
                                        "manager_id": {
                                          "type": "integer",
                                          "description": "The team manager ID"
                                        },
                                        "users": {
                                          "type": "array",
                                          "items": { "type": "integer" },
                                          "description": "The list of user IDs"
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "active_flag": {
                                          "allOf": [
                                            {
                                              "title": "numberBoolean",
                                              "type": "number",
                                              "enum": [ 0, 1 ]
                                            }
                                          ],
                                          "description": "Flag that indicates whether the team is active"
                                        },
                                        "deleted_flag": {
                                          "allOf": [
                                            {
                                              "title": "numberBoolean",
                                              "type": "number",
                                              "enum": [ 0, 1 ]
                                            }
                                          ],
                                          "description": "Flag that indicates whether the team is deleted"
                                        }
                                      }
                                    }
                                  ]
                                },
                                {
                                  "type": "object",
                                  "title": "baseTeamAdditionalProperties",
                                  "properties": {
                                    "add_time": {
                                      "type": "string",
                                      "description": "The team creation time. Format: YYYY-MM-DD HH:MM:SS"
                                    },
                                    "created_by_user_id": {
                                      "type": "integer",
                                      "description": "The ID of the user who created the team"
                                    }
                                  }
                                }
                              ]
                            }
                          ]
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "success": true,
                  "data": {
                    "id": 1,
                    "name": "Closers",
                    "description": "Berlin office Sales Team",
                    "manager_id": 4,
                    "users": [ 2, 3, 5 ],
                    "active_flag": 1,
                    "deleted_flag": 0,
                    "add_time": "2019-10-07 09:06:09",
                    "created_by_user_id": 2
                  }
                }
              }
            }
          },
          "404": {
            "description": "Team with specified ID does not exist or is inaccessible",
            "content": {
              "application/json": {
                "schema": {
                  "title": "failResponse",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "If the response is successful or not"
                    },
                    "error": {
                      "type": "string",
                      "description": "The error message"
                    }
                  }
                },
                "example": {
                  "success": false,
                  "error": "Team 1 does not exist"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update a team",
        "description": "Updates an existing team and returns the updated object.",
        "operationId": "updateTeam",
        "deprecated": true,
        "tags": [ "LegacyTeams" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the team",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "updateTeamRequest",
                "allOf": [
                  {
                    "title": "addTeamRequest",
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The team name"
                      },
                      "description": {
                        "type": "string",
                        "description": "The team description"
                      },
                      "manager_id": {
                        "type": "integer",
                        "description": "The team manager ID"
                      },
                      "users": {
                        "type": "array",
                        "items": { "type": "integer" },
                        "description": "The list of user IDs"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "active_flag": {
                        "allOf": [
                          {
                            "title": "numberBoolean",
                            "type": "number",
                            "enum": [ 0, 1 ]
                          }
                        ],
                        "description": "Flag that indicates whether the team is active"
                      },
                      "deleted_flag": {
                        "allOf": [
                          {
                            "title": "numberBoolean",
                            "type": "number",
                            "enum": [ 0, 1 ]
                          }
                        ],
                        "description": "Flag that indicates whether the team is deleted"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The team data",
            "content": {
              "application/json": {
                "schema": {
                  "title": "team",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "title": "baseTeam",
                          "allOf": [
                            {
                              "title": "teamId",
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "description": "The team ID"
                                }
                              }
                            },
                            {
                              "type": "object",
                              "title": "updateTeamWithAdditionalProperties",
                              "allOf": [
                                {
                                  "title": "updateTeamRequest",
                                  "allOf": [
                                    {
                                      "title": "addTeamRequest",
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "The team name"
                                        },
                                        "description": {
                                          "type": "string",
                                          "description": "The team description"
                                        },
                                        "manager_id": {
                                          "type": "integer",
                                          "description": "The team manager ID"
                                        },
                                        "users": {
                                          "type": "array",
                                          "items": { "type": "integer" },
                                          "description": "The list of user IDs"
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "active_flag": {
                                          "allOf": [
                                            {
                                              "title": "numberBoolean",
                                              "type": "number",
                                              "enum": [ 0, 1 ]
                                            }
                                          ],
                                          "description": "Flag that indicates whether the team is active"
                                        },
                                        "deleted_flag": {
                                          "allOf": [
                                            {
                                              "title": "numberBoolean",
                                              "type": "number",
                                              "enum": [ 0, 1 ]
                                            }
                                          ],
                                          "description": "Flag that indicates whether the team is deleted"
                                        }
                                      }
                                    }
                                  ]
                                },
                                {
                                  "type": "object",
                                  "title": "baseTeamAdditionalProperties",
                                  "properties": {
                                    "add_time": {
                                      "type": "string",
                                      "description": "The team creation time. Format: YYYY-MM-DD HH:MM:SS"
                                    },
                                    "created_by_user_id": {
                                      "type": "integer",
                                      "description": "The ID of the user who created the team"
                                    }
                                  }
                                }
                              ]
                            }
                          ]
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "success": true,
                  "data": {
                    "id": 1,
                    "name": "Closers",
                    "description": "Berlin office Sales Team",
                    "manager_id": 4,
                    "users": [ 2, 3, 5 ],
                    "active_flag": 1,
                    "deleted_flag": 0,
                    "add_time": "2019-10-07 09:06:09",
                    "created_by_user_id": 2
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "failResponse",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "If the response is successful or not"
                    },
                    "error": {
                      "type": "string",
                      "description": "The error message"
                    }
                  }
                },
                "example": {
                  "success": false,
                  "error": "You do not have permissions to do this."
                }
              }
            }
          },
          "404": {
            "description": "Team with specified ID does not exist or is inaccessible",
            "content": {
              "application/json": {
                "schema": {
                  "title": "failResponse",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "If the response is successful or not"
                    },
                    "error": {
                      "type": "string",
                      "description": "The error message"
                    }
                  }
                },
                "example": {
                  "success": false,
                  "error": "Team 1 does not exist"
                }
              }
            }
          }
        }
      }
    },
    "/legacyTeams/{id}/users": {
      "get": {
        "summary": "Get all users in a team",
        "description": "Returns a list of all user IDs within a team.",
        "operationId": "getTeamUsers",
        "deprecated": true,
        "tags": [ "LegacyTeams" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the team",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of user IDs within a team",
            "content": {
              "application/json": {
                "schema": {
                  "title": "userIds",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": { "type": "integer" },
                          "description": "The list of user IDs"
                        }
                      }
                    }
                  ]
                },
                "example": { "success": true, "data": [ 2, 3, 4, 5 ] }
              }
            }
          },
          "404": {
            "description": "Team with specified ID does not exist or is inaccessible",
            "content": {
              "application/json": {
                "schema": {
                  "title": "failResponse",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "If the response is successful or not"
                    },
                    "error": {
                      "type": "string",
                      "description": "The error message"
                    }
                  }
                },
                "example": {
                  "success": false,
                  "error": "Team 1 does not exist"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add users to a team",
        "description": "Adds users to an existing team.",
        "operationId": "addTeamUser",
        "deprecated": true,
        "tags": [ "LegacyTeams" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the team",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "addTeamUserRequest",
                "type": "object",
                "required": [ "users" ],
                "properties": {
                  "users": {
                    "type": "array",
                    "items": { "type": "integer" },
                    "description": "The list of user IDs"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "A list of user IDs within a team",
            "content": {
              "application/json": {
                "schema": {
                  "title": "userIds",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": { "type": "integer" },
                          "description": "The list of user IDs"
                        }
                      }
                    }
                  ]
                },
                "example": { "success": true, "data": [ 2, 3, 4, 5 ] }
              }
            }
          },
          "403": {
            "description": "Forbidden response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "failResponse",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "If the response is successful or not"
                    },
                    "error": {
                      "type": "string",
                      "description": "The error message"
                    }
                  }
                },
                "example": {
                  "success": false,
                  "error": "You do not have permissions to do this."
                }
              }
            }
          },
          "404": {
            "description": "Team with specified ID does not exist or is inaccessible",
            "content": {
              "application/json": {
                "schema": {
                  "title": "failResponse",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "If the response is successful or not"
                    },
                    "error": {
                      "type": "string",
                      "description": "The error message"
                    }
                  }
                },
                "example": {
                  "success": false,
                  "error": "Team 1 does not exist"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete users from a team",
        "description": "Deletes users from an existing team.",
        "operationId": "deleteTeamUser",
        "deprecated": true,
        "tags": [ "LegacyTeams" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the team",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "deleteTeamUserRequest",
                "type": "object",
                "required": [ "users" ],
                "properties": {
                  "users": {
                    "type": "array",
                    "items": { "type": "integer" },
                    "description": "The list of user IDs"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "A list of user IDs within a team",
            "content": {
              "application/json": {
                "schema": {
                  "title": "userIds",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": { "type": "integer" },
                          "description": "The list of user IDs"
                        }
                      }
                    }
                  ]
                },
                "example": { "success": true, "data": [ 2, 3, 4, 5 ] }
              }
            }
          },
          "403": {
            "description": "Forbidden response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "failResponse",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "If the response is successful or not"
                    },
                    "error": {
                      "type": "string",
                      "description": "The error message"
                    }
                  }
                },
                "example": {
                  "success": false,
                  "error": "You do not have permissions to do this."
                }
              }
            }
          },
          "404": {
            "description": "Team with specified ID does not exist or is inaccessible",
            "content": {
              "application/json": {
                "schema": {
                  "title": "failResponse",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "If the response is successful or not"
                    },
                    "error": {
                      "type": "string",
                      "description": "The error message"
                    }
                  }
                },
                "example": {
                  "success": false,
                  "error": "Team 1 does not exist"
                }
              }
            }
          }
        }
      }
    },
    "/legacyTeams/user/{id}": {
      "get": {
        "summary": "Get all teams of a user",
        "description": "Returns data about all teams which have the specified user as a member.",
        "operationId": "getUserTeams",
        "deprecated": true,
        "tags": [ "LegacyTeams" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the user",
            "required": true,
            "schema": { "type": "integer" }
          },
          {
            "in": "query",
            "name": "order_by",
            "schema": {
              "type": "string",
              "enum": [ "id", "name", "manager_id", "active_flag" ],
              "default": "id"
            },
            "description": "The field name to sort returned teams by"
          },
          {
            "in": "query",
            "name": "skip_users",
            "schema": {
              "title": "numberBooleanDefault0",
              "type": "number",
              "default": 0,
              "enum": [ 0, 1 ]
            },
            "description": "When enabled, the teams will not include IDs of member users"
          }
        ],
        "responses": {
          "200": {
            "description": "The list of team objects",
            "content": {
              "application/json": {
                "schema": {
                  "title": "teams",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "title": "baseTeam",
                            "allOf": [
                              {
                                "title": "teamId",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "integer",
                                    "description": "The team ID"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "title": "updateTeamWithAdditionalProperties",
                                "allOf": [
                                  {
                                    "title": "updateTeamRequest",
                                    "allOf": [
                                      {
                                        "title": "addTeamRequest",
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "description": "The team name"
                                          },
                                          "description": {
                                            "type": "string",
                                            "description": "The team description"
                                          },
                                          "manager_id": {
                                            "type": "integer",
                                            "description": "The team manager ID"
                                          },
                                          "users": {
                                            "type": "array",
                                            "items": { "type": "integer" },
                                            "description": "The list of user IDs"
                                          }
                                        }
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "active_flag": {
                                            "allOf": [
                                              {
                                                "title": "numberBoolean",
                                                "type": "number",
                                                "enum": [ 0, 1 ]
                                              }
                                            ],
                                            "description": "Flag that indicates whether the team is active"
                                          },
                                          "deleted_flag": {
                                            "allOf": [
                                              {
                                                "title": "numberBoolean",
                                                "type": "number",
                                                "enum": [ 0, 1 ]
                                              }
                                            ],
                                            "description": "Flag that indicates whether the team is deleted"
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  {
                                    "type": "object",
                                    "title": "baseTeamAdditionalProperties",
                                    "properties": {
                                      "add_time": {
                                        "type": "string",
                                        "description": "The team creation time. Format: YYYY-MM-DD HH:MM:SS"
                                      },
                                      "created_by_user_id": {
                                        "type": "integer",
                                        "description": "The ID of the user who created the team"
                                      }
                                    }
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "success": true,
                  "data": [
                    {
                      "id": 1,
                      "name": "Closers",
                      "description": "Berlin office Sales Team",
                      "manager_id": 4,
                      "users": [ 2, 3, 4, 5 ],
                      "active_flag": 1,
                      "deleted_flag": 0,
                      "add_time": "2019-10-07 09:06:09",
                      "created_by_user_id": 2
                    },
                    {
                      "id": 2,
                      "name": "Coffee",
                      "description": "London office Sales Team",
                      "manager_id": 7,
                      "users": [ 5, 8 ],
                      "active_flag": 0,
                      "deleted_flag": 0,
                      "add_time": "2018-04-11 12:54:43",
                      "created_by_user_id": 7
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/mailbox/mailMessages/{id}": {
      "get": {
        "summary": "Get one mail message",
        "description": "Returns data about a specific mail message.",
        "operationId": "getMailMessage",
        "tags": [ "Mailbox" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "type": "integer" },
            "description": "The ID of the mail message to fetch"
          },
          {
            "in": "query",
            "name": "include_body",
            "schema": {
              "title": "numberBooleanDefault0",
              "type": "number",
              "default": 0,
              "enum": [ 0, 1 ]
            },
            "description": "Whether to include the full message body or not. `0` = Don't include, `1` = Include"
          }
        ],
        "responses": {
          "200": {
            "description": "The mail messages that are being synced with Pipedrive",
            "content": {
              "application/json": {
                "schema": {
                  "title": "mailMessage",
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        },
                        "statusCode": {
                          "description": "The email service specific status code and it is returned through the response body.",
                          "type": "integer"
                        },
                        "statusText": {
                          "description": "The status text of the response.",
                          "type": "string"
                        },
                        "service": {
                          "description": "The service name of the response.",
                          "type": "string"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "ID of the mail message.",
                              "type": "integer"
                            },
                            "from": {
                              "type": "array",
                              "description": "The array of mail message sender (object)",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "description": "ID of the mail participant",
                                    "type": "integer"
                                  },
                                  "email_address": {
                                    "description": "Mail address of the mail participant",
                                    "type": "string"
                                  },
                                  "name": {
                                    "description": "Name of the mail participant",
                                    "type": "string"
                                  },
                                  "linked_person_id": {
                                    "description": "ID of the linked person to the mail message",
                                    "type": "integer"
                                  },
                                  "linked_person_name": {
                                    "description": "Name of the linked person to the mail message",
                                    "type": "string"
                                  },
                                  "mail_message_party_id": {
                                    "description": "ID of the mail message participant",
                                    "type": "integer"
                                  }
                                }
                              }
                            },
                            "to": {
                              "type": "array",
                              "description": "The array of mail message receiver (object)",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "description": "ID of the mail participant",
                                    "type": "integer"
                                  },
                                  "email_address": {
                                    "description": "Mail address of the mail participant",
                                    "type": "string"
                                  },
                                  "name": {
                                    "description": "Name of the mail participant",
                                    "type": "string"
                                  },
                                  "linked_person_id": {
                                    "description": "ID of the linked person to the mail message",
                                    "type": "integer"
                                  },
                                  "linked_person_name": {
                                    "description": "Name of the linked person to the mail message",
                                    "type": "string"
                                  },
                                  "mail_message_party_id": {
                                    "description": "ID of the mail message participant",
                                    "type": "integer"
                                  }
                                }
                              }
                            },
                            "cc": {
                              "type": "array",
                              "description": "The array of mail message copies (object)",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "description": "ID of the mail participant",
                                    "type": "integer"
                                  },
                                  "email_address": {
                                    "description": "Mail address of the mail participant",
                                    "type": "string"
                                  },
                                  "name": {
                                    "description": "Name of the mail participant",
                                    "type": "string"
                                  },
                                  "linked_person_id": {
                                    "description": "ID of the linked person to the mail message",
                                    "type": "integer"
                                  },
                                  "linked_person_name": {
                                    "description": "Name of the linked person to the mail message",
                                    "type": "string"
                                  },
                                  "mail_message_party_id": {
                                    "description": "ID of the mail message participant",
                                    "type": "integer"
                                  }
                                }
                              }
                            },
                            "bcc": {
                              "type": "array",
                              "description": "The array of mail message blind copies (object)",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "description": "ID of the mail participant",
                                    "type": "integer"
                                  },
                                  "email_address": {
                                    "description": "Mail address of the mail participant",
                                    "type": "string"
                                  },
                                  "name": {
                                    "description": "Name of the mail participant",
                                    "type": "string"
                                  },
                                  "linked_person_id": {
                                    "description": "ID of the linked person to the mail message",
                                    "type": "integer"
                                  },
                                  "linked_person_name": {
                                    "description": "Name of the linked person to the mail message",
                                    "type": "string"
                                  },
                                  "mail_message_party_id": {
                                    "description": "ID of the mail message participant",
                                    "type": "integer"
                                  }
                                }
                              }
                            },
                            "body_url": {
                              "type": "string",
                              "description": "The mail message body URL"
                            },
                            "account_id": {
                              "type": "string",
                              "description": "The connection account ID"
                            },
                            "user_id": {
                              "type": "integer",
                              "description": "ID of the user whom mail message will be assigned to"
                            },
                            "mail_thread_id": {
                              "type": "integer",
                              "description": "ID of the mail message thread"
                            },
                            "subject": {
                              "type": "string",
                              "description": "The subject of mail message"
                            },
                            "snippet": {
                              "type": "string",
                              "description": "The snippet of mail message. Snippet length is up to 225 characters."
                            },
                            "mail_tracking_status": {
                              "type": "string",
                              "nullable": true,
                              "description": "The status of tracking mail message. Value is `null` if tracking is not enabled.",
                              "enum": [ "opened", "not opened" ]
                            },
                            "mail_link_tracking_enabled_flag": {
                              "description": "Whether the link tracking in mail message body is enabled.",
                              "allOf": [
                                {
                                  "title": "numberBooleanDefault0",
                                  "type": "number",
                                  "default": 0,
                                  "enum": [ 0, 1 ]
                                }
                              ]
                            },
                            "read_flag": {
                              "description": "Whether the mail message is read or not by the user",
                              "allOf": [
                                {
                                  "title": "numberBooleanDefault0",
                                  "type": "number",
                                  "default": 0,
                                  "enum": [ 0, 1 ]
                                }
                              ]
                            },
                            "draft": {
                              "type": "string",
                              "description": "If the mail message has a draft status then the value is the mail message object as JSON formatted string, otherwise `null`."
                            },
                            "draft_flag": {
                              "description": "Whether the mail message is a draft or not",
                              "allOf": [
                                {
                                  "title": "numberBooleanDefault0",
                                  "type": "number",
                                  "default": 0,
                                  "enum": [ 0, 1 ]
                                }
                              ]
                            },
                            "synced_flag": {
                              "description": "Whether the mail message is synced with the provider or not",
                              "allOf": [
                                {
                                  "title": "numberBooleanDefault0",
                                  "type": "number",
                                  "default": 0,
                                  "enum": [ 0, 1 ]
                                }
                              ]
                            },
                            "deleted_flag": {
                              "allOf": [
                                {
                                  "title": "numberBooleanDefault0",
                                  "type": "number",
                                  "default": 0,
                                  "enum": [ 0, 1 ]
                                }
                              ],
                              "description": "Whether the mail message is deleted or not"
                            },
                            "has_body_flag": {
                              "description": "Whether the mail message has a body or not",
                              "allOf": [
                                {
                                  "title": "numberBooleanDefault0",
                                  "type": "number",
                                  "default": 0,
                                  "enum": [ 0, 1 ]
                                }
                              ]
                            },
                            "sent_flag": {
                              "description": "Whether the mail message has been sent or not",
                              "allOf": [
                                {
                                  "title": "numberBooleanDefault0",
                                  "type": "number",
                                  "default": 0,
                                  "enum": [ 0, 1 ]
                                }
                              ]
                            },
                            "sent_from_pipedrive_flag": {
                              "description": "Whether the mail message has been sent from Pipedrive app or not",
                              "allOf": [
                                {
                                  "title": "numberBooleanDefault0",
                                  "type": "number",
                                  "default": 0,
                                  "enum": [ 0, 1 ]
                                }
                              ]
                            },
                            "smart_bcc_flag": {
                              "description": "Whether the mail message has been created by Smart Email BCC feature or not",
                              "allOf": [
                                {
                                  "title": "numberBooleanDefault0",
                                  "type": "number",
                                  "default": 0,
                                  "enum": [ 0, 1 ]
                                }
                              ]
                            },
                            "message_time": {
                              "type": "string",
                              "format": "date-time",
                              "description": "Creation or receival time of the mail message"
                            },
                            "add_time": {
                              "type": "string",
                              "format": "date-time",
                              "description": "The insertion into the database time of the mail message"
                            },
                            "update_time": {
                              "type": "string",
                              "format": "date-time",
                              "description": "The updating time in the database of the mail message"
                            },
                            "has_attachments_flag": {
                              "description": "Whether the mail message has an attachment or not",
                              "allOf": [
                                {
                                  "title": "numberBooleanDefault0",
                                  "type": "number",
                                  "default": 0,
                                  "enum": [ 0, 1 ]
                                }
                              ]
                            },
                            "has_inline_attachments_flag": {
                              "description": "Whether the mail message has an inline attachment or not",
                              "allOf": [
                                {
                                  "title": "numberBooleanDefault0",
                                  "type": "number",
                                  "default": 0,
                                  "enum": [ 0, 1 ]
                                }
                              ]
                            },
                            "has_real_attachments_flag": {
                              "description": "Whether the mail message has an attachment (which is not inline) or not",
                              "allOf": [
                                {
                                  "title": "numberBooleanDefault0",
                                  "type": "number",
                                  "default": 0,
                                  "enum": [ 0, 1 ]
                                }
                              ]
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "success": true,
                  "statusCode": 2000,
                  "statusText": "Success",
                  "service": "email-api",
                  "data": {
                    "id": 1,
                    "from": [
                      {
                        "id": 1,
                        "email_address": "mail@example.org",
                        "name": "Test",
                        "linked_person_id": 1,
                        "linked_person_name": "",
                        "mail_message_party_id": 1
                      }
                    ],
                    "to": [
                      {
                        "id": 1,
                        "email_address": "mail@example.org",
                        "name": "Test",
                        "linked_person_id": 1,
                        "linked_person_name": "",
                        "mail_message_party_id": 1
                      }
                    ],
                    "cc": [
                      {
                        "id": 1,
                        "email_address": "mail@example.org",
                        "name": "Test",
                        "linked_person_id": 1,
                        "linked_person_name": "",
                        "mail_message_party_id": 1
                      }
                    ],
                    "bcc": [
                      {
                        "id": 1,
                        "email_address": "mail@example.org",
                        "name": "Test",
                        "linked_person_id": 1,
                        "linked_person_name": "",
                        "mail_message_party_id": 1
                      }
                    ],
                    "body_url": "https://example.org",
                    "account_id": "test",
                    "user_id": 1,
                    "mail_thread_id": 1,
                    "subject": "test subject",
                    "snippet": "test subject",
                    "mail_tracking_status": "opened",
                    "mail_link_tracking_enabled_flag": 0,
                    "read_flag": 1,
                    "draft": "",
                    "draft_flag": 0,
                    "synced_flag": 1,
                    "deleted_flag": 0,
                    "has_body_flag": 1,
                    "sent_flag": 0,
                    "sent_from_pipedrive_flag": 0,
                    "smart_bcc_flag": 0,
                    "message_time": "2019-11-14T06:02:06.000Z",
                    "add_time": "2019-11-14T06:02:06.000Z",
                    "update_time": "2019-11-14T07:15:49.000Z",
                    "has_attachments_flag": 1,
                    "has_inline_attachments_flag": 0,
                    "has_real_attachments_flag": 1
                  }
                }
              }
            }
          }
        }
      }
    },
    "/mailbox/mailThreads": {
      "get": {
        "summary": "Get mail threads",
        "description": "Returns mail threads in a specified folder ordered by the most recent message within.",
        "operationId": "getMailThreads",
        "tags": [ "Mailbox" ],
        "parameters": [
          {
            "in": "query",
            "name": "folder",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [ "inbox", "drafts", "sent", "archive" ],
              "default": "inbox"
            },
            "description": "The type of folder to fetch"
          },
          {
            "in": "query",
            "name": "start",
            "description": "Pagination start",
            "schema": { "type": "integer", "default": 0 }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Items shown per page",
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "Get mail threads",
            "content": {
              "application/json": {
                "schema": {
                  "title": "getMailThreads",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "description": "The array of mail threads",
                          "items": {
                            "title": "baseMailThread",
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "integer",
                                    "description": "ID of the mail thread"
                                  },
                                  "account_id": {
                                    "type": "string",
                                    "description": "The connection account ID"
                                  },
                                  "user_id": {
                                    "type": "integer",
                                    "description": "ID of the user whom mail message will be assigned to"
                                  },
                                  "subject": {
                                    "type": "string",
                                    "description": "The subject"
                                  },
                                  "snippet": {
                                    "type": "string",
                                    "description": "A snippet"
                                  },
                                  "read_flag": {
                                    "description": "Whether the mail thread is read",
                                    "allOf": [
                                      {
                                        "title": "numberBooleanDefault0",
                                        "type": "number",
                                        "default": 0,
                                        "enum": [ 0, 1 ]
                                      }
                                    ]
                                  },
                                  "mail_tracking_status": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "Mail tracking status"
                                  },
                                  "has_attachments_flag": {
                                    "description": "Whether the mail thread has an attachment",
                                    "allOf": [
                                      {
                                        "title": "numberBooleanDefault0",
                                        "type": "number",
                                        "default": 0,
                                        "enum": [ 0, 1 ]
                                      }
                                    ]
                                  },
                                  "has_inline_attachments_flag": {
                                    "description": "Whether the mail thread has inline attachments",
                                    "allOf": [
                                      {
                                        "title": "numberBooleanDefault0",
                                        "type": "number",
                                        "default": 0,
                                        "enum": [ 0, 1 ]
                                      }
                                    ]
                                  },
                                  "has_real_attachments_flag": {
                                    "description": "Whether the mail thread has real attachments (which are not inline)",
                                    "allOf": [
                                      {
                                        "title": "numberBooleanDefault0",
                                        "type": "number",
                                        "default": 0,
                                        "enum": [ 0, 1 ]
                                      }
                                    ]
                                  },
                                  "deleted_flag": {
                                    "allOf": [
                                      {
                                        "title": "numberBooleanDefault0",
                                        "type": "number",
                                        "default": 0,
                                        "enum": [ 0, 1 ]
                                      }
                                    ],
                                    "description": "Whether the mail thread is deleted"
                                  },
                                  "synced_flag": {
                                    "description": "Whether the mail thread is synced",
                                    "allOf": [
                                      {
                                        "title": "numberBooleanDefault0",
                                        "type": "number",
                                        "default": 0,
                                        "enum": [ 0, 1 ]
                                      }
                                    ]
                                  },
                                  "smart_bcc_flag": {
                                    "description": "Whether one of the parties of the mail thread is Bcc",
                                    "allOf": [
                                      {
                                        "title": "numberBooleanDefault0",
                                        "type": "number",
                                        "default": 0,
                                        "enum": [ 0, 1 ]
                                      }
                                    ]
                                  },
                                  "mail_link_tracking_enabled_flag": {
                                    "description": "Whether the link tracking of the mail thread is enabled",
                                    "allOf": [
                                      {
                                        "title": "numberBooleanDefault0",
                                        "type": "number",
                                        "default": 0,
                                        "enum": [ 0, 1 ]
                                      }
                                    ]
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "parties": {
                                    "type": "object",
                                    "description": "Parties of the mail thread",
                                    "properties": {
                                      "to": {
                                        "type": "array",
                                        "description": "Recipients of the mail thread",
                                        "items": {
                                          "type": "object",
                                          "description": "Member of a thread",
                                          "properties": {
                                            "id": {
                                              "type": "integer",
                                              "description": "ID of the mail thread participant"
                                            },
                                            "name": {
                                              "type": "string",
                                              "description": "Name of the mail thread participant"
                                            },
                                            "latest_sent": {
                                              "type": "boolean",
                                              "description": "Whether the mail thread participant was last to send an email"
                                            },
                                            "email_address": {
                                              "type": "string",
                                              "description": "Email address of the mail thread participant"
                                            },
                                            "message_time": {
                                              "type": "number",
                                              "description": "Message time"
                                            },
                                            "linked_person_id": {
                                              "type": "integer",
                                              "description": "ID of the linked person"
                                            },
                                            "linked_person_name": {
                                              "type": "string",
                                              "description": "Email of the linked person"
                                            },
                                            "mail_message_party_id": {
                                              "type": "integer",
                                              "description": "ID of the mail message party"
                                            },
                                            "linked_organization_id": {
                                              "type": "integer",
                                              "nullable": true,
                                              "description": "Linked Organization ID"
                                            }
                                          }
                                        }
                                      },
                                      "from": {
                                        "type": "array",
                                        "description": "Senders of the mail thread",
                                        "items": {
                                          "type": "object",
                                          "description": "Member of a thread",
                                          "properties": {
                                            "id": {
                                              "type": "integer",
                                              "description": "ID of the mail thread participant"
                                            },
                                            "name": {
                                              "type": "string",
                                              "description": "Name of the mail thread participant"
                                            },
                                            "latest_sent": {
                                              "type": "boolean",
                                              "description": "Whether the mail thread participant was last to send an email"
                                            },
                                            "email_address": {
                                              "type": "string",
                                              "description": "Email address of the mail thread participant"
                                            },
                                            "message_time": {
                                              "type": "number",
                                              "description": "Message time"
                                            },
                                            "linked_person_id": {
                                              "type": "integer",
                                              "description": "ID of the linked person"
                                            },
                                            "linked_person_name": {
                                              "type": "string",
                                              "description": "Email of the linked person"
                                            },
                                            "mail_message_party_id": {
                                              "type": "integer",
                                              "description": "ID of the mail message party"
                                            },
                                            "linked_organization_id": {
                                              "type": "integer",
                                              "nullable": true,
                                              "description": "Linked Organization ID"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "drafts_parties": {
                                    "type": "array",
                                    "description": "Parties of the drafted mail thread",
                                    "items": { "type": "object" }
                                  },
                                  "folders": {
                                    "type": "array",
                                    "description": "Folders in which messages from thread are being stored",
                                    "items": { "type": "string" }
                                  },
                                  "version": {
                                    "type": "number",
                                    "description": "Version"
                                  },
                                  "snippet_draft": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "A snippet from a draft"
                                  },
                                  "snippet_sent": {
                                    "type": "string",
                                    "description": "A snippet from a message sent"
                                  },
                                  "message_count": {
                                    "type": "integer",
                                    "description": "An amount of messages"
                                  },
                                  "has_draft_flag": {
                                    "type": "number",
                                    "description": "Whether the mail thread has any drafts",
                                    "allOf": [
                                      {
                                        "title": "numberBooleanDefault0",
                                        "type": "number",
                                        "default": 0,
                                        "enum": [ 0, 1 ]
                                      }
                                    ]
                                  },
                                  "has_sent_flag": {
                                    "type": "number",
                                    "description": "Whether the mail thread has messages sent",
                                    "allOf": [
                                      {
                                        "title": "numberBooleanDefault0",
                                        "type": "number",
                                        "default": 0,
                                        "enum": [ 0, 1 ]
                                      }
                                    ]
                                  },
                                  "archived_flag": {
                                    "allOf": [
                                      {
                                        "title": "numberBooleanDefault0",
                                        "type": "number",
                                        "default": 0,
                                        "enum": [ 0, 1 ]
                                      }
                                    ],
                                    "description": "Whether the mail thread is archived"
                                  },
                                  "shared_flag": {
                                    "description": "Whether the mail thread is shared",
                                    "allOf": [
                                      {
                                        "title": "numberBooleanDefault0",
                                        "type": "number",
                                        "default": 0,
                                        "enum": [ 0, 1 ]
                                      }
                                    ]
                                  },
                                  "external_deleted_flag": {
                                    "description": "Whether the mail thread has been deleted externally",
                                    "allOf": [
                                      {
                                        "title": "numberBooleanDefault0",
                                        "type": "number",
                                        "default": 0,
                                        "enum": [ 0, 1 ]
                                      }
                                    ]
                                  },
                                  "first_message_to_me_flag": {
                                    "description": "Whether the mail thread was initialized by others",
                                    "allOf": [
                                      {
                                        "title": "numberBooleanDefault0",
                                        "type": "number",
                                        "default": 0,
                                        "enum": [ 0, 1 ]
                                      }
                                    ]
                                  },
                                  "last_message_timestamp": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "Last message timestamp"
                                  },
                                  "first_message_timestamp": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "The time when the mail thread has had the first message received or created"
                                  },
                                  "last_message_sent_timestamp": {
                                    "type": "string",
                                    "format": "date-time",
                                    "nullable": true,
                                    "description": "The last time when the mail thread has had a message sent"
                                  },
                                  "last_message_received_timestamp": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "The last time when the mail thread has had a message received"
                                  },
                                  "add_time": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "The time when the mail thread was inserted to database"
                                  },
                                  "update_time": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "The time when the mail thread was updated in database received"
                                  },
                                  "deal_id": {
                                    "type": "integer",
                                    "nullable": true,
                                    "description": "The ID of the deal"
                                  },
                                  "deal_status": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "Status of the deal"
                                  },
                                  "lead_id": {
                                    "type": "string",
                                    "format": "uuid",
                                    "nullable": true,
                                    "description": "The ID of the lead"
                                  },
                                  "all_messages_sent_flag": {
                                    "type": "number",
                                    "description": "Whether all the mail thread messages have been sent",
                                    "allOf": [
                                      {
                                        "title": "numberBooleanDefault0",
                                        "type": "number",
                                        "default": 0,
                                        "enum": [ 0, 1 ]
                                      }
                                    ]
                                  }
                                }
                              }
                            ]
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "success": true,
                  "data": [
                    {
                      "id": 1,
                      "parties": {
                        "to": [
                          {
                            "id": 2,
                            "name": "",
                            "latest_sent": false,
                            "email_address": "example@test.com",
                            "message_time": 1574677850000,
                            "linked_person_id": 3,
                            "linked_person_name": "Tester",
                            "linked_organization_id": null,
                            "mail_message_party_id": 5318
                          }
                        ],
                        "from": [
                          {
                            "id": 3,
                            "name": "",
                            "latest_sent": false,
                            "email_address": "example@test.com",
                            "message_time": 1574677850000,
                            "linked_person_id": 2,
                            "linked_person_name": "Tester",
                            "linked_organization_id": null,
                            "mail_message_party_id": 5318
                          }
                        ]
                      },
                      "drafts_parties": [ ],
                      "folders": [ "inbox" ],
                      "account_id": "123412jhfsaa221",
                      "user_id": 232,
                      "version": 9,
                      "subject": "Example",
                      "snippet": "Example Snippet",
                      "snippet_draft": null,
                      "snippet_sent": "",
                      "has_attachments_flag": 1,
                      "has_inline_attachments_flag": 1,
                      "has_real_attachments_flag": 0,
                      "has_draft_flag": 0,
                      "has_sent_flag": 0,
                      "archived_flag": 0,
                      "deleted_flag": 0,
                      "shared_flag": 1,
                      "synced_flag": 1,
                      "external_deleted_flag": 0,
                      "smart_bcc_flag": 0,
                      "first_message_to_me_flag": 1,
                      "mail_link_tracking_enabled_flag": 0,
                      "last_message_timestamp": "2019-11-20T20:20:46.000Z",
                      "first_message_timestamp": "2019-11-20T17:40:46.000Z",
                      "last_message_sent_timestamp": null,
                      "last_message_received_timestamp": "2019-11-20T20:20:46.000Z",
                      "add_time": "2019-11-20T17:40:59.000Z",
                      "update_time": "2019-11-20T20:21:22.000Z",
                      "deal_id": null,
                      "deal_status": null,
                      "all_messages_sent_flag": 0
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/mailbox/mailThreads/{id}": {
      "delete": {
        "summary": "Delete mail thread",
        "description": "Marks a mail thread as deleted.",
        "operationId": "deleteMailThread",
        "tags": [ "Mailbox" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the mail thread",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "Marks mail thread as deleted",
            "content": {
              "application/json": {
                "schema": {
                  "title": "deleteMailThread",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "description": "The ID of the deleted mail thread"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "success": true,
                  "statusCode": 2000,
                  "statusText": "Success",
                  "service": "email-api",
                  "data": { "id": 1 }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get one mail thread",
        "description": "Returns a specific mail thread.",
        "operationId": "getMailThread",
        "tags": [ "Mailbox" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the mail thread",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "Get mail threads",
            "content": {
              "application/json": {
                "schema": {
                  "title": "getOneMailThread",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "description": "The mail thread object",
                          "allOf": [
                            {
                              "title": "baseMailThread",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "integer",
                                      "description": "ID of the mail thread"
                                    },
                                    "account_id": {
                                      "type": "string",
                                      "description": "The connection account ID"
                                    },
                                    "user_id": {
                                      "type": "integer",
                                      "description": "ID of the user whom mail message will be assigned to"
                                    },
                                    "subject": {
                                      "type": "string",
                                      "description": "The subject"
                                    },
                                    "snippet": {
                                      "type": "string",
                                      "description": "A snippet"
                                    },
                                    "read_flag": {
                                      "description": "Whether the mail thread is read",
                                      "allOf": [
                                        {
                                          "title": "numberBooleanDefault0",
                                          "type": "number",
                                          "default": 0,
                                          "enum": [ 0, 1 ]
                                        }
                                      ]
                                    },
                                    "mail_tracking_status": {
                                      "type": "string",
                                      "nullable": true,
                                      "description": "Mail tracking status"
                                    },
                                    "has_attachments_flag": {
                                      "description": "Whether the mail thread has an attachment",
                                      "allOf": [
                                        {
                                          "title": "numberBooleanDefault0",
                                          "type": "number",
                                          "default": 0,
                                          "enum": [ 0, 1 ]
                                        }
                                      ]
                                    },
                                    "has_inline_attachments_flag": {
                                      "description": "Whether the mail thread has inline attachments",
                                      "allOf": [
                                        {
                                          "title": "numberBooleanDefault0",
                                          "type": "number",
                                          "default": 0,
                                          "enum": [ 0, 1 ]
                                        }
                                      ]
                                    },
                                    "has_real_attachments_flag": {
                                      "description": "Whether the mail thread has real attachments (which are not inline)",
                                      "allOf": [
                                        {
                                          "title": "numberBooleanDefault0",
                                          "type": "number",
                                          "default": 0,
                                          "enum": [ 0, 1 ]
                                        }
                                      ]
                                    },
                                    "deleted_flag": {
                                      "allOf": [
                                        {
                                          "title": "numberBooleanDefault0",
                                          "type": "number",
                                          "default": 0,
                                          "enum": [ 0, 1 ]
                                        }
                                      ],
                                      "description": "Whether the mail thread is deleted"
                                    },
                                    "synced_flag": {
                                      "description": "Whether the mail thread is synced",
                                      "allOf": [
                                        {
                                          "title": "numberBooleanDefault0",
                                          "type": "number",
                                          "default": 0,
                                          "enum": [ 0, 1 ]
                                        }
                                      ]
                                    },
                                    "smart_bcc_flag": {
                                      "description": "Whether one of the parties of the mail thread is Bcc",
                                      "allOf": [
                                        {
                                          "title": "numberBooleanDefault0",
                                          "type": "number",
                                          "default": 0,
                                          "enum": [ 0, 1 ]
                                        }
                                      ]
                                    },
                                    "mail_link_tracking_enabled_flag": {
                                      "description": "Whether the link tracking of the mail thread is enabled",
                                      "allOf": [
                                        {
                                          "title": "numberBooleanDefault0",
                                          "type": "number",
                                          "default": 0,
                                          "enum": [ 0, 1 ]
                                        }
                                      ]
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "parties": {
                                      "type": "object",
                                      "description": "Parties of the mail thread",
                                      "properties": {
                                        "to": {
                                          "type": "array",
                                          "description": "Recipients of the mail thread",
                                          "items": {
                                            "type": "object",
                                            "description": "Member of a thread",
                                            "properties": {
                                              "id": {
                                                "type": "integer",
                                                "description": "ID of the mail thread participant"
                                              },
                                              "name": {
                                                "type": "string",
                                                "description": "Name of the mail thread participant"
                                              },
                                              "latest_sent": {
                                                "type": "boolean",
                                                "description": "Whether the mail thread participant was last to send an email"
                                              },
                                              "email_address": {
                                                "type": "string",
                                                "description": "Email address of the mail thread participant"
                                              },
                                              "message_time": {
                                                "type": "number",
                                                "description": "Message time"
                                              },
                                              "linked_person_id": {
                                                "type": "integer",
                                                "description": "ID of the linked person"
                                              },
                                              "linked_person_name": {
                                                "type": "string",
                                                "description": "Email of the linked person"
                                              },
                                              "mail_message_party_id": {
                                                "type": "integer",
                                                "description": "ID of the mail message party"
                                              },
                                              "linked_organization_id": {
                                                "type": "integer",
                                                "nullable": true,
                                                "description": "Linked Organization ID"
                                              }
                                            }
                                          }
                                        },
                                        "from": {
                                          "type": "array",
                                          "description": "Senders of the mail thread",
                                          "items": {
                                            "type": "object",
                                            "description": "Member of a thread",
                                            "properties": {
                                              "id": {
                                                "type": "integer",
                                                "description": "ID of the mail thread participant"
                                              },
                                              "name": {
                                                "type": "string",
                                                "description": "Name of the mail thread participant"
                                              },
                                              "latest_sent": {
                                                "type": "boolean",
                                                "description": "Whether the mail thread participant was last to send an email"
                                              },
                                              "email_address": {
                                                "type": "string",
                                                "description": "Email address of the mail thread participant"
                                              },
                                              "message_time": {
                                                "type": "number",
                                                "description": "Message time"
                                              },
                                              "linked_person_id": {
                                                "type": "integer",
                                                "description": "ID of the linked person"
                                              },
                                              "linked_person_name": {
                                                "type": "string",
                                                "description": "Email of the linked person"
                                              },
                                              "mail_message_party_id": {
                                                "type": "integer",
                                                "description": "ID of the mail message party"
                                              },
                                              "linked_organization_id": {
                                                "type": "integer",
                                                "nullable": true,
                                                "description": "Linked Organization ID"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "drafts_parties": {
                                      "type": "array",
                                      "description": "Parties of the drafted mail thread",
                                      "items": { "type": "object" }
                                    },
                                    "folders": {
                                      "type": "array",
                                      "description": "Folders in which messages from thread are being stored",
                                      "items": { "type": "string" }
                                    },
                                    "version": {
                                      "type": "number",
                                      "description": "Version"
                                    },
                                    "snippet_draft": {
                                      "type": "string",
                                      "nullable": true,
                                      "description": "A snippet from a draft"
                                    },
                                    "snippet_sent": {
                                      "type": "string",
                                      "description": "A snippet from a message sent"
                                    },
                                    "message_count": {
                                      "type": "integer",
                                      "description": "An amount of messages"
                                    },
                                    "has_draft_flag": {
                                      "type": "number",
                                      "description": "Whether the mail thread has any drafts",
                                      "allOf": [
                                        {
                                          "title": "numberBooleanDefault0",
                                          "type": "number",
                                          "default": 0,
                                          "enum": [ 0, 1 ]
                                        }
                                      ]
                                    },
                                    "has_sent_flag": {
                                      "type": "number",
                                      "description": "Whether the mail thread has messages sent",
                                      "allOf": [
                                        {
                                          "title": "numberBooleanDefault0",
                                          "type": "number",
                                          "default": 0,
                                          "enum": [ 0, 1 ]
                                        }
                                      ]
                                    },
                                    "archived_flag": {
                                      "allOf": [
                                        {
                                          "title": "numberBooleanDefault0",
                                          "type": "number",
                                          "default": 0,
                                          "enum": [ 0, 1 ]
                                        }
                                      ],
                                      "description": "Whether the mail thread is archived"
                                    },
                                    "shared_flag": {
                                      "description": "Whether the mail thread is shared",
                                      "allOf": [
                                        {
                                          "title": "numberBooleanDefault0",
                                          "type": "number",
                                          "default": 0,
                                          "enum": [ 0, 1 ]
                                        }
                                      ]
                                    },
                                    "external_deleted_flag": {
                                      "description": "Whether the mail thread has been deleted externally",
                                      "allOf": [
                                        {
                                          "title": "numberBooleanDefault0",
                                          "type": "number",
                                          "default": 0,
                                          "enum": [ 0, 1 ]
                                        }
                                      ]
                                    },
                                    "first_message_to_me_flag": {
                                      "description": "Whether the mail thread was initialized by others",
                                      "allOf": [
                                        {
                                          "title": "numberBooleanDefault0",
                                          "type": "number",
                                          "default": 0,
                                          "enum": [ 0, 1 ]
                                        }
                                      ]
                                    },
                                    "last_message_timestamp": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "Last message timestamp"
                                    },
                                    "first_message_timestamp": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The time when the mail thread has had the first message received or created"
                                    },
                                    "last_message_sent_timestamp": {
                                      "type": "string",
                                      "format": "date-time",
                                      "nullable": true,
                                      "description": "The last time when the mail thread has had a message sent"
                                    },
                                    "last_message_received_timestamp": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The last time when the mail thread has had a message received"
                                    },
                                    "add_time": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The time when the mail thread was inserted to database"
                                    },
                                    "update_time": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The time when the mail thread was updated in database received"
                                    },
                                    "deal_id": {
                                      "type": "integer",
                                      "nullable": true,
                                      "description": "The ID of the deal"
                                    },
                                    "deal_status": {
                                      "type": "string",
                                      "nullable": true,
                                      "description": "Status of the deal"
                                    },
                                    "lead_id": {
                                      "type": "string",
                                      "format": "uuid",
                                      "nullable": true,
                                      "description": "The ID of the lead"
                                    },
                                    "all_messages_sent_flag": {
                                      "type": "number",
                                      "description": "Whether all the mail thread messages have been sent",
                                      "allOf": [
                                        {
                                          "title": "numberBooleanDefault0",
                                          "type": "number",
                                          "default": 0,
                                          "enum": [ 0, 1 ]
                                        }
                                      ]
                                    }
                                  }
                                }
                              ]
                            }
                          ]
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "success": true,
                  "data": {
                    "id": 1,
                    "parties": {
                      "to": [
                        {
                          "id": 2,
                          "name": "",
                          "latest_sent": false,
                          "email_address": "example@test.com",
                          "message_time": 1574677850000,
                          "linked_person_id": 3,
                          "linked_person_name": "Tester",
                          "linked_organization_id": null,
                          "mail_message_party_id": 5318
                        }
                      ],
                      "from": [
                        {
                          "id": 3,
                          "name": "",
                          "latest_sent": false,
                          "email_address": "example@test.com",
                          "message_time": 1574677850000,
                          "linked_person_id": 2,
                          "linked_person_name": "Tester",
                          "linked_organization_id": null,
                          "mail_message_party_id": 5318
                        }
                      ]
                    },
                    "drafts_parties": [ ],
                    "folders": [ "inbox" ],
                    "account_id": "123412jhfsaa221",
                    "user_id": 232,
                    "version": 9,
                    "subject": "Example",
                    "snippet": "Example Snippet",
                    "snippet_draft": null,
                    "snippet_sent": "",
                    "has_attachments_flag": 1,
                    "has_inline_attachments_flag": 1,
                    "has_real_attachments_flag": 0,
                    "has_draft_flag": 0,
                    "has_sent_flag": 0,
                    "archived_flag": 0,
                    "deleted_flag": 0,
                    "shared_flag": 1,
                    "synced_flag": 1,
                    "external_deleted_flag": 0,
                    "smart_bcc_flag": 0,
                    "first_message_to_me_flag": 1,
                    "mail_link_tracking_enabled_flag": 0,
                    "last_message_timestamp": "2019-11-20T20:20:46.000Z",
                    "first_message_timestamp": "2019-11-20T17:40:46.000Z",
                    "last_message_sent_timestamp": null,
                    "last_message_received_timestamp": "2019-11-20T20:20:46.000Z",
                    "add_time": "2019-11-20T17:40:59.000Z",
                    "update_time": "2019-11-20T20:21:22.000Z",
                    "deal_id": null,
                    "deal_status": null,
                    "all_messages_sent_flag": 0
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update mail thread details",
        "description": "Updates the properties of a mail thread.",
        "operationId": "updateMailThreadDetails",
        "tags": [ "Mailbox" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the mail thread",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "title": "updateMailThreadDetailsRequest",
                "type": "object",
                "properties": {
                  "deal_id": {
                    "type": "integer",
                    "description": "The ID of the deal this thread is associated with"
                  },
                  "lead_id": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The ID of the lead this thread is associated with"
                  },
                  "shared_flag": {
                    "allOf": [
                      {
                        "title": "numberBoolean",
                        "type": "number",
                        "enum": [ 0, 1 ]
                      }
                    ],
                    "description": "Whether this thread is shared with other users in your company"
                  },
                  "read_flag": {
                    "allOf": [
                      {
                        "title": "numberBoolean",
                        "type": "number",
                        "enum": [ 0, 1 ]
                      }
                    ],
                    "description": "Whether this thread is read or unread"
                  },
                  "archived_flag": {
                    "allOf": [
                      {
                        "title": "numberBoolean",
                        "type": "number",
                        "enum": [ 0, 1 ]
                      }
                    ],
                    "description": "Whether this thread is archived or not. You can only archive threads that belong to Inbox folder. Archived threads will disappear from Inbox."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updates the properties of a mail thread",
            "content": {
              "application/json": {
                "schema": {
                  "title": "updateMailThreadDetails",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "title": "baseMailThread",
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "description": "ID of the mail thread"
                                },
                                "account_id": {
                                  "type": "string",
                                  "description": "The connection account ID"
                                },
                                "user_id": {
                                  "type": "integer",
                                  "description": "ID of the user whom mail message will be assigned to"
                                },
                                "subject": {
                                  "type": "string",
                                  "description": "The subject"
                                },
                                "snippet": {
                                  "type": "string",
                                  "description": "A snippet"
                                },
                                "read_flag": {
                                  "description": "Whether the mail thread is read",
                                  "allOf": [
                                    {
                                      "title": "numberBooleanDefault0",
                                      "type": "number",
                                      "default": 0,
                                      "enum": [ 0, 1 ]
                                    }
                                  ]
                                },
                                "mail_tracking_status": {
                                  "type": "string",
                                  "nullable": true,
                                  "description": "Mail tracking status"
                                },
                                "has_attachments_flag": {
                                  "description": "Whether the mail thread has an attachment",
                                  "allOf": [
                                    {
                                      "title": "numberBooleanDefault0",
                                      "type": "number",
                                      "default": 0,
                                      "enum": [ 0, 1 ]
                                    }
                                  ]
                                },
                                "has_inline_attachments_flag": {
                                  "description": "Whether the mail thread has inline attachments",
                                  "allOf": [
                                    {
                                      "title": "numberBooleanDefault0",
                                      "type": "number",
                                      "default": 0,
                                      "enum": [ 0, 1 ]
                                    }
                                  ]
                                },
                                "has_real_attachments_flag": {
                                  "description": "Whether the mail thread has real attachments (which are not inline)",
                                  "allOf": [
                                    {
                                      "title": "numberBooleanDefault0",
                                      "type": "number",
                                      "default": 0,
                                      "enum": [ 0, 1 ]
                                    }
                                  ]
                                },
                                "deleted_flag": {
                                  "allOf": [
                                    {
                                      "title": "numberBooleanDefault0",
                                      "type": "number",
                                      "default": 0,
                                      "enum": [ 0, 1 ]
                                    }
                                  ],
                                  "description": "Whether the mail thread is deleted"
                                },
                                "synced_flag": {
                                  "description": "Whether the mail thread is synced",
                                  "allOf": [
                                    {
                                      "title": "numberBooleanDefault0",
                                      "type": "number",
                                      "default": 0,
                                      "enum": [ 0, 1 ]
                                    }
                                  ]
                                },
                                "smart_bcc_flag": {
                                  "description": "Whether one of the parties of the mail thread is Bcc",
                                  "allOf": [
                                    {
                                      "title": "numberBooleanDefault0",
                                      "type": "number",
                                      "default": 0,
                                      "enum": [ 0, 1 ]
                                    }
                                  ]
                                },
                                "mail_link_tracking_enabled_flag": {
                                  "description": "Whether the link tracking of the mail thread is enabled",
                                  "allOf": [
                                    {
                                      "title": "numberBooleanDefault0",
                                      "type": "number",
                                      "default": 0,
                                      "enum": [ 0, 1 ]
                                    }
                                  ]
                                }
                              }
                            },
                            {
                              "type": "object",
                              "properties": {
                                "parties": {
                                  "type": "object",
                                  "description": "Parties of the mail thread",
                                  "properties": {
                                    "to": {
                                      "type": "array",
                                      "description": "Recipients of the mail thread",
                                      "items": {
                                        "type": "object",
                                        "description": "Member of a thread",
                                        "properties": {
                                          "id": {
                                            "type": "integer",
                                            "description": "ID of the mail thread participant"
                                          },
                                          "name": {
                                            "type": "string",
                                            "description": "Name of the mail thread participant"
                                          },
                                          "latest_sent": {
                                            "type": "boolean",
                                            "description": "Whether the mail thread participant was last to send an email"
                                          },
                                          "email_address": {
                                            "type": "string",
                                            "description": "Email address of the mail thread participant"
                                          },
                                          "message_time": {
                                            "type": "number",
                                            "description": "Message time"
                                          },
                                          "linked_person_id": {
                                            "type": "integer",
                                            "description": "ID of the linked person"
                                          },
                                          "linked_person_name": {
                                            "type": "string",
                                            "description": "Email of the linked person"
                                          },
                                          "mail_message_party_id": {
                                            "type": "integer",
                                            "description": "ID of the mail message party"
                                          },
                                          "linked_organization_id": {
                                            "type": "integer",
                                            "nullable": true,
                                            "description": "Linked Organization ID"
                                          }
                                        }
                                      }
                                    },
                                    "from": {
                                      "type": "array",
                                      "description": "Senders of the mail thread",
                                      "items": {
                                        "type": "object",
                                        "description": "Member of a thread",
                                        "properties": {
                                          "id": {
                                            "type": "integer",
                                            "description": "ID of the mail thread participant"
                                          },
                                          "name": {
                                            "type": "string",
                                            "description": "Name of the mail thread participant"
                                          },
                                          "latest_sent": {
                                            "type": "boolean",
                                            "description": "Whether the mail thread participant was last to send an email"
                                          },
                                          "email_address": {
                                            "type": "string",
                                            "description": "Email address of the mail thread participant"
                                          },
                                          "message_time": {
                                            "type": "number",
                                            "description": "Message time"
                                          },
                                          "linked_person_id": {
                                            "type": "integer",
                                            "description": "ID of the linked person"
                                          },
                                          "linked_person_name": {
                                            "type": "string",
                                            "description": "Email of the linked person"
                                          },
                                          "mail_message_party_id": {
                                            "type": "integer",
                                            "description": "ID of the mail message party"
                                          },
                                          "linked_organization_id": {
                                            "type": "integer",
                                            "nullable": true,
                                            "description": "Linked Organization ID"
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "drafts_parties": {
                                  "type": "array",
                                  "description": "Parties of the drafted mail thread",
                                  "items": { "type": "object" }
                                },
                                "folders": {
                                  "type": "array",
                                  "description": "Folders in which messages from thread are being stored",
                                  "items": { "type": "string" }
                                },
                                "version": {
                                  "type": "number",
                                  "description": "Version"
                                },
                                "snippet_draft": {
                                  "type": "string",
                                  "nullable": true,
                                  "description": "A snippet from a draft"
                                },
                                "snippet_sent": {
                                  "type": "string",
                                  "description": "A snippet from a message sent"
                                },
                                "message_count": {
                                  "type": "integer",
                                  "description": "An amount of messages"
                                },
                                "has_draft_flag": {
                                  "type": "number",
                                  "description": "Whether the mail thread has any drafts",
                                  "allOf": [
                                    {
                                      "title": "numberBooleanDefault0",
                                      "type": "number",
                                      "default": 0,
                                      "enum": [ 0, 1 ]
                                    }
                                  ]
                                },
                                "has_sent_flag": {
                                  "type": "number",
                                  "description": "Whether the mail thread has messages sent",
                                  "allOf": [
                                    {
                                      "title": "numberBooleanDefault0",
                                      "type": "number",
                                      "default": 0,
                                      "enum": [ 0, 1 ]
                                    }
                                  ]
                                },
                                "archived_flag": {
                                  "allOf": [
                                    {
                                      "title": "numberBooleanDefault0",
                                      "type": "number",
                                      "default": 0,
                                      "enum": [ 0, 1 ]
                                    }
                                  ],
                                  "description": "Whether the mail thread is archived"
                                },
                                "shared_flag": {
                                  "description": "Whether the mail thread is shared",
                                  "allOf": [
                                    {
                                      "title": "numberBooleanDefault0",
                                      "type": "number",
                                      "default": 0,
                                      "enum": [ 0, 1 ]
                                    }
                                  ]
                                },
                                "external_deleted_flag": {
                                  "description": "Whether the mail thread has been deleted externally",
                                  "allOf": [
                                    {
                                      "title": "numberBooleanDefault0",
                                      "type": "number",
                                      "default": 0,
                                      "enum": [ 0, 1 ]
                                    }
                                  ]
                                },
                                "first_message_to_me_flag": {
                                  "description": "Whether the mail thread was initialized by others",
                                  "allOf": [
                                    {
                                      "title": "numberBooleanDefault0",
                                      "type": "number",
                                      "default": 0,
                                      "enum": [ 0, 1 ]
                                    }
                                  ]
                                },
                                "last_message_timestamp": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "Last message timestamp"
                                },
                                "first_message_timestamp": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "The time when the mail thread has had the first message received or created"
                                },
                                "last_message_sent_timestamp": {
                                  "type": "string",
                                  "format": "date-time",
                                  "nullable": true,
                                  "description": "The last time when the mail thread has had a message sent"
                                },
                                "last_message_received_timestamp": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "The last time when the mail thread has had a message received"
                                },
                                "add_time": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "The time when the mail thread was inserted to database"
                                },
                                "update_time": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "The time when the mail thread was updated in database received"
                                },
                                "deal_id": {
                                  "type": "integer",
                                  "nullable": true,
                                  "description": "The ID of the deal"
                                },
                                "deal_status": {
                                  "type": "string",
                                  "nullable": true,
                                  "description": "Status of the deal"
                                },
                                "lead_id": {
                                  "type": "string",
                                  "format": "uuid",
                                  "nullable": true,
                                  "description": "The ID of the lead"
                                },
                                "all_messages_sent_flag": {
                                  "type": "number",
                                  "description": "Whether all the mail thread messages have been sent",
                                  "allOf": [
                                    {
                                      "title": "numberBooleanDefault0",
                                      "type": "number",
                                      "default": 0,
                                      "enum": [ 0, 1 ]
                                    }
                                  ]
                                }
                              }
                            }
                          ],
                          "description": "The mail thread object"
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "success": true,
                  "data": {
                    "id": 1,
                    "folders": [ "inbox" ],
                    "account_id": "12123qwaesda1",
                    "user_id": 9,
                    "version": 13,
                    "subject": "[EXAMPLE] Subject",
                    "snippet": "[EXAMPLE] Snippet",
                    "snippet_draft": null,
                    "snippet_sent": "",
                    "message_count": 7,
                    "read_flag": 0,
                    "mail_tracking_status": null,
                    "has_attachments_flag": 1,
                    "has_inline_attachments_flag": 1,
                    "has_real_attachments_flag": 0,
                    "has_draft_flag": 0,
                    "has_sent_flag": 0,
                    "archived_flag": 0,
                    "deleted_flag": 0,
                    "shared_flag": 1,
                    "synced_flag": 1,
                    "external_deleted_flag": 0,
                    "smart_bcc_flag": 0,
                    "first_message_to_me_flag": 1,
                    "mail_link_tracking_enabled_flag": 0,
                    "last_message_timestamp": "2019-11-25T10:30:50.000Z",
                    "first_message_timestamp": "2019-11-25T08:40:50.000Z",
                    "last_message_sent_timestamp": null,
                    "last_message_received_timestamp": "2019-11-25T10:30:50.000Z",
                    "add_time": "2019-11-25T08:41:10.000Z",
                    "update_time": "2019-11-25T10:31:34.000Z",
                    "deal_id": null,
                    "deal_status": null,
                    "all_messages_sent_flag": 0
                  }
                }
              }
            }
          }
        }
      }
    },
    "/mailbox/mailThreads/{id}/mailMessages": {
      "get": {
        "summary": "Get all mail messages of mail thread",
        "description": "Returns all the mail messages inside a specified mail thread.",
        "operationId": "getMailThreadMessages",
        "tags": [ "Mailbox" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the mail thread",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "Get mail messages from thread",
            "content": {
              "application/json": {
                "schema": {
                  "title": "getAllMailMessagesOfMailThread",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "integer",
                                    "description": "ID of the mail thread"
                                  },
                                  "account_id": {
                                    "type": "string",
                                    "description": "The connection account ID"
                                  },
                                  "user_id": {
                                    "type": "integer",
                                    "description": "ID of the user whom mail message will be assigned to"
                                  },
                                  "subject": {
                                    "type": "string",
                                    "description": "The subject"
                                  },
                                  "snippet": {
                                    "type": "string",
                                    "description": "A snippet"
                                  },
                                  "read_flag": {
                                    "description": "Whether the mail thread is read",
                                    "allOf": [
                                      {
                                        "title": "numberBooleanDefault0",
                                        "type": "number",
                                        "default": 0,
                                        "enum": [ 0, 1 ]
                                      }
                                    ]
                                  },
                                  "mail_tracking_status": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "Mail tracking status"
                                  },
                                  "has_attachments_flag": {
                                    "description": "Whether the mail thread has an attachment",
                                    "allOf": [
                                      {
                                        "title": "numberBooleanDefault0",
                                        "type": "number",
                                        "default": 0,
                                        "enum": [ 0, 1 ]
                                      }
                                    ]
                                  },
                                  "has_inline_attachments_flag": {
                                    "description": "Whether the mail thread has inline attachments",
                                    "allOf": [
                                      {
                                        "title": "numberBooleanDefault0",
                                        "type": "number",
                                        "default": 0,
                                        "enum": [ 0, 1 ]
                                      }
                                    ]
                                  },
                                  "has_real_attachments_flag": {
                                    "description": "Whether the mail thread has real attachments (which are not inline)",
                                    "allOf": [
                                      {
                                        "title": "numberBooleanDefault0",
                                        "type": "number",
                                        "default": 0,
                                        "enum": [ 0, 1 ]
                                      }
                                    ]
                                  },
                                  "deleted_flag": {
                                    "allOf": [
                                      {
                                        "title": "numberBooleanDefault0",
                                        "type": "number",
                                        "default": 0,
                                        "enum": [ 0, 1 ]
                                      }
                                    ],
                                    "description": "Whether the mail thread is deleted"
                                  },
                                  "synced_flag": {
                                    "description": "Whether the mail thread is synced",
                                    "allOf": [
                                      {
                                        "title": "numberBooleanDefault0",
                                        "type": "number",
                                        "default": 0,
                                        "enum": [ 0, 1 ]
                                      }
                                    ]
                                  },
                                  "smart_bcc_flag": {
                                    "description": "Whether one of the parties of the mail thread is Bcc",
                                    "allOf": [
                                      {
                                        "title": "numberBooleanDefault0",
                                        "type": "number",
                                        "default": 0,
                                        "enum": [ 0, 1 ]
                                      }
                                    ]
                                  },
                                  "mail_link_tracking_enabled_flag": {
                                    "description": "Whether the link tracking of the mail thread is enabled",
                                    "allOf": [
                                      {
                                        "title": "numberBooleanDefault0",
                                        "type": "number",
                                        "default": 0,
                                        "enum": [ 0, 1 ]
                                      }
                                    ]
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "from": {
                                    "type": "array",
                                    "description": "Senders of the mail thread",
                                    "items": {
                                      "type": "object",
                                      "description": "Member of a thread",
                                      "properties": {
                                        "id": {
                                          "type": "integer",
                                          "description": "ID of the mail thread participant"
                                        },
                                        "name": {
                                          "type": "string",
                                          "description": "Name of the mail thread participant"
                                        },
                                        "latest_sent": {
                                          "type": "boolean",
                                          "description": "Whether the mail thread participant was last to send an email"
                                        },
                                        "email_address": {
                                          "type": "string",
                                          "description": "Email address of the mail thread participant"
                                        },
                                        "message_time": {
                                          "type": "number",
                                          "description": "Message time"
                                        },
                                        "linked_person_id": {
                                          "type": "integer",
                                          "description": "ID of the linked person"
                                        },
                                        "linked_person_name": {
                                          "type": "string",
                                          "description": "Email of the linked person"
                                        },
                                        "mail_message_party_id": {
                                          "type": "integer",
                                          "description": "ID of the mail message party"
                                        },
                                        "linked_organization_id": {
                                          "type": "integer",
                                          "nullable": true,
                                          "description": "Linked Organization ID"
                                        }
                                      }
                                    }
                                  },
                                  "to": {
                                    "type": "array",
                                    "description": "Recipients of the mail thread",
                                    "items": {
                                      "type": "object",
                                      "description": "Member of a thread",
                                      "properties": {
                                        "id": {
                                          "type": "integer",
                                          "description": "ID of the mail thread participant"
                                        },
                                        "name": {
                                          "type": "string",
                                          "description": "Name of the mail thread participant"
                                        },
                                        "latest_sent": {
                                          "type": "boolean",
                                          "description": "Whether the mail thread participant was last to send an email"
                                        },
                                        "email_address": {
                                          "type": "string",
                                          "description": "Email address of the mail thread participant"
                                        },
                                        "message_time": {
                                          "type": "number",
                                          "description": "Message time"
                                        },
                                        "linked_person_id": {
                                          "type": "integer",
                                          "description": "ID of the linked person"
                                        },
                                        "linked_person_name": {
                                          "type": "string",
                                          "description": "Email of the linked person"
                                        },
                                        "mail_message_party_id": {
                                          "type": "integer",
                                          "description": "ID of the mail message party"
                                        },
                                        "linked_organization_id": {
                                          "type": "integer",
                                          "nullable": true,
                                          "description": "Linked Organization ID"
                                        }
                                      }
                                    }
                                  },
                                  "cc": {
                                    "type": "array",
                                    "description": "Participants of the Cc",
                                    "items": {
                                      "type": "object",
                                      "description": "Member of a thread",
                                      "properties": {
                                        "id": {
                                          "type": "integer",
                                          "description": "ID of the mail thread participant"
                                        },
                                        "name": {
                                          "type": "string",
                                          "description": "Name of the mail thread participant"
                                        },
                                        "latest_sent": {
                                          "type": "boolean",
                                          "description": "Whether the mail thread participant was last to send an email"
                                        },
                                        "email_address": {
                                          "type": "string",
                                          "description": "Email address of the mail thread participant"
                                        },
                                        "message_time": {
                                          "type": "number",
                                          "description": "Message time"
                                        },
                                        "linked_person_id": {
                                          "type": "integer",
                                          "description": "ID of the linked person"
                                        },
                                        "linked_person_name": {
                                          "type": "string",
                                          "description": "Email of the linked person"
                                        },
                                        "mail_message_party_id": {
                                          "type": "integer",
                                          "description": "ID of the mail message party"
                                        },
                                        "linked_organization_id": {
                                          "type": "integer",
                                          "nullable": true,
                                          "description": "Linked Organization ID"
                                        }
                                      }
                                    }
                                  },
                                  "bcc": {
                                    "type": "array",
                                    "description": "Participants of the Bcc",
                                    "items": {
                                      "type": "object",
                                      "description": "Member of a thread",
                                      "properties": {
                                        "id": {
                                          "type": "integer",
                                          "description": "ID of the mail thread participant"
                                        },
                                        "name": {
                                          "type": "string",
                                          "description": "Name of the mail thread participant"
                                        },
                                        "latest_sent": {
                                          "type": "boolean",
                                          "description": "Whether the mail thread participant was last to send an email"
                                        },
                                        "email_address": {
                                          "type": "string",
                                          "description": "Email address of the mail thread participant"
                                        },
                                        "message_time": {
                                          "type": "number",
                                          "description": "Message time"
                                        },
                                        "linked_person_id": {
                                          "type": "integer",
                                          "description": "ID of the linked person"
                                        },
                                        "linked_person_name": {
                                          "type": "string",
                                          "description": "Email of the linked person"
                                        },
                                        "mail_message_party_id": {
                                          "type": "integer",
                                          "description": "ID of the mail message party"
                                        },
                                        "linked_organization_id": {
                                          "type": "integer",
                                          "nullable": true,
                                          "description": "Linked Organization ID"
                                        }
                                      }
                                    }
                                  },
                                  "body_url": {
                                    "type": "string",
                                    "description": "A link to the mail thread message"
                                  },
                                  "mail_thread_id": {
                                    "type": "integer",
                                    "description": "ID of the mail thread"
                                  },
                                  "draft": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "If the mail message has a draft status then the value is the mail message object as JSON formatted string, otherwise `null`."
                                  },
                                  "has_body_flag": {
                                    "type": "number",
                                    "description": "Whether the mail thread message has a body",
                                    "allOf": [
                                      {
                                        "title": "numberBooleanDefault0",
                                        "type": "number",
                                        "default": 0,
                                        "enum": [ 0, 1 ]
                                      }
                                    ]
                                  },
                                  "sent_flag": {
                                    "type": "number",
                                    "description": "Whether the mail thread message is sent",
                                    "allOf": [
                                      {
                                        "title": "numberBooleanDefault0",
                                        "type": "number",
                                        "default": 0,
                                        "enum": [ 0, 1 ]
                                      }
                                    ]
                                  },
                                  "sent_from_pipedrive_flag": {
                                    "type": "number",
                                    "description": "Whether the mail thread message is sent from Pipedrive",
                                    "allOf": [
                                      {
                                        "title": "numberBooleanDefault0",
                                        "type": "number",
                                        "default": 0,
                                        "enum": [ 0, 1 ]
                                      }
                                    ]
                                  },
                                  "message_time": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "The time when the mail message was received or created"
                                  },
                                  "add_time": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "The time when the mail message was inserted to database"
                                  },
                                  "update_time": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "The time when the mail message was updated in database received"
                                  }
                                }
                              }
                            ]
                          },
                          "description": "The array of the mail messages of the mail thread"
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "success": true,
                  "data": [
                    {
                      "id": 1,
                      "from": [
                        {
                          "id": 1,
                          "email_address": "example@email.com",
                          "name": "Example Message",
                          "linked_person_id": 4,
                          "linked_person_name": "",
                          "mail_message_party_id": 3
                        }
                      ],
                      "to": [
                        {
                          "id": 4,
                          "email_address": "example@email.com",
                          "name": "Example Message",
                          "linked_person_id": 1,
                          "linked_person_name": "",
                          "mail_message_party_id": 3
                        }
                      ],
                      "cc": [ ],
                      "bcc": [ ],
                      "body_url": "http://this_would_be_the_link.cloudfront.net/",
                      "account_id": "iuaousdp77asdadah",
                      "user_id": 777,
                      "mail_thread_id": 2,
                      "subject": "The Subject",
                      "snippet": "Snippet from the email",
                      "mail_tracking_status": null,
                      "mail_link_tracking_enabled_flag": 0,
                      "read_flag": 1,
                      "draft": null,
                      "draft_flag": 0,
                      "synced_flag": 1,
                      "deleted_flag": 0,
                      "has_body_flag": 1,
                      "sent_flag": 0,
                      "sent_from_pipedrive_flag": 0,
                      "smart_bcc_flag": 0,
                      "message_time": "2019-08-07T21:15:08.000Z",
                      "add_time": "2019-08-07T21:34:35.000Z",
                      "update_time": "2019-08-07T21:34:35.000Z",
                      "has_attachments_flag": 0,
                      "has_inline_attachments_flag": 0,
                      "has_real_attachments_flag": 0
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/notes": {
      "get": {
        "summary": "Get all notes",
        "description": "Returns all notes.",
        "operationId": "getNotes",
        "tags": [ "Notes" ],
        "parameters": [
          {
            "in": "query",
            "name": "user_id",
            "schema": { "type": "integer" },
            "description": "The ID of the user whose notes to fetch. If omitted, notes by all users will be returned."
          },
          {
            "in": "query",
            "name": "lead_id",
            "schema": { "type": "string", "format": "uuid" },
            "description": "The ID of the lead which notes to fetch. If omitted, notes about all leads will be returned."
          },
          {
            "in": "query",
            "name": "deal_id",
            "schema": { "type": "integer" },
            "description": "The ID of the deal which notes to fetch. If omitted, notes about all deals will be returned."
          },
          {
            "in": "query",
            "name": "person_id",
            "schema": { "type": "integer" },
            "description": "The ID of the person whose notes to fetch. If omitted, notes about all persons will be returned."
          },
          {
            "in": "query",
            "name": "org_id",
            "schema": { "type": "integer" },
            "description": "The ID of the organization which notes to fetch. If omitted, notes about all organizations will be returned."
          },
          {
            "in": "query",
            "name": "start",
            "description": "Pagination start",
            "schema": { "type": "integer", "default": 0 }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Items shown per page",
            "schema": { "type": "integer" }
          },
          {
            "in": "query",
            "name": "sort",
            "schema": { "type": "string" },
            "description": "The field names and sorting mode separated by a comma (`field_name_1 ASC`, `field_name_2 DESC`). Only first-level field keys are supported (no nested keys). Supported fields: `id`, `user_id`, `deal_id`, `person_id`, `org_id`, `content`, `add_time`, `update_time`."
          },
          {
            "in": "query",
            "name": "start_date",
            "schema": { "type": "string", "format": "date" },
            "description": "The date in format of YYYY-MM-DD from which notes to fetch"
          },
          {
            "in": "query",
            "name": "end_date",
            "schema": { "type": "string", "format": "date" },
            "description": "The date in format of YYYY-MM-DD until which notes to fetch to"
          },
          {
            "in": "query",
            "name": "pinned_to_lead_flag",
            "schema": {
              "title": "numberBoolean",
              "type": "number",
              "enum": [ 0, 1 ]
            },
            "description": "If set, the results are filtered by note to lead pinning state"
          },
          {
            "in": "query",
            "name": "pinned_to_deal_flag",
            "schema": {
              "title": "numberBoolean",
              "type": "number",
              "enum": [ 0, 1 ]
            },
            "description": "If set, the results are filtered by note to deal pinning state"
          },
          {
            "in": "query",
            "name": "pinned_to_organization_flag",
            "schema": {
              "title": "numberBoolean",
              "type": "number",
              "enum": [ 0, 1 ]
            },
            "description": "If set, the results are filtered by note to organization pinning state"
          },
          {
            "in": "query",
            "name": "pinned_to_person_flag",
            "schema": {
              "title": "numberBoolean",
              "type": "number",
              "enum": [ 0, 1 ]
            },
            "description": "If set, the results are filtered by note to person pinning state"
          }
        ],
        "responses": {
          "200": {
            "description": "Get all notes",
            "content": {
              "application/json": {
                "schema": {
                  "title": "getNotes",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "If the request was successful or not"
                    },
                    "data": {
                      "type": "array",
                      "description": "The array of notes",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "description": "The ID of the note"
                          },
                          "active_flag": {
                            "type": "boolean",
                            "description": "Whether the note is active or deleted"
                          },
                          "add_time": {
                            "type": "string",
                            "description": "The creation date and time of the note"
                          },
                          "content": {
                            "type": "string",
                            "description": "The content of the note in HTML format. Subject to sanitization on the back-end."
                          },
                          "deal": {
                            "type": "object",
                            "description": "The deal this note is attached to",
                            "properties": {
                              "title": {
                                "type": "string",
                                "description": "The title of the deal this note is attached to"
                              }
                            }
                          },
                          "lead_id": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The ID of the lead the note is attached to"
                          },
                          "deal_id": {
                            "type": "integer",
                            "description": "The ID of the deal the note is attached to"
                          },
                          "last_update_user_id": {
                            "type": "integer",
                            "description": "The ID of the user who last updated the note"
                          },
                          "org_id": {
                            "type": "integer",
                            "description": "The ID of the organization the note is attached to"
                          },
                          "organization": {
                            "type": "object",
                            "description": "The organization the note is attached to",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "The name of the organization the note is attached to"
                              }
                            }
                          },
                          "person": {
                            "type": "object",
                            "description": "The person the note is attached to",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "The name of the person the note is attached to"
                              }
                            }
                          },
                          "person_id": {
                            "type": "integer",
                            "description": "The ID of the person the note is attached to"
                          },
                          "pinned_to_deal_flag": {
                            "type": "boolean",
                            "description": "If true, the results are filtered by note to deal pinning state"
                          },
                          "pinned_to_organization_flag": {
                            "type": "boolean",
                            "description": "If true, the results are filtered by note to organization pinning state"
                          },
                          "pinned_to_person_flag": {
                            "type": "boolean",
                            "description": "If true, the results are filtered by note to person pinning state"
                          },
                          "update_time": {
                            "type": "string",
                            "description": "The last updated date and time of the note"
                          },
                          "user": {
                            "type": "object",
                            "description": "The user who created the note",
                            "properties": {
                              "email": {
                                "type": "string",
                                "description": "The email of the note creator"
                              },
                              "icon_url": {
                                "type": "string",
                                "description": "The URL of the note creator avatar picture"
                              },
                              "is_you": {
                                "type": "boolean",
                                "description": "Whether the note is created by you or not"
                              },
                              "name": {
                                "type": "string",
                                "description": "The name of the note creator"
                              }
                            }
                          },
                          "user_id": {
                            "type": "integer",
                            "description": "The ID of the note creator"
                          }
                        }
                      }
                    },
                    "additional_data": {
                      "type": "object",
                      "properties": {
                        "pagination": {
                          "type": "object",
                          "description": "The pagination details of the list",
                          "allOf": [
                            {
                              "description": "The additional data of the list",
                              "type": "object",
                              "properties": {
                                "start": {
                                  "type": "integer",
                                  "description": "Pagination start"
                                },
                                "limit": {
                                  "type": "integer",
                                  "description": "Items shown per page"
                                },
                                "more_items_in_collection": {
                                  "type": "boolean",
                                  "description": "If there are more list items in the collection than displayed or not"
                                }
                              }
                            },
                            {
                              "type": "object",
                              "properties": {
                                "next_start": {
                                  "type": "integer",
                                  "description": "Next pagination start"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  }
                },
                "example": {
                  "success": true,
                  "data": [
                    {
                      "id": 1,
                      "active_flag": true,
                      "add_time": "2019-12-09 13:59:21",
                      "content": "abc",
                      "deal": { "title": "Deal title" },
                      "lead_id": "adf21080-0e10-11eb-879b-05d71fb426ec",
                      "deal_id": 1,
                      "last_update_user_id": 1,
                      "org_id": 1,
                      "organization": { "name": "Organization name" },
                      "person": { "name": "Person name" },
                      "person_id": 1,
                      "pinned_to_lead_flag": false,
                      "pinned_to_deal_flag": true,
                      "pinned_to_organization_flag": false,
                      "pinned_to_person_flag": false,
                      "update_time": "2019-12-09 14:26:11",
                      "user": {
                        "email": "user@email.com",
                        "icon_url": "https://iconurl.net/profile_120x120_123.jpg",
                        "is_you": true,
                        "name": "User Name"
                      },
                      "user_id": 1
                    }
                  ],
                  "additional_data": {
                    "pagination": {
                      "start": 0,
                      "limit": 100,
                      "more_items_in_collection": true,
                      "next_start": 100
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add a note",
        "description": "Adds a new note.",
        "operationId": "addNote",
        "tags": [ "Notes" ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "required": [ "content" ],
                    "properties": {
                      "content": {
                        "type": "string",
                        "description": "The content of the note in HTML format. Subject to sanitization on the back-end."
                      },
                      "lead_id": {
                        "type": "string",
                        "format": "uuid",
                        "description": "The ID of the lead the note will be attached to. This property is required unless one of (`deal_id/person_id/org_id`) is specified."
                      },
                      "deal_id": {
                        "type": "integer",
                        "description": "The ID of the deal the note will be attached to. This property is required unless one of (`lead_id/person_id/org_id`) is specified."
                      },
                      "person_id": {
                        "type": "integer",
                        "description": "The ID of the person this note will be attached to. This property is required unless one of (`deal_id/lead_id/org_id`) is specified."
                      },
                      "org_id": {
                        "type": "integer",
                        "description": "The ID of the organization this note will be attached to. This property is required unless one of (`deal_id/lead_id/person_id`) is specified."
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "user_id": {
                        "type": "integer",
                        "description": "The ID of the user who will be marked as the author of the note. Only an admin can change the author."
                      },
                      "add_time": {
                        "type": "string",
                        "description": "The optional creation date & time of the note in UTC. Can be set in the past or in the future. Requires admin user API token. Format: YYYY-MM-DD HH:MM:SS"
                      },
                      "pinned_to_lead_flag": {
                        "allOf": [
                          {
                            "title": "numberBoolean",
                            "type": "number",
                            "enum": [ 0, 1 ]
                          }
                        ],
                        "description": "If set, the results are filtered by note to lead pinning state (`lead_id` is also required)"
                      },
                      "pinned_to_deal_flag": {
                        "allOf": [
                          {
                            "title": "numberBoolean",
                            "type": "number",
                            "enum": [ 0, 1 ]
                          }
                        ],
                        "description": "If set, the results are filtered by note to deal pinning state (`deal_id` is also required)"
                      },
                      "pinned_to_organization_flag": {
                        "allOf": [
                          {
                            "title": "numberBoolean",
                            "type": "number",
                            "enum": [ 0, 1 ]
                          }
                        ],
                        "description": "If set, the results are filtered by note to organization pinning state (`org_id` is also required)"
                      },
                      "pinned_to_person_flag": {
                        "allOf": [
                          {
                            "title": "numberBoolean",
                            "type": "number",
                            "enum": [ 0, 1 ]
                          }
                        ],
                        "description": "If set, the results are filtered by note to person pinning state (`person_id` is also required)"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Add, update or get a note",
            "content": {
              "application/json": {
                "schema": {
                  "title": "oneNote",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "If the request was successful or not"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "description": "The ID of the note"
                        },
                        "active_flag": {
                          "type": "boolean",
                          "description": "Whether the note is active or deleted"
                        },
                        "add_time": {
                          "type": "string",
                          "description": "The creation date and time of the note"
                        },
                        "content": {
                          "type": "string",
                          "description": "The content of the note in HTML format. Subject to sanitization on the back-end."
                        },
                        "deal": {
                          "type": "object",
                          "description": "The deal this note is attached to",
                          "properties": {
                            "title": {
                              "type": "string",
                              "description": "The title of the deal this note is attached to"
                            }
                          }
                        },
                        "lead_id": {
                          "type": "string",
                          "format": "uuid",
                          "description": "The ID of the lead the note is attached to"
                        },
                        "deal_id": {
                          "type": "integer",
                          "description": "The ID of the deal the note is attached to"
                        },
                        "last_update_user_id": {
                          "type": "integer",
                          "description": "The ID of the user who last updated the note"
                        },
                        "org_id": {
                          "type": "integer",
                          "description": "The ID of the organization the note is attached to"
                        },
                        "organization": {
                          "type": "object",
                          "description": "The organization the note is attached to",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "The name of the organization the note is attached to"
                            }
                          }
                        },
                        "person": {
                          "type": "object",
                          "description": "The person the note is attached to",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "The name of the person the note is attached to"
                            }
                          }
                        },
                        "person_id": {
                          "type": "integer",
                          "description": "The ID of the person the note is attached to"
                        },
                        "pinned_to_deal_flag": {
                          "type": "boolean",
                          "description": "If true, the results are filtered by note to deal pinning state"
                        },
                        "pinned_to_organization_flag": {
                          "type": "boolean",
                          "description": "If true, the results are filtered by note to organization pinning state"
                        },
                        "pinned_to_person_flag": {
                          "type": "boolean",
                          "description": "If true, the results are filtered by note to person pinning state"
                        },
                        "update_time": {
                          "type": "string",
                          "description": "The last updated date and time of the note"
                        },
                        "user": {
                          "type": "object",
                          "description": "The user who created the note",
                          "properties": {
                            "email": {
                              "type": "string",
                              "description": "The email of the note creator"
                            },
                            "icon_url": {
                              "type": "string",
                              "description": "The URL of the note creator avatar picture"
                            },
                            "is_you": {
                              "type": "boolean",
                              "description": "Whether the note is created by you or not"
                            },
                            "name": {
                              "type": "string",
                              "description": "The name of the note creator"
                            }
                          }
                        },
                        "user_id": {
                          "type": "integer",
                          "description": "The ID of the note creator"
                        }
                      }
                    }
                  }
                },
                "example": {
                  "success": true,
                  "data": {
                    "id": 1,
                    "active_flag": true,
                    "add_time": "2019-12-09 13:59:21",
                    "content": "abc",
                    "deal": { "title": "Deal title" },
                    "lead_id": "adf21080-0e10-11eb-879b-05d71fb426ec",
                    "deal_id": 1,
                    "last_update_user_id": 1,
                    "org_id": 1,
                    "organization": { "name": "Organization name" },
                    "person": { "name": "Person name" },
                    "person_id": 1,
                    "pinned_to_lead_flag": false,
                    "pinned_to_deal_flag": true,
                    "pinned_to_organization_flag": false,
                    "pinned_to_person_flag": false,
                    "update_time": "2019-12-09 14:26:11",
                    "user": {
                      "email": "user@email.com",
                      "icon_url": "https://iconurl.net/profile_120x120_123.jpg",
                      "is_you": true,
                      "name": "User Name"
                    },
                    "user_id": 1
                  }
                }
              }
            }
          }
        }
      }
    },
    "/notes/{id}": {
      "delete": {
        "summary": "Delete a note",
        "description": "Deletes a specific note.",
        "operationId": "deleteNote",
        "tags": [ "Notes" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the note",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "Delete a note",
            "content": {
              "application/json": {
                "schema": {
                  "title": "deleteNote",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "If the request was successful or not"
                    },
                    "data": {
                      "type": "boolean",
                      "description": "If the response is successful or not"
                    }
                  }
                },
                "example": { "success": true, "data": true }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get one note",
        "description": "Returns details about a specific note.",
        "operationId": "getNote",
        "tags": [ "Notes" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the note",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "Add, update or get a note",
            "content": {
              "application/json": {
                "schema": {
                  "title": "oneNote",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "If the request was successful or not"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "description": "The ID of the note"
                        },
                        "active_flag": {
                          "type": "boolean",
                          "description": "Whether the note is active or deleted"
                        },
                        "add_time": {
                          "type": "string",
                          "description": "The creation date and time of the note"
                        },
                        "content": {
                          "type": "string",
                          "description": "The content of the note in HTML format. Subject to sanitization on the back-end."
                        },
                        "deal": {
                          "type": "object",
                          "description": "The deal this note is attached to",
                          "properties": {
                            "title": {
                              "type": "string",
                              "description": "The title of the deal this note is attached to"
                            }
                          }
                        },
                        "lead_id": {
                          "type": "string",
                          "format": "uuid",
                          "description": "The ID of the lead the note is attached to"
                        },
                        "deal_id": {
                          "type": "integer",
                          "description": "The ID of the deal the note is attached to"
                        },
                        "last_update_user_id": {
                          "type": "integer",
                          "description": "The ID of the user who last updated the note"
                        },
                        "org_id": {
                          "type": "integer",
                          "description": "The ID of the organization the note is attached to"
                        },
                        "organization": {
                          "type": "object",
                          "description": "The organization the note is attached to",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "The name of the organization the note is attached to"
                            }
                          }
                        },
                        "person": {
                          "type": "object",
                          "description": "The person the note is attached to",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "The name of the person the note is attached to"
                            }
                          }
                        },
                        "person_id": {
                          "type": "integer",
                          "description": "The ID of the person the note is attached to"
                        },
                        "pinned_to_deal_flag": {
                          "type": "boolean",
                          "description": "If true, the results are filtered by note to deal pinning state"
                        },
                        "pinned_to_organization_flag": {
                          "type": "boolean",
                          "description": "If true, the results are filtered by note to organization pinning state"
                        },
                        "pinned_to_person_flag": {
                          "type": "boolean",
                          "description": "If true, the results are filtered by note to person pinning state"
                        },
                        "update_time": {
                          "type": "string",
                          "description": "The last updated date and time of the note"
                        },
                        "user": {
                          "type": "object",
                          "description": "The user who created the note",
                          "properties": {
                            "email": {
                              "type": "string",
                              "description": "The email of the note creator"
                            },
                            "icon_url": {
                              "type": "string",
                              "description": "The URL of the note creator avatar picture"
                            },
                            "is_you": {
                              "type": "boolean",
                              "description": "Whether the note is created by you or not"
                            },
                            "name": {
                              "type": "string",
                              "description": "The name of the note creator"
                            }
                          }
                        },
                        "user_id": {
                          "type": "integer",
                          "description": "The ID of the note creator"
                        }
                      }
                    }
                  }
                },
                "example": {
                  "success": true,
                  "data": {
                    "id": 1,
                    "active_flag": true,
                    "add_time": "2019-12-09 13:59:21",
                    "content": "abc",
                    "deal": { "title": "Deal title" },
                    "lead_id": "adf21080-0e10-11eb-879b-05d71fb426ec",
                    "deal_id": 1,
                    "last_update_user_id": 1,
                    "org_id": 1,
                    "organization": { "name": "Organization name" },
                    "person": { "name": "Person name" },
                    "person_id": 1,
                    "pinned_to_lead_flag": false,
                    "pinned_to_deal_flag": true,
                    "pinned_to_organization_flag": false,
                    "pinned_to_person_flag": false,
                    "update_time": "2019-12-09 14:26:11",
                    "user": {
                      "email": "user@email.com",
                      "icon_url": "https://iconurl.net/profile_120x120_123.jpg",
                      "is_you": true,
                      "name": "User Name"
                    },
                    "user_id": 1
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update a note",
        "description": "Updates a note.",
        "operationId": "updateNote",
        "tags": [ "Notes" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the note",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "noteRequest",
                "type": "object",
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "content": {
                        "type": "string",
                        "description": "The content of the note in HTML format. Subject to sanitization on the back-end."
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "lead_id": {
                        "type": "string",
                        "format": "uuid",
                        "description": "The ID of the lead the note will be attached to"
                      },
                      "deal_id": {
                        "type": "integer",
                        "description": "The ID of the deal the note will be attached to"
                      },
                      "person_id": {
                        "type": "integer",
                        "description": "The ID of the person the note will be attached to"
                      },
                      "org_id": {
                        "type": "integer",
                        "description": "The ID of the organization the note will be attached to"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "user_id": {
                        "type": "integer",
                        "description": "The ID of the user who will be marked as the author of the note. Only an admin can change the author."
                      },
                      "add_time": {
                        "type": "string",
                        "description": "The optional creation date & time of the note in UTC. Can be set in the past or in the future. Requires admin user API token. Format: YYYY-MM-DD HH:MM:SS"
                      },
                      "pinned_to_lead_flag": {
                        "allOf": [
                          {
                            "title": "numberBoolean",
                            "type": "number",
                            "enum": [ 0, 1 ]
                          }
                        ],
                        "description": "If set, the results are filtered by note to lead pinning state (`lead_id` is also required)"
                      },
                      "pinned_to_deal_flag": {
                        "allOf": [
                          {
                            "title": "numberBoolean",
                            "type": "number",
                            "enum": [ 0, 1 ]
                          }
                        ],
                        "description": "If set, the results are filtered by note to deal pinning state (`deal_id` is also required)"
                      },
                      "pinned_to_organization_flag": {
                        "allOf": [
                          {
                            "title": "numberBoolean",
                            "type": "number",
                            "enum": [ 0, 1 ]
                          }
                        ],
                        "description": "If set, the results are filtered by note to organization pinning state (`org_id` is also required)"
                      },
                      "pinned_to_person_flag": {
                        "allOf": [
                          {
                            "title": "numberBoolean",
                            "type": "number",
                            "enum": [ 0, 1 ]
                          }
                        ],
                        "description": "If set, the results are filtered by note to person pinning state (`person_id` is also required)"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Add, update or get a note",
            "content": {
              "application/json": {
                "schema": {
                  "title": "oneNote",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "If the request was successful or not"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "description": "The ID of the note"
                        },
                        "active_flag": {
                          "type": "boolean",
                          "description": "Whether the note is active or deleted"
                        },
                        "add_time": {
                          "type": "string",
                          "description": "The creation date and time of the note"
                        },
                        "content": {
                          "type": "string",
                          "description": "The content of the note in HTML format. Subject to sanitization on the back-end."
                        },
                        "deal": {
                          "type": "object",
                          "description": "The deal this note is attached to",
                          "properties": {
                            "title": {
                              "type": "string",
                              "description": "The title of the deal this note is attached to"
                            }
                          }
                        },
                        "lead_id": {
                          "type": "string",
                          "format": "uuid",
                          "description": "The ID of the lead the note is attached to"
                        },
                        "deal_id": {
                          "type": "integer",
                          "description": "The ID of the deal the note is attached to"
                        },
                        "last_update_user_id": {
                          "type": "integer",
                          "description": "The ID of the user who last updated the note"
                        },
                        "org_id": {
                          "type": "integer",
                          "description": "The ID of the organization the note is attached to"
                        },
                        "organization": {
                          "type": "object",
                          "description": "The organization the note is attached to",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "The name of the organization the note is attached to"
                            }
                          }
                        },
                        "person": {
                          "type": "object",
                          "description": "The person the note is attached to",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "The name of the person the note is attached to"
                            }
                          }
                        },
                        "person_id": {
                          "type": "integer",
                          "description": "The ID of the person the note is attached to"
                        },
                        "pinned_to_deal_flag": {
                          "type": "boolean",
                          "description": "If true, the results are filtered by note to deal pinning state"
                        },
                        "pinned_to_organization_flag": {
                          "type": "boolean",
                          "description": "If true, the results are filtered by note to organization pinning state"
                        },
                        "pinned_to_person_flag": {
                          "type": "boolean",
                          "description": "If true, the results are filtered by note to person pinning state"
                        },
                        "update_time": {
                          "type": "string",
                          "description": "The last updated date and time of the note"
                        },
                        "user": {
                          "type": "object",
                          "description": "The user who created the note",
                          "properties": {
                            "email": {
                              "type": "string",
                              "description": "The email of the note creator"
                            },
                            "icon_url": {
                              "type": "string",
                              "description": "The URL of the note creator avatar picture"
                            },
                            "is_you": {
                              "type": "boolean",
                              "description": "Whether the note is created by you or not"
                            },
                            "name": {
                              "type": "string",
                              "description": "The name of the note creator"
                            }
                          }
                        },
                        "user_id": {
                          "type": "integer",
                          "description": "The ID of the note creator"
                        }
                      }
                    }
                  }
                },
                "example": {
                  "success": true,
                  "data": {
                    "id": 1,
                    "active_flag": true,
                    "add_time": "2019-12-09 13:59:21",
                    "content": "abc",
                    "deal": { "title": "Deal title" },
                    "lead_id": "adf21080-0e10-11eb-879b-05d71fb426ec",
                    "deal_id": 1,
                    "last_update_user_id": 1,
                    "org_id": 1,
                    "organization": { "name": "Organization name" },
                    "person": { "name": "Person name" },
                    "person_id": 1,
                    "pinned_to_lead_flag": false,
                    "pinned_to_deal_flag": true,
                    "pinned_to_organization_flag": false,
                    "pinned_to_person_flag": false,
                    "update_time": "2019-12-09 14:26:11",
                    "user": {
                      "email": "user@email.com",
                      "icon_url": "https://iconurl.net/profile_120x120_123.jpg",
                      "is_you": true,
                      "name": "User Name"
                    },
                    "user_id": 1
                  }
                }
              }
            }
          }
        }
      }
    },
    "/notes/{id}/comments": {
      "get": {
        "summary": "Get all comments for a note",
        "description": "Returns all comments associated with a note.",
        "operationId": "getNoteComments",
        "tags": [ "Notes" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the note",
            "required": true,
            "schema": { "type": "integer" }
          },
          {
            "in": "query",
            "name": "start",
            "description": "Pagination start",
            "schema": { "type": "integer", "default": 0 }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Items shown per page",
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "Get all comments",
            "content": {
              "application/json": {
                "schema": {
                  "title": "getComments",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "If the request was successful or not"
                    },
                    "data": {
                      "type": "array",
                      "description": "The array of comments",
                      "items": {
                        "type": "object",
                        "properties": {
                          "uuid": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The ID of the note"
                          },
                          "active_flag": {
                            "type": "boolean",
                            "description": "Whether the note is active or deleted"
                          },
                          "add_time": {
                            "type": "string",
                            "description": "The creation date and time of the note"
                          },
                          "update_time": {
                            "type": "string",
                            "description": "The creation date and time of the note"
                          },
                          "content": {
                            "type": "string",
                            "description": "The content of the note in HTML format. Subject to sanitization on the back-end."
                          },
                          "object_id": {
                            "type": "string",
                            "description": "The ID of the object that the comment is attached to, will be the id of the note"
                          },
                          "object_type": {
                            "type": "string",
                            "description": "The type of object that the comment is attached to, will be \"note\""
                          },
                          "user_id": {
                            "type": "integer",
                            "description": "The ID of the user who created the comment"
                          },
                          "updater_id": {
                            "type": "integer",
                            "description": "The ID of the user who last updated the comment"
                          },
                          "company_id": {
                            "type": "integer",
                            "description": "The ID of the company"
                          }
                        }
                      }
                    },
                    "additional_data": {
                      "type": "object",
                      "properties": {
                        "pagination": {
                          "type": "object",
                          "description": "The pagination details of the list",
                          "allOf": [
                            {
                              "description": "The additional data of the list",
                              "type": "object",
                              "properties": {
                                "start": {
                                  "type": "integer",
                                  "description": "Pagination start"
                                },
                                "limit": {
                                  "type": "integer",
                                  "description": "Items shown per page"
                                },
                                "more_items_in_collection": {
                                  "type": "boolean",
                                  "description": "If there are more list items in the collection than displayed or not"
                                }
                              }
                            },
                            {
                              "type": "object",
                              "properties": {
                                "next_start": {
                                  "type": "integer",
                                  "description": "Next pagination start"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  }
                },
                "example": {
                  "success": true,
                  "data": [
                    {
                      "uuid": "46c3b0e1-db35-59ca-1828-4817378dff71",
                      "active_flag": true,
                      "add_time": "2021-06-22T07:18:16.750Z",
                      "company_id": 77,
                      "content": "This is a comment",
                      "object_id": "725",
                      "object_type": "note",
                      "update_time": "2021-06-22T07:18:25.648Z",
                      "updater_id": 8877,
                      "user_id": 8877
                    }
                  ],
                  "additional_data": {
                    "pagination": {
                      "start": 0,
                      "limit": 100,
                      "more_items_in_collection": true,
                      "next_start": 100
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add a comment to a note",
        "description": "Adds a new comment to a note.",
        "operationId": "addNoteComment",
        "tags": [ "Notes" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the note",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "CommentPostPutObject",
                "type": "object",
                "required": [ "content" ],
                "properties": {
                  "content": {
                    "type": "string",
                    "description": "The content of the comment in HTML format. Subject to sanitization on the back-end."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Add, update or get a comment",
            "content": {
              "application/json": {
                "schema": {
                  "title": "oneComment",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "If the request was successful or not"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "uuid": {
                          "type": "string",
                          "format": "uuid",
                          "description": "The ID of the note"
                        },
                        "active_flag": {
                          "type": "boolean",
                          "description": "Whether the note is active or deleted"
                        },
                        "add_time": {
                          "type": "string",
                          "description": "The creation date and time of the note"
                        },
                        "update_time": {
                          "type": "string",
                          "description": "The creation date and time of the note"
                        },
                        "content": {
                          "type": "string",
                          "description": "The content of the note in HTML format. Subject to sanitization on the back-end."
                        },
                        "object_id": {
                          "type": "string",
                          "description": "The ID of the object that the comment is attached to, will be the id of the note"
                        },
                        "object_type": {
                          "type": "string",
                          "description": "The type of object that the comment is attached to, will be \"note\""
                        },
                        "user_id": {
                          "type": "integer",
                          "description": "The ID of the user who created the comment"
                        },
                        "updater_id": {
                          "type": "integer",
                          "description": "The ID of the user who last updated the comment"
                        },
                        "company_id": {
                          "type": "integer",
                          "description": "The ID of the company"
                        }
                      }
                    }
                  }
                },
                "example": {
                  "success": true,
                  "data": {
                    "uuid": "46c3b0e1-db35-59ca-1828-4817378dff71",
                    "active_flag": true,
                    "add_time": "2021-06-22T07:18:16.750Z",
                    "company_id": 77,
                    "content": "This is a comment",
                    "object_id": "725",
                    "object_type": "note",
                    "update_time": "2021-06-22T07:18:25.648Z",
                    "updater_id": 8877,
                    "user_id": 8877
                  }
                }
              }
            }
          }
        }
      }
    },
    "/notes/{id}/comments/{commentId}": {
      "get": {
        "summary": "Get one comment",
        "description": "Returns the details of a comment.",
        "operationId": "getComment",
        "tags": [ "Notes" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the note",
            "required": true,
            "schema": { "type": "integer" }
          },
          {
            "in": "path",
            "name": "commentId",
            "description": "The ID of the comment",
            "required": true,
            "schema": { "type": "string", "format": "uuid" }
          }
        ],
        "responses": {
          "200": {
            "description": "Add, update or get a comment",
            "content": {
              "application/json": {
                "schema": {
                  "title": "oneComment",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "If the request was successful or not"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "uuid": {
                          "type": "string",
                          "format": "uuid",
                          "description": "The ID of the note"
                        },
                        "active_flag": {
                          "type": "boolean",
                          "description": "Whether the note is active or deleted"
                        },
                        "add_time": {
                          "type": "string",
                          "description": "The creation date and time of the note"
                        },
                        "update_time": {
                          "type": "string",
                          "description": "The creation date and time of the note"
                        },
                        "content": {
                          "type": "string",
                          "description": "The content of the note in HTML format. Subject to sanitization on the back-end."
                        },
                        "object_id": {
                          "type": "string",
                          "description": "The ID of the object that the comment is attached to, will be the id of the note"
                        },
                        "object_type": {
                          "type": "string",
                          "description": "The type of object that the comment is attached to, will be \"note\""
                        },
                        "user_id": {
                          "type": "integer",
                          "description": "The ID of the user who created the comment"
                        },
                        "updater_id": {
                          "type": "integer",
                          "description": "The ID of the user who last updated the comment"
                        },
                        "company_id": {
                          "type": "integer",
                          "description": "The ID of the company"
                        }
                      }
                    }
                  }
                },
                "example": {
                  "success": true,
                  "data": {
                    "uuid": "46c3b0e1-db35-59ca-1828-4817378dff71",
                    "active_flag": true,
                    "add_time": "2021-06-22T07:18:16.750Z",
                    "company_id": 77,
                    "content": "This is a comment",
                    "object_id": "725",
                    "object_type": "note",
                    "update_time": "2021-06-22T07:18:25.648Z",
                    "updater_id": 8877,
                    "user_id": 8877
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update a comment related to a note",
        "description": "Updates a comment related to a note.",
        "operationId": "updateCommentForNote",
        "tags": [ "Notes" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the note",
            "required": true,
            "schema": { "type": "integer" }
          },
          {
            "in": "path",
            "name": "commentId",
            "description": "The ID of the comment",
            "required": true,
            "schema": { "type": "string", "format": "uuid" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "CommentPostPutObject",
                "type": "object",
                "required": [ "content" ],
                "properties": {
                  "content": {
                    "type": "string",
                    "description": "The content of the comment in HTML format. Subject to sanitization on the back-end."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Add, update or get a comment",
            "content": {
              "application/json": {
                "schema": {
                  "title": "oneComment",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "If the request was successful or not"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "uuid": {
                          "type": "string",
                          "format": "uuid",
                          "description": "The ID of the note"
                        },
                        "active_flag": {
                          "type": "boolean",
                          "description": "Whether the note is active or deleted"
                        },
                        "add_time": {
                          "type": "string",
                          "description": "The creation date and time of the note"
                        },
                        "update_time": {
                          "type": "string",
                          "description": "The creation date and time of the note"
                        },
                        "content": {
                          "type": "string",
                          "description": "The content of the note in HTML format. Subject to sanitization on the back-end."
                        },
                        "object_id": {
                          "type": "string",
                          "description": "The ID of the object that the comment is attached to, will be the id of the note"
                        },
                        "object_type": {
                          "type": "string",
                          "description": "The type of object that the comment is attached to, will be \"note\""
                        },
                        "user_id": {
                          "type": "integer",
                          "description": "The ID of the user who created the comment"
                        },
                        "updater_id": {
                          "type": "integer",
                          "description": "The ID of the user who last updated the comment"
                        },
                        "company_id": {
                          "type": "integer",
                          "description": "The ID of the company"
                        }
                      }
                    }
                  }
                },
                "example": {
                  "success": true,
                  "data": {
                    "uuid": "46c3b0e1-db35-59ca-1828-4817378dff71",
                    "active_flag": true,
                    "add_time": "2021-06-22T07:18:16.750Z",
                    "company_id": 77,
                    "content": "This is a comment",
                    "object_id": "725",
                    "object_type": "note",
                    "update_time": "2021-06-22T07:18:25.648Z",
                    "updater_id": 8877,
                    "user_id": 8877
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a comment related to a note",
        "description": "Deletes a comment.",
        "operationId": "deleteComment",
        "tags": [ "Notes" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the note",
            "required": true,
            "schema": { "type": "integer" }
          },
          {
            "in": "path",
            "name": "commentId",
            "description": "The ID of the comment",
            "required": true,
            "schema": { "type": "string", "format": "uuid" }
          }
        ],
        "responses": {
          "200": {
            "description": "Delete a comment",
            "content": {
              "application/json": {
                "schema": {
                  "title": "deleteComment",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "If the request was successful or not"
                    },
                    "data": {
                      "type": "boolean",
                      "description": "If the response is successful or not"
                    }
                  }
                },
                "example": { "success": true, "data": true }
              }
            }
          }
        }
      }
    },
    "/noteFields": {
      "get": {
        "summary": "Get all note fields",
        "description": "Returns data about all note fields.",
        "operationId": "getNoteFields",
        "tags": [ "NoteFields" ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "getNoteFields",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer",
                                "description": "The ID of the field"
                              },
                              "key": {
                                "type": "string",
                                "description": "The key of the field"
                              },
                              "name": {
                                "type": "string",
                                "description": "The name of the field"
                              },
                              "field_type": {
                                "type": "string",
                                "enum": [
                                  "address",
                                  "date",
                                  "daterange",
                                  "double",
                                  "enum",
                                  "monetary",
                                  "org",
                                  "people",
                                  "phone",
                                  "set",
                                  "text",
                                  "time",
                                  "timerange",
                                  "user",
                                  "varchar",
                                  "varchar_auto",
                                  "visible_to"
                                ],
                                "description": "The type of the field<table><tr><th>Value</th><th>Description</th></tr><tr><td>`address`</td><td>Address field (has multiple subfields, autocompleted by Google Maps)</td></tr><tr><td>`date`</td><td>Date (format YYYY-MM-DD)</td></tr><tr><td>`daterange`</td><td>Date-range field (has a start date and end date value, both YYYY-MM-DD)</td></tr><tr><td>`double`</td><td>Numeric value</td></tr><tr><td>`enum`</td><td>Options field with a single possible chosen option</td></tr><tr></tr><tr><td>`monetary`</td><td>Monetary field (has a numeric value and a currency value)</td></tr><tr><td>`org`</td><td>Organization field (contains an organization ID which is stored on the same account)</td></tr><tr><td>`people`</td><td>Person field (contains a person ID which is stored on the same account)</td></tr><tr><td>`phone`</td><td>Phone field (up to 255 numbers and/or characters)</td></tr><tr><td>`set`</td><td>Options field with a possibility of having multiple chosen options</td></tr><tr><td>`text`</td><td>Long text (up to 65k characters)</td></tr><tr><td>`time`</td><td>Time field (format HH:MM:SS)</td></tr><tr><td>`timerange`</td><td>Time-range field (has a start time and end time value, both HH:MM:SS)</td></tr><tr><td>`user`</td><td>User field (contains a user ID of another Pipedrive user)</td></tr><tr><td>`varchar`</td><td>Text (up to 255 characters)</td></tr><tr><td>`varchar_auto`</td><td>Autocomplete text (up to 255 characters)</td></tr><tr><td>`visible_to`</td><td>System field that keeps item's visibility setting</td></tr></table>"
                              },
                              "active_flag": {
                                "type": "boolean",
                                "description": "The active flag of the field"
                              },
                              "edit_flag": {
                                "type": "boolean",
                                "description": "The edit flag of the field"
                              },
                              "bulk_edit_allowed": {
                                "type": "boolean",
                                "description": "Not used"
                              },
                              "mandatory_flag": {
                                "type": "boolean",
                                "description": "Whether or not the field is mandatory"
                              },
                              "options": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "id": { "type": "integer" },
                                    "label": { "type": "string" }
                                  }
                                },
                                "description": "The options of the field. When there are no options, `null` is returned."
                              }
                            }
                          }
                        },
                        "additional_data": {
                          "description": "The additional data of the list",
                          "type": "object",
                          "properties": {
                            "start": {
                              "type": "integer",
                              "description": "Pagination start"
                            },
                            "limit": {
                              "type": "integer",
                              "description": "Items shown per page"
                            },
                            "more_items_in_collection": {
                              "type": "boolean",
                              "description": "If there are more list items in the collection than displayed or not"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "success": true,
                  "data": [
                    {
                      "id": 1,
                      "key": "content",
                      "name": "Content",
                      "field_type": "text",
                      "active_flag": true,
                      "edit_flag": false,
                      "bulk_edit_allowed": true,
                      "mandatory_flag": true
                    },
                    {
                      "id": 2,
                      "key": "pinned_to_deal_flag",
                      "name": "Note is pinned to deal",
                      "field_type": "enum",
                      "active_flag": true,
                      "edit_flag": true,
                      "bulk_edit_allowed": true,
                      "options": [
                        { "id": 1, "label": "Yes" },
                        { "id": 0, "label": "No" }
                      ],
                      "mandatory_flag": true
                    }
                  ],
                  "additional_data": {
                    "pagination": {
                      "start": 0,
                      "limit": 100,
                      "more_items_in_collection": false
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/organizations": {
      "delete": {
        "summary": "Delete multiple organizations in bulk",
        "description": "Marks multiple organizations as deleted. After 30 days, the organizations will be permanently deleted.",
        "operationId": "deleteOrganizations",
        "tags": [ "Organizations" ],
        "parameters": [
          {
            "in": "query",
            "name": "ids",
            "schema": { "type": "string" },
            "required": true,
            "description": "The comma-separated IDs that will be deleted"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "deleteOrganizations",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "If the request was successful or not"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "array",
                          "description": "The IDs of the organizations that were deleted",
                          "items": { "type": "number" }
                        }
                      }
                    }
                  }
                },
                "example": { "success": true, "data": { "id": [ 123, 100 ] } }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get all organizations",
        "description": "Returns all organizations.",
        "operationId": "getOrganizations",
        "tags": [ "Organizations" ],
        "parameters": [
          {
            "in": "query",
            "name": "user_id",
            "schema": { "type": "integer" },
            "description": "If supplied, only organizations owned by the given user will be returned. However, `filter_id` takes precedence over `user_id` when both are supplied."
          },
          {
            "in": "query",
            "name": "filter_id",
            "schema": { "type": "integer" },
            "description": "The ID of the filter to use"
          },
          {
            "in": "query",
            "name": "first_char",
            "schema": { "type": "string" },
            "description": "If supplied, only organizations whose name starts with the specified letter will be returned (case insensitive)"
          },
          {
            "in": "query",
            "name": "start",
            "description": "Pagination start",
            "schema": { "type": "integer", "default": 0 }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Items shown per page",
            "schema": { "type": "integer" }
          },
          {
            "in": "query",
            "name": "sort",
            "schema": { "type": "string" },
            "description": "The field names and sorting mode separated by a comma (`field_name_1 ASC`, `field_name_2 DESC`). Only first-level field keys are supported (no nested keys)."
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "getOrganizations",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "description": "The array of organizations",
                          "items": {
                            "type": "object",
                            "title": "baseOrganizationItem",
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "integer",
                                    "description": "The ID of the organization"
                                  },
                                  "company_id": {
                                    "type": "integer",
                                    "description": "The ID of the company related to the organization"
                                  },
                                  "owner_id": {
                                    "title": "owner",
                                    "allOf": [
                                      {
                                        "properties": {
                                          "id": {
                                            "type": "integer",
                                            "description": "The ID of the user"
                                          },
                                          "name": {
                                            "type": "string",
                                            "description": "The name of the user"
                                          },
                                          "email": {
                                            "type": "string",
                                            "description": "The email of the user"
                                          },
                                          "has_pic": {
                                            "type": "integer",
                                            "description": "Whether the user has picture or not. 0 = No picture, 1 = Has picture."
                                          },
                                          "pic_hash": {
                                            "type": "string",
                                            "nullable": true,
                                            "description": "The user picture hash"
                                          },
                                          "active_flag": {
                                            "type": "boolean",
                                            "description": "Whether the user is active or not"
                                          }
                                        }
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "value": {
                                            "type": "integer",
                                            "description": "The ID of the owner"
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "The name of the organization"
                                  },
                                  "active_flag": {
                                    "type": "boolean",
                                    "description": "Whether the organization is active or not"
                                  },
                                  "picture_id": {
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "properties": {
                                          "value": {
                                            "type": "integer",
                                            "description": "The ID of the picture associated with the item"
                                          }
                                        }
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "item_type": {
                                            "type": "string",
                                            "description": "The type of item the picture is related to"
                                          },
                                          "item_id": {
                                            "type": "integer",
                                            "description": "The ID of related item"
                                          },
                                          "active_flag": {
                                            "type": "boolean",
                                            "description": "Whether the associated picture is active or not"
                                          },
                                          "add_time": {
                                            "type": "string",
                                            "description": "The add time of the picture"
                                          },
                                          "update_time": {
                                            "type": "string",
                                            "description": "The update time of the picture"
                                          },
                                          "added_by_user_id": {
                                            "type": "integer",
                                            "description": "The ID of the user who added the picture"
                                          },
                                          "pictures": {
                                            "type": "object",
                                            "properties": {
                                              "128": {
                                                "type": "string",
                                                "description": "The URL of the 128*128 picture"
                                              },
                                              "512": {
                                                "type": "string",
                                                "description": "The URL of the 512*512 picture"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  "country_code": {
                                    "type": "string",
                                    "description": "The country code of the organization"
                                  },
                                  "first_char": {
                                    "type": "string",
                                    "description": "The first character of the organization name"
                                  },
                                  "add_time": {
                                    "type": "string",
                                    "description": "The creation date and time of the organization"
                                  },
                                  "update_time": {
                                    "type": "string",
                                    "description": "The last updated date and time of the organization"
                                  },
                                  "visible_to": {
                                    "type": "string",
                                    "description": "The visibility group ID of who can see the organization"
                                  },
                                  "label": {
                                    "type": "integer",
                                    "description": "The ID of the label"
                                  },
                                  "owner_name": {
                                    "type": "string",
                                    "description": "The name of the organization owner"
                                  },
                                  "cc_email": {
                                    "type": "string",
                                    "description": "The BCC email of the organization"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "title": "additionalBaseOrganizationItemInfo",
                                "allOf": [
                                  {
                                    "type": "object",
                                    "title": "organizationCountAndAddressInfo",
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "properties": {
                                          "email_messages_count": {
                                            "type": "integer",
                                            "description": "The count of email messages related to the organization"
                                          },
                                          "people_count": {
                                            "type": "integer",
                                            "description": "The count of persons related to the organization"
                                          },
                                          "activities_count": {
                                            "type": "integer",
                                            "description": "The count of activities related to the organization"
                                          },
                                          "done_activities_count": {
                                            "type": "integer",
                                            "description": "The count of done activities related to the organization"
                                          },
                                          "undone_activities_count": {
                                            "type": "integer",
                                            "description": "The count of undone activities related to the organization"
                                          },
                                          "files_count": {
                                            "type": "integer",
                                            "description": "The count of files related to the organization"
                                          },
                                          "notes_count": {
                                            "type": "integer",
                                            "description": "The count of notes related to the organization"
                                          },
                                          "followers_count": {
                                            "type": "integer",
                                            "description": "The count of followers related to the organization"
                                          }
                                        }
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "address": {
                                            "type": "string",
                                            "description": "The full address of the organization"
                                          },
                                          "address_subpremise": {
                                            "type": "string",
                                            "description": "The sub-premise of the organization location"
                                          },
                                          "address_street_number": {
                                            "type": "string",
                                            "description": "The street number of the organization location"
                                          },
                                          "address_route": {
                                            "type": "string",
                                            "description": "The route of the organization location"
                                          },
                                          "address_sublocality": {
                                            "type": "string",
                                            "description": "The sub-locality of the organization location"
                                          },
                                          "address_locality": {
                                            "type": "string",
                                            "description": "The locality of the organization location"
                                          },
                                          "address_admin_area_level_1": {
                                            "type": "string",
                                            "description": "The level 1 admin area of the organization location"
                                          },
                                          "address_admin_area_level_2": {
                                            "type": "string",
                                            "description": "The level 2 admin area of the organization location"
                                          },
                                          "address_country": {
                                            "type": "string",
                                            "description": "The country of the organization location"
                                          },
                                          "address_postal_code": {
                                            "type": "string",
                                            "description": "The postal code of the organization location"
                                          },
                                          "address_formatted_address": {
                                            "type": "string",
                                            "description": "The formatted organization location"
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  {
                                    "type": "object",
                                    "title": "dealsCountAndActivityInfo",
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "properties": {
                                          "open_deals_count": {
                                            "type": "integer",
                                            "description": "The count of open deals related with the item"
                                          },
                                          "related_open_deals_count": {
                                            "type": "integer",
                                            "description": "The count of related open deals related with the item"
                                          },
                                          "closed_deals_count": {
                                            "type": "integer",
                                            "description": "The count of closed deals related with the item"
                                          },
                                          "related_closed_deals_count": {
                                            "type": "integer",
                                            "description": "The count of related closed deals related with the item"
                                          },
                                          "won_deals_count": {
                                            "type": "integer",
                                            "description": "The count of won deals related with the item"
                                          },
                                          "related_won_deals_count": {
                                            "type": "integer",
                                            "description": "The count of related won deals related with the item"
                                          },
                                          "lost_deals_count": {
                                            "type": "integer",
                                            "description": "The count of lost deals related with the item"
                                          },
                                          "related_lost_deals_count": {
                                            "type": "integer",
                                            "description": "The count of related lost deals related with the item"
                                          }
                                        }
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "next_activity_date": {
                                            "type": "string",
                                            "description": "The date of the next activity associated with the deal"
                                          },
                                          "next_activity_time": {
                                            "type": "string",
                                            "description": "The time of the next activity associated with the deal"
                                          },
                                          "next_activity_id": {
                                            "type": "integer",
                                            "nullable": true,
                                            "description": "The ID of the next activity associated with the deal"
                                          },
                                          "last_activity_id": {
                                            "type": "integer",
                                            "nullable": true,
                                            "description": "The ID of the last activity associated with the deal"
                                          },
                                          "last_activity_date": {
                                            "type": "string",
                                            "nullable": true,
                                            "description": "The date of the last activity associated with the deal"
                                          }
                                        }
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          }
                        },
                        "additional_data": {
                          "type": "object",
                          "properties": {
                            "pagination": {
                              "description": "Pagination details of the list",
                              "type": "object",
                              "properties": {
                                "start": {
                                  "type": "integer",
                                  "description": "Pagination start"
                                },
                                "limit": {
                                  "type": "integer",
                                  "description": "Items shown per page"
                                },
                                "more_items_in_collection": {
                                  "type": "boolean",
                                  "description": "Whether there are more list items in the collection than displayed"
                                },
                                "next_start": {
                                  "type": "integer",
                                  "description": "Next pagination start"
                                }
                              }
                            }
                          }
                        },
                        "related_objects": {
                          "type": "object",
                          "properties": {
                            "organization": {
                              "type": "object",
                              "properties": {
                                "ORGANIZATION_ID": {
                                  "type": "object",
                                  "description": "The ID of the organization associated with the item",
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "integer",
                                          "description": "The ID of the organization associated with the item"
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "The name of the organization associated with the item"
                                        },
                                        "people_count": {
                                          "type": "integer",
                                          "description": "The number of people connected with the organization that is associated with the item"
                                        },
                                        "owner_id": {
                                          "type": "integer",
                                          "description": "The ID of the owner of the organization that is associated with the item"
                                        },
                                        "address": {
                                          "type": "string",
                                          "description": "The address of the organization"
                                        },
                                        "cc_email": {
                                          "type": "string",
                                          "description": "The BCC email of the organization associated with the item"
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            },
                            "user": {
                              "type": "object",
                              "properties": {
                                "USER_ID": {
                                  "type": "object",
                                  "title": "userDataWithId",
                                  "allOf": [
                                    {
                                      "properties": {
                                        "id": {
                                          "type": "integer",
                                          "description": "The ID of the user"
                                        },
                                        "name": {
                                          "type": "string",
                                          "description": "The name of the user"
                                        },
                                        "email": {
                                          "type": "string",
                                          "description": "The email of the user"
                                        },
                                        "has_pic": {
                                          "type": "integer",
                                          "description": "Whether the user has picture or not. 0 = No picture, 1 = Has picture."
                                        },
                                        "pic_hash": {
                                          "type": "string",
                                          "nullable": true,
                                          "description": "The user picture hash"
                                        },
                                        "active_flag": {
                                          "type": "boolean",
                                          "description": "Whether the user is active or not"
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "description": "The ID of the user"
                                    }
                                  ]
                                }
                              }
                            },
                            "picture": {
                              "type": "object",
                              "description": "The picture that is associated with the item",
                              "properties": {
                                "PICTURE_ID": {
                                  "type": "object",
                                  "description": "The ID of the picture",
                                  "allOf": [
                                    {
                                      "allOf": [
                                        {
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "type": "integer",
                                              "description": "The ID of the picture associated with the item"
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "properties": {
                                            "item_type": {
                                              "type": "string",
                                              "description": "The type of item the picture is related to"
                                            },
                                            "item_id": {
                                              "type": "integer",
                                              "description": "The ID of related item"
                                            },
                                            "active_flag": {
                                              "type": "boolean",
                                              "description": "Whether the associated picture is active or not"
                                            },
                                            "add_time": {
                                              "type": "string",
                                              "description": "The add time of the picture"
                                            },
                                            "update_time": {
                                              "type": "string",
                                              "description": "The update time of the picture"
                                            },
                                            "added_by_user_id": {
                                              "type": "integer",
                                              "description": "The ID of the user who added the picture"
                                            },
                                            "pictures": {
                                              "type": "object",
                                              "properties": {
                                                "128": {
                                                  "type": "string",
                                                  "description": "The URL of the 128*128 picture"
                                                },
                                                "512": {
                                                  "type": "string",
                                                  "description": "The URL of the 512*512 picture"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "success": true,
                  "data": [
                    {
                      "id": 1,
                      "company_id": 77,
                      "owner_id": {
                        "id": 10,
                        "name": "Will Smith",
                        "email": "will.smith@pipedrive.com",
                        "has_pic": 0,
                        "pic_hash": "2611ace8ac6a3afe2f69ed56f9e08c6b",
                        "active_flag": true,
                        "value": 10
                      },
                      "name": "Bolt",
                      "open_deals_count": 1,
                      "related_open_deals_count": 2,
                      "closed_deals_count": 3,
                      "related_closed_deals_count": 1,
                      "email_messages_count": 2,
                      "people_count": 1,
                      "activities_count": 2,
                      "done_activities_count": 1,
                      "undone_activities_count": 0,
                      "files_count": 0,
                      "notes_count": 0,
                      "followers_count": 1,
                      "won_deals_count": 0,
                      "related_won_deals_count": 0,
                      "lost_deals_count": 0,
                      "related_lost_deals_count": 0,
                      "active_flag": true,
                      "picture_id": {
                        "item_type": "person",
                        "item_id": 25,
                        "active_flag": true,
                        "add_time": "2020-09-08 08:17:52",
                        "update_time": "0000-00-00 00:00:00",
                        "added_by_user_id": 967055,
                        "pictures": {
                          "128": "https://pipedrive-profile-pics.s3.example.com/f8893852574273f2747bf6ef09d11cf14ac8f269_128.jpg",
                          "512": "https://pipedrive-profile-pics.s3.example.com/f8893852574273f2747bf6ef09d11cfb2ac8f269_512.jpg"
                        },
                        "value": 101
                      },
                      "country_code": "USA",
                      "first_char": "b",
                      "update_time": "2020-09-08 12:14:11",
                      "add_time": "2020-02-25 10:04:08",
                      "visible_to": "3",
                      "next_activity_date": "2019-11-29",
                      "next_activity_time": "11:30:00",
                      "next_activity_id": 128,
                      "last_activity_id": 34,
                      "last_activity_date": "2019-11-28",
                      "label": 7,
                      "address": "Mustamäe tee 3a, 10615 Tallinn",
                      "address_subpremise": "",
                      "address_street_number": "3a",
                      "address_route": "Mustamäe tee",
                      "address_sublocality": "Kristiine",
                      "address_locality": "Tallinn",
                      "address_admin_area_level_1": "Harju maakond",
                      "address_admin_area_level_2": "",
                      "address_country": "Estonia",
                      "address_postal_code": "10616",
                      "address_formatted_address": "Mustamäe tee 3a, 10616 Tallinn, Estonia",
                      "owner_name": "John Doe",
                      "cc_email": "org@pipedrivemail.com"
                    }
                  ],
                  "additional_data": {
                    "pagination": {
                      "start": 0,
                      "limit": 100,
                      "more_items_in_collection": false,
                      "next_start": 100
                    }
                  },
                  "related_objects": {
                    "organization": {
                      "1": {
                        "id": 1,
                        "name": "Org Name",
                        "people_count": 1,
                        "owner_id": 123,
                        "address": "Mustamäe tee 3a, 10615 Tallinn",
                        "active_flag": true,
                        "cc_email": "org@pipedrivemail.com"
                      }
                    },
                    "user": {
                      "123": {
                        "id": 123,
                        "name": "Jane Doe",
                        "email": "jane@pipedrive.com",
                        "has_pic": 1,
                        "pic_hash": "2611ace8ac6a3afe2f69ed56f9e08c6b",
                        "active_flag": true
                      }
                    },
                    "picture": {
                      "1": {
                        "id": 1,
                        "item_type": "person",
                        "item_id": 25,
                        "active_flag": true,
                        "add_time": "2020-09-08 08:17:52",
                        "update_time": "0000-00-00 00:00:00",
                        "added_by_user_id": 967055,
                        "pictures": {
                          "128": "https://pipedrive-profile-pics.s3.example.com/f8893852574273f2747bf6ef09d11cfb4ac8f269_128.jpg",
                          "512": "https://pipedrive-profile-pics.s3.example.com/f8893852574273f2747bf6ef09d11cfb4ac8f269_512.jpg"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add an organization",
        "description": "Adds a new organization. Note that you can supply additional custom fields along with the request that are not described here. These custom fields are different for each Pipedrive account and can be recognized by long hashes as keys. To determine which custom fields exists, fetch the organizationFields and look for `key` values. For more information, see the tutorial for <a href=\"https://pipedrive.readme.io/docs/adding-an-organization\" target=\"_blank\" rel=\"noopener noreferrer\">adding an organization</a>.",
        "operationId": "addOrganization",
        "tags": [ "Organizations" ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "addOrganizationRequest",
                "allOf": [
                  {
                    "type": "object",
                    "required": [ "name" ],
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The name of the organization"
                      },
                      "add_time": {
                        "type": "string",
                        "description": "The optional creation date & time of the organization in UTC. Requires admin user API token. Format: YYYY-MM-DD HH:MM:SS"
                      }
                    }
                  },
                  {
                    "title": "basicOrganization",
                    "type": "object",
                    "properties": {
                      "owner_id": {
                        "type": "integer",
                        "description": "The ID of the user who will be marked as the owner of this organization. When omitted, the authorized user ID will be used."
                      },
                      "visible_to": {
                        "type": "string",
                        "allOf": [
                          { "type": "string", "enum": [ "1", "3", "5", "7" ] }
                        ],
                        "description": "The visibility of the organization. If omitted, the visibility will be set to the default visibility setting of this item type for the authorized user. Read more about visibility groups <a href=\"https://support.pipedrive.com/en/article/visibility-groups\" target=\"_blank\" rel=\"noopener noreferrer\">here</a>.<h4>Essential / Advanced plan</h4><table><tr><th style=\"width:40px\">Value</th><th>Description</th></tr><tr><td>`1`</td><td>Owner &amp; followers</td><tr><td>`3`</td><td>Entire company</td></tr></table><h4>Professional / Enterprise plan</h4><table><tr><th style=\"width:40px\">Value</th><th>Description</th></tr><tr><td>`1`</td><td>Owner only</td><tr><td>`3`</td><td>Owner's visibility group</td></tr><tr><td>`5`</td><td>Owner's visibility group and sub-groups</td></tr><tr><td>`7`</td><td>Entire company</td></tr></table>"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "addOrganization",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "title": "baseOrganizationItemWithEditNameFlag",
                          "allOf": [
                            {
                              "type": "object",
                              "title": "baseOrganizationItem",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "integer",
                                      "description": "The ID of the organization"
                                    },
                                    "company_id": {
                                      "type": "integer",
                                      "description": "The ID of the company related to the organization"
                                    },
                                    "owner_id": {
                                      "title": "owner",
                                      "allOf": [
                                        {
                                          "properties": {
                                            "id": {
                                              "type": "integer",
                                              "description": "The ID of the user"
                                            },
                                            "name": {
                                              "type": "string",
                                              "description": "The name of the user"
                                            },
                                            "email": {
                                              "type": "string",
                                              "description": "The email of the user"
                                            },
                                            "has_pic": {
                                              "type": "integer",
                                              "description": "Whether the user has picture or not. 0 = No picture, 1 = Has picture."
                                            },
                                            "pic_hash": {
                                              "type": "string",
                                              "nullable": true,
                                              "description": "The user picture hash"
                                            },
                                            "active_flag": {
                                              "type": "boolean",
                                              "description": "Whether the user is active or not"
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "properties": {
                                            "value": {
                                              "type": "integer",
                                              "description": "The ID of the owner"
                                            }
                                          }
                                        }
                                      ]
                                    },
                                    "name": {
                                      "type": "string",
                                      "description": "The name of the organization"
                                    },
                                    "active_flag": {
                                      "type": "boolean",
                                      "description": "Whether the organization is active or not"
                                    },
                                    "picture_id": {
                                      "allOf": [
                                        {
                                          "type": "object",
                                          "properties": {
                                            "value": {
                                              "type": "integer",
                                              "description": "The ID of the picture associated with the item"
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "properties": {
                                            "item_type": {
                                              "type": "string",
                                              "description": "The type of item the picture is related to"
                                            },
                                            "item_id": {
                                              "type": "integer",
                                              "description": "The ID of related item"
                                            },
                                            "active_flag": {
                                              "type": "boolean",
                                              "description": "Whether the associated picture is active or not"
                                            },
                                            "add_time": {
                                              "type": "string",
                                              "description": "The add time of the picture"
                                            },
                                            "update_time": {
                                              "type": "string",
                                              "description": "The update time of the picture"
                                            },
                                            "added_by_user_id": {
                                              "type": "integer",
                                              "description": "The ID of the user who added the picture"
                                            },
                                            "pictures": {
                                              "type": "object",
                                              "properties": {
                                                "128": {
                                                  "type": "string",
                                                  "description": "The URL of the 128*128 picture"
                                                },
                                                "512": {
                                                  "type": "string",
                                                  "description": "The URL of the 512*512 picture"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      ]
                                    },
                                    "country_code": {
                                      "type": "string",
                                      "description": "The country code of the organization"
                                    },
                                    "first_char": {
                                      "type": "string",
                                      "description": "The first character of the organization name"
                                    },
                                    "add_time": {
                                      "type": "string",
                                      "description": "The creation date and time of the organization"
                                    },
                                    "update_time": {
                                      "type": "string",
                                      "description": "The last updated date and time of the organization"
                                    },
                                    "visible_to": {
                                      "type": "string",
                                      "description": "The visibility group ID of who can see the organization"
                                    },
                                    "label": {
                                      "type": "integer",
                                      "description": "The ID of the label"
                                    },
                                    "owner_name": {
                                      "type": "string",
                                      "description": "The name of the organization owner"
                                    },
                                    "cc_email": {
                                      "type": "string",
                                      "description": "The BCC email of the organization"
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "title": "additionalBaseOrganizationItemInfo",
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "title": "organizationCountAndAddressInfo",
                                      "allOf": [
                                        {
                                          "type": "object",
                                          "properties": {
                                            "email_messages_count": {
                                              "type": "integer",
                                              "description": "The count of email messages related to the organization"
                                            },
                                            "people_count": {
                                              "type": "integer",
                                              "description": "The count of persons related to the organization"
                                            },
                                            "activities_count": {
                                              "type": "integer",
                                              "description": "The count of activities related to the organization"
                                            },
                                            "done_activities_count": {
                                              "type": "integer",
                                              "description": "The count of done activities related to the organization"
                                            },
                                            "undone_activities_count": {
                                              "type": "integer",
                                              "description": "The count of undone activities related to the organization"
                                            },
                                            "files_count": {
                                              "type": "integer",
                                              "description": "The count of files related to the organization"
                                            },
                                            "notes_count": {
                                              "type": "integer",
                                              "description": "The count of notes related to the organization"
                                            },
                                            "followers_count": {
                                              "type": "integer",
                                              "description": "The count of followers related to the organization"
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "properties": {
                                            "address": {
                                              "type": "string",
                                              "description": "The full address of the organization"
                                            },
                                            "address_subpremise": {
                                              "type": "string",
                                              "description": "The sub-premise of the organization location"
                                            },
                                            "address_street_number": {
                                              "type": "string",
                                              "description": "The street number of the organization location"
                                            },
                                            "address_route": {
                                              "type": "string",
                                              "description": "The route of the organization location"
                                            },
                                            "address_sublocality": {
                                              "type": "string",
                                              "description": "The sub-locality of the organization location"
                                            },
                                            "address_locality": {
                                              "type": "string",
                                              "description": "The locality of the organization location"
                                            },
                                            "address_admin_area_level_1": {
                                              "type": "string",
                                              "description": "The level 1 admin area of the organization location"
                                            },
                                            "address_admin_area_level_2": {
                                              "type": "string",
                                              "description": "The level 2 admin area of the organization location"
                                            },
                                            "address_country": {
                                              "type": "string",
                                              "description": "The country of the organization location"
                                            },
                                            "address_postal_code": {
                                              "type": "string",
                                              "description": "The postal code of the organization location"
                                            },
                                            "address_formatted_address": {
                                              "type": "string",
                                              "description": "The formatted organization location"
                                            }
                                          }
                                        }
                                      ]
                                    },
                                    {
                                      "type": "object",
                                      "title": "dealsCountAndActivityInfo",
                                      "allOf": [
                                        {
                                          "type": "object",
                                          "properties": {
                                            "open_deals_count": {
                                              "type": "integer",
                                              "description": "The count of open deals related with the item"
                                            },
                                            "related_open_deals_count": {
                                              "type": "integer",
                                              "description": "The count of related open deals related with the item"
                                            },
                                            "closed_deals_count": {
                                              "type": "integer",
                                              "description": "The count of closed deals related with the item"
                                            },
                                            "related_closed_deals_count": {
                                              "type": "integer",
                                              "description": "The count of related closed deals related with the item"
                                            },
                                            "won_deals_count": {
                                              "type": "integer",
                                              "description": "The count of won deals related with the item"
                                            },
                                            "related_won_deals_count": {
                                              "type": "integer",
                                              "description": "The count of related won deals related with the item"
                                            },
                                            "lost_deals_count": {
                                              "type": "integer",
                                              "description": "The count of lost deals related with the item"
                                            },
                                            "related_lost_deals_count": {
                                              "type": "integer",
                                              "description": "The count of related lost deals related with the item"
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "properties": {
                                            "next_activity_date": {
                                              "type": "string",
                                              "description": "The date of the next activity associated with the deal"
                                            },
                                            "next_activity_time": {
                                              "type": "string",
                                              "description": "The time of the next activity associated with the deal"
                                            },
                                            "next_activity_id": {
                                              "type": "integer",
                                              "nullable": true,
                                              "description": "The ID of the next activity associated with the deal"
                                            },
                                            "last_activity_id": {
                                              "type": "integer",
                                              "nullable": true,
                                              "description": "The ID of the last activity associated with the deal"
                                            },
                                            "last_activity_date": {
                                              "type": "string",
                                              "nullable": true,
                                              "description": "The date of the last activity associated with the deal"
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "object",
                              "properties": {
                                "edit_name": {
                                  "type": "boolean",
                                  "description": "If the company ID of the organization and company ID of the request is same or not"
                                }
                              }
                            }
                          ]
                        },
                        "related_objects": {
                          "type": "object",
                          "properties": {
                            "organization": {
                              "type": "object",
                              "properties": {
                                "ORGANIZATION_ID": {
                                  "type": "object",
                                  "description": "The ID of the organization associated with the item",
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "integer",
                                          "description": "The ID of the organization associated with the item"
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "The name of the organization associated with the item"
                                        },
                                        "people_count": {
                                          "type": "integer",
                                          "description": "The number of people connected with the organization that is associated with the item"
                                        },
                                        "owner_id": {
                                          "type": "integer",
                                          "description": "The ID of the owner of the organization that is associated with the item"
                                        },
                                        "address": {
                                          "type": "string",
                                          "description": "The address of the organization"
                                        },
                                        "cc_email": {
                                          "type": "string",
                                          "description": "The BCC email of the organization associated with the item"
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            },
                            "user": {
                              "type": "object",
                              "properties": {
                                "USER_ID": {
                                  "type": "object",
                                  "title": "userDataWithId",
                                  "allOf": [
                                    {
                                      "properties": {
                                        "id": {
                                          "type": "integer",
                                          "description": "The ID of the user"
                                        },
                                        "name": {
                                          "type": "string",
                                          "description": "The name of the user"
                                        },
                                        "email": {
                                          "type": "string",
                                          "description": "The email of the user"
                                        },
                                        "has_pic": {
                                          "type": "integer",
                                          "description": "Whether the user has picture or not. 0 = No picture, 1 = Has picture."
                                        },
                                        "pic_hash": {
                                          "type": "string",
                                          "nullable": true,
                                          "description": "The user picture hash"
                                        },
                                        "active_flag": {
                                          "type": "boolean",
                                          "description": "Whether the user is active or not"
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "description": "The ID of the user"
                                    }
                                  ]
                                }
                              }
                            },
                            "picture": {
                              "type": "object",
                              "description": "The picture that is associated with the item",
                              "properties": {
                                "PICTURE_ID": {
                                  "type": "object",
                                  "description": "The ID of the picture",
                                  "allOf": [
                                    {
                                      "allOf": [
                                        {
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "type": "integer",
                                              "description": "The ID of the picture associated with the item"
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "properties": {
                                            "item_type": {
                                              "type": "string",
                                              "description": "The type of item the picture is related to"
                                            },
                                            "item_id": {
                                              "type": "integer",
                                              "description": "The ID of related item"
                                            },
                                            "active_flag": {
                                              "type": "boolean",
                                              "description": "Whether the associated picture is active or not"
                                            },
                                            "add_time": {
                                              "type": "string",
                                              "description": "The add time of the picture"
                                            },
                                            "update_time": {
                                              "type": "string",
                                              "description": "The update time of the picture"
                                            },
                                            "added_by_user_id": {
                                              "type": "integer",
                                              "description": "The ID of the user who added the picture"
                                            },
                                            "pictures": {
                                              "type": "object",
                                              "properties": {
                                                "128": {
                                                  "type": "string",
                                                  "description": "The URL of the 128*128 picture"
                                                },
                                                "512": {
                                                  "type": "string",
                                                  "description": "The URL of the 512*512 picture"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "success": true,
                  "data": {
                    "id": 1,
                    "company_id": 77,
                    "owner_id": {
                      "id": 10,
                      "name": "Will Smith",
                      "email": "will.smith@pipedrive.com",
                      "has_pic": 0,
                      "pic_hash": "2611ace8ac6a3afe2f69ed56f9e08c6b",
                      "active_flag": true,
                      "value": 10
                    },
                    "name": "Bolt",
                    "open_deals_count": 1,
                    "related_open_deals_count": 2,
                    "closed_deals_count": 3,
                    "related_closed_deals_count": 1,
                    "email_messages_count": 2,
                    "people_count": 1,
                    "activities_count": 2,
                    "done_activities_count": 1,
                    "undone_activities_count": 0,
                    "files_count": 0,
                    "notes_count": 0,
                    "followers_count": 1,
                    "won_deals_count": 0,
                    "related_won_deals_count": 0,
                    "lost_deals_count": 0,
                    "related_lost_deals_count": 0,
                    "active_flag": true,
                    "picture_id": {
                      "item_type": "person",
                      "item_id": 25,
                      "active_flag": true,
                      "add_time": "2020-09-08 08:17:52",
                      "update_time": "0000-00-00 00:00:00",
                      "added_by_user_id": 967055,
                      "pictures": {
                        "128": "https://pipedrive-profile-pics.s3.example.com/f8893852574273f2747bf6ef09d11cf14ac8f269_128.jpg",
                        "512": "https://pipedrive-profile-pics.s3.example.com/f8893852574273f2747bf6ef09d11cfb2ac8f269_512.jpg"
                      },
                      "value": 101
                    },
                    "country_code": "USA",
                    "first_char": "b",
                    "update_time": "2020-09-08 12:14:11",
                    "add_time": "2020-02-25 10:04:08",
                    "visible_to": "3",
                    "next_activity_date": "2019-11-29",
                    "next_activity_time": "11:30:00",
                    "next_activity_id": 128,
                    "last_activity_id": 34,
                    "last_activity_date": "2019-11-28",
                    "label": 7,
                    "address": "Mustamäe tee 3a, 10615 Tallinn",
                    "address_subpremise": "",
                    "address_street_number": "3a",
                    "address_route": "Mustamäe tee",
                    "address_sublocality": "Kristiine",
                    "address_locality": "Tallinn",
                    "address_admin_area_level_1": "Harju maakond",
                    "address_admin_area_level_2": "",
                    "address_country": "Estonia",
                    "address_postal_code": "10616",
                    "address_formatted_address": "Mustamäe tee 3a, 10616 Tallinn, Estonia",
                    "owner_name": "John Doe",
                    "cc_email": "org@pipedrivemail.com"
                  },
                  "related_objects": {
                    "organization": {
                      "1": {
                        "id": 1,
                        "name": "Org Name",
                        "people_count": 1,
                        "owner_id": 123,
                        "address": "Mustamäe tee 3a, 10615 Tallinn",
                        "active_flag": true,
                        "cc_email": "org@pipedrivemail.com"
                      }
                    },
                    "user": {
                      "123": {
                        "id": 123,
                        "name": "Jane Doe",
                        "email": "jane@pipedrive.com",
                        "has_pic": 1,
                        "pic_hash": "2611ace8ac6a3afe2f69ed56f9e08c6b",
                        "active_flag": true
                      }
                    },
                    "picture": {
                      "1": {
                        "id": 1,
                        "item_type": "person",
                        "item_id": 25,
                        "active_flag": true,
                        "add_time": "2020-09-08 08:17:52",
                        "update_time": "0000-00-00 00:00:00",
                        "added_by_user_id": 967055,
                        "pictures": {
                          "128": "https://pipedrive-profile-pics.s3.example.com/f8893852574273f2747bf6ef09d11cfb4ac8f269_128.jpg",
                          "512": "https://pipedrive-profile-pics.s3.example.com/f8893852574273f2747bf6ef09d11cfb4ac8f269_512.jpg"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/organizations/search": {
      "get": {
        "summary": "Search organizations",
        "description": "Searches all organizations by name, address, notes and/or custom fields. This endpoint is a wrapper of <a href=\"https://developers.pipedrive.com/docs/api/v1/ItemSearch#searchItem\">/v1/itemSearch</a> with a narrower OAuth scope.",
        "operationId": "searchOrganization",
        "tags": [ "Organizations" ],
        "parameters": [
          {
            "in": "query",
            "name": "term",
            "required": true,
            "schema": { "type": "string" },
            "description": "The search term to look for. Minimum 2 characters (or 1 if using `exact_match`). Please note that the search term has to be URL encoded."
          },
          {
            "in": "query",
            "name": "fields",
            "schema": {
              "type": "string",
              "enum": [ "address", "custom_fields", "notes", "name" ]
            },
            "description": "A comma-separated string array. The fields to perform the search from. Defaults to all of them."
          },
          {
            "in": "query",
            "name": "exact_match",
            "schema": { "type": "boolean", "enum": [ true, false ] },
            "description": "When enabled, only full exact matches against the given term are returned. It is <b>not</b> case sensitive."
          },
          {
            "in": "query",
            "name": "start",
            "schema": { "type": "integer", "default": 0 },
            "description": "Pagination start. Note that the pagination is based on main results and does not include related items when using `search_for_related_items` parameter."
          },
          {
            "in": "query",
            "name": "limit",
            "schema": { "type": "integer" },
            "description": "Items shown per page"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "searchOrganization",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "description": "The array of found items",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "result_score": {
                                    "type": "number",
                                    "description": "Search result relevancy"
                                  },
                                  "item": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "integer",
                                        "description": "The ID of the organization"
                                      },
                                      "type": {
                                        "type": "string",
                                        "description": "The type of the item"
                                      },
                                      "name": {
                                        "type": "string",
                                        "description": "The name of the organization"
                                      },
                                      "address": {
                                        "type": "string",
                                        "description": "The address of the organization"
                                      },
                                      "visible_to": {
                                        "type": "integer",
                                        "description": "The visibility of the organization"
                                      },
                                      "owner": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "integer",
                                            "description": "The ID of the owner of the deal"
                                          }
                                        }
                                      },
                                      "custom_fields": {
                                        "type": "array",
                                        "items": { "type": "string" },
                                        "description": "Custom fields"
                                      },
                                      "notes": {
                                        "type": "array",
                                        "description": "An array of notes",
                                        "items": { "type": "string" }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "additional_data": {
                          "type": "object",
                          "properties": {
                            "pagination": {
                              "description": "Pagination details of the list",
                              "type": "object",
                              "properties": {
                                "start": {
                                  "type": "integer",
                                  "description": "Pagination start"
                                },
                                "limit": {
                                  "type": "integer",
                                  "description": "Items shown per page"
                                },
                                "more_items_in_collection": {
                                  "type": "boolean",
                                  "description": "Whether there are more list items in the collection than displayed"
                                },
                                "next_start": {
                                  "type": "integer",
                                  "description": "Next pagination start"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "success": true,
                  "data": {
                    "items": [
                      {
                        "result_score": 0.316,
                        "item": {
                          "id": 1,
                          "type": "organization",
                          "name": "Organization name",
                          "address": "Mustamäe tee 3a, 10615 Tallinn",
                          "visible_to": 3,
                          "owner": { "id": 1 },
                          "custom_fields": [ ],
                          "notes": [ ]
                        }
                      }
                    ]
                  },
                  "additional_data": {
                    "pagination": {
                      "start": 0,
                      "limit": 100,
                      "more_items_in_collection": false
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{id}": {
      "delete": {
        "summary": "Delete an organization",
        "description": "Marks an organization as deleted. After 30 days, the organization will be permanently deleted.",
        "operationId": "deleteOrganization",
        "tags": [ "Organizations" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the organization",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "deleteOrganization",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "If the request was successful or not"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "description": "The ID of the organization that was deleted"
                        }
                      }
                    }
                  }
                },
                "example": { "success": true, "data": { "id": 123 } }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get details of an organization",
        "description": "Returns the details of an organization. Note that this also returns some additional fields which are not present when asking for all organizations. Also note that custom fields appear as long hashes in the resulting data. These hashes can be mapped against the `key` value of organizationFields.",
        "operationId": "getOrganization",
        "tags": [ "Organizations" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the organization",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "getOrganization",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "title": "organizationItem",
                          "allOf": [
                            {
                              "title": "baseOrganizationItemWithEditNameFlag",
                              "allOf": [
                                {
                                  "type": "object",
                                  "title": "baseOrganizationItem",
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "integer",
                                          "description": "The ID of the organization"
                                        },
                                        "company_id": {
                                          "type": "integer",
                                          "description": "The ID of the company related to the organization"
                                        },
                                        "owner_id": {
                                          "title": "owner",
                                          "allOf": [
                                            {
                                              "properties": {
                                                "id": {
                                                  "type": "integer",
                                                  "description": "The ID of the user"
                                                },
                                                "name": {
                                                  "type": "string",
                                                  "description": "The name of the user"
                                                },
                                                "email": {
                                                  "type": "string",
                                                  "description": "The email of the user"
                                                },
                                                "has_pic": {
                                                  "type": "integer",
                                                  "description": "Whether the user has picture or not. 0 = No picture, 1 = Has picture."
                                                },
                                                "pic_hash": {
                                                  "type": "string",
                                                  "nullable": true,
                                                  "description": "The user picture hash"
                                                },
                                                "active_flag": {
                                                  "type": "boolean",
                                                  "description": "Whether the user is active or not"
                                                }
                                              }
                                            },
                                            {
                                              "type": "object",
                                              "properties": {
                                                "value": {
                                                  "type": "integer",
                                                  "description": "The ID of the owner"
                                                }
                                              }
                                            }
                                          ]
                                        },
                                        "name": {
                                          "type": "string",
                                          "description": "The name of the organization"
                                        },
                                        "active_flag": {
                                          "type": "boolean",
                                          "description": "Whether the organization is active or not"
                                        },
                                        "picture_id": {
                                          "allOf": [
                                            {
                                              "type": "object",
                                              "properties": {
                                                "value": {
                                                  "type": "integer",
                                                  "description": "The ID of the picture associated with the item"
                                                }
                                              }
                                            },
                                            {
                                              "type": "object",
                                              "properties": {
                                                "item_type": {
                                                  "type": "string",
                                                  "description": "The type of item the picture is related to"
                                                },
                                                "item_id": {
                                                  "type": "integer",
                                                  "description": "The ID of related item"
                                                },
                                                "active_flag": {
                                                  "type": "boolean",
                                                  "description": "Whether the associated picture is active or not"
                                                },
                                                "add_time": {
                                                  "type": "string",
                                                  "description": "The add time of the picture"
                                                },
                                                "update_time": {
                                                  "type": "string",
                                                  "description": "The update time of the picture"
                                                },
                                                "added_by_user_id": {
                                                  "type": "integer",
                                                  "description": "The ID of the user who added the picture"
                                                },
                                                "pictures": {
                                                  "type": "object",
                                                  "properties": {
                                                    "128": {
                                                      "type": "string",
                                                      "description": "The URL of the 128*128 picture"
                                                    },
                                                    "512": {
                                                      "type": "string",
                                                      "description": "The URL of the 512*512 picture"
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          ]
                                        },
                                        "country_code": {
                                          "type": "string",
                                          "description": "The country code of the organization"
                                        },
                                        "first_char": {
                                          "type": "string",
                                          "description": "The first character of the organization name"
                                        },
                                        "add_time": {
                                          "type": "string",
                                          "description": "The creation date and time of the organization"
                                        },
                                        "update_time": {
                                          "type": "string",
                                          "description": "The last updated date and time of the organization"
                                        },
                                        "visible_to": {
                                          "type": "string",
                                          "description": "The visibility group ID of who can see the organization"
                                        },
                                        "label": {
                                          "type": "integer",
                                          "description": "The ID of the label"
                                        },
                                        "owner_name": {
                                          "type": "string",
                                          "description": "The name of the organization owner"
                                        },
                                        "cc_email": {
                                          "type": "string",
                                          "description": "The BCC email of the organization"
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "title": "additionalBaseOrganizationItemInfo",
                                      "allOf": [
                                        {
                                          "type": "object",
                                          "title": "organizationCountAndAddressInfo",
                                          "allOf": [
                                            {
                                              "type": "object",
                                              "properties": {
                                                "email_messages_count": {
                                                  "type": "integer",
                                                  "description": "The count of email messages related to the organization"
                                                },
                                                "people_count": {
                                                  "type": "integer",
                                                  "description": "The count of persons related to the organization"
                                                },
                                                "activities_count": {
                                                  "type": "integer",
                                                  "description": "The count of activities related to the organization"
                                                },
                                                "done_activities_count": {
                                                  "type": "integer",
                                                  "description": "The count of done activities related to the organization"
                                                },
                                                "undone_activities_count": {
                                                  "type": "integer",
                                                  "description": "The count of undone activities related to the organization"
                                                },
                                                "files_count": {
                                                  "type": "integer",
                                                  "description": "The count of files related to the organization"
                                                },
                                                "notes_count": {
                                                  "type": "integer",
                                                  "description": "The count of notes related to the organization"
                                                },
                                                "followers_count": {
                                                  "type": "integer",
                                                  "description": "The count of followers related to the organization"
                                                }
                                              }
                                            },
                                            {
                                              "type": "object",
                                              "properties": {
                                                "address": {
                                                  "type": "string",
                                                  "description": "The full address of the organization"
                                                },
                                                "address_subpremise": {
                                                  "type": "string",
                                                  "description": "The sub-premise of the organization location"
                                                },
                                                "address_street_number": {
                                                  "type": "string",
                                                  "description": "The street number of the organization location"
                                                },
                                                "address_route": {
                                                  "type": "string",
                                                  "description": "The route of the organization location"
                                                },
                                                "address_sublocality": {
                                                  "type": "string",
                                                  "description": "The sub-locality of the organization location"
                                                },
                                                "address_locality": {
                                                  "type": "string",
                                                  "description": "The locality of the organization location"
                                                },
                                                "address_admin_area_level_1": {
                                                  "type": "string",
                                                  "description": "The level 1 admin area of the organization location"
                                                },
                                                "address_admin_area_level_2": {
                                                  "type": "string",
                                                  "description": "The level 2 admin area of the organization location"
                                                },
                                                "address_country": {
                                                  "type": "string",
                                                  "description": "The country of the organization location"
                                                },
                                                "address_postal_code": {
                                                  "type": "string",
                                                  "description": "The postal code of the organization location"
                                                },
                                                "address_formatted_address": {
                                                  "type": "string",
                                                  "description": "The formatted organization location"
                                                }
                                              }
                                            }
                                          ]
                                        },
                                        {
                                          "type": "object",
                                          "title": "dealsCountAndActivityInfo",
                                          "allOf": [
                                            {
                                              "type": "object",
                                              "properties": {
                                                "open_deals_count": {
                                                  "type": "integer",
                                                  "description": "The count of open deals related with the item"
                                                },
                                                "related_open_deals_count": {
                                                  "type": "integer",
                                                  "description": "The count of related open deals related with the item"
                                                },
                                                "closed_deals_count": {
                                                  "type": "integer",
                                                  "description": "The count of closed deals related with the item"
                                                },
                                                "related_closed_deals_count": {
                                                  "type": "integer",
                                                  "description": "The count of related closed deals related with the item"
                                                },
                                                "won_deals_count": {
                                                  "type": "integer",
                                                  "description": "The count of won deals related with the item"
                                                },
                                                "related_won_deals_count": {
                                                  "type": "integer",
                                                  "description": "The count of related won deals related with the item"
                                                },
                                                "lost_deals_count": {
                                                  "type": "integer",
                                                  "description": "The count of lost deals related with the item"
                                                },
                                                "related_lost_deals_count": {
                                                  "type": "integer",
                                                  "description": "The count of related lost deals related with the item"
                                                }
                                              }
                                            },
                                            {
                                              "type": "object",
                                              "properties": {
                                                "next_activity_date": {
                                                  "type": "string",
                                                  "description": "The date of the next activity associated with the deal"
                                                },
                                                "next_activity_time": {
                                                  "type": "string",
                                                  "description": "The time of the next activity associated with the deal"
                                                },
                                                "next_activity_id": {
                                                  "type": "integer",
                                                  "nullable": true,
                                                  "description": "The ID of the next activity associated with the deal"
                                                },
                                                "last_activity_id": {
                                                  "type": "integer",
                                                  "nullable": true,
                                                  "description": "The ID of the last activity associated with the deal"
                                                },
                                                "last_activity_date": {
                                                  "type": "string",
                                                  "nullable": true,
                                                  "description": "The date of the last activity associated with the deal"
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "edit_name": {
                                      "type": "boolean",
                                      "description": "If the company ID of the organization and company ID of the request is same or not"
                                    }
                                  }
                                }
                              ]
                            },
                            {
                              "type": "object",
                              "properties": {
                                "last_activity": {
                                  "type": "object",
                                  "description": "Please refer to response schema of <a href=\"https://developers.pipedrive.com/docs/api/v1/Activities#getActivity\">Activity</a>"
                                },
                                "next_activity": {
                                  "type": "object",
                                  "description": "Please refer to response schema of <a href=\"https://developers.pipedrive.com/docs/api/v1/Activities#getActivity\">Activity</a>"
                                }
                              }
                            }
                          ]
                        },
                        "additional_data": {
                          "type": "object",
                          "properties": {
                            "followers": {
                              "type": "object",
                              "description": "The follower that is associated with the item",
                              "properties": {
                                "FOLLOWER_USER_ID": {
                                  "type": "object",
                                  "description": "The user ID of the follower",
                                  "allOf": [
                                    {
                                      "allOf": [
                                        {
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "type": "integer",
                                              "description": "The ID of the follower associated with the item"
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string",
                                              "description": "The name of the follower"
                                            },
                                            "email": {
                                              "type": "string",
                                              "description": "The email of the follower"
                                            },
                                            "user_id": {
                                              "type": "integer",
                                              "description": "The user ID of the follower"
                                            },
                                            "pic_hash": {
                                              "type": "string",
                                              "description": "The follower picture hash"
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  ]
                                }
                              }
                            },
                            "dropbox_email": {
                              "type": "string",
                              "description": "Dropbox email for the organization"
                            }
                          }
                        },
                        "related_objects": {
                          "type": "object",
                          "properties": {
                            "organization": {
                              "type": "object",
                              "properties": {
                                "ORGANIZATION_ID": {
                                  "type": "object",
                                  "description": "The ID of the organization associated with the item",
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "integer",
                                          "description": "The ID of the organization associated with the item"
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "The name of the organization associated with the item"
                                        },
                                        "people_count": {
                                          "type": "integer",
                                          "description": "The number of people connected with the organization that is associated with the item"
                                        },
                                        "owner_id": {
                                          "type": "integer",
                                          "description": "The ID of the owner of the organization that is associated with the item"
                                        },
                                        "address": {
                                          "type": "string",
                                          "description": "The address of the organization"
                                        },
                                        "cc_email": {
                                          "type": "string",
                                          "description": "The BCC email of the organization associated with the item"
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            },
                            "user": {
                              "type": "object",
                              "properties": {
                                "USER_ID": {
                                  "type": "object",
                                  "title": "userDataWithId",
                                  "allOf": [
                                    {
                                      "properties": {
                                        "id": {
                                          "type": "integer",
                                          "description": "The ID of the user"
                                        },
                                        "name": {
                                          "type": "string",
                                          "description": "The name of the user"
                                        },
                                        "email": {
                                          "type": "string",
                                          "description": "The email of the user"
                                        },
                                        "has_pic": {
                                          "type": "integer",
                                          "description": "Whether the user has picture or not. 0 = No picture, 1 = Has picture."
                                        },
                                        "pic_hash": {
                                          "type": "string",
                                          "nullable": true,
                                          "description": "The user picture hash"
                                        },
                                        "active_flag": {
                                          "type": "boolean",
                                          "description": "Whether the user is active or not"
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "description": "The ID of the user"
                                    }
                                  ]
                                }
                              }
                            },
                            "picture": {
                              "type": "object",
                              "description": "The picture that is associated with the item",
                              "properties": {
                                "PICTURE_ID": {
                                  "type": "object",
                                  "description": "The ID of the picture",
                                  "allOf": [
                                    {
                                      "allOf": [
                                        {
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "type": "integer",
                                              "description": "The ID of the picture associated with the item"
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "properties": {
                                            "item_type": {
                                              "type": "string",
                                              "description": "The type of item the picture is related to"
                                            },
                                            "item_id": {
                                              "type": "integer",
                                              "description": "The ID of related item"
                                            },
                                            "active_flag": {
                                              "type": "boolean",
                                              "description": "Whether the associated picture is active or not"
                                            },
                                            "add_time": {
                                              "type": "string",
                                              "description": "The add time of the picture"
                                            },
                                            "update_time": {
                                              "type": "string",
                                              "description": "The update time of the picture"
                                            },
                                            "added_by_user_id": {
                                              "type": "integer",
                                              "description": "The ID of the user who added the picture"
                                            },
                                            "pictures": {
                                              "type": "object",
                                              "properties": {
                                                "128": {
                                                  "type": "string",
                                                  "description": "The URL of the 128*128 picture"
                                                },
                                                "512": {
                                                  "type": "string",
                                                  "description": "The URL of the 512*512 picture"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "success": true,
                  "data": {
                    "allOf": [
                      {
                        "id": 1,
                        "company_id": 77,
                        "owner_id": {
                          "id": 10,
                          "name": "Will Smith",
                          "email": "will.smith@pipedrive.com",
                          "has_pic": 0,
                          "pic_hash": "2611ace8ac6a3afe2f69ed56f9e08c6b",
                          "active_flag": true,
                          "value": 10
                        },
                        "name": "Bolt",
                        "open_deals_count": 1,
                        "related_open_deals_count": 2,
                        "closed_deals_count": 3,
                        "related_closed_deals_count": 1,
                        "email_messages_count": 2,
                        "people_count": 1,
                        "activities_count": 2,
                        "done_activities_count": 1,
                        "undone_activities_count": 0,
                        "files_count": 0,
                        "notes_count": 0,
                        "followers_count": 1,
                        "won_deals_count": 0,
                        "related_won_deals_count": 0,
                        "lost_deals_count": 0,
                        "related_lost_deals_count": 0,
                        "active_flag": true,
                        "picture_id": {
                          "item_type": "person",
                          "item_id": 25,
                          "active_flag": true,
                          "add_time": "2020-09-08 08:17:52",
                          "update_time": "0000-00-00 00:00:00",
                          "added_by_user_id": 967055,
                          "pictures": {
                            "128": "https://pipedrive-profile-pics.s3.example.com/f8893852574273f2747bf6ef09d11cf14ac8f269_128.jpg",
                            "512": "https://pipedrive-profile-pics.s3.example.com/f8893852574273f2747bf6ef09d11cfb2ac8f269_512.jpg"
                          },
                          "value": 101
                        },
                        "country_code": "USA",
                        "first_char": "b",
                        "update_time": "2020-09-08 12:14:11",
                        "add_time": "2020-02-25 10:04:08",
                        "visible_to": "3",
                        "next_activity_date": "2019-11-29",
                        "next_activity_time": "11:30:00",
                        "next_activity_id": 128,
                        "last_activity_id": 34,
                        "last_activity_date": "2019-11-28",
                        "label": 7,
                        "address": "Mustamäe tee 3a, 10615 Tallinn",
                        "address_subpremise": "",
                        "address_street_number": "3a",
                        "address_route": "Mustamäe tee",
                        "address_sublocality": "Kristiine",
                        "address_locality": "Tallinn",
                        "address_admin_area_level_1": "Harju maakond",
                        "address_admin_area_level_2": "",
                        "address_country": "Estonia",
                        "address_postal_code": "10616",
                        "address_formatted_address": "Mustamäe tee 3a, 10616 Tallinn, Estonia",
                        "owner_name": "John Doe",
                        "cc_email": "org@pipedrivemail.com"
                      },
                      {
                        "type": "object",
                        "properties": {
                          "last_activity": {
                            "id": 8,
                            "company_id": 22122,
                            "user_id": 1234,
                            "done": false,
                            "type": "deadline",
                            "reference_type": "scheduler-service",
                            "reference_id": 7,
                            "conference_meeting_client": "871b8bc88d3a1202",
                            "conference_meeting_url": "https://pipedrive.zoom.us/link",
                            "conference_meeting_id": "01758746701",
                            "due_date": "2020-06-09",
                            "due_time": "10:00",
                            "duration": "01:00",
                            "busy_flag": true,
                            "add_time": "2020-06-08 12:37:56",
                            "marked_as_done_time": "2020-08-08 08:08:38",
                            "last_notification_time": "2020-08-08 12:37:56",
                            "last_notification_user_id": 7655,
                            "notification_language_id": 1,
                            "subject": "Deadline",
                            "public_description": "This is a description",
                            "calendar_sync_include_context": "",
                            "location": "Mustamäe tee 3, Tallinn, Estonia",
                            "org_id": 5,
                            "person_id": 1101,
                            "deal_id": 300,
                            "lead_id": "46c3b0e1-db35-59ca-1828-4817378dff71",
                            "active_flag": true,
                            "update_time": "2020-08-08 12:37:56",
                            "update_user_id": 5596,
                            "gcal_event_id": "",
                            "google_calendar_id": "",
                            "google_calendar_etag": "",
                            "source_timezone": "",
                            "rec_rule": "RRULE:FREQ=WEEKLY;BYDAY=WE",
                            "rec_rule_extension": "",
                            "rec_master_activity_id": 1,
                            "series": [ ],
                            "note": "A note for the activity",
                            "created_by_user_id": 1234,
                            "location_subpremise": "",
                            "location_street_number": "3",
                            "location_route": "Mustamäe tee",
                            "location_sublocality": "Kristiine",
                            "location_locality": "Tallinn",
                            "location_admin_area_level_1": "Harju maakond",
                            "location_admin_area_level_2": "",
                            "location_country": "Estonia",
                            "location_postal_code": "10616",
                            "location_formatted_address": "Mustamäe tee 3, 10616 Tallinn, Estonia",
                            "attendees": [
                              {
                                "email_address": "attendee@pipedrivemail.com",
                                "is_organizer": 0,
                                "name": "Attendee",
                                "person_id": 25312,
                                "status": "noreply",
                                "user_id": null
                              }
                            ],
                            "participants": [
                              { "person_id": 17985, "primary_flag": false },
                              { "person_id": 1101, "primary_flag": true }
                            ],
                            "org_name": "Organization",
                            "person_name": "Person",
                            "deal_title": "Deal",
                            "owner_name": "Creator",
                            "person_dropbox_bcc": "company@pipedrivemail.com",
                            "deal_dropbox_bcc": "company+deal300@pipedrivemail.com",
                            "assigned_to_user_id": 1235,
                            "file": {
                              "id": "376892,",
                              "clean_name": "Audio 10:55:07.m4a",
                              "url": "https://pipedrive-files.s3-eu-west-1.amazonaws.com/Audio-recording.m4a"
                            }
                          },
                          "next_activity": null,
                          "additional_data": {
                            "pagination": {
                              "start": 0,
                              "limit": 100,
                              "more_items_in_collection": false,
                              "next_start": 100
                            }
                          },
                          "related_objects": {
                            "organization": {
                              "1": {
                                "id": 1,
                                "name": "Org Name",
                                "people_count": 1,
                                "owner_id": 123,
                                "address": "Mustamäe tee 3a, 10615 Tallinn",
                                "active_flag": true,
                                "cc_email": "org@pipedrivemail.com"
                              }
                            },
                            "user": {
                              "123": {
                                "id": 123,
                                "name": "Jane Doe",
                                "email": "jane@pipedrive.com",
                                "has_pic": 1,
                                "pic_hash": "2611ace8ac6a3afe2f69ed56f9e08c6b",
                                "active_flag": true
                              }
                            },
                            "picture": {
                              "1": {
                                "id": 1,
                                "item_type": "person",
                                "item_id": 25,
                                "active_flag": true,
                                "add_time": "2020-09-08 08:17:52",
                                "update_time": "0000-00-00 00:00:00",
                                "added_by_user_id": 967055,
                                "pictures": {
                                  "128": "https://pipedrive-profile-pics.s3.example.com/f8893852574273f2747bf6ef09d11cfb4ac8f269_128.jpg",
                                  "512": "https://pipedrive-profile-pics.s3.example.com/f8893852574273f2747bf6ef09d11cfb4ac8f269_512.jpg"
                                }
                              }
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update an organization",
        "description": "Updates the properties of an organization.",
        "operationId": "updateOrganization",
        "tags": [ "Organizations" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the organization",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "updateOrganizationRequest",
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The name of the organization"
                      }
                    }
                  },
                  {
                    "title": "basicOrganization",
                    "type": "object",
                    "properties": {
                      "owner_id": {
                        "type": "integer",
                        "description": "The ID of the user who will be marked as the owner of this organization. When omitted, the authorized user ID will be used."
                      },
                      "visible_to": {
                        "type": "string",
                        "allOf": [
                          { "type": "string", "enum": [ "1", "3", "5", "7" ] }
                        ],
                        "description": "The visibility of the organization. If omitted, the visibility will be set to the default visibility setting of this item type for the authorized user. Read more about visibility groups <a href=\"https://support.pipedrive.com/en/article/visibility-groups\" target=\"_blank\" rel=\"noopener noreferrer\">here</a>.<h4>Essential / Advanced plan</h4><table><tr><th style=\"width:40px\">Value</th><th>Description</th></tr><tr><td>`1`</td><td>Owner &amp; followers</td><tr><td>`3`</td><td>Entire company</td></tr></table><h4>Professional / Enterprise plan</h4><table><tr><th style=\"width:40px\">Value</th><th>Description</th></tr><tr><td>`1`</td><td>Owner only</td><tr><td>`3`</td><td>Owner's visibility group</td></tr><tr><td>`5`</td><td>Owner's visibility group and sub-groups</td></tr><tr><td>`7`</td><td>Entire company</td></tr></table>"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "updateOrganization",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "title": "baseOrganizationItem",
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "description": "The ID of the organization"
                                },
                                "company_id": {
                                  "type": "integer",
                                  "description": "The ID of the company related to the organization"
                                },
                                "owner_id": {
                                  "title": "owner",
                                  "allOf": [
                                    {
                                      "properties": {
                                        "id": {
                                          "type": "integer",
                                          "description": "The ID of the user"
                                        },
                                        "name": {
                                          "type": "string",
                                          "description": "The name of the user"
                                        },
                                        "email": {
                                          "type": "string",
                                          "description": "The email of the user"
                                        },
                                        "has_pic": {
                                          "type": "integer",
                                          "description": "Whether the user has picture or not. 0 = No picture, 1 = Has picture."
                                        },
                                        "pic_hash": {
                                          "type": "string",
                                          "nullable": true,
                                          "description": "The user picture hash"
                                        },
                                        "active_flag": {
                                          "type": "boolean",
                                          "description": "Whether the user is active or not"
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "value": {
                                          "type": "integer",
                                          "description": "The ID of the owner"
                                        }
                                      }
                                    }
                                  ]
                                },
                                "name": {
                                  "type": "string",
                                  "description": "The name of the organization"
                                },
                                "active_flag": {
                                  "type": "boolean",
                                  "description": "Whether the organization is active or not"
                                },
                                "picture_id": {
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "value": {
                                          "type": "integer",
                                          "description": "The ID of the picture associated with the item"
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "item_type": {
                                          "type": "string",
                                          "description": "The type of item the picture is related to"
                                        },
                                        "item_id": {
                                          "type": "integer",
                                          "description": "The ID of related item"
                                        },
                                        "active_flag": {
                                          "type": "boolean",
                                          "description": "Whether the associated picture is active or not"
                                        },
                                        "add_time": {
                                          "type": "string",
                                          "description": "The add time of the picture"
                                        },
                                        "update_time": {
                                          "type": "string",
                                          "description": "The update time of the picture"
                                        },
                                        "added_by_user_id": {
                                          "type": "integer",
                                          "description": "The ID of the user who added the picture"
                                        },
                                        "pictures": {
                                          "type": "object",
                                          "properties": {
                                            "128": {
                                              "type": "string",
                                              "description": "The URL of the 128*128 picture"
                                            },
                                            "512": {
                                              "type": "string",
                                              "description": "The URL of the 512*512 picture"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  ]
                                },
                                "country_code": {
                                  "type": "string",
                                  "description": "The country code of the organization"
                                },
                                "first_char": {
                                  "type": "string",
                                  "description": "The first character of the organization name"
                                },
                                "add_time": {
                                  "type": "string",
                                  "description": "The creation date and time of the organization"
                                },
                                "update_time": {
                                  "type": "string",
                                  "description": "The last updated date and time of the organization"
                                },
                                "visible_to": {
                                  "type": "string",
                                  "description": "The visibility group ID of who can see the organization"
                                },
                                "label": {
                                  "type": "integer",
                                  "description": "The ID of the label"
                                },
                                "owner_name": {
                                  "type": "string",
                                  "description": "The name of the organization owner"
                                },
                                "cc_email": {
                                  "type": "string",
                                  "description": "The BCC email of the organization"
                                }
                              }
                            },
                            {
                              "type": "object",
                              "title": "additionalBaseOrganizationItemInfo",
                              "allOf": [
                                {
                                  "type": "object",
                                  "title": "organizationCountAndAddressInfo",
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "email_messages_count": {
                                          "type": "integer",
                                          "description": "The count of email messages related to the organization"
                                        },
                                        "people_count": {
                                          "type": "integer",
                                          "description": "The count of persons related to the organization"
                                        },
                                        "activities_count": {
                                          "type": "integer",
                                          "description": "The count of activities related to the organization"
                                        },
                                        "done_activities_count": {
                                          "type": "integer",
                                          "description": "The count of done activities related to the organization"
                                        },
                                        "undone_activities_count": {
                                          "type": "integer",
                                          "description": "The count of undone activities related to the organization"
                                        },
                                        "files_count": {
                                          "type": "integer",
                                          "description": "The count of files related to the organization"
                                        },
                                        "notes_count": {
                                          "type": "integer",
                                          "description": "The count of notes related to the organization"
                                        },
                                        "followers_count": {
                                          "type": "integer",
                                          "description": "The count of followers related to the organization"
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "address": {
                                          "type": "string",
                                          "description": "The full address of the organization"
                                        },
                                        "address_subpremise": {
                                          "type": "string",
                                          "description": "The sub-premise of the organization location"
                                        },
                                        "address_street_number": {
                                          "type": "string",
                                          "description": "The street number of the organization location"
                                        },
                                        "address_route": {
                                          "type": "string",
                                          "description": "The route of the organization location"
                                        },
                                        "address_sublocality": {
                                          "type": "string",
                                          "description": "The sub-locality of the organization location"
                                        },
                                        "address_locality": {
                                          "type": "string",
                                          "description": "The locality of the organization location"
                                        },
                                        "address_admin_area_level_1": {
                                          "type": "string",
                                          "description": "The level 1 admin area of the organization location"
                                        },
                                        "address_admin_area_level_2": {
                                          "type": "string",
                                          "description": "The level 2 admin area of the organization location"
                                        },
                                        "address_country": {
                                          "type": "string",
                                          "description": "The country of the organization location"
                                        },
                                        "address_postal_code": {
                                          "type": "string",
                                          "description": "The postal code of the organization location"
                                        },
                                        "address_formatted_address": {
                                          "type": "string",
                                          "description": "The formatted organization location"
                                        }
                                      }
                                    }
                                  ]
                                },
                                {
                                  "type": "object",
                                  "title": "dealsCountAndActivityInfo",
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "open_deals_count": {
                                          "type": "integer",
                                          "description": "The count of open deals related with the item"
                                        },
                                        "related_open_deals_count": {
                                          "type": "integer",
                                          "description": "The count of related open deals related with the item"
                                        },
                                        "closed_deals_count": {
                                          "type": "integer",
                                          "description": "The count of closed deals related with the item"
                                        },
                                        "related_closed_deals_count": {
                                          "type": "integer",
                                          "description": "The count of related closed deals related with the item"
                                        },
                                        "won_deals_count": {
                                          "type": "integer",
                                          "description": "The count of won deals related with the item"
                                        },
                                        "related_won_deals_count": {
                                          "type": "integer",
                                          "description": "The count of related won deals related with the item"
                                        },
                                        "lost_deals_count": {
                                          "type": "integer",
                                          "description": "The count of lost deals related with the item"
                                        },
                                        "related_lost_deals_count": {
                                          "type": "integer",
                                          "description": "The count of related lost deals related with the item"
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "next_activity_date": {
                                          "type": "string",
                                          "description": "The date of the next activity associated with the deal"
                                        },
                                        "next_activity_time": {
                                          "type": "string",
                                          "description": "The time of the next activity associated with the deal"
                                        },
                                        "next_activity_id": {
                                          "type": "integer",
                                          "nullable": true,
                                          "description": "The ID of the next activity associated with the deal"
                                        },
                                        "last_activity_id": {
                                          "type": "integer",
                                          "nullable": true,
                                          "description": "The ID of the last activity associated with the deal"
                                        },
                                        "last_activity_date": {
                                          "type": "string",
                                          "nullable": true,
                                          "description": "The date of the last activity associated with the deal"
                                        }
                                      }
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "related_objects": {
                          "type": "object",
                          "properties": {
                            "organization": {
                              "type": "object",
                              "properties": {
                                "ORGANIZATION_ID": {
                                  "type": "object",
                                  "description": "The ID of the organization associated with the item",
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "integer",
                                          "description": "The ID of the organization associated with the item"
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "The name of the organization associated with the item"
                                        },
                                        "people_count": {
                                          "type": "integer",
                                          "description": "The number of people connected with the organization that is associated with the item"
                                        },
                                        "owner_id": {
                                          "type": "integer",
                                          "description": "The ID of the owner of the organization that is associated with the item"
                                        },
                                        "address": {
                                          "type": "string",
                                          "description": "The address of the organization"
                                        },
                                        "cc_email": {
                                          "type": "string",
                                          "description": "The BCC email of the organization associated with the item"
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            },
                            "user": {
                              "type": "object",
                              "properties": {
                                "USER_ID": {
                                  "type": "object",
                                  "title": "userDataWithId",
                                  "allOf": [
                                    {
                                      "properties": {
                                        "id": {
                                          "type": "integer",
                                          "description": "The ID of the user"
                                        },
                                        "name": {
                                          "type": "string",
                                          "description": "The name of the user"
                                        },
                                        "email": {
                                          "type": "string",
                                          "description": "The email of the user"
                                        },
                                        "has_pic": {
                                          "type": "integer",
                                          "description": "Whether the user has picture or not. 0 = No picture, 1 = Has picture."
                                        },
                                        "pic_hash": {
                                          "type": "string",
                                          "nullable": true,
                                          "description": "The user picture hash"
                                        },
                                        "active_flag": {
                                          "type": "boolean",
                                          "description": "Whether the user is active or not"
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "description": "The ID of the user"
                                    }
                                  ]
                                }
                              }
                            },
                            "picture": {
                              "type": "object",
                              "description": "The picture that is associated with the item",
                              "properties": {
                                "PICTURE_ID": {
                                  "type": "object",
                                  "description": "The ID of the picture",
                                  "allOf": [
                                    {
                                      "allOf": [
                                        {
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "type": "integer",
                                              "description": "The ID of the picture associated with the item"
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "properties": {
                                            "item_type": {
                                              "type": "string",
                                              "description": "The type of item the picture is related to"
                                            },
                                            "item_id": {
                                              "type": "integer",
                                              "description": "The ID of related item"
                                            },
                                            "active_flag": {
                                              "type": "boolean",
                                              "description": "Whether the associated picture is active or not"
                                            },
                                            "add_time": {
                                              "type": "string",
                                              "description": "The add time of the picture"
                                            },
                                            "update_time": {
                                              "type": "string",
                                              "description": "The update time of the picture"
                                            },
                                            "added_by_user_id": {
                                              "type": "integer",
                                              "description": "The ID of the user who added the picture"
                                            },
                                            "pictures": {
                                              "type": "object",
                                              "properties": {
                                                "128": {
                                                  "type": "string",
                                                  "description": "The URL of the 128*128 picture"
                                                },
                                                "512": {
                                                  "type": "string",
                                                  "description": "The URL of the 512*512 picture"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "success": true,
                  "data": {
                    "id": 1,
                    "company_id": 77,
                    "owner_id": {
                      "id": 10,
                      "name": "Will Smith",
                      "email": "will.smith@pipedrive.com",
                      "has_pic": 0,
                      "pic_hash": "2611ace8ac6a3afe2f69ed56f9e08c6b",
                      "active_flag": true,
                      "value": 10
                    },
                    "name": "Bolt",
                    "open_deals_count": 1,
                    "related_open_deals_count": 2,
                    "closed_deals_count": 3,
                    "related_closed_deals_count": 1,
                    "email_messages_count": 2,
                    "people_count": 1,
                    "activities_count": 2,
                    "done_activities_count": 1,
                    "undone_activities_count": 0,
                    "files_count": 0,
                    "notes_count": 0,
                    "followers_count": 1,
                    "won_deals_count": 0,
                    "related_won_deals_count": 0,
                    "lost_deals_count": 0,
                    "related_lost_deals_count": 0,
                    "active_flag": true,
                    "picture_id": {
                      "item_type": "person",
                      "item_id": 25,
                      "active_flag": true,
                      "add_time": "2020-09-08 08:17:52",
                      "update_time": "0000-00-00 00:00:00",
                      "added_by_user_id": 967055,
                      "pictures": {
                        "128": "https://pipedrive-profile-pics.s3.example.com/f8893852574273f2747bf6ef09d11cf14ac8f269_128.jpg",
                        "512": "https://pipedrive-profile-pics.s3.example.com/f8893852574273f2747bf6ef09d11cfb2ac8f269_512.jpg"
                      },
                      "value": 101
                    },
                    "country_code": "USA",
                    "first_char": "b",
                    "update_time": "2020-09-08 12:14:11",
                    "add_time": "2020-02-25 10:04:08",
                    "visible_to": "3",
                    "next_activity_date": "2019-11-29",
                    "next_activity_time": "11:30:00",
                    "next_activity_id": 128,
                    "last_activity_id": 34,
                    "last_activity_date": "2019-11-28",
                    "label": 7,
                    "address": "Mustamäe tee 3a, 10615 Tallinn",
                    "address_subpremise": "",
                    "address_street_number": "3a",
                    "address_route": "Mustamäe tee",
                    "address_sublocality": "Kristiine",
                    "address_locality": "Tallinn",
                    "address_admin_area_level_1": "Harju maakond",
                    "address_admin_area_level_2": "",
                    "address_country": "Estonia",
                    "address_postal_code": "10616",
                    "address_formatted_address": "Mustamäe tee 3a, 10616 Tallinn, Estonia",
                    "owner_name": "John Doe",
                    "cc_email": "org@pipedrivemail.com"
                  },
                  "related_objects": {
                    "organization": {
                      "1": {
                        "id": 1,
                        "name": "Org Name",
                        "people_count": 1,
                        "owner_id": 123,
                        "address": "Mustamäe tee 3a, 10615 Tallinn",
                        "active_flag": true,
                        "cc_email": "org@pipedrivemail.com"
                      }
                    },
                    "user": {
                      "123": {
                        "id": 123,
                        "name": "Jane Doe",
                        "email": "jane@pipedrive.com",
                        "has_pic": 1,
                        "pic_hash": "2611ace8ac6a3afe2f69ed56f9e08c6b",
                        "active_flag": true
                      }
                    },
                    "picture": {
                      "1": {
                        "id": 1,
                        "item_type": "person",
                        "item_id": 25,
                        "active_flag": true,
                        "add_time": "2020-09-08 08:17:52",
                        "update_time": "0000-00-00 00:00:00",
                        "added_by_user_id": 967055,
                        "pictures": {
                          "128": "https://pipedrive-profile-pics.s3.example.com/f8893852574273f2747bf6ef09d11cfb4ac8f269_128.jpg",
                          "512": "https://pipedrive-profile-pics.s3.example.com/f8893852574273f2747bf6ef09d11cfb4ac8f269_512.jpg"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{id}/activities": {
      "get": {
        "summary": "List activities associated with an organization",
        "description": "Lists activities associated with an organization.",
        "operationId": "getOrganizationActivities",
        "tags": [ "Organizations" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the organization",
            "required": true,
            "schema": { "type": "integer" }
          },
          {
            "in": "query",
            "name": "start",
            "description": "Pagination start",
            "schema": { "type": "integer", "default": 0 }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Items shown per page",
            "schema": { "type": "integer" }
          },
          {
            "in": "query",
            "name": "done",
            "schema": {
              "title": "numberBoolean",
              "type": "number",
              "enum": [ 0, 1 ]
            },
            "description": "Whether the activity is done or not. 0 = Not done, 1 = Done. If omitted returns both Done and Not done activities."
          },
          {
            "in": "query",
            "name": "exclude",
            "schema": { "type": "string" },
            "description": "A comma-separated string of activity IDs to exclude from result"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "getAssociatedActivities",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "title": "activityResponseObject",
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "due_date": {
                                    "description": "The due date of the activity. Format: YYYY-MM-DD",
                                    "type": "string",
                                    "format": "date"
                                  },
                                  "due_time": {
                                    "description": "The due time of the activity in UTC. Format: HH:MM",
                                    "type": "string"
                                  },
                                  "duration": {
                                    "description": "The duration of the activity. Format: HH:MM",
                                    "type": "string"
                                  },
                                  "deal_id": {
                                    "description": "The ID of the deal this activity is associated with",
                                    "type": "integer"
                                  },
                                  "lead_id": {
                                    "description": "The ID of the lead this activity is associated with",
                                    "type": "string"
                                  },
                                  "person_id": {
                                    "description": "The ID of the person this activity is associated with",
                                    "type": "integer"
                                  },
                                  "org_id": {
                                    "description": "The ID of the organization this activity is associated with",
                                    "type": "integer"
                                  },
                                  "note": {
                                    "description": "The note of the activity (HTML format)",
                                    "type": "string"
                                  },
                                  "location": {
                                    "description": "The address of the activity. Pipedrive will automatically check if the location matches a geo-location on Google maps.",
                                    "type": "string"
                                  },
                                  "public_description": {
                                    "description": "Additional details about the activity that is synced to your external calendar. Unlike the note added to the activity, the description is publicly visible to any guests added to the activity.",
                                    "type": "string"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "integer",
                                    "description": "The activity ID, generated when the activity was created"
                                  },
                                  "done": {
                                    "type": "boolean",
                                    "description": "Whether the activity is done or not"
                                  },
                                  "subject": {
                                    "description": "The subject of the activity",
                                    "type": "string"
                                  },
                                  "type": {
                                    "description": "The type of the activity. This is in correlation with the `key_string` parameter of ActivityTypes.",
                                    "type": "string"
                                  },
                                  "user_id": {
                                    "description": "The ID of the user whom the activity is assigned to",
                                    "type": "integer"
                                  },
                                  "participants": {
                                    "description": "List of multiple persons (participants) this activity is associated with",
                                    "type": "array",
                                    "nullable": true,
                                    "items": { "type": "object" }
                                  },
                                  "busy_flag": {
                                    "description": "Marks if the activity is set as 'Busy' or 'Free'. If the flag is set to `true`, your customers will not be able to book that time slot through any Scheduler links. The flag can also be unset. When the value of the flag is unset (`null`), the flag defaults to 'Busy' if it has a time set, and 'Free' if it is an all-day event without specified time.",
                                    "type": "boolean",
                                    "enum": [ true, false ]
                                  },
                                  "attendees": {
                                    "description": "The attendees of the activity. This can be either your existing Pipedrive contacts or an external email address.",
                                    "type": "array",
                                    "nullable": true,
                                    "items": { "type": "object" }
                                  },
                                  "company_id": {
                                    "type": "integer",
                                    "description": "The user's company ID"
                                  },
                                  "reference_type": {
                                    "type": "string",
                                    "description": "If the activity references some other object, it is indicated here. For example, value `Salesphone` refers to activities created with Caller."
                                  },
                                  "reference_id": {
                                    "type": "integer",
                                    "description": "Together with the `reference_type`, gives the ID of the other object"
                                  },
                                  "conference_meeting_client": {
                                    "type": "string",
                                    "description": "The ID of Marketplace app, which is connected to this activity"
                                  },
                                  "conference_meeting_url": {
                                    "type": "string",
                                    "description": "The link to join the meeting which is associated with this activity"
                                  },
                                  "conference_meeting_id": {
                                    "type": "string",
                                    "description": "The meeting ID of the meeting provider (Zoom, MS Teams etc.) that is associated with this activity"
                                  },
                                  "add_time": {
                                    "type": "string",
                                    "description": "The creation date and time of the activity in UTC. Format: YYYY-MM-DD HH:MM:SS."
                                  },
                                  "marked_as_done_time": {
                                    "type": "string",
                                    "description": "The date and time this activity was marked as done. Format: YYYY-MM-DD HH:MM:SS."
                                  },
                                  "last_notification_time": {
                                    "type": "string",
                                    "description": "The date and time of latest notifications sent about this activity to the participants or the attendees of this activity"
                                  },
                                  "last_notification_user_id": {
                                    "type": "integer",
                                    "description": "The ID of the user who triggered the sending of the latest notifications about this activity to the participants or the attendees of this activity"
                                  },
                                  "notification_language_id": {
                                    "type": "integer",
                                    "description": "The ID of the language the notifications are sent in"
                                  },
                                  "lead_id": {
                                    "description": "The ID of the lead in the UUID format this activity is associated with",
                                    "type": "string",
                                    "format": "uuid"
                                  },
                                  "active_flag": {
                                    "type": "boolean",
                                    "description": "Whether the activity is active or not"
                                  },
                                  "update_time": {
                                    "type": "string",
                                    "description": "The last update date and time of the activity. Format: YYYY-MM-DD HH:MM:SS."
                                  },
                                  "update_user_id": {
                                    "description": "The ID of the user who was the last to update this activity",
                                    "type": "integer"
                                  },
                                  "gcal_event_id": {
                                    "type": "string",
                                    "description": "For the activity which syncs to Google calendar, this is the Google event ID. NB! This field is related to old Google calendar sync and will be deprecated soon."
                                  },
                                  "google_calendar_id": {
                                    "type": "string",
                                    "description": "The Google calendar ID that this activity syncs to. NB! This field is related to old Google calendar sync and will be deprecated soon."
                                  },
                                  "google_calendar_etag": {
                                    "type": "string",
                                    "description": "The Google calendar API etag (version) that is used for syncing this activity. NB! This field is related to old Google calendar sync and will be deprecated soon."
                                  },
                                  "calendar_sync_include_context": {
                                    "type": "string",
                                    "description": "For activities that sync to an external calendar, this setting indicates if the activity syncs with context (what are the deals, persons, organizations this activity is related to)"
                                  },
                                  "source_timezone": {
                                    "type": "string",
                                    "description": "The timezone the activity was created in an external calendar"
                                  },
                                  "rec_rule": {
                                    "type": "string",
                                    "description": "The rule for the recurrence of the activity. Is important for activities synced into Pipedrive from an external calendar. Example: \"RRULE:FREQ=WEEKLY;BYDAY=WE\""
                                  },
                                  "rec_rule_extension": {
                                    "type": "string",
                                    "description": "Additional rules for the recurrence of the activity, extend the `rec_rule`. Is important for activities synced into Pipedrive from an external calendar."
                                  },
                                  "rec_master_activity_id": {
                                    "type": "integer",
                                    "description": "The ID of parent activity for a recurrent activity if the current activity is an exception to recurrence rules"
                                  },
                                  "series": {
                                    "description": "The list of recurring activity instances. It is in a structure as follows: `[{due_date: \"2020-06-24\", due_time: \"10:00:00\"}]`",
                                    "type": "array",
                                    "items": { "type": "object" }
                                  },
                                  "created_by_user_id": {
                                    "description": "The ID of the user who created the activity",
                                    "type": "integer"
                                  },
                                  "location_subpremise": {
                                    "type": "string",
                                    "description": "Subfield of location field. Indicates apartment/suite number."
                                  },
                                  "location_street_number": {
                                    "type": "string",
                                    "description": "Subfield of location field. Indicates house number."
                                  },
                                  "location_route": {
                                    "type": "string",
                                    "description": "Subfield of location field. Indicates street name."
                                  },
                                  "location_sublocality": {
                                    "type": "string",
                                    "description": "Subfield of location field. Indicates district/sublocality."
                                  },
                                  "location_locality": {
                                    "type": "string",
                                    "description": "Subfield of location field. Indicates city/town/village/locality."
                                  },
                                  "location_admin_area_level_1": {
                                    "type": "string",
                                    "description": "Subfield of location field. Indicates state/county."
                                  },
                                  "location_admin_area_level_2": {
                                    "type": "string",
                                    "description": "Subfield of location field. Indicates region."
                                  },
                                  "location_country": {
                                    "type": "string",
                                    "description": "Subfield of location field. Indicates country."
                                  },
                                  "location_postal_code": {
                                    "type": "string",
                                    "description": "Subfield of location field. Indicates ZIP/postal code."
                                  },
                                  "location_formatted_address": {
                                    "type": "string",
                                    "description": "Subfield of location field. Indicates full/combined address."
                                  },
                                  "org_name": {
                                    "description": "The name of the organization this activity is associated with",
                                    "type": "string"
                                  },
                                  "person_name": {
                                    "description": "The name of the person this activity is associated with",
                                    "type": "string"
                                  },
                                  "deal_title": {
                                    "description": "The name of the deal this activity is associated with",
                                    "type": "string"
                                  },
                                  "owner_name": {
                                    "description": "The name of the user this activity is owned by",
                                    "type": "string"
                                  },
                                  "person_dropbox_bcc": {
                                    "type": "string",
                                    "description": "The BCC email address of the person"
                                  },
                                  "deal_dropbox_bcc": {
                                    "type": "string",
                                    "description": "The BCC email address of the deal"
                                  },
                                  "assigned_to_user_id": {
                                    "description": "The ID of the user to whom the activity is assigned to. Equal to `user_id`.",
                                    "type": "integer"
                                  },
                                  "file": {
                                    "type": "object",
                                    "description": "The file that is attached to this activity. For example, this can be a reference to an audio note file generated with Pipedrive mobile app."
                                  }
                                }
                              }
                            ]
                          },
                          "description": "The array of activities"
                        },
                        "additional_data": {
                          "title": "activityDistributionDataWithAdditionalData",
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "activity_distribution": {
                                  "description": "The distribution of activities related to the organization grouped by the user ID",
                                  "type": "object",
                                  "properties": {
                                    "ASSIGNED_TO_USER_ID": {
                                      "description": "The ID of the user",
                                      "type": "object",
                                      "properties": {
                                        "activities": {
                                          "description": "The count of activities related to the user grouped by activity type",
                                          "type": "object",
                                          "properties": {
                                            "ACTIVITY_TYPE_NAME": {
                                              "description": "The count of activities related to a specific type",
                                              "type": "integer"
                                            }
                                          }
                                        },
                                        "name": {
                                          "type": "string",
                                          "description": "The name of the user"
                                        },
                                        "activity_count": {
                                          "type": "integer",
                                          "description": "The overall count of activities for the user"
                                        },
                                        "share": {
                                          "type": "integer",
                                          "description": "The percentage of activities belongs to the user"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            {
                              "description": "The additional data of the list",
                              "type": "object",
                              "properties": {
                                "start": {
                                  "type": "integer",
                                  "description": "Pagination start"
                                },
                                "limit": {
                                  "type": "integer",
                                  "description": "Items shown per page"
                                },
                                "more_items_in_collection": {
                                  "type": "boolean",
                                  "description": "If there are more list items in the collection than displayed or not"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "success": true,
                  "data": [
                    {
                      "id": 8,
                      "company_id": 22122,
                      "user_id": 1234,
                      "done": false,
                      "type": "deadline",
                      "reference_type": "scheduler-service",
                      "reference_id": 7,
                      "conference_meeting_client": "871b8bc88d3a1202",
                      "conference_meeting_url": "https://pipedrive.zoom.us/link",
                      "conference_meeting_id": "01758746701",
                      "due_date": "2020-06-09",
                      "due_time": "10:00",
                      "duration": "01:00",
                      "busy_flag": true,
                      "add_time": "2020-06-08 12:37:56",
                      "marked_as_done_time": "2020-08-08 08:08:38",
                      "last_notification_time": "2020-08-08 12:37:56",
                      "last_notification_user_id": 7655,
                      "notification_language_id": 1,
                      "subject": "Deadline",
                      "public_description": "This is a description",
                      "calendar_sync_include_context": "",
                      "location": "Mustamäe tee 3, Tallinn, Estonia",
                      "org_id": 5,
                      "person_id": 1101,
                      "deal_id": 300,
                      "lead_id": "46c3b0e1-db35-59ca-1828-4817378dff71",
                      "active_flag": true,
                      "update_time": "2020-08-08 12:37:56",
                      "update_user_id": 5596,
                      "gcal_event_id": "",
                      "google_calendar_id": "",
                      "google_calendar_etag": "",
                      "source_timezone": "",
                      "rec_rule": "RRULE:FREQ=WEEKLY;BYDAY=WE",
                      "rec_rule_extension": "",
                      "rec_master_activity_id": 1,
                      "series": [ ],
                      "note": "A note for the activity",
                      "created_by_user_id": 1234,
                      "location_subpremise": "",
                      "location_street_number": "3",
                      "location_route": "Mustamäe tee",
                      "location_sublocality": "Kristiine",
                      "location_locality": "Tallinn",
                      "location_admin_area_level_1": "Harju maakond",
                      "location_admin_area_level_2": "",
                      "location_country": "Estonia",
                      "location_postal_code": "10616",
                      "location_formatted_address": "Mustamäe tee 3, 10616 Tallinn, Estonia",
                      "attendees": [
                        {
                          "email_address": "attendee@pipedrivemail.com",
                          "is_organizer": 0,
                          "name": "Attendee",
                          "person_id": 25312,
                          "status": "noreply",
                          "user_id": null
                        }
                      ],
                      "participants": [
                        { "person_id": 17985, "primary_flag": false },
                        { "person_id": 1101, "primary_flag": true }
                      ],
                      "org_name": "Organization",
                      "person_name": "Person",
                      "deal_title": "Deal",
                      "owner_name": "Creator",
                      "person_dropbox_bcc": "company@pipedrivemail.com",
                      "deal_dropbox_bcc": "company+deal300@pipedrivemail.com",
                      "assigned_to_user_id": 1235,
                      "file": {
                        "id": "376892,",
                        "clean_name": "Audio 10:55:07.m4a",
                        "url": "https://pipedrive-files.s3-eu-west-1.amazonaws.com/Audio-recording.m4a"
                      }
                    }
                  ],
                  "additional_data": {
                    "allOf": [
                      {
                        "activity_distribution": {
                          "8877": {
                            "activities": { "call": 2, "meeting": 1 },
                            "name": "Will Smith",
                            "activity_count": 3,
                            "share": 100
                          }
                        }
                      },
                      {
                        "pagination": {
                          "start": 0,
                          "limit": 100,
                          "more_items_in_collection": true
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{id}/deals": {
      "get": {
        "summary": "List deals associated with an organization",
        "description": "Lists deals associated with an organization.",
        "operationId": "getOrganizationDeals",
        "tags": [ "Organizations" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the organization",
            "required": true,
            "schema": { "type": "integer" }
          },
          {
            "in": "query",
            "name": "start",
            "description": "Pagination start",
            "schema": { "type": "integer", "default": 0 }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Items shown per page",
            "schema": { "type": "integer" }
          },
          {
            "in": "query",
            "name": "status",
            "schema": {
              "type": "string",
              "default": "all_not_deleted",
              "enum": [ "open", "won", "lost", "deleted", "all_not_deleted" ]
            },
            "description": "Only fetch deals with a specific status. If omitted, all not deleted deals are returned. If set to deleted, deals that have been deleted up to 30 days ago will be included."
          },
          {
            "in": "query",
            "name": "sort",
            "schema": { "type": "string" },
            "description": "The field names and sorting mode separated by a comma (`field_name_1 ASC`, `field_name_2 DESC`). Only first-level field keys are supported (no nested keys)."
          },
          {
            "in": "query",
            "name": "only_primary_association",
            "schema": {
              "title": "numberBoolean",
              "type": "number",
              "enum": [ 0, 1 ]
            },
            "description": "If set, only deals that are directly associated to the organization are fetched. If not set (default), all deals are fetched that are either directly or indirectly related to the organization. Indirect relations include relations through custom, organization-type fields and through persons of the given organization."
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "getAssociatedDeals",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "title": "dealNonStrict",
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "integer",
                                    "description": "The ID of the deal"
                                  },
                                  "creator_user_id": {
                                    "type": "object",
                                    "description": "The creator of the deal",
                                    "properties": {
                                      "id": {
                                        "type": "integer",
                                        "description": "The ID of the deal creator"
                                      },
                                      "name": {
                                        "type": "string",
                                        "description": "The name of the deal creator"
                                      },
                                      "email": {
                                        "type": "string",
                                        "description": "The email of the deal creator"
                                      },
                                      "has_pic": {
                                        "type": "boolean",
                                        "description": "If the creator has a picture or not"
                                      },
                                      "pic_hash": {
                                        "type": "string",
                                        "nullable": true,
                                        "description": "The creator picture hash"
                                      },
                                      "active_flag": {
                                        "type": "boolean",
                                        "description": "Whether the creator is active or not"
                                      },
                                      "value": {
                                        "type": "integer",
                                        "description": "The ID of the deal creator"
                                      }
                                    }
                                  },
                                  "user_id": {
                                    "title": "dealUserDataWithId",
                                    "allOf": [
                                      {
                                        "description": "The user who is associated with the deal",
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "integer",
                                            "description": "The ID of the user"
                                          },
                                          "name": {
                                            "type": "string",
                                            "description": "The name of the user"
                                          },
                                          "email": {
                                            "type": "string",
                                            "description": "The email of the user"
                                          },
                                          "has_pic": {
                                            "type": "boolean",
                                            "description": "If the user has a picture or not"
                                          },
                                          "pic_hash": {
                                            "type": "string",
                                            "nullable": true,
                                            "description": "The user picture hash"
                                          },
                                          "active_flag": {
                                            "type": "boolean",
                                            "description": "Whether the user is active or not"
                                          }
                                        }
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "value": {
                                            "type": "integer",
                                            "description": "The ID of the user"
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  "person_id": {
                                    "title": "dealPersonDataWithId",
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "description": "The person who is associated with the deal",
                                        "properties": {
                                          "active_flag": {
                                            "type": "boolean",
                                            "description": "Whether the associated person is active or not"
                                          },
                                          "name": {
                                            "type": "string",
                                            "description": "The name of the person associated with the deal"
                                          },
                                          "email": {
                                            "type": "array",
                                            "description": "The emails of the person associated with the deal",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "label": {
                                                  "type": "string",
                                                  "description": "The type of the email"
                                                },
                                                "value": {
                                                  "type": "string",
                                                  "description": "The email of the associated person"
                                                },
                                                "primary": {
                                                  "type": "boolean",
                                                  "description": "If this is the primary email or not"
                                                }
                                              }
                                            }
                                          },
                                          "phone": {
                                            "type": "array",
                                            "description": "The phone numbers of the person associated with the deal",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "label": {
                                                  "type": "string",
                                                  "description": "The type of the phone number"
                                                },
                                                "value": {
                                                  "type": "string",
                                                  "description": "The phone number of the person associated with the deal"
                                                },
                                                "primary": {
                                                  "type": "boolean",
                                                  "description": "If this is the primary phone number or not"
                                                }
                                              }
                                            }
                                          },
                                          "owner_id": {
                                            "type": "integer",
                                            "description": "The ID of the owner of the person that is associated with the deal"
                                          }
                                        }
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "value": {
                                            "type": "integer",
                                            "description": "The ID of the person associated with the deal"
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  "org_id": {
                                    "title": "dealOrganizationDataWithId",
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "description": "The organization which is associated with the deal",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "description": "The name of the organization associated with the deal"
                                          },
                                          "people_count": {
                                            "type": "integer",
                                            "description": "The number of people connected with the organization that is associated with the deal"
                                          },
                                          "owner_id": {
                                            "type": "integer",
                                            "description": "The ID of the owner of the organization that is associated with the deal"
                                          },
                                          "address": {
                                            "type": "string",
                                            "description": "The address of the organization that is associated with the deal"
                                          },
                                          "active_flag": {
                                            "type": "boolean",
                                            "description": "Whether the associated organization is active or not"
                                          },
                                          "cc_email": {
                                            "type": "string",
                                            "description": "The BCC email of the organization associated with the deal"
                                          }
                                        }
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "value": {
                                            "type": "integer",
                                            "description": "The ID of the organization associated with the deal"
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              },
                              {
                                "title": "baseDeal",
                                "type": "object",
                                "properties": {
                                  "stage_id": {
                                    "type": "integer",
                                    "description": "The ID of the deal stage"
                                  },
                                  "title": {
                                    "type": "string",
                                    "description": "The title of the deal"
                                  },
                                  "value": {
                                    "type": "number",
                                    "description": "The value of the deal"
                                  },
                                  "currency": {
                                    "type": "string",
                                    "description": "The currency associated with the deal"
                                  },
                                  "add_time": {
                                    "type": "string",
                                    "description": "The creation date and time of the deal"
                                  },
                                  "update_time": {
                                    "type": "string",
                                    "description": "The last updated date and time of the deal"
                                  },
                                  "stage_change_time": {
                                    "type": "string",
                                    "description": "The last updated date and time of the deal stage"
                                  },
                                  "active": {
                                    "type": "boolean",
                                    "description": "Whether the deal is active or not"
                                  },
                                  "deleted": {
                                    "type": "boolean",
                                    "description": "Whether the deal is deleted or not"
                                  },
                                  "status": {
                                    "type": "string",
                                    "description": "The status of the deal"
                                  },
                                  "probability": {
                                    "type": "number",
                                    "nullable": true,
                                    "description": "The success probability percentage of the deal"
                                  },
                                  "next_activity_date": {
                                    "type": "string",
                                    "description": "The date of the next activity associated with the deal"
                                  },
                                  "next_activity_time": {
                                    "type": "string",
                                    "description": "The time of the next activity associated with the deal"
                                  },
                                  "next_activity_id": {
                                    "type": "integer",
                                    "nullable": true,
                                    "description": "The ID of the next activity associated with the deal"
                                  },
                                  "last_activity_id": {
                                    "type": "integer",
                                    "nullable": true,
                                    "description": "The ID of the last activity associated with the deal"
                                  },
                                  "last_activity_date": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The date of the last activity associated with the deal"
                                  },
                                  "lost_reason": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The reason for losing the deal"
                                  },
                                  "visible_to": {
                                    "type": "string",
                                    "description": "The visibility of the deal"
                                  },
                                  "close_time": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The date and time of closing the deal"
                                  },
                                  "pipeline_id": {
                                    "type": "integer",
                                    "description": "The ID of pipeline associated with the deal"
                                  },
                                  "won_time": {
                                    "type": "string",
                                    "description": "The date and time of changing the deal status as won"
                                  },
                                  "first_won_time": {
                                    "type": "string",
                                    "description": "The date and time of the first time changing the deal status as won"
                                  },
                                  "lost_time": {
                                    "type": "string",
                                    "description": "The date and time of changing the deal status as lost"
                                  },
                                  "products_count": {
                                    "type": "integer",
                                    "description": "The number of products associated with the deal"
                                  },
                                  "files_count": {
                                    "type": "integer",
                                    "description": "The number of files associated with the deal"
                                  },
                                  "notes_count": {
                                    "type": "integer",
                                    "description": "The number of notes associated with the deal"
                                  },
                                  "followers_count": {
                                    "type": "integer",
                                    "description": "The number of followers associated with the deal"
                                  },
                                  "email_messages_count": {
                                    "type": "integer",
                                    "description": "The number of emails associated with the deal"
                                  },
                                  "activities_count": {
                                    "type": "integer",
                                    "description": "The number of activities associated with the deal"
                                  },
                                  "done_activities_count": {
                                    "type": "integer",
                                    "description": "The number of completed activities associated with the deal"
                                  },
                                  "undone_activities_count": {
                                    "type": "integer",
                                    "description": "The number of incomplete activities associated with the deal"
                                  },
                                  "participants_count": {
                                    "type": "integer",
                                    "description": "The number of participants associated with the deal"
                                  },
                                  "expected_close_date": {
                                    "type": "string",
                                    "format": "date",
                                    "description": "The expected close date of the deal"
                                  },
                                  "last_incoming_mail_time": {
                                    "type": "string",
                                    "description": "The date and time of the last incoming email associated with the deal"
                                  },
                                  "last_outgoing_mail_time": {
                                    "type": "string",
                                    "description": "The date and time of the last outgoing email associated with the deal"
                                  },
                                  "label": {
                                    "type": "integer",
                                    "description": "The label assigned to the deal"
                                  },
                                  "stage_order_nr": {
                                    "type": "integer",
                                    "description": "The order number of the deal stage associated with the deal"
                                  },
                                  "person_name": {
                                    "type": "string",
                                    "description": "The name of the person associated with the deal"
                                  },
                                  "org_name": {
                                    "type": "string",
                                    "description": "The name of the organization associated with the deal"
                                  },
                                  "next_activity_subject": {
                                    "type": "string",
                                    "description": "The subject of the next activity associated with the deal"
                                  },
                                  "next_activity_type": {
                                    "type": "string",
                                    "description": "The type of the next activity associated with the deal"
                                  },
                                  "next_activity_duration": {
                                    "type": "string",
                                    "description": "The duration of the next activity associated with the deal"
                                  },
                                  "next_activity_note": {
                                    "type": "string",
                                    "description": "The note of the next activity associated with the deal"
                                  },
                                  "formatted_value": {
                                    "type": "string",
                                    "description": "The deal value formatted with selected currency. E.g. US$500"
                                  },
                                  "weighted_value": {
                                    "type": "number",
                                    "description": "Probability times deal value. Probability can either be deal probability or if not set, then stage probability."
                                  },
                                  "formatted_weighted_value": {
                                    "type": "string",
                                    "description": "The weighted_value formatted with selected currency. E.g. US$500"
                                  },
                                  "weighted_value_currency": {
                                    "type": "string",
                                    "description": "The currency associated with the deal"
                                  },
                                  "rotten_time": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The date and time of changing the deal status as rotten"
                                  },
                                  "owner_name": {
                                    "type": "string",
                                    "description": "The name of the deal owner"
                                  },
                                  "cc_email": {
                                    "type": "string",
                                    "description": "The BCC email of the deal"
                                  },
                                  "org_hidden": {
                                    "type": "boolean",
                                    "description": "If the organization that is associated with the deal is hidden or not"
                                  },
                                  "person_hidden": {
                                    "type": "boolean",
                                    "description": "If the person that is associated with the deal is hidden or not"
                                  }
                                }
                              }
                            ]
                          },
                          "description": "The array of deals"
                        },
                        "additional_data": {
                          "description": "The additional data of the list",
                          "type": "object",
                          "properties": {
                            "start": {
                              "type": "integer",
                              "description": "Pagination start"
                            },
                            "limit": {
                              "type": "integer",
                              "description": "Items shown per page"
                            },
                            "more_items_in_collection": {
                              "type": "boolean",
                              "description": "If there are more list items in the collection than displayed or not"
                            }
                          }
                        },
                        "related_objects": {
                          "type": "object",
                          "properties": {
                            "organization": {
                              "type": "object",
                              "properties": {
                                "ORGANIZATION_ID": {
                                  "type": "object",
                                  "description": "The ID of the organization associated with the item",
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "active_flag": {
                                          "type": "boolean",
                                          "description": "Whether the associated organization is active or not"
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "description": "The ID of the organization associated with the item",
                                      "allOf": [
                                        {
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "type": "integer",
                                              "description": "The ID of the organization associated with the item"
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string",
                                              "description": "The name of the organization associated with the item"
                                            },
                                            "people_count": {
                                              "type": "integer",
                                              "description": "The number of people connected with the organization that is associated with the item"
                                            },
                                            "owner_id": {
                                              "type": "integer",
                                              "description": "The ID of the owner of the organization that is associated with the item"
                                            },
                                            "address": {
                                              "type": "string",
                                              "description": "The address of the organization"
                                            },
                                            "cc_email": {
                                              "type": "string",
                                              "description": "The BCC email of the organization associated with the item"
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  ]
                                }
                              }
                            },
                            "person": {
                              "type": "object",
                              "properties": {
                                "PERSON_ID": {
                                  "type": "object",
                                  "description": "The ID of the person associated with the item",
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "active_flag": {
                                          "type": "boolean",
                                          "description": "Whether the associated person is active or not"
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "integer",
                                          "description": "The ID of the person associated with the item"
                                        },
                                        "name": {
                                          "type": "string",
                                          "description": "The name of the person associated with the item"
                                        },
                                        "email": {
                                          "type": "array",
                                          "description": "The emails of the person associated with the item",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "label": {
                                                "type": "string",
                                                "description": "The type of the email"
                                              },
                                              "value": {
                                                "type": "string",
                                                "description": "The email of the associated person"
                                              },
                                              "primary": {
                                                "type": "boolean",
                                                "description": "Whether this is the primary email or not"
                                              }
                                            }
                                          }
                                        },
                                        "phone": {
                                          "type": "array",
                                          "description": "The phone numbers of the person associated with the item",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "label": {
                                                "type": "string",
                                                "description": "The type of the phone number"
                                              },
                                              "value": {
                                                "type": "string",
                                                "description": "The phone number of the person associated with the item"
                                              },
                                              "primary": {
                                                "type": "boolean",
                                                "description": "Whether this is the primary phone number or not"
                                              }
                                            }
                                          }
                                        },
                                        "owner_id": {
                                          "type": "integer",
                                          "description": "The ID of the owner of the person that is associated with the item"
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            },
                            "user": {
                              "type": "object",
                              "properties": {
                                "USER_ID": {
                                  "type": "object",
                                  "title": "userDataWithId",
                                  "allOf": [
                                    {
                                      "properties": {
                                        "id": {
                                          "type": "integer",
                                          "description": "The ID of the user"
                                        },
                                        "name": {
                                          "type": "string",
                                          "description": "The name of the user"
                                        },
                                        "email": {
                                          "type": "string",
                                          "description": "The email of the user"
                                        },
                                        "has_pic": {
                                          "type": "integer",
                                          "description": "Whether the user has picture or not. 0 = No picture, 1 = Has picture."
                                        },
                                        "pic_hash": {
                                          "type": "string",
                                          "nullable": true,
                                          "description": "The user picture hash"
                                        },
                                        "active_flag": {
                                          "type": "boolean",
                                          "description": "Whether the user is active or not"
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "description": "The ID of the user"
                                    }
                                  ]
                                }
                              }
                            },
                            "stage": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "description": "The ID of the stage"
                                },
                                "order_nr": {
                                  "type": "integer",
                                  "description": "Defines the order of the stage"
                                },
                                "name": {
                                  "type": "string",
                                  "description": "The name of the stage"
                                },
                                "active_flag": {
                                  "type": "boolean",
                                  "description": "Whether the stage is active or deleted"
                                },
                                "deal_probability": {
                                  "type": "integer",
                                  "description": "The success probability percentage of the deal. Used/shown when the deal weighted values are used."
                                },
                                "pipeline_id": {
                                  "type": "integer",
                                  "description": "The ID of the pipeline to add the stage to"
                                },
                                "rotten_flag": {
                                  "type": "boolean",
                                  "enum": [ true, false ],
                                  "description": "Whether deals in this stage can become rotten"
                                },
                                "rotten_days": {
                                  "type": "integer",
                                  "description": "The number of days the deals not updated in this stage would become rotten. Applies only if the `rotten_flag` is set."
                                },
                                "add_time": {
                                  "type": "string",
                                  "description": "The stage creation time. Format: YYYY-MM-DD HH:MM:SS."
                                },
                                "update_time": {
                                  "type": "string",
                                  "description": "The stage update time. Format: YYYY-MM-DD HH:MM:SS."
                                }
                              }
                            },
                            "pipeline": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "description": "The ID of the pipeline"
                                },
                                "name": {
                                  "type": "string",
                                  "description": "The name of the pipeline"
                                },
                                "url_title": {
                                  "type": "string",
                                  "description": "The pipeline title displayed in the URL"
                                },
                                "order_nr": {
                                  "type": "integer",
                                  "description": "Defines the order of pipelines. First order (`order_nr=0`) is the default pipeline."
                                },
                                "active": {
                                  "type": "boolean",
                                  "description": "Whether this pipeline will be made inactive (hidden) or active"
                                },
                                "deal_probability": {
                                  "type": "boolean",
                                  "description": "Whether deal probability is disabled or enabled for this pipeline"
                                },
                                "add_time": {
                                  "type": "string",
                                  "description": "The pipeline creation time. Format: YYYY-MM-DD HH:MM:SS."
                                },
                                "update_time": {
                                  "type": "string",
                                  "description": "The pipeline update time. Format: YYYY-MM-DD HH:MM:SS."
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "success": true,
                  "data": [
                    {
                      "id": 1,
                      "creator_user_id": {
                        "id": 8877,
                        "name": "Creator",
                        "email": "john.doe@pipedrive.com",
                        "has_pic": false,
                        "pic_hash": null,
                        "active_flag": true,
                        "value": 8877
                      },
                      "user_id": {
                        "id": 8877,
                        "name": "Creator",
                        "email": "john.doe@pipedrive.com",
                        "has_pic": false,
                        "pic_hash": null,
                        "active_flag": true,
                        "value": 8877
                      },
                      "person_id": {
                        "active_flag": true,
                        "name": "Person",
                        "email": [
                          {
                            "label": "work",
                            "value": "person@pipedrive.com",
                            "primary": true
                          }
                        ],
                        "phone": [
                          {
                            "label": "work",
                            "value": "37244499911",
                            "primary": true
                          }
                        ],
                        "value": 1101
                      },
                      "org_id": {
                        "name": "Organization",
                        "people_count": 2,
                        "owner_id": 8877,
                        "address": "Mustamäe tee 3a, 10615 Tallinn",
                        "active_flag": true,
                        "cc_email": "org@pipedrivemail.com",
                        "value": 5
                      },
                      "stage_id": 2,
                      "title": "Deal One",
                      "value": 5000,
                      "currency": "EUR",
                      "add_time": "2019-05-29 04:21:51",
                      "update_time": "2019-11-28 16:19:50",
                      "stage_change_time": "2019-11-28 15:41:22",
                      "active": true,
                      "deleted": false,
                      "status": "open",
                      "probability": null,
                      "next_activity_date": "2019-11-29",
                      "next_activity_time": "11:30:00",
                      "next_activity_id": 128,
                      "last_activity_id": null,
                      "last_activity_date": null,
                      "lost_reason": null,
                      "visible_to": "1",
                      "close_time": null,
                      "pipeline_id": 1,
                      "won_time": "2019-11-27 11:40:36",
                      "first_won_time": "2019-11-27 11:40:36",
                      "lost_time": "2019-11-27 11:40:36",
                      "products_count": 0,
                      "files_count": 0,
                      "notes_count": 2,
                      "followers_count": 0,
                      "email_messages_count": 4,
                      "activities_count": 1,
                      "done_activities_count": 0,
                      "undone_activities_count": 1,
                      "participants_count": 1,
                      "expected_close_date": "2019-06-29",
                      "last_incoming_mail_time": "2019-05-29 18:21:42",
                      "last_outgoing_mail_time": "2019-05-30 03:45:35",
                      "label": 11,
                      "stage_order_nr": 2,
                      "person_name": "Person",
                      "org_name": "Organization",
                      "next_activity_subject": "Call",
                      "next_activity_type": "call",
                      "next_activity_duration": "00:30:00",
                      "next_activity_note": "Note content",
                      "formatted_value": "€5,000",
                      "weighted_value": 5000,
                      "formatted_weighted_value": "€5,000",
                      "weighted_value_currency": "EUR",
                      "rotten_time": null,
                      "owner_name": "Creator",
                      "cc_email": "company+deal1@pipedrivemail.com",
                      "org_hidden": false,
                      "person_hidden": false
                    }
                  ],
                  "additional_data": {
                    "pagination": {
                      "start": 0,
                      "limit": 100,
                      "more_items_in_collection": true
                    }
                  },
                  "related_objects": {
                    "user": {
                      "8877": {
                        "id": 8877,
                        "name": "Creator",
                        "email": "john.doe@pipedrive.com",
                        "has_pic": false,
                        "pic_hash": null,
                        "active_flag": true
                      }
                    },
                    "organization": {
                      "5": {
                        "id": 5,
                        "name": "Organization",
                        "people_count": 2,
                        "owner_id": 8877,
                        "address": "Mustamäe tee 3a, 10615 Tallinn",
                        "active_flag": true,
                        "cc_email": "org@pipedrivemail.com"
                      }
                    },
                    "person": {
                      "1101": {
                        "active_flag": true,
                        "id": 1101,
                        "name": "Person",
                        "email": [
                          {
                            "label": "work",
                            "value": "person@pipedrive.com",
                            "primary": true
                          }
                        ],
                        "phone": [
                          {
                            "label": "work",
                            "value": "3421787767",
                            "primary": true
                          }
                        ],
                        "owner_id": 8877
                      }
                    },
                    "stage": {
                      "2": {
                        "id": 2,
                        "company_id": 123,
                        "order_nr": 1,
                        "name": "Stage Name",
                        "active_flag": true,
                        "deal_probability": 100,
                        "pipeline_id": 1,
                        "rotten_flag": false,
                        "rotten_days": null,
                        "add_time": "2015-12-08 13:54:06",
                        "update_time": "2015-12-08 13:54:06",
                        "pipeline_name": "Pipeline",
                        "pipeline_deal_probability": true
                      }
                    },
                    "pipeline": {
                      "1": {
                        "id": 1,
                        "name": "Pipeline",
                        "url_title": "Pipeline",
                        "order_nr": 0,
                        "active": true,
                        "deal_probability": true,
                        "add_time": "2015-12-08 10:00:24",
                        "update_time": "2015-12-08 10:00:24"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{id}/files": {
      "get": {
        "summary": "List files attached to an organization",
        "description": "Lists files associated with an organization.",
        "operationId": "getOrganizationFiles",
        "tags": [ "Organizations" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the organization",
            "required": true,
            "schema": { "type": "integer" }
          },
          {
            "in": "query",
            "name": "start",
            "description": "Pagination start",
            "schema": { "type": "integer", "default": 0 }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Items shown per page",
            "schema": { "type": "integer" }
          },
          {
            "in": "query",
            "name": "sort",
            "schema": { "type": "string" },
            "description": "The field names and sorting mode separated by a comma (`field_name_1 ASC`, `field_name_2 DESC`). Only first-level field keys are supported (no nested keys). Supported fields: `id`, `user_id`, `deal_id`, `person_id`, `org_id`, `product_id`, `add_time`, `update_time`, `file_name`, `file_type`, `file_size`, `comment`."
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "getAssociatedFiles",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The file data",
                            "properties": {
                              "id": {
                                "type": "integer",
                                "description": "The ID of the file"
                              },
                              "user_id": {
                                "type": "integer",
                                "description": "The ID of the user to associate the file with"
                              },
                              "deal_id": {
                                "type": "integer",
                                "description": "The ID of the deal to associate the file with"
                              },
                              "person_id": {
                                "type": "integer",
                                "description": "The ID of the person to associate the file with"
                              },
                              "org_id": {
                                "type": "integer",
                                "description": "The ID of the organization to associate the file with"
                              },
                              "product_id": {
                                "type": "integer",
                                "description": "The ID of the product to associate the file with"
                              },
                              "activity_id": {
                                "type": "integer",
                                "description": "The ID of the activity to associate the file with"
                              },
                              "lead_id": {
                                "type": "string",
                                "description": "The ID of the lead to associate the file with",
                                "format": "uuid"
                              },
                              "add_time": {
                                "type": "string",
                                "description": "The date and time when the file was added/created. Format: YYYY-MM-DD HH:MM:SS"
                              },
                              "update_time": {
                                "type": "string",
                                "description": "The last updated date and time of the file. Format: YYYY-MM-DD HH:MM:SS"
                              },
                              "file_name": {
                                "type": "string",
                                "description": "The original name of the file"
                              },
                              "file_size": {
                                "type": "integer",
                                "description": "The size of the file"
                              },
                              "active_flag": {
                                "type": "boolean",
                                "description": "Whether the user is active or not. false = Not activated, true = Activated"
                              },
                              "inline_flag": {
                                "type": "boolean",
                                "description": "Whether the file was uploaded as inline or not"
                              },
                              "remote_location": {
                                "type": "string",
                                "description": "The location type to send the file to. Only googledrive is supported at the moment."
                              },
                              "remote_id": {
                                "type": "string",
                                "description": "The ID of the remote item"
                              },
                              "cid": {
                                "type": "string",
                                "description": "The ID of the inline attachment"
                              },
                              "s3_bucket": {
                                "type": "string",
                                "description": "The location of the cloud storage"
                              },
                              "mail_message_id": {
                                "type": "string",
                                "description": "The ID of the mail message to associate the file with"
                              },
                              "mail_template_id": {
                                "type": "string",
                                "description": "The ID of the mail template to associate the file with"
                              },
                              "deal_name": {
                                "type": "string",
                                "description": "The name of the deal associated with the dile"
                              },
                              "person_name": {
                                "type": "string",
                                "description": "The name of the person associated with the file"
                              },
                              "org_name": {
                                "type": "string",
                                "description": "The name of the organization associated with the file"
                              },
                              "product_name": {
                                "type": "string",
                                "description": "The name of the product associated with the file"
                              },
                              "lead_name": {
                                "type": "string",
                                "description": "The name of the lead associated with the file"
                              },
                              "url": {
                                "type": "string",
                                "description": "The URL of the download file"
                              },
                              "name": {
                                "type": "string",
                                "description": "The visible name of the file"
                              },
                              "description": {
                                "type": "string",
                                "description": "The description of the file"
                              }
                            }
                          },
                          "description": "The array of files"
                        },
                        "additional_data": {
                          "description": "The additional data of the list",
                          "type": "object",
                          "properties": {
                            "start": {
                              "type": "integer",
                              "description": "Pagination start"
                            },
                            "limit": {
                              "type": "integer",
                              "description": "Items shown per page"
                            },
                            "more_items_in_collection": {
                              "type": "boolean",
                              "description": "If there are more list items in the collection than displayed or not"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "success": true,
                  "data": [
                    {
                      "id": 1,
                      "user_id": 8877,
                      "deal_id": 1,
                      "person_id": 1,
                      "org_id": 1480,
                      "product_id": 1,
                      "activity_id": 1,
                      "lead_id": "adf21080-0e10-11eb-879b-05d71fb426ec",
                      "log_id": null,
                      "add_time": "2020-09-16 11:19:36",
                      "update_time": "2020-09-16 11:19:36",
                      "file_name": "95781006_794143070992462_4330873630616453120_n_60817458877506f9eb74d03e5ef9ba061915b797998.jpg",
                      "file_type": "img",
                      "file_size": 95116,
                      "active_flag": true,
                      "inline_flag": false,
                      "remote_location": "s3",
                      "remote_id": "95781006_794143070992462_4330873630616453120_n.jpg",
                      "cid": "",
                      "s3_bucket": "",
                      "mail_message_id": "",
                      "mail_template_id": "",
                      "deal_name": "nice deal",
                      "person_name": "",
                      "people_name": "",
                      "org_name": "Pipedrive Inc.",
                      "product_name": "",
                      "lead_name": "nice lead",
                      "url": "https://app.pipedrive.com/api/v1/files/304/download",
                      "name": "95781006_794143070992462_4330873630616453120_n.jpg",
                      "description": ""
                    }
                  ],
                  "additional_data": {
                    "pagination": {
                      "start": 0,
                      "limit": 100,
                      "more_items_in_collection": true
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{id}/flow": {
      "get": {
        "summary": "List updates about an organization",
        "description": "Lists updates about an organization.",
        "operationId": "getOrganizationUpdates",
        "tags": [ "Organizations" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the organization",
            "required": true,
            "schema": { "type": "integer" }
          },
          {
            "in": "query",
            "name": "start",
            "description": "Pagination start",
            "schema": { "type": "integer", "default": 0 }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Items shown per page",
            "schema": { "type": "integer" }
          },
          {
            "in": "query",
            "name": "all_changes",
            "description": "Whether to show custom field updates or not. 1 = Include custom field changes. If omitted, returns changes without custom field updates.",
            "schema": { "type": "string" }
          },
          {
            "in": "query",
            "name": "items",
            "description": "A comma-separated string for filtering out item specific updates. (Possible values - activity, plannedActivity, note, file, change, deal, follower, participant, mailMessage, mailMessageWithAttachment, invoice, activityFile, document)",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Get the organization updates",
            "content": {
              "application/json": {
                "schema": {
                  "title": "getAssociatedUpdates",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "object": {
                                "type": "string",
                                "description": "The type of the person update. (Possible object types - organizationChange, dealChange, file, activity)"
                              },
                              "timestamp": {
                                "type": "string",
                                "description": "The creation date and time of the update"
                              },
                              "data": {
                                "type": "object",
                                "description": "The data related to the update"
                              }
                            }
                          }
                        },
                        "additional_data": {
                          "description": "The additional data of the list",
                          "type": "object",
                          "properties": {
                            "start": {
                              "type": "integer",
                              "description": "Pagination start"
                            },
                            "limit": {
                              "type": "integer",
                              "description": "Items shown per page"
                            },
                            "more_items_in_collection": {
                              "type": "boolean",
                              "description": "If there are more list items in the collection than displayed or not"
                            }
                          }
                        },
                        "related_objects": {
                          "type": "object",
                          "properties": {
                            "organization": {
                              "type": "object",
                              "properties": {
                                "ORGANIZATION_ID": {
                                  "type": "object",
                                  "description": "The ID of the organization associated with the item",
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "integer",
                                          "description": "The ID of the organization associated with the item"
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "The name of the organization associated with the item"
                                        },
                                        "people_count": {
                                          "type": "integer",
                                          "description": "The number of people connected with the organization that is associated with the item"
                                        },
                                        "owner_id": {
                                          "type": "integer",
                                          "description": "The ID of the owner of the organization that is associated with the item"
                                        },
                                        "address": {
                                          "type": "string",
                                          "description": "The address of the organization"
                                        },
                                        "cc_email": {
                                          "type": "string",
                                          "description": "The BCC email of the organization associated with the item"
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            },
                            "user": {
                              "type": "object",
                              "properties": {
                                "USER_ID": {
                                  "type": "object",
                                  "title": "userDataWithId",
                                  "allOf": [
                                    {
                                      "properties": {
                                        "id": {
                                          "type": "integer",
                                          "description": "The ID of the user"
                                        },
                                        "name": {
                                          "type": "string",
                                          "description": "The name of the user"
                                        },
                                        "email": {
                                          "type": "string",
                                          "description": "The email of the user"
                                        },
                                        "has_pic": {
                                          "type": "integer",
                                          "description": "Whether the user has picture or not. 0 = No picture, 1 = Has picture."
                                        },
                                        "pic_hash": {
                                          "type": "string",
                                          "nullable": true,
                                          "description": "The user picture hash"
                                        },
                                        "active_flag": {
                                          "type": "boolean",
                                          "description": "Whether the user is active or not"
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "description": "The ID of the user"
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "success": true,
                  "data": [
                    {
                      "object": "organizationChange",
                      "timestamp": "2020-09-15 11:55:14",
                      "data": {
                        "id": 3694,
                        "item_id": 1480,
                        "user_id": 9271535,
                        "field_key": "owner_id",
                        "old_value": 9271535,
                        "new_value": 8877,
                        "is_bulk_update_flag": null,
                        "log_time": "2020-09-15 11:55:14",
                        "change_source": "app",
                        "change_source_user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML like Gecko) Chrome/84.0.4147.135 Safari/537.36",
                        "additional_data": {
                          "new_value_formatted": "Will Smith",
                          "old_value_formatted": "Robert Smith"
                        }
                      }
                    },
                    {
                      "object": "activity",
                      "timestamp": "2020-08-07 08:15:00",
                      "data": {
                        "id": 8,
                        "company_id": 22122,
                        "user_id": 1234,
                        "done": false,
                        "type": "deadline",
                        "reference_type": "scheduler-service",
                        "reference_id": 7,
                        "conference_meeting_client": "871b8bc88d3a1202",
                        "conference_meeting_url": "https://pipedrive.zoom.us/link",
                        "conference_meeting_id": "01758746701",
                        "due_date": "2020-06-09",
                        "due_time": "10:00",
                        "duration": "01:00",
                        "busy_flag": true,
                        "add_time": "2020-06-08 12:37:56",
                        "marked_as_done_time": "2020-08-08 08:08:38",
                        "last_notification_time": "2020-08-08 12:37:56",
                        "last_notification_user_id": 7655,
                        "notification_language_id": 1,
                        "subject": "Deadline",
                        "public_description": "This is a description",
                        "calendar_sync_include_context": "",
                        "location": "Mustamäe tee 3, Tallinn, Estonia",
                        "org_id": 5,
                        "person_id": 1101,
                        "deal_id": 300,
                        "lead_id": "46c3b0e1-db35-59ca-1828-4817378dff71",
                        "active_flag": true,
                        "update_time": "2020-08-08 12:37:56",
                        "update_user_id": 5596,
                        "gcal_event_id": "",
                        "google_calendar_id": "",
                        "google_calendar_etag": "",
                        "source_timezone": "",
                        "rec_rule": "RRULE:FREQ=WEEKLY;BYDAY=WE",
                        "rec_rule_extension": "",
                        "rec_master_activity_id": 1,
                        "series": [ ],
                        "note": "A note for the activity",
                        "created_by_user_id": 1234,
                        "location_subpremise": "",
                        "location_street_number": "3",
                        "location_route": "Mustamäe tee",
                        "location_sublocality": "Kristiine",
                        "location_locality": "Tallinn",
                        "location_admin_area_level_1": "Harju maakond",
                        "location_admin_area_level_2": "",
                        "location_country": "Estonia",
                        "location_postal_code": "10616",
                        "location_formatted_address": "Mustamäe tee 3, 10616 Tallinn, Estonia",
                        "attendees": [
                          {
                            "email_address": "attendee@pipedrivemail.com",
                            "is_organizer": 0,
                            "name": "Attendee",
                            "person_id": 25312,
                            "status": "noreply",
                            "user_id": null
                          }
                        ],
                        "participants": [
                          { "person_id": 17985, "primary_flag": false },
                          { "person_id": 1101, "primary_flag": true }
                        ],
                        "org_name": "Organization",
                        "person_name": "Person",
                        "deal_title": "Deal",
                        "owner_name": "Creator",
                        "person_dropbox_bcc": "company@pipedrivemail.com",
                        "deal_dropbox_bcc": "company+deal300@pipedrivemail.com",
                        "assigned_to_user_id": 1235,
                        "file": {
                          "id": "376892,",
                          "clean_name": "Audio 10:55:07.m4a",
                          "url": "https://pipedrive-files.s3-eu-west-1.amazonaws.com/Audio-recording.m4a"
                        }
                      }
                    },
                    {
                      "object": "file",
                      "timestamp": "2020-08-10 11:52:26",
                      "data": {
                        "id": 1,
                        "user_id": 8877,
                        "deal_id": 1,
                        "person_id": 1,
                        "org_id": 1480,
                        "product_id": 1,
                        "activity_id": 1,
                        "lead_id": "adf21080-0e10-11eb-879b-05d71fb426ec",
                        "log_id": null,
                        "add_time": "2020-09-16 11:19:36",
                        "update_time": "2020-09-16 11:19:36",
                        "file_name": "95781006_794143070992462_4330873630616453120_n_60817458877506f9eb74d03e5ef9ba061915b797998.jpg",
                        "file_type": "img",
                        "file_size": 95116,
                        "active_flag": true,
                        "inline_flag": false,
                        "remote_location": "s3",
                        "remote_id": "95781006_794143070992462_4330873630616453120_n.jpg",
                        "cid": "",
                        "s3_bucket": "",
                        "mail_message_id": "",
                        "mail_template_id": "",
                        "deal_name": "nice deal",
                        "person_name": "",
                        "people_name": "",
                        "org_name": "Pipedrive Inc.",
                        "product_name": "",
                        "lead_name": "nice lead",
                        "url": "https://app.pipedrive.com/api/v1/files/304/download",
                        "name": "95781006_794143070992462_4330873630616453120_n.jpg",
                        "description": ""
                      }
                    }
                  ],
                  "additional_data": {
                    "pagination": {
                      "start": 0,
                      "limit": 100,
                      "more_items_in_collection": true
                    }
                  },
                  "related_objects": {
                    "allOf": [
                      {
                        "user": {
                          "123": {
                            "id": 123,
                            "name": "Jane Doe",
                            "email": "jane@pipedrive.com",
                            "has_pic": 1,
                            "pic_hash": "2611ace8ac6a3afe2f69ed56f9e08c6b",
                            "active_flag": true
                          }
                        }
                      },
                      {
                        "organization": {
                          "1": {
                            "id": 1,
                            "name": "Org Name",
                            "people_count": 1,
                            "owner_id": 123,
                            "address": "Mustamäe tee 3a, 10615 Tallinn",
                            "active_flag": true,
                            "cc_email": "org@pipedrivemail.com"
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{id}/followers": {
      "get": {
        "summary": "List followers of an organization",
        "description": "Lists the followers of an organization.",
        "operationId": "getOrganizationFollowers",
        "tags": [ "Organizations" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the organization",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "getAssociatedFollowers",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "If the request was successful or not"
                    },
                    "data": {
                      "type": "array",
                      "description": "The array of followers",
                      "items": {
                        "allOf": [
                          {
                            "type": "object",
                            "properties": {
                              "org_id": {
                                "type": "integer",
                                "description": "The ID of the organization"
                              }
                            }
                          },
                          {
                            "type": "object",
                            "properties": {
                              "user_id": {
                                "type": "integer",
                                "description": "The user ID of the follower related to the item"
                              },
                              "id": {
                                "type": "integer",
                                "description": "The ID of the follower"
                              },
                              "add_time": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The date and time of adding the follower to the item"
                              }
                            }
                          }
                        ]
                      }
                    },
                    "additional_data": {
                      "type": "object",
                      "properties": {
                        "pagination": {
                          "description": "Pagination details of the list",
                          "type": "object",
                          "properties": {
                            "start": {
                              "type": "integer",
                              "description": "Pagination start"
                            },
                            "limit": {
                              "type": "integer",
                              "description": "Items shown per page"
                            },
                            "more_items_in_collection": {
                              "type": "boolean",
                              "description": "Whether there are more list items in the collection than displayed"
                            },
                            "next_start": {
                              "type": "integer",
                              "description": "Next pagination start"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "success": true,
                  "data": [
                    {
                      "user_id": 100,
                      "id": 123,
                      "org_id": 77,
                      "add_time": "2020-09-08 08:17:52"
                    }
                  ],
                  "additional_data": {
                    "pagination": {
                      "start": 0,
                      "limit": 100,
                      "more_items_in_collection": false,
                      "next_start": 100
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add a follower to an organization",
        "description": "Adds a follower to an organization.",
        "operationId": "addOrganizationFollower",
        "tags": [ "Organizations" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the organization",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "addOrganizationFollowerRequest",
                "type": "object",
                "required": [ "user_id" ],
                "properties": {
                  "user_id": {
                    "type": "integer",
                    "description": "The ID of the user"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "addOrganizationFollower",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "If the request was successful or not"
                    },
                    "data": {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "org_id": {
                              "type": "integer",
                              "description": "The ID of the organization"
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "user_id": {
                              "type": "integer",
                              "description": "The user ID of the follower related to the item"
                            },
                            "id": {
                              "type": "integer",
                              "description": "The ID of the follower"
                            },
                            "add_time": {
                              "type": "string",
                              "format": "date-time",
                              "description": "The date and time of adding the follower to the item"
                            }
                          }
                        }
                      ]
                    }
                  }
                },
                "example": {
                  "success": true,
                  "data": {
                    "user_id": 100,
                    "id": 123,
                    "org_id": 77,
                    "add_time": "2020-09-08 08:17:52"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{id}/followers/{follower_id}": {
      "delete": {
        "summary": "Delete a follower from an organization",
        "description": "Deletes a follower from an organization. You can retrieve the `follower_id` from the <a href=\"https://developers.pipedrive.com/docs/api/v1/Organizations#getOrganizationFollowers\">List followers of an organization</a> endpoint.",
        "operationId": "deleteOrganizationFollower",
        "tags": [ "Organizations" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the organization",
            "required": true,
            "schema": { "type": "integer" }
          },
          {
            "in": "path",
            "name": "follower_id",
            "required": true,
            "schema": { "type": "integer" },
            "description": "The ID of the follower"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "deleteOrganizationFollower",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "If the request was successful or not"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "description": "The ID of the follower that was deleted from the organization"
                        }
                      }
                    }
                  }
                },
                "example": { "success": true, "data": { "id": 123 } }
              }
            }
          }
        }
      }
    },
    "/organizations/{id}/mailMessages": {
      "get": {
        "summary": "List mail messages associated with an organization",
        "description": "Lists mail messages associated with an organization.",
        "operationId": "getOrganizationMailMessages",
        "tags": [ "Organizations" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the organization",
            "required": true,
            "schema": { "type": "integer" }
          },
          {
            "in": "query",
            "name": "start",
            "description": "Pagination start",
            "schema": { "type": "integer", "default": 0 }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Items shown per page",
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "getAssociatedMailMessages",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "description": "The array of mail messages",
                          "items": {
                            "type": "object",
                            "properties": {
                              "object": {
                                "type": "string",
                                "description": "The type of the data item"
                              },
                              "timestamp": {
                                "type": "string",
                                "description": "The date and time when the item was created"
                              },
                              "data": {
                                "title": "mailMessageItemForList",
                                "allOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "description": "ID of the mail message.",
                                        "type": "integer"
                                      },
                                      "from": {
                                        "type": "array",
                                        "description": "The array of mail message sender (object)",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "description": "ID of the mail participant",
                                              "type": "integer"
                                            },
                                            "email_address": {
                                              "description": "Mail address of the mail participant",
                                              "type": "string"
                                            },
                                            "name": {
                                              "description": "Name of the mail participant",
                                              "type": "string"
                                            },
                                            "linked_person_id": {
                                              "description": "ID of the linked person to the mail message",
                                              "type": "integer"
                                            },
                                            "linked_person_name": {
                                              "description": "Name of the linked person to the mail message",
                                              "type": "string"
                                            },
                                            "mail_message_party_id": {
                                              "description": "ID of the mail message participant",
                                              "type": "integer"
                                            }
                                          }
                                        }
                                      },
                                      "to": {
                                        "type": "array",
                                        "description": "The array of mail message receiver (object)",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "description": "ID of the mail participant",
                                              "type": "integer"
                                            },
                                            "email_address": {
                                              "description": "Mail address of the mail participant",
                                              "type": "string"
                                            },
                                            "name": {
                                              "description": "Name of the mail participant",
                                              "type": "string"
                                            },
                                            "linked_person_id": {
                                              "description": "ID of the linked person to the mail message",
                                              "type": "integer"
                                            },
                                            "linked_person_name": {
                                              "description": "Name of the linked person to the mail message",
                                              "type": "string"
                                            },
                                            "mail_message_party_id": {
                                              "description": "ID of the mail message participant",
                                              "type": "integer"
                                            }
                                          }
                                        }
                                      },
                                      "cc": {
                                        "type": "array",
                                        "description": "The array of mail message copies (object)",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "description": "ID of the mail participant",
                                              "type": "integer"
                                            },
                                            "email_address": {
                                              "description": "Mail address of the mail participant",
                                              "type": "string"
                                            },
                                            "name": {
                                              "description": "Name of the mail participant",
                                              "type": "string"
                                            },
                                            "linked_person_id": {
                                              "description": "ID of the linked person to the mail message",
                                              "type": "integer"
                                            },
                                            "linked_person_name": {
                                              "description": "Name of the linked person to the mail message",
                                              "type": "string"
                                            },
                                            "mail_message_party_id": {
                                              "description": "ID of the mail message participant",
                                              "type": "integer"
                                            }
                                          }
                                        }
                                      },
                                      "bcc": {
                                        "type": "array",
                                        "description": "The array of mail message blind copies (object)",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "description": "ID of the mail participant",
                                              "type": "integer"
                                            },
                                            "email_address": {
                                              "description": "Mail address of the mail participant",
                                              "type": "string"
                                            },
                                            "name": {
                                              "description": "Name of the mail participant",
                                              "type": "string"
                                            },
                                            "linked_person_id": {
                                              "description": "ID of the linked person to the mail message",
                                              "type": "integer"
                                            },
                                            "linked_person_name": {
                                              "description": "Name of the linked person to the mail message",
                                              "type": "string"
                                            },
                                            "mail_message_party_id": {
                                              "description": "ID of the mail message participant",
                                              "type": "integer"
                                            }
                                          }
                                        }
                                      },
                                      "body_url": {
                                        "type": "string",
                                        "description": "The mail message body URL"
                                      },
                                      "account_id": {
                                        "type": "string",
                                        "description": "The connection account ID"
                                      },
                                      "user_id": {
                                        "type": "integer",
                                        "description": "ID of the user whom mail message will be assigned to"
                                      },
                                      "mail_thread_id": {
                                        "type": "integer",
                                        "description": "ID of the mail message thread"
                                      },
                                      "subject": {
                                        "type": "string",
                                        "description": "The subject of mail message"
                                      },
                                      "snippet": {
                                        "type": "string",
                                        "description": "The snippet of mail message. Snippet length is up to 225 characters."
                                      },
                                      "mail_tracking_status": {
                                        "type": "string",
                                        "nullable": true,
                                        "description": "The status of tracking mail message. Value is `null` if tracking is not enabled.",
                                        "enum": [ "opened", "not opened" ]
                                      },
                                      "mail_link_tracking_enabled_flag": {
                                        "description": "Whether the link tracking in mail message body is enabled.",
                                        "allOf": [
                                          {
                                            "title": "numberBooleanDefault0",
                                            "type": "number",
                                            "default": 0,
                                            "enum": [ 0, 1 ]
                                          }
                                        ]
                                      },
                                      "read_flag": {
                                        "description": "Whether the mail message is read or not by the user",
                                        "allOf": [
                                          {
                                            "title": "numberBooleanDefault0",
                                            "type": "number",
                                            "default": 0,
                                            "enum": [ 0, 1 ]
                                          }
                                        ]
                                      },
                                      "draft": {
                                        "type": "string",
                                        "description": "If the mail message has a draft status then the value is the mail message object as JSON formatted string, otherwise `null`."
                                      },
                                      "draft_flag": {
                                        "description": "Whether the mail message is a draft or not",
                                        "allOf": [
                                          {
                                            "title": "numberBooleanDefault0",
                                            "type": "number",
                                            "default": 0,
                                            "enum": [ 0, 1 ]
                                          }
                                        ]
                                      },
                                      "synced_flag": {
                                        "description": "Whether the mail message is synced with the provider or not",
                                        "allOf": [
                                          {
                                            "title": "numberBooleanDefault0",
                                            "type": "number",
                                            "default": 0,
                                            "enum": [ 0, 1 ]
                                          }
                                        ]
                                      },
                                      "deleted_flag": {
                                        "allOf": [
                                          {
                                            "title": "numberBooleanDefault0",
                                            "type": "number",
                                            "default": 0,
                                            "enum": [ 0, 1 ]
                                          }
                                        ],
                                        "description": "Whether the mail message is deleted or not"
                                      },
                                      "has_body_flag": {
                                        "description": "Whether the mail message has a body or not",
                                        "allOf": [
                                          {
                                            "title": "numberBooleanDefault0",
                                            "type": "number",
                                            "default": 0,
                                            "enum": [ 0, 1 ]
                                          }
                                        ]
                                      },
                                      "sent_flag": {
                                        "description": "Whether the mail message has been sent or not",
                                        "allOf": [
                                          {
                                            "title": "numberBooleanDefault0",
                                            "type": "number",
                                            "default": 0,
                                            "enum": [ 0, 1 ]
                                          }
                                        ]
                                      },
                                      "sent_from_pipedrive_flag": {
                                        "description": "Whether the mail message has been sent from Pipedrive app or not",
                                        "allOf": [
                                          {
                                            "title": "numberBooleanDefault0",
                                            "type": "number",
                                            "default": 0,
                                            "enum": [ 0, 1 ]
                                          }
                                        ]
                                      },
                                      "smart_bcc_flag": {
                                        "description": "Whether the mail message has been created by Smart Email BCC feature or not",
                                        "allOf": [
                                          {
                                            "title": "numberBooleanDefault0",
                                            "type": "number",
                                            "default": 0,
                                            "enum": [ 0, 1 ]
                                          }
                                        ]
                                      },
                                      "message_time": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "Creation or receival time of the mail message"
                                      },
                                      "add_time": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "The insertion into the database time of the mail message"
                                      },
                                      "update_time": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "The updating time in the database of the mail message"
                                      },
                                      "has_attachments_flag": {
                                        "description": "Whether the mail message has an attachment or not",
                                        "allOf": [
                                          {
                                            "title": "numberBooleanDefault0",
                                            "type": "number",
                                            "default": 0,
                                            "enum": [ 0, 1 ]
                                          }
                                        ]
                                      },
                                      "has_inline_attachments_flag": {
                                        "description": "Whether the mail message has an inline attachment or not",
                                        "allOf": [
                                          {
                                            "title": "numberBooleanDefault0",
                                            "type": "number",
                                            "default": 0,
                                            "enum": [ 0, 1 ]
                                          }
                                        ]
                                      },
                                      "has_real_attachments_flag": {
                                        "description": "Whether the mail message has an attachment (which is not inline) or not",
                                        "allOf": [
                                          {
                                            "title": "numberBooleanDefault0",
                                            "type": "number",
                                            "default": 0,
                                            "enum": [ 0, 1 ]
                                          }
                                        ]
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "nylas_id": {
                                        "type": "string",
                                        "description": "The Mail Message ID assigned by the sync provider"
                                      },
                                      "s3_bucket": {
                                        "type": "string",
                                        "description": "The name of the S3 bucket"
                                      },
                                      "s3_bucket_path": {
                                        "type": "string",
                                        "description": "The path of the S3 bucket"
                                      },
                                      "external_deleted_flag": {
                                        "type": "boolean",
                                        "description": "If the Mail Message has been deleted on the provider side or not"
                                      },
                                      "mua_message_id": {
                                        "type": "string",
                                        "description": "The Mail Message ID assigned by the mail user agent"
                                      },
                                      "template_id": {
                                        "type": "integer",
                                        "description": "The ID of the mail template"
                                      },
                                      "timestamp": {
                                        "type": "string",
                                        "description": "The add date and time of the Mail Message"
                                      },
                                      "item_type": {
                                        "type": "string",
                                        "description": "The type of the data item"
                                      },
                                      "company_id": {
                                        "type": "integer",
                                        "description": "The ID of the company"
                                      }
                                    }
                                  }
                                ]
                              }
                            }
                          }
                        },
                        "additional_data": {
                          "description": "The additional data of the list",
                          "type": "object",
                          "properties": {
                            "start": {
                              "type": "integer",
                              "description": "Pagination start"
                            },
                            "limit": {
                              "type": "integer",
                              "description": "Items shown per page"
                            },
                            "more_items_in_collection": {
                              "type": "boolean",
                              "description": "If there are more list items in the collection than displayed or not"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "success": true,
                  "data": [
                    {
                      "object": "mailMessage",
                      "timestamp": "2020-09-16 13:38:17",
                      "data": {
                        "id": 1,
                        "from": [
                          {
                            "id": 1,
                            "email_address": "mail@example.org",
                            "name": "Test",
                            "linked_person_id": 1,
                            "linked_person_name": "",
                            "mail_message_party_id": 1
                          }
                        ],
                        "to": [
                          {
                            "id": 1,
                            "email_address": "mail@example.org",
                            "name": "Test",
                            "linked_person_id": 1,
                            "linked_person_name": "",
                            "mail_message_party_id": 1
                          }
                        ],
                        "cc": [
                          {
                            "id": 1,
                            "email_address": "mail@example.org",
                            "name": "Test",
                            "linked_person_id": 1,
                            "linked_person_name": "",
                            "mail_message_party_id": 1
                          }
                        ],
                        "bcc": [
                          {
                            "id": 1,
                            "email_address": "mail@example.org",
                            "name": "Test",
                            "linked_person_id": 1,
                            "linked_person_name": "",
                            "mail_message_party_id": 1
                          }
                        ],
                        "body_url": "https://example.org",
                        "nylas_id": "8cfw8n7l4iy24xxxxxxxxx",
                        "account_id": "ao5gpry0zykr1xxxxxxxxx",
                        "user_id": 1,
                        "mail_thread_id": 1,
                        "subject": "test subject",
                        "snippet": "test subject",
                        "mail_tracking_status": "opened",
                        "mail_link_tracking_enabled_flag": 0,
                        "read_flag": 1,
                        "draft": "",
                        "s3_bucket": "pipedrive-mail-live-fr",
                        "s3_bucket_path": "e9cf-6081745/77777/nylas/111/1111/body",
                        "draft_flag": 0,
                        "synced_flag": 1,
                        "deleted_flag": 0,
                        "external_deleted_flag": false,
                        "has_body_flag": 1,
                        "sent_flag": 0,
                        "sent_from_pipedrive_flag": 0,
                        "smart_bcc_flag": 0,
                        "message_time": "2019-11-14T06:02:06.000Z",
                        "add_time": "2019-11-14T06:02:06.000Z",
                        "update_time": "2019-11-14T07:15:49.000Z",
                        "has_attachments_flag": 1,
                        "has_inline_attachments_flag": 0,
                        "has_real_attachments_flag": 1,
                        "mua_message_id": "8cfw8n7l4iy24lfhnexxxxxx-0@mailer.nylas.com",
                        "template_id": 1,
                        "item_type": "mailMessage",
                        "timestamp": "2020-09-16T13:37:50.000Z",
                        "company_id": 6081745
                      }
                    }
                  ],
                  "additional_data": {
                    "pagination": {
                      "start": 0,
                      "limit": 100,
                      "more_items_in_collection": true
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{id}/merge": {
      "put": {
        "summary": "Merge two organizations",
        "description": "Merges an organization with another organization. For more information, see the tutorial for <a href=\"https://pipedrive.readme.io/docs/merging-two-organizations\" target=\"_blank\" rel=\"noopener noreferrer\">merging two organizations</a>.",
        "operationId": "mergeOrganizations",
        "tags": [ "Organizations" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the organization",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "mergeOrganizationsRequest",
                "type": "object",
                "required": [ "merge_with_id" ],
                "properties": {
                  "merge_with_id": {
                    "type": "integer",
                    "description": "The ID of the organization that the organization will be merged with"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "mergeOrganizations",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "If the request was successful or not"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "description": "The ID of the merged organization"
                        }
                      }
                    }
                  }
                },
                "example": { "success": true, "data": { "id": 123 } }
              }
            }
          }
        }
      }
    },
    "/organizations/{id}/permittedUsers": {
      "get": {
        "summary": "List permitted users",
        "description": "List users permitted to access an organization.",
        "operationId": "getOrganizationUsers",
        "tags": [ "Organizations" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the organization",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "listPermittedUsers",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "description": "The list of permitted user IDs",
                          "items": { "type": "number" }
                        }
                      }
                    }
                  ]
                },
                "example": { "success": true, "data": [ 123, 777 ] }
              }
            }
          }
        }
      }
    },
    "/organizations/{id}/persons": {
      "get": {
        "summary": "List persons of an organization",
        "description": "Lists persons associated with an organization.<br>If a company uses the [Campaigns product](https://pipedrive.readme.io/docs/campaigns-in-pipedrive-api), then this endpoint will also return the `data.marketing_status` field.",
        "operationId": "getOrganizationPersons",
        "tags": [ "Organizations" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the organization",
            "required": true,
            "schema": { "type": "integer" }
          },
          {
            "in": "query",
            "name": "start",
            "description": "Pagination start",
            "schema": { "type": "integer", "default": 0 }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Items shown per page",
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "listPersons",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "title": "personItem",
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "integer",
                                    "description": "The ID of the person"
                                  },
                                  "company_id": {
                                    "type": "integer",
                                    "description": "The ID of the company related to the person"
                                  },
                                  "active_flag": {
                                    "type": "boolean",
                                    "description": "Whether the person is active or not"
                                  },
                                  "phone": {
                                    "type": "array",
                                    "description": "A phone number supplied as a string or an array of phone objects related to the person. The structure of the array is as follows: `[{ \"value\": \"12345\", \"primary\": \"true\", \"label\": \"mobile\" }]`. Please note that only `value` is required.",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "value": {
                                          "type": "string",
                                          "description": "The phone number"
                                        },
                                        "primary": {
                                          "type": "boolean",
                                          "description": "Boolean that indicates if phone number is primary for the person or not"
                                        },
                                        "label": {
                                          "type": "string",
                                          "description": "The label that indicates the type of the phone number. (Possible values - work, home, mobile or other)"
                                        }
                                      }
                                    }
                                  },
                                  "email": {
                                    "type": "array",
                                    "description": "An email address as a string or an array of email objects related to the person. The structure of the array is as follows: `[{ \"value\": \"mail@example.com\", \"primary\": \"true\", \"label\": \"main\" } ]`. Please note that only `value` is required.",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "value": {
                                          "type": "string",
                                          "description": "Email"
                                        },
                                        "primary": {
                                          "type": "boolean",
                                          "description": "Boolean that indicates if email is primary for the person or not"
                                        },
                                        "label": {
                                          "type": "string",
                                          "description": "The label that indicates the type of the email. (Possible values - work, home or other)"
                                        }
                                      }
                                    }
                                  },
                                  "first_char": {
                                    "type": "string",
                                    "description": "The first letter of the name of the person"
                                  },
                                  "add_time": {
                                    "type": "string",
                                    "description": "The date and time when the person was added/created. Format: YYYY-MM-DD HH:MM:SS"
                                  },
                                  "update_time": {
                                    "type": "string",
                                    "description": "The last updated date and time of the person. Format: YYYY-MM-DD HH:MM:SS"
                                  },
                                  "visible_to": {
                                    "type": "string",
                                    "description": "The visibility group ID of who can see the person"
                                  },
                                  "picture_id": {
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "integer",
                                            "description": "The ID of the picture associated with the item"
                                          }
                                        }
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "item_type": {
                                            "type": "string",
                                            "description": "The type of item the picture is related to"
                                          },
                                          "item_id": {
                                            "type": "integer",
                                            "description": "The ID of related item"
                                          },
                                          "active_flag": {
                                            "type": "boolean",
                                            "description": "Whether the associated picture is active or not"
                                          },
                                          "add_time": {
                                            "type": "string",
                                            "description": "The add time of the picture"
                                          },
                                          "update_time": {
                                            "type": "string",
                                            "description": "The update time of the picture"
                                          },
                                          "added_by_user_id": {
                                            "type": "integer",
                                            "description": "The ID of the user who added the picture"
                                          },
                                          "pictures": {
                                            "type": "object",
                                            "properties": {
                                              "128": {
                                                "type": "string",
                                                "description": "The URL of the 128*128 picture"
                                              },
                                              "512": {
                                                "type": "string",
                                                "description": "The URL of the 512*512 picture"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  "label": {
                                    "type": "integer",
                                    "description": "The label assigned to the person"
                                  },
                                  "org_name": {
                                    "type": "string",
                                    "description": "The name of the organization associated with the person"
                                  },
                                  "owner_name": {
                                    "type": "string",
                                    "description": "The name of the owner associated with the person"
                                  },
                                  "cc_email": {
                                    "type": "string",
                                    "description": "The BCC email associated with the person"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "title": "additionalPersonInfo",
                                "allOf": [
                                  {
                                    "type": "object",
                                    "title": "personNameInfoWithOrgAndOwnerId",
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "properties": {
                                          "owner_id": {
                                            "title": "owner",
                                            "allOf": [
                                              {
                                                "properties": {
                                                  "id": {
                                                    "type": "integer",
                                                    "description": "The ID of the user"
                                                  },
                                                  "name": {
                                                    "type": "string",
                                                    "description": "The name of the user"
                                                  },
                                                  "email": {
                                                    "type": "string",
                                                    "description": "The email of the user"
                                                  },
                                                  "has_pic": {
                                                    "type": "integer",
                                                    "description": "Whether the user has picture or not. 0 = No picture, 1 = Has picture."
                                                  },
                                                  "pic_hash": {
                                                    "type": "string",
                                                    "nullable": true,
                                                    "description": "The user picture hash"
                                                  },
                                                  "active_flag": {
                                                    "type": "boolean",
                                                    "description": "Whether the user is active or not"
                                                  }
                                                }
                                              },
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "value": {
                                                    "type": "integer",
                                                    "description": "The ID of the owner"
                                                  }
                                                }
                                              }
                                            ]
                                          },
                                          "org_id": {
                                            "title": "relationshipOrganizationInfoItemWithActiveFlag",
                                            "allOf": [
                                              {
                                                "title": "relationshipOrganizationInfoItem",
                                                "allOf": [
                                                  {
                                                    "type": "object",
                                                    "properties": {
                                                      "name": {
                                                        "type": "string",
                                                        "description": "The name of the organization associated with the item"
                                                      },
                                                      "people_count": {
                                                        "type": "integer",
                                                        "description": "The number of people connected with the organization that is associated with the item"
                                                      },
                                                      "owner_id": {
                                                        "type": "integer",
                                                        "description": "The ID of the owner of the organization that is associated with the item"
                                                      },
                                                      "address": {
                                                        "type": "string",
                                                        "description": "The address of the organization"
                                                      },
                                                      "cc_email": {
                                                        "type": "string",
                                                        "description": "The BCC email of the organization associated with the item"
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "type": "object",
                                                    "properties": {
                                                      "value": {
                                                        "type": "integer",
                                                        "description": "The ID of the organization"
                                                      }
                                                    }
                                                  }
                                                ]
                                              },
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "active_flag": {
                                                    "type": "boolean",
                                                    "description": "Whether the associated organization is active or not"
                                                  }
                                                }
                                              }
                                            ]
                                          }
                                        }
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "description": "The name of the person"
                                          },
                                          "first_name": {
                                            "type": "string",
                                            "description": "The first name of the person"
                                          },
                                          "last_name": {
                                            "type": "string",
                                            "description": "The last name of the person"
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  {
                                    "type": "object",
                                    "title": "personCountEmailDealAndActivityInfo",
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "title": "personCountAndEmailInfo",
                                        "allOf": [
                                          {
                                            "type": "object",
                                            "properties": {
                                              "email_messages_count": {
                                                "type": "integer",
                                                "description": "The count of email messages related to the person"
                                              },
                                              "activities_count": {
                                                "type": "integer",
                                                "description": "The count of activities related to the person"
                                              },
                                              "done_activities_count": {
                                                "type": "integer",
                                                "description": "The count of done activities related to the person"
                                              },
                                              "undone_activities_count": {
                                                "type": "integer",
                                                "description": "The count of undone activities related to the person"
                                              },
                                              "files_count": {
                                                "type": "integer",
                                                "description": "The count of files related to the person"
                                              },
                                              "notes_count": {
                                                "type": "integer",
                                                "description": "The count of notes related to the person"
                                              },
                                              "followers_count": {
                                                "type": "integer",
                                                "description": "The count of followers related to the person"
                                              }
                                            }
                                          },
                                          {
                                            "type": "object",
                                            "properties": {
                                              "last_incoming_mail_time": {
                                                "type": "string",
                                                "description": "The date and time of the last incoming email associated with the person"
                                              },
                                              "last_outgoing_mail_time": {
                                                "type": "string",
                                                "description": "The date and time of the last outgoing email associated with the person"
                                              }
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "type": "object",
                                        "title": "dealCountAndActivityInfo",
                                        "allOf": [
                                          {
                                            "type": "object",
                                            "properties": {
                                              "open_deals_count": {
                                                "type": "integer",
                                                "description": "The count of open deals related with the item"
                                              },
                                              "related_open_deals_count": {
                                                "type": "integer",
                                                "description": "The count of related open deals related with the item"
                                              },
                                              "closed_deals_count": {
                                                "type": "integer",
                                                "description": "The count of closed deals related with the item"
                                              },
                                              "related_closed_deals_count": {
                                                "type": "integer",
                                                "description": "The count of related closed deals related with the item"
                                              },
                                              "won_deals_count": {
                                                "type": "integer",
                                                "description": "The count of won deals related with the item"
                                              },
                                              "related_won_deals_count": {
                                                "type": "integer",
                                                "description": "The count of related won deals related with the item"
                                              },
                                              "lost_deals_count": {
                                                "type": "integer",
                                                "description": "The count of lost deals related with the item"
                                              },
                                              "related_lost_deals_count": {
                                                "type": "integer",
                                                "description": "The count of related lost deals related with the item"
                                              }
                                            }
                                          },
                                          {
                                            "type": "object",
                                            "properties": {
                                              "next_activity_date": {
                                                "type": "string",
                                                "description": "The date of the next activity associated with the deal"
                                              },
                                              "next_activity_time": {
                                                "type": "string",
                                                "description": "The time of the next activity associated with the deal"
                                              },
                                              "next_activity_id": {
                                                "type": "integer",
                                                "nullable": true,
                                                "description": "The ID of the next activity associated with the deal"
                                              },
                                              "last_activity_id": {
                                                "type": "integer",
                                                "nullable": true,
                                                "description": "The ID of the last activity associated with the deal"
                                              },
                                              "last_activity_date": {
                                                "type": "string",
                                                "nullable": true,
                                                "description": "The date of the last activity associated with the deal"
                                              }
                                            }
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          "description": "The array of persons"
                        },
                        "additional_data": {
                          "description": "The additional data of the list",
                          "type": "object",
                          "properties": {
                            "start": {
                              "type": "integer",
                              "description": "Pagination start"
                            },
                            "limit": {
                              "type": "integer",
                              "description": "Items shown per page"
                            },
                            "more_items_in_collection": {
                              "type": "boolean",
                              "description": "If there are more list items in the collection than displayed or not"
                            }
                          }
                        },
                        "related_objects": {
                          "type": "object",
                          "properties": {
                            "organization": {
                              "type": "object",
                              "properties": {
                                "ORGANIZATION_ID": {
                                  "type": "object",
                                  "description": "The ID of the organization associated with the item",
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "active_flag": {
                                          "type": "boolean",
                                          "description": "Whether the associated organization is active or not"
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "description": "The ID of the organization associated with the item",
                                      "allOf": [
                                        {
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "type": "integer",
                                              "description": "The ID of the organization associated with the item"
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string",
                                              "description": "The name of the organization associated with the item"
                                            },
                                            "people_count": {
                                              "type": "integer",
                                              "description": "The number of people connected with the organization that is associated with the item"
                                            },
                                            "owner_id": {
                                              "type": "integer",
                                              "description": "The ID of the owner of the organization that is associated with the item"
                                            },
                                            "address": {
                                              "type": "string",
                                              "description": "The address of the organization"
                                            },
                                            "cc_email": {
                                              "type": "string",
                                              "description": "The BCC email of the organization associated with the item"
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  ]
                                }
                              }
                            },
                            "user": {
                              "type": "object",
                              "properties": {
                                "USER_ID": {
                                  "type": "object",
                                  "title": "userDataWithId",
                                  "allOf": [
                                    {
                                      "properties": {
                                        "id": {
                                          "type": "integer",
                                          "description": "The ID of the user"
                                        },
                                        "name": {
                                          "type": "string",
                                          "description": "The name of the user"
                                        },
                                        "email": {
                                          "type": "string",
                                          "description": "The email of the user"
                                        },
                                        "has_pic": {
                                          "type": "integer",
                                          "description": "Whether the user has picture or not. 0 = No picture, 1 = Has picture."
                                        },
                                        "pic_hash": {
                                          "type": "string",
                                          "nullable": true,
                                          "description": "The user picture hash"
                                        },
                                        "active_flag": {
                                          "type": "boolean",
                                          "description": "Whether the user is active or not"
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "description": "The ID of the user"
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "success": true,
                  "data": [
                    {
                      "id": 1,
                      "company_id": 12,
                      "owner_id": {
                        "id": 123,
                        "name": "Jane Doe",
                        "email": "jane@pipedrive.com",
                        "has_pic": 1,
                        "pic_hash": "2611ace8ac6a3afe2f69ed56f9e08c6b",
                        "active_flag": true,
                        "value": 123
                      },
                      "org_id": {
                        "name": "Org Name",
                        "people_count": 1,
                        "owner_id": 123,
                        "address": "Mustamäe tee 3a, 10615 Tallinn",
                        "active_flag": true,
                        "cc_email": "org@pipedrivemail.com",
                        "value": 1234
                      },
                      "name": "Will Smith",
                      "first_name": "Will",
                      "last_name": "Smith",
                      "open_deals_count": 2,
                      "related_open_deals_count": 2,
                      "closed_deals_count": 3,
                      "related_closed_deals_count": 3,
                      "participant_open_deals_count": 1,
                      "participant_closed_deals_count": 1,
                      "email_messages_count": 1,
                      "activities_count": 1,
                      "done_activities_count": 1,
                      "undone_activities_count": 2,
                      "files_count": 2,
                      "notes_count": 2,
                      "followers_count": 3,
                      "won_deals_count": 3,
                      "related_won_deals_count": 3,
                      "lost_deals_count": 1,
                      "related_lost_deals_count": 1,
                      "active_flag": true,
                      "phone": [
                        { "value": "12345", "primary": true, "label": "work" }
                      ],
                      "email": [
                        {
                          "value": "12345@email.com",
                          "primary": true,
                          "label": "work"
                        }
                      ],
                      "primary_email": "12345@email.com",
                      "first_char": "w",
                      "update_time": "2020-05-08 05:30:20",
                      "add_time": "2017-10-18 13:23:07",
                      "visible_to": "3",
                      "marketing_status": "no_consent",
                      "picture_id": {
                        "item_type": "person",
                        "item_id": 25,
                        "active_flag": true,
                        "add_time": "2020-09-08 08:17:52",
                        "update_time": "0000-00-00 00:00:00",
                        "added_by_user_id": 967055,
                        "pictures": {
                          "128": "https://pipedrive-profile-pics.s3.example.com/f8893852574273f2747bf6ef09d11cfb4ac8f269_128.jpg",
                          "512": "https://pipedrive-profile-pics.s3.example.com/f8893852574273f2747bf6ef09d11cfb4ac8f269_512.jpg"
                        },
                        "value": 4
                      },
                      "next_activity_date": "2019-11-29",
                      "next_activity_time": "11:30:00",
                      "next_activity_id": 128,
                      "last_activity_id": 34,
                      "last_activity_date": "2019-11-28",
                      "last_incoming_mail_time": "2019-05-29 18:21:42",
                      "last_outgoing_mail_time": "2019-05-30 03:45:35",
                      "label": 1,
                      "org_name": "Organization name",
                      "owner_name": "Jane Doe",
                      "cc_email": "org@pipedrivemail.com"
                    }
                  ],
                  "additional_data": {
                    "pagination": {
                      "start": 0,
                      "limit": 100,
                      "more_items_in_collection": true
                    }
                  },
                  "related_objects": {
                    "allOf": [
                      {
                        "organization": {
                          "1": {
                            "id": 1,
                            "name": "Org Name",
                            "people_count": 1,
                            "owner_id": 123,
                            "address": "Mustamäe tee 3a, 10615 Tallinn",
                            "active_flag": true,
                            "cc_email": "org@pipedrivemail.com"
                          }
                        }
                      },
                      {
                        "user": {
                          "123": {
                            "id": 123,
                            "name": "Jane Doe",
                            "email": "jane@pipedrive.com",
                            "has_pic": 1,
                            "pic_hash": "2611ace8ac6a3afe2f69ed56f9e08c6b",
                            "active_flag": true
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/organizationFields": {
      "get": {
        "summary": "Get all organization fields",
        "description": "Returns data about all organization fields.",
        "operationId": "getOrganizationFields",
        "parameters": [
          {
            "in": "query",
            "name": "start",
            "description": "Pagination start",
            "schema": { "type": "integer", "default": 0 }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Items shown per page",
            "schema": { "type": "integer" }
          }
        ],
        "tags": [ "OrganizationFields" ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "fields",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer",
                                "description": "The ID of the field. Value is `null` in case of subfields."
                              },
                              "key": {
                                "type": "string",
                                "description": "The key of the field. For custom fields this is generated upon creation."
                              },
                              "name": {
                                "type": "string",
                                "description": "The name of the field"
                              },
                              "order_nr": {
                                "type": "integer",
                                "description": "The order number of the field"
                              },
                              "field_type": {
                                "allOf": [
                                  {
                                    "type": "string",
                                    "enum": [
                                      "address",
                                      "date",
                                      "daterange",
                                      "double",
                                      "enum",
                                      "monetary",
                                      "org",
                                      "people",
                                      "phone",
                                      "set",
                                      "text",
                                      "time",
                                      "timerange",
                                      "user",
                                      "varchar",
                                      "varchar_auto",
                                      "visible_to"
                                    ],
                                    "description": "The type of the field<table><tr><th>Value</th><th>Description</th></tr><tr><td>`address`</td><td>Address field (has multiple subfields, autocompleted by Google Maps)</td></tr><tr><td>`date`</td><td>Date (format YYYY-MM-DD)</td></tr><tr><td>`daterange`</td><td>Date-range field (has a start date and end date value, both YYYY-MM-DD)</td></tr><tr><td>`double`</td><td>Numeric value</td></tr><tr><td>`enum`</td><td>Options field with a single possible chosen option</td></tr><tr></tr><tr><td>`monetary`</td><td>Monetary field (has a numeric value and a currency value)</td></tr><tr><td>`org`</td><td>Organization field (contains an organization ID which is stored on the same account)</td></tr><tr><td>`people`</td><td>Person field (contains a person ID which is stored on the same account)</td></tr><tr><td>`phone`</td><td>Phone field (up to 255 numbers and/or characters)</td></tr><tr><td>`set`</td><td>Options field with a possibility of having multiple chosen options</td></tr><tr><td>`text`</td><td>Long text (up to 65k characters)</td></tr><tr><td>`time`</td><td>Time field (format HH:MM:SS)</td></tr><tr><td>`timerange`</td><td>Time-range field (has a start time and end time value, both HH:MM:SS)</td></tr><tr><td>`user`</td><td>User field (contains a user ID of another Pipedrive user)</td></tr><tr><td>`varchar`</td><td>Text (up to 255 characters)</td></tr><tr><td>`varchar_auto`</td><td>Autocomplete text (up to 255 characters)</td></tr><tr><td>`visible_to`</td><td>System field that keeps item's visibility setting</td></tr></table>"
                                  }
                                ]
                              },
                              "add_time": {
                                "type": "string",
                                "format": "datetime",
                                "description": "The creation time of the field"
                              },
                              "update_time": {
                                "type": "string",
                                "format": "datetime",
                                "description": "The update time of the field"
                              },
                              "last_updated_by_user_id": {
                                "type": "integer",
                                "description": "The ID of the user who created or most recently updated the field, only applicable for custom fields"
                              },
                              "active_flag": {
                                "type": "boolean",
                                "description": "The active flag of the field"
                              },
                              "edit_flag": {
                                "type": "boolean",
                                "description": "The edit flag of the field"
                              },
                              "index_visible_flag": {
                                "type": "boolean",
                                "description": "Not used"
                              },
                              "details_visible_flag": {
                                "type": "boolean",
                                "description": "Not used"
                              },
                              "add_visible_flag": {
                                "type": "boolean",
                                "description": "Not used"
                              },
                              "important_flag": {
                                "type": "boolean",
                                "description": "Not used"
                              },
                              "bulk_edit_allowed": {
                                "type": "boolean",
                                "description": "Whether or not the field of an item can be edited in bulk"
                              },
                              "searchable_flag": {
                                "type": "boolean",
                                "description": "Whether or not items can be searched by this field"
                              },
                              "filtering_allowed": {
                                "type": "boolean",
                                "description": "Whether or not items can be filtered by this field"
                              },
                              "sortable_flag": {
                                "type": "boolean",
                                "description": "Whether or not items can be sorted by this field"
                              },
                              "mandatory_flag": {
                                "type": "boolean",
                                "description": "Whether or not the field is mandatory"
                              },
                              "options": {
                                "type": "array",
                                "nullable": true,
                                "items": { "type": "object" },
                                "description": "The options of the field. When there are no options, `null` is returned."
                              },
                              "options_deleted": {
                                "type": "array",
                                "items": { "type": "object" },
                                "description": "The deleted options of the field. Only present when there is at least 1 deleted option."
                              },
                              "is_subfield": {
                                "type": "boolean",
                                "description": "Whether or not the field is a subfield of another field. Only present if field is subfield."
                              },
                              "subfields": {
                                "type": "array",
                                "items": { "type": "object" },
                                "description": "The subfields of the field. Only present when the field has subfields."
                              }
                            }
                          }
                        },
                        "additional_data": {
                          "description": "The additional data of the list",
                          "type": "object",
                          "properties": {
                            "start": {
                              "type": "integer",
                              "description": "Pagination start"
                            },
                            "limit": {
                              "type": "integer",
                              "description": "Items shown per page"
                            },
                            "more_items_in_collection": {
                              "type": "boolean",
                              "description": "If there are more list items in the collection than displayed or not"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "success": true,
                  "data": [
                    {
                      "id": 1,
                      "key": "title",
                      "name": "Title",
                      "order_nr": 2,
                      "field_type": "varchar",
                      "add_time": "2019-02-04 13:58:03",
                      "update_time": "2019-02-04 13:58:03",
                      "last_updated_by_user_id": 1,
                      "active_flag": true,
                      "edit_flag": false,
                      "index_visible_flag": true,
                      "details_visible_flag": true,
                      "add_visible_flag": true,
                      "important_flag": false,
                      "bulk_edit_allowed": true,
                      "searchable_flag": false,
                      "filtering_allowed": true,
                      "sortable_flag": true,
                      "options": null,
                      "mandatory_flag": true
                    },
                    {
                      "id": 2,
                      "key": "9dc80c50d78a15643bfc4ca79d76156a73a1ca0e",
                      "name": "Customer Type",
                      "order_nr": 1,
                      "field_type": "enum",
                      "add_time": "2019-02-04 13:58:03",
                      "update_time": "2019-02-04 13:58:03",
                      "last_updated_by_user_id": 1,
                      "active_flag": true,
                      "edit_flag": true,
                      "index_visible_flag": true,
                      "details_visible_flag": true,
                      "add_visible_flag": false,
                      "important_flag": false,
                      "bulk_edit_allowed": true,
                      "searchable_flag": false,
                      "filtering_allowed": true,
                      "sortable_flag": true,
                      "options": [
                        { "id": 190, "label": "Private person" },
                        { "id": 191, "label": "Company" },
                        { "id": 192, "label": "Government" }
                      ],
                      "mandatory_flag": true
                    }
                  ],
                  "additional_data": {
                    "pagination": {
                      "start": 0,
                      "limit": 100,
                      "more_items_in_collection": false
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add a new organization field",
        "description": "Adds a new organization field. For more information, see the tutorial for <a href=\"https://pipedrive.readme.io/docs/adding-a-new-custom-field\" target=\"_blank\" rel=\"noopener noreferrer\">adding a new custom field</a>.",
        "operationId": "addOrganizationField",
        "tags": [ "OrganizationFields" ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "createFieldRequest",
                "allOf": [
                  {
                    "type": "object",
                    "required": [ "name" ],
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The name of the field"
                      },
                      "options": {
                        "type": "string",
                        "description": "When `field_type` is either set or enum, possible options must be supplied as a JSON-encoded sequential array of objects. Example: `[{\"label\":\"New Item\"}]`"
                      },
                      "add_visible_flag": {
                        "type": "boolean",
                        "enum": [ true, false ],
                        "default": true,
                        "description": "Whether the field is available in the 'add new' modal or not (both in the web and mobile app)"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "required": [ "field_type" ],
                    "properties": {
                      "field_type": {
                        "type": "string",
                        "enum": [
                          "address",
                          "date",
                          "daterange",
                          "double",
                          "enum",
                          "monetary",
                          "org",
                          "people",
                          "phone",
                          "set",
                          "text",
                          "time",
                          "timerange",
                          "user",
                          "varchar",
                          "varchar_auto",
                          "visible_to"
                        ],
                        "description": "The type of the field<table><tr><th>Value</th><th>Description</th></tr><tr><td>`address`</td><td>Address field (has multiple subfields, autocompleted by Google Maps)</td></tr><tr><td>`date`</td><td>Date (format YYYY-MM-DD)</td></tr><tr><td>`daterange`</td><td>Date-range field (has a start date and end date value, both YYYY-MM-DD)</td></tr><tr><td>`double`</td><td>Numeric value</td></tr><tr><td>`enum`</td><td>Options field with a single possible chosen option</td></tr><tr></tr><tr><td>`monetary`</td><td>Monetary field (has a numeric value and a currency value)</td></tr><tr><td>`org`</td><td>Organization field (contains an organization ID which is stored on the same account)</td></tr><tr><td>`people`</td><td>Person field (contains a person ID which is stored on the same account)</td></tr><tr><td>`phone`</td><td>Phone field (up to 255 numbers and/or characters)</td></tr><tr><td>`set`</td><td>Options field with a possibility of having multiple chosen options</td></tr><tr><td>`text`</td><td>Long text (up to 65k characters)</td></tr><tr><td>`time`</td><td>Time field (format HH:MM:SS)</td></tr><tr><td>`timerange`</td><td>Time-range field (has a start time and end time value, both HH:MM:SS)</td></tr><tr><td>`user`</td><td>User field (contains a user ID of another Pipedrive user)</td></tr><tr><td>`varchar`</td><td>Text (up to 255 characters)</td></tr><tr><td>`varchar_auto`</td><td>Autocomplete text (up to 255 characters)</td></tr><tr><td>`visible_to`</td><td>System field that keeps item's visibility setting</td></tr></table>"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "field",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "description": "The ID of the field. Value is `null` in case of subfields."
                            },
                            "key": {
                              "type": "string",
                              "description": "The key of the field. For custom fields this is generated upon creation."
                            },
                            "name": {
                              "type": "string",
                              "description": "The name of the field"
                            },
                            "order_nr": {
                              "type": "integer",
                              "description": "The order number of the field"
                            },
                            "field_type": {
                              "allOf": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "address",
                                    "date",
                                    "daterange",
                                    "double",
                                    "enum",
                                    "monetary",
                                    "org",
                                    "people",
                                    "phone",
                                    "set",
                                    "text",
                                    "time",
                                    "timerange",
                                    "user",
                                    "varchar",
                                    "varchar_auto",
                                    "visible_to"
                                  ],
                                  "description": "The type of the field<table><tr><th>Value</th><th>Description</th></tr><tr><td>`address`</td><td>Address field (has multiple subfields, autocompleted by Google Maps)</td></tr><tr><td>`date`</td><td>Date (format YYYY-MM-DD)</td></tr><tr><td>`daterange`</td><td>Date-range field (has a start date and end date value, both YYYY-MM-DD)</td></tr><tr><td>`double`</td><td>Numeric value</td></tr><tr><td>`enum`</td><td>Options field with a single possible chosen option</td></tr><tr></tr><tr><td>`monetary`</td><td>Monetary field (has a numeric value and a currency value)</td></tr><tr><td>`org`</td><td>Organization field (contains an organization ID which is stored on the same account)</td></tr><tr><td>`people`</td><td>Person field (contains a person ID which is stored on the same account)</td></tr><tr><td>`phone`</td><td>Phone field (up to 255 numbers and/or characters)</td></tr><tr><td>`set`</td><td>Options field with a possibility of having multiple chosen options</td></tr><tr><td>`text`</td><td>Long text (up to 65k characters)</td></tr><tr><td>`time`</td><td>Time field (format HH:MM:SS)</td></tr><tr><td>`timerange`</td><td>Time-range field (has a start time and end time value, both HH:MM:SS)</td></tr><tr><td>`user`</td><td>User field (contains a user ID of another Pipedrive user)</td></tr><tr><td>`varchar`</td><td>Text (up to 255 characters)</td></tr><tr><td>`varchar_auto`</td><td>Autocomplete text (up to 255 characters)</td></tr><tr><td>`visible_to`</td><td>System field that keeps item's visibility setting</td></tr></table>"
                                }
                              ]
                            },
                            "add_time": {
                              "type": "string",
                              "format": "datetime",
                              "description": "The creation time of the field"
                            },
                            "update_time": {
                              "type": "string",
                              "format": "datetime",
                              "description": "The update time of the field"
                            },
                            "last_updated_by_user_id": {
                              "type": "integer",
                              "description": "The ID of the user who created or most recently updated the field, only applicable for custom fields"
                            },
                            "active_flag": {
                              "type": "boolean",
                              "description": "The active flag of the field"
                            },
                            "edit_flag": {
                              "type": "boolean",
                              "description": "The edit flag of the field"
                            },
                            "index_visible_flag": {
                              "type": "boolean",
                              "description": "Not used"
                            },
                            "details_visible_flag": {
                              "type": "boolean",
                              "description": "Not used"
                            },
                            "add_visible_flag": {
                              "type": "boolean",
                              "description": "Not used"
                            },
                            "important_flag": {
                              "type": "boolean",
                              "description": "Not used"
                            },
                            "bulk_edit_allowed": {
                              "type": "boolean",
                              "description": "Whether or not the field of an item can be edited in bulk"
                            },
                            "searchable_flag": {
                              "type": "boolean",
                              "description": "Whether or not items can be searched by this field"
                            },
                            "filtering_allowed": {
                              "type": "boolean",
                              "description": "Whether or not items can be filtered by this field"
                            },
                            "sortable_flag": {
                              "type": "boolean",
                              "description": "Whether or not items can be sorted by this field"
                            },
                            "mandatory_flag": {
                              "type": "boolean",
                              "description": "Whether or not the field is mandatory"
                            },
                            "options": {
                              "type": "array",
                              "nullable": true,
                              "items": { "type": "object" },
                              "description": "The options of the field. When there are no options, `null` is returned."
                            },
                            "options_deleted": {
                              "type": "array",
                              "items": { "type": "object" },
                              "description": "The deleted options of the field. Only present when there is at least 1 deleted option."
                            },
                            "is_subfield": {
                              "type": "boolean",
                              "description": "Whether or not the field is a subfield of another field. Only present if field is subfield."
                            },
                            "subfields": {
                              "type": "array",
                              "items": { "type": "object" },
                              "description": "The subfields of the field. Only present when the field has subfields."
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "success": true,
                  "data": {
                    "id": 2,
                    "key": "9dc80c50d78a15643bfc4ca79d76156a73a1ca0e",
                    "name": "Customer Type",
                    "order_nr": 1,
                    "field_type": "enum",
                    "add_time": "2019-02-04 13:58:03",
                    "update_time": "2019-02-04 13:58:03",
                    "last_updated_by_user_id": 1,
                    "active_flag": true,
                    "edit_flag": true,
                    "index_visible_flag": true,
                    "details_visible_flag": true,
                    "add_visible_flag": false,
                    "important_flag": false,
                    "bulk_edit_allowed": true,
                    "searchable_flag": false,
                    "filtering_allowed": true,
                    "sortable_flag": true,
                    "options": [
                      { "id": 190, "label": "Private person" },
                      { "id": 191, "label": "Company" },
                      { "id": 192, "label": "Government" }
                    ],
                    "mandatory_flag": true
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete multiple organization fields in bulk",
        "description": "Marks multiple fields as deleted.",
        "operationId": "deleteOrganizationFields",
        "tags": [ "OrganizationFields" ],
        "parameters": [
          {
            "in": "query",
            "name": "ids",
            "schema": { "type": "string" },
            "required": true,
            "description": "The comma-separated field IDs to delete"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "deleteFields",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "array",
                              "items": { "type": "integer" },
                              "description": "The list of deleted field IDs"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": { "success": true, "data": { "id": [ 123, 456 ] } }
              }
            }
          }
        }
      }
    },
    "/organizationFields/{id}": {
      "get": {
        "summary": "Get one organization field",
        "description": "Returns data about a specific organization field.",
        "operationId": "getOrganizationField",
        "tags": [ "OrganizationFields" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the field",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "field",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "description": "The ID of the field. Value is `null` in case of subfields."
                            },
                            "key": {
                              "type": "string",
                              "description": "The key of the field. For custom fields this is generated upon creation."
                            },
                            "name": {
                              "type": "string",
                              "description": "The name of the field"
                            },
                            "order_nr": {
                              "type": "integer",
                              "description": "The order number of the field"
                            },
                            "field_type": {
                              "allOf": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "address",
                                    "date",
                                    "daterange",
                                    "double",
                                    "enum",
                                    "monetary",
                                    "org",
                                    "people",
                                    "phone",
                                    "set",
                                    "text",
                                    "time",
                                    "timerange",
                                    "user",
                                    "varchar",
                                    "varchar_auto",
                                    "visible_to"
                                  ],
                                  "description": "The type of the field<table><tr><th>Value</th><th>Description</th></tr><tr><td>`address`</td><td>Address field (has multiple subfields, autocompleted by Google Maps)</td></tr><tr><td>`date`</td><td>Date (format YYYY-MM-DD)</td></tr><tr><td>`daterange`</td><td>Date-range field (has a start date and end date value, both YYYY-MM-DD)</td></tr><tr><td>`double`</td><td>Numeric value</td></tr><tr><td>`enum`</td><td>Options field with a single possible chosen option</td></tr><tr></tr><tr><td>`monetary`</td><td>Monetary field (has a numeric value and a currency value)</td></tr><tr><td>`org`</td><td>Organization field (contains an organization ID which is stored on the same account)</td></tr><tr><td>`people`</td><td>Person field (contains a person ID which is stored on the same account)</td></tr><tr><td>`phone`</td><td>Phone field (up to 255 numbers and/or characters)</td></tr><tr><td>`set`</td><td>Options field with a possibility of having multiple chosen options</td></tr><tr><td>`text`</td><td>Long text (up to 65k characters)</td></tr><tr><td>`time`</td><td>Time field (format HH:MM:SS)</td></tr><tr><td>`timerange`</td><td>Time-range field (has a start time and end time value, both HH:MM:SS)</td></tr><tr><td>`user`</td><td>User field (contains a user ID of another Pipedrive user)</td></tr><tr><td>`varchar`</td><td>Text (up to 255 characters)</td></tr><tr><td>`varchar_auto`</td><td>Autocomplete text (up to 255 characters)</td></tr><tr><td>`visible_to`</td><td>System field that keeps item's visibility setting</td></tr></table>"
                                }
                              ]
                            },
                            "add_time": {
                              "type": "string",
                              "format": "datetime",
                              "description": "The creation time of the field"
                            },
                            "update_time": {
                              "type": "string",
                              "format": "datetime",
                              "description": "The update time of the field"
                            },
                            "last_updated_by_user_id": {
                              "type": "integer",
                              "description": "The ID of the user who created or most recently updated the field, only applicable for custom fields"
                            },
                            "active_flag": {
                              "type": "boolean",
                              "description": "The active flag of the field"
                            },
                            "edit_flag": {
                              "type": "boolean",
                              "description": "The edit flag of the field"
                            },
                            "index_visible_flag": {
                              "type": "boolean",
                              "description": "Not used"
                            },
                            "details_visible_flag": {
                              "type": "boolean",
                              "description": "Not used"
                            },
                            "add_visible_flag": {
                              "type": "boolean",
                              "description": "Not used"
                            },
                            "important_flag": {
                              "type": "boolean",
                              "description": "Not used"
                            },
                            "bulk_edit_allowed": {
                              "type": "boolean",
                              "description": "Whether or not the field of an item can be edited in bulk"
                            },
                            "searchable_flag": {
                              "type": "boolean",
                              "description": "Whether or not items can be searched by this field"
                            },
                            "filtering_allowed": {
                              "type": "boolean",
                              "description": "Whether or not items can be filtered by this field"
                            },
                            "sortable_flag": {
                              "type": "boolean",
                              "description": "Whether or not items can be sorted by this field"
                            },
                            "mandatory_flag": {
                              "type": "boolean",
                              "description": "Whether or not the field is mandatory"
                            },
                            "options": {
                              "type": "array",
                              "nullable": true,
                              "items": { "type": "object" },
                              "description": "The options of the field. When there are no options, `null` is returned."
                            },
                            "options_deleted": {
                              "type": "array",
                              "items": { "type": "object" },
                              "description": "The deleted options of the field. Only present when there is at least 1 deleted option."
                            },
                            "is_subfield": {
                              "type": "boolean",
                              "description": "Whether or not the field is a subfield of another field. Only present if field is subfield."
                            },
                            "subfields": {
                              "type": "array",
                              "items": { "type": "object" },
                              "description": "The subfields of the field. Only present when the field has subfields."
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "success": true,
                  "data": {
                    "id": 2,
                    "key": "9dc80c50d78a15643bfc4ca79d76156a73a1ca0e",
                    "name": "Customer Type",
                    "order_nr": 1,
                    "field_type": "enum",
                    "add_time": "2019-02-04 13:58:03",
                    "update_time": "2019-02-04 13:58:03",
                    "last_updated_by_user_id": 1,
                    "active_flag": true,
                    "edit_flag": true,
                    "index_visible_flag": true,
                    "details_visible_flag": true,
                    "add_visible_flag": false,
                    "important_flag": false,
                    "bulk_edit_allowed": true,
                    "searchable_flag": false,
                    "filtering_allowed": true,
                    "sortable_flag": true,
                    "options": [
                      { "id": 190, "label": "Private person" },
                      { "id": 191, "label": "Company" },
                      { "id": 192, "label": "Government" }
                    ],
                    "mandatory_flag": true
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete an organization field",
        "description": "Marks a field as deleted. For more information, see the tutorial for <a href=\"https://pipedrive.readme.io/docs/deleting-a-custom-field\" target=\"_blank\" rel=\"noopener noreferrer\">deleting a custom field</a>.",
        "operationId": "deleteOrganizationField",
        "tags": [ "OrganizationFields" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the field",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "deleteField",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "description": "The ID of the field that was deleted"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": { "success": true, "data": { "id": 123 } }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update an organization field",
        "description": "Updates an organization field. For more information, see the tutorial for <a href=\" https://pipedrive.readme.io/docs/updating-custom-field-value \" target=\"_blank\" rel=\"noopener noreferrer\">updating custom fields' values</a>.",
        "operationId": "updateOrganizationField",
        "tags": [ "OrganizationFields" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the field",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "updateFieldRequest",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the field"
                  },
                  "options": {
                    "type": "string",
                    "description": "When `field_type` is either set or enum, possible options must be supplied as a JSON-encoded sequential array of objects. All active items must be supplied and already existing items must have their ID supplied. New items only require a label. Example: `[{\"id\":123,\"label\":\"Existing Item\"},{\"label\":\"New Item\"}]`"
                  },
                  "add_visible_flag": {
                    "type": "boolean",
                    "enum": [ true, false ],
                    "default": true,
                    "description": "Whether the field is available in 'add new' modal or not (both in web and mobile app)"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "field",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "description": "The ID of the field. Value is `null` in case of subfields."
                            },
                            "key": {
                              "type": "string",
                              "description": "The key of the field. For custom fields this is generated upon creation."
                            },
                            "name": {
                              "type": "string",
                              "description": "The name of the field"
                            },
                            "order_nr": {
                              "type": "integer",
                              "description": "The order number of the field"
                            },
                            "field_type": {
                              "allOf": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "address",
                                    "date",
                                    "daterange",
                                    "double",
                                    "enum",
                                    "monetary",
                                    "org",
                                    "people",
                                    "phone",
                                    "set",
                                    "text",
                                    "time",
                                    "timerange",
                                    "user",
                                    "varchar",
                                    "varchar_auto",
                                    "visible_to"
                                  ],
                                  "description": "The type of the field<table><tr><th>Value</th><th>Description</th></tr><tr><td>`address`</td><td>Address field (has multiple subfields, autocompleted by Google Maps)</td></tr><tr><td>`date`</td><td>Date (format YYYY-MM-DD)</td></tr><tr><td>`daterange`</td><td>Date-range field (has a start date and end date value, both YYYY-MM-DD)</td></tr><tr><td>`double`</td><td>Numeric value</td></tr><tr><td>`enum`</td><td>Options field with a single possible chosen option</td></tr><tr></tr><tr><td>`monetary`</td><td>Monetary field (has a numeric value and a currency value)</td></tr><tr><td>`org`</td><td>Organization field (contains an organization ID which is stored on the same account)</td></tr><tr><td>`people`</td><td>Person field (contains a person ID which is stored on the same account)</td></tr><tr><td>`phone`</td><td>Phone field (up to 255 numbers and/or characters)</td></tr><tr><td>`set`</td><td>Options field with a possibility of having multiple chosen options</td></tr><tr><td>`text`</td><td>Long text (up to 65k characters)</td></tr><tr><td>`time`</td><td>Time field (format HH:MM:SS)</td></tr><tr><td>`timerange`</td><td>Time-range field (has a start time and end time value, both HH:MM:SS)</td></tr><tr><td>`user`</td><td>User field (contains a user ID of another Pipedrive user)</td></tr><tr><td>`varchar`</td><td>Text (up to 255 characters)</td></tr><tr><td>`varchar_auto`</td><td>Autocomplete text (up to 255 characters)</td></tr><tr><td>`visible_to`</td><td>System field that keeps item's visibility setting</td></tr></table>"
                                }
                              ]
                            },
                            "add_time": {
                              "type": "string",
                              "format": "datetime",
                              "description": "The creation time of the field"
                            },
                            "update_time": {
                              "type": "string",
                              "format": "datetime",
                              "description": "The update time of the field"
                            },
                            "last_updated_by_user_id": {
                              "type": "integer",
                              "description": "The ID of the user who created or most recently updated the field, only applicable for custom fields"
                            },
                            "active_flag": {
                              "type": "boolean",
                              "description": "The active flag of the field"
                            },
                            "edit_flag": {
                              "type": "boolean",
                              "description": "The edit flag of the field"
                            },
                            "index_visible_flag": {
                              "type": "boolean",
                              "description": "Not used"
                            },
                            "details_visible_flag": {
                              "type": "boolean",
                              "description": "Not used"
                            },
                            "add_visible_flag": {
                              "type": "boolean",
                              "description": "Not used"
                            },
                            "important_flag": {
                              "type": "boolean",
                              "description": "Not used"
                            },
                            "bulk_edit_allowed": {
                              "type": "boolean",
                              "description": "Whether or not the field of an item can be edited in bulk"
                            },
                            "searchable_flag": {
                              "type": "boolean",
                              "description": "Whether or not items can be searched by this field"
                            },
                            "filtering_allowed": {
                              "type": "boolean",
                              "description": "Whether or not items can be filtered by this field"
                            },
                            "sortable_flag": {
                              "type": "boolean",
                              "description": "Whether or not items can be sorted by this field"
                            },
                            "mandatory_flag": {
                              "type": "boolean",
                              "description": "Whether or not the field is mandatory"
                            },
                            "options": {
                              "type": "array",
                              "nullable": true,
                              "items": { "type": "object" },
                              "description": "The options of the field. When there are no options, `null` is returned."
                            },
                            "options_deleted": {
                              "type": "array",
                              "items": { "type": "object" },
                              "description": "The deleted options of the field. Only present when there is at least 1 deleted option."
                            },
                            "is_subfield": {
                              "type": "boolean",
                              "description": "Whether or not the field is a subfield of another field. Only present if field is subfield."
                            },
                            "subfields": {
                              "type": "array",
                              "items": { "type": "object" },
                              "description": "The subfields of the field. Only present when the field has subfields."
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "success": true,
                  "data": {
                    "id": 2,
                    "key": "9dc80c50d78a15643bfc4ca79d76156a73a1ca0e",
                    "name": "Customer Type",
                    "order_nr": 1,
                    "field_type": "enum",
                    "add_time": "2019-02-04 13:58:03",
                    "update_time": "2019-02-04 13:58:03",
                    "last_updated_by_user_id": 1,
                    "active_flag": true,
                    "edit_flag": true,
                    "index_visible_flag": true,
                    "details_visible_flag": true,
                    "add_visible_flag": false,
                    "important_flag": false,
                    "bulk_edit_allowed": true,
                    "searchable_flag": false,
                    "filtering_allowed": true,
                    "sortable_flag": true,
                    "options": [
                      { "id": 190, "label": "Private person" },
                      { "id": 191, "label": "Company" },
                      { "id": 192, "label": "Government" }
                    ],
                    "mandatory_flag": true
                  }
                }
              }
            }
          }
        }
      }
    },
    "/organizationRelationships": {
      "get": {
        "summary": "Get all relationships for organization",
        "description": "Gets all of the relationships for a supplied organization ID.",
        "operationId": "getOrganizationRelationships",
        "tags": [ "OrganizationRelationships" ],
        "parameters": [
          {
            "in": "query",
            "name": "org_id",
            "required": true,
            "schema": { "type": "integer" },
            "description": "The ID of the organization to get relationships for"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "getOrganizationRelationships",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "description": "The array of organization relationships",
                          "items": {
                            "title": "organizationRelationshipDetails",
                            "allOf": [
                              {
                                "title": "organizationRelationshipWithCalculatedFields",
                                "allOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "integer",
                                        "description": "The ID of the organization relationship"
                                      },
                                      "type": {
                                        "type": "string",
                                        "description": "The type of the relationship"
                                      },
                                      "rel_owner_org_id": {
                                        "title": "relationshipOrganizationInfoItem",
                                        "allOf": [
                                          {
                                            "type": "object",
                                            "properties": {
                                              "name": {
                                                "type": "string",
                                                "description": "The name of the organization associated with the item"
                                              },
                                              "people_count": {
                                                "type": "integer",
                                                "description": "The number of people connected with the organization that is associated with the item"
                                              },
                                              "owner_id": {
                                                "type": "integer",
                                                "description": "The ID of the owner of the organization that is associated with the item"
                                              },
                                              "address": {
                                                "type": "string",
                                                "description": "The address of the organization"
                                              },
                                              "cc_email": {
                                                "type": "string",
                                                "description": "The BCC email of the organization associated with the item"
                                              }
                                            }
                                          },
                                          {
                                            "type": "object",
                                            "properties": {
                                              "value": {
                                                "type": "integer",
                                                "description": "The ID of the organization"
                                              }
                                            }
                                          }
                                        ]
                                      },
                                      "rel_linked_org_id": {
                                        "title": "relationshipOrganizationInfoItem",
                                        "allOf": [
                                          {
                                            "type": "object",
                                            "properties": {
                                              "name": {
                                                "type": "string",
                                                "description": "The name of the organization associated with the item"
                                              },
                                              "people_count": {
                                                "type": "integer",
                                                "description": "The number of people connected with the organization that is associated with the item"
                                              },
                                              "owner_id": {
                                                "type": "integer",
                                                "description": "The ID of the owner of the organization that is associated with the item"
                                              },
                                              "address": {
                                                "type": "string",
                                                "description": "The address of the organization"
                                              },
                                              "cc_email": {
                                                "type": "string",
                                                "description": "The BCC email of the organization associated with the item"
                                              }
                                            }
                                          },
                                          {
                                            "type": "object",
                                            "properties": {
                                              "value": {
                                                "type": "integer",
                                                "description": "The ID of the organization"
                                              }
                                            }
                                          }
                                        ]
                                      },
                                      "add_time": {
                                        "type": "string",
                                        "description": "The creation date and time of the relationship"
                                      },
                                      "update_time": {
                                        "type": "string",
                                        "description": "The last updated date and time of the relationship"
                                      },
                                      "active_flag": {
                                        "type": "string",
                                        "description": "Whether the relationship is active or not"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "calculated_type": {
                                        "type": "string",
                                        "description": "The calculated type of the relationship with the linked organization"
                                      },
                                      "calculated_related_org_id": {
                                        "type": "integer",
                                        "description": "The ID of the linked organization"
                                      }
                                    }
                                  }
                                ]
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "related_organization_name": {
                                    "type": "string",
                                    "description": "The name of the linked organization"
                                  }
                                }
                              }
                            ]
                          }
                        },
                        "additional_data": {
                          "description": "The additional data of the list",
                          "type": "object",
                          "properties": {
                            "start": {
                              "type": "integer",
                              "description": "Pagination start"
                            },
                            "limit": {
                              "type": "integer",
                              "description": "Items shown per page"
                            },
                            "more_items_in_collection": {
                              "type": "boolean",
                              "description": "If there are more list items in the collection than displayed or not"
                            }
                          }
                        },
                        "related_objects": {
                          "type": "object",
                          "properties": {
                            "organization": {
                              "type": "object",
                              "properties": {
                                "ORGANIZATION_ID": {
                                  "type": "object",
                                  "description": "The ID of the organization associated with the item",
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "integer",
                                          "description": "The ID of the organization associated with the item"
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "The name of the organization associated with the item"
                                        },
                                        "people_count": {
                                          "type": "integer",
                                          "description": "The number of people connected with the organization that is associated with the item"
                                        },
                                        "owner_id": {
                                          "type": "integer",
                                          "description": "The ID of the owner of the organization that is associated with the item"
                                        },
                                        "address": {
                                          "type": "string",
                                          "description": "The address of the organization"
                                        },
                                        "cc_email": {
                                          "type": "string",
                                          "description": "The BCC email of the organization associated with the item"
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "success": true,
                  "data": [
                    {
                      "related_organization_name": "Telia",
                      "calculated_type": "daughter",
                      "calculated_related_org_id": 1480,
                      "id": 1,
                      "type": "parent",
                      "rel_owner_org_id": {
                        "name": "Pipedrive Inc.",
                        "people_count": 1,
                        "owner_id": 925000,
                        "address": "Mustamäe tee 3a, 10615 Tallinn",
                        "active_flag": true,
                        "cc_email": "company@pipedrivemail.com",
                        "value": 1481
                      },
                      "rel_linked_org_id": {
                        "name": "Telia",
                        "people_count": 2,
                        "owner_id": 925000,
                        "address": "USA",
                        "active_flag": true,
                        "cc_email": "company@pipedrivemail.com",
                        "value": 1480
                      },
                      "add_time": "2020-09-22 08:58:28",
                      "update_time": "2020-09-22 08:58:28",
                      "active_flag": "true"
                    }
                  ],
                  "additional_data": {
                    "pagination": {
                      "start": 0,
                      "limit": 100,
                      "more_items_in_collection": true
                    }
                  },
                  "related_objects": {
                    "organization": {
                      "1482": {
                        "id": 457,
                        "name": "Yandex",
                        "people_count": 2,
                        "owner_id": 9271535,
                        "address": "Mustamäe tee 4b, 10615 Tallinn",
                        "active_flag": true,
                        "cc_email": "org@pipedrivemail.com"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create an organization relationship",
        "description": "Creates and returns an organization relationship.",
        "operationId": "addOrganizationRelationship",
        "tags": [ "OrganizationRelationships" ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "addOrganizationRelationshipRequest",
                "type": "object",
                "required": [ "type", "rel_owner_org_id", "rel_linked_org_id" ],
                "properties": {
                  "org_id": {
                    "type": "integer",
                    "description": "The ID of the base organization for the returned calculated values"
                  },
                  "type": {
                    "type": "string",
                    "enum": [ "parent", "related" ],
                    "description": "The type of organization relationship"
                  },
                  "rel_owner_org_id": {
                    "type": "integer",
                    "description": "The owner of the relationship. If type is `parent`, then the owner is the parent and the linked organization is the daughter."
                  },
                  "rel_linked_org_id": {
                    "type": "integer",
                    "description": "The linked organization in the relationship. If type is `parent`, then the linked organization is the daughter."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "addOrganizationRelationship",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "description": "The ID of the organization relationship"
                            },
                            "type": {
                              "type": "string",
                              "description": "The type of the relationship"
                            },
                            "rel_owner_org_id": {
                              "title": "relationshipOrganizationInfoItem",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "The name of the organization associated with the item"
                                    },
                                    "people_count": {
                                      "type": "integer",
                                      "description": "The number of people connected with the organization that is associated with the item"
                                    },
                                    "owner_id": {
                                      "type": "integer",
                                      "description": "The ID of the owner of the organization that is associated with the item"
                                    },
                                    "address": {
                                      "type": "string",
                                      "description": "The address of the organization"
                                    },
                                    "cc_email": {
                                      "type": "string",
                                      "description": "The BCC email of the organization associated with the item"
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "value": {
                                      "type": "integer",
                                      "description": "The ID of the organization"
                                    }
                                  }
                                }
                              ]
                            },
                            "rel_linked_org_id": {
                              "title": "relationshipOrganizationInfoItem",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "The name of the organization associated with the item"
                                    },
                                    "people_count": {
                                      "type": "integer",
                                      "description": "The number of people connected with the organization that is associated with the item"
                                    },
                                    "owner_id": {
                                      "type": "integer",
                                      "description": "The ID of the owner of the organization that is associated with the item"
                                    },
                                    "address": {
                                      "type": "string",
                                      "description": "The address of the organization"
                                    },
                                    "cc_email": {
                                      "type": "string",
                                      "description": "The BCC email of the organization associated with the item"
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "value": {
                                      "type": "integer",
                                      "description": "The ID of the organization"
                                    }
                                  }
                                }
                              ]
                            },
                            "add_time": {
                              "type": "string",
                              "description": "The creation date and time of the relationship"
                            },
                            "update_time": {
                              "type": "string",
                              "description": "The last updated date and time of the relationship"
                            },
                            "active_flag": {
                              "type": "string",
                              "description": "Whether the relationship is active or not"
                            }
                          }
                        },
                        "related_objects": {
                          "type": "object",
                          "properties": {
                            "organization": {
                              "type": "object",
                              "properties": {
                                "ORGANIZATION_ID": {
                                  "type": "object",
                                  "description": "The ID of the organization associated with the item",
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "integer",
                                          "description": "The ID of the organization associated with the item"
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "The name of the organization associated with the item"
                                        },
                                        "people_count": {
                                          "type": "integer",
                                          "description": "The number of people connected with the organization that is associated with the item"
                                        },
                                        "owner_id": {
                                          "type": "integer",
                                          "description": "The ID of the owner of the organization that is associated with the item"
                                        },
                                        "address": {
                                          "type": "string",
                                          "description": "The address of the organization"
                                        },
                                        "cc_email": {
                                          "type": "string",
                                          "description": "The BCC email of the organization associated with the item"
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "success": true,
                  "data": {
                    "id": 1,
                    "type": "parent",
                    "rel_owner_org_id": {
                      "name": "Pipedrive Inc.",
                      "people_count": 1,
                      "owner_id": 925000,
                      "address": "Mustamäe tee 3a, 10615 Tallinn",
                      "active_flag": true,
                      "cc_email": "company@pipedrivemail.com",
                      "value": 1481
                    },
                    "rel_linked_org_id": {
                      "name": "Telia",
                      "people_count": 2,
                      "owner_id": 925000,
                      "address": "USA",
                      "active_flag": true,
                      "cc_email": "company@pipedrivemail.com",
                      "value": 1480
                    },
                    "add_time": "2020-09-22 08:58:28",
                    "update_time": "2020-09-22 08:58:28",
                    "active_flag": "true"
                  },
                  "related_objects": {
                    "organization": {
                      "1482": {
                        "id": 457,
                        "name": "Yandex",
                        "people_count": 2,
                        "owner_id": 9271535,
                        "address": "Mustamäe tee 4b, 10615 Tallinn",
                        "active_flag": true,
                        "cc_email": "org@pipedrivemail.com"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/organizationRelationships/{id}": {
      "delete": {
        "summary": "Delete an organization relationship",
        "description": "Deletes an organization relationship and returns the deleted ID.",
        "operationId": "deleteOrganizationRelationship",
        "tags": [ "OrganizationRelationships" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the organization relationship",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "deleteOrganizationRelationship",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "description": "The ID of the deleted organization relationship"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": { "success": true, "data": { "id": 10 } }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get one organization relationship",
        "description": "Finds and returns an organization relationship from its ID.",
        "operationId": "getOrganizationRelationship",
        "tags": [ "OrganizationRelationships" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the organization relationship",
            "required": true,
            "schema": { "type": "integer" }
          },
          {
            "in": "query",
            "name": "org_id",
            "required": false,
            "schema": { "type": "integer" },
            "description": "The ID of the base organization for the returned calculated values"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "getOrganizationRelationship",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "title": "organizationRelationshipWithCalculatedFields",
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "description": "The ID of the organization relationship"
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The type of the relationship"
                                },
                                "rel_owner_org_id": {
                                  "title": "relationshipOrganizationInfoItem",
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "The name of the organization associated with the item"
                                        },
                                        "people_count": {
                                          "type": "integer",
                                          "description": "The number of people connected with the organization that is associated with the item"
                                        },
                                        "owner_id": {
                                          "type": "integer",
                                          "description": "The ID of the owner of the organization that is associated with the item"
                                        },
                                        "address": {
                                          "type": "string",
                                          "description": "The address of the organization"
                                        },
                                        "cc_email": {
                                          "type": "string",
                                          "description": "The BCC email of the organization associated with the item"
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "value": {
                                          "type": "integer",
                                          "description": "The ID of the organization"
                                        }
                                      }
                                    }
                                  ]
                                },
                                "rel_linked_org_id": {
                                  "title": "relationshipOrganizationInfoItem",
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "The name of the organization associated with the item"
                                        },
                                        "people_count": {
                                          "type": "integer",
                                          "description": "The number of people connected with the organization that is associated with the item"
                                        },
                                        "owner_id": {
                                          "type": "integer",
                                          "description": "The ID of the owner of the organization that is associated with the item"
                                        },
                                        "address": {
                                          "type": "string",
                                          "description": "The address of the organization"
                                        },
                                        "cc_email": {
                                          "type": "string",
                                          "description": "The BCC email of the organization associated with the item"
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "value": {
                                          "type": "integer",
                                          "description": "The ID of the organization"
                                        }
                                      }
                                    }
                                  ]
                                },
                                "add_time": {
                                  "type": "string",
                                  "description": "The creation date and time of the relationship"
                                },
                                "update_time": {
                                  "type": "string",
                                  "description": "The last updated date and time of the relationship"
                                },
                                "active_flag": {
                                  "type": "string",
                                  "description": "Whether the relationship is active or not"
                                }
                              }
                            },
                            {
                              "type": "object",
                              "properties": {
                                "calculated_type": {
                                  "type": "string",
                                  "description": "The calculated type of the relationship with the linked organization"
                                },
                                "calculated_related_org_id": {
                                  "type": "integer",
                                  "description": "The ID of the linked organization"
                                }
                              }
                            }
                          ]
                        },
                        "related_objects": {
                          "type": "object",
                          "properties": {
                            "organization": {
                              "type": "object",
                              "properties": {
                                "ORGANIZATION_ID": {
                                  "type": "object",
                                  "description": "The ID of the organization associated with the item",
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "integer",
                                          "description": "The ID of the organization associated with the item"
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "The name of the organization associated with the item"
                                        },
                                        "people_count": {
                                          "type": "integer",
                                          "description": "The number of people connected with the organization that is associated with the item"
                                        },
                                        "owner_id": {
                                          "type": "integer",
                                          "description": "The ID of the owner of the organization that is associated with the item"
                                        },
                                        "address": {
                                          "type": "string",
                                          "description": "The address of the organization"
                                        },
                                        "cc_email": {
                                          "type": "string",
                                          "description": "The BCC email of the organization associated with the item"
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "success": true,
                  "data": {
                    "id": 1,
                    "type": "parent",
                    "rel_owner_org_id": {
                      "name": "Pipedrive Inc.",
                      "people_count": 1,
                      "owner_id": 925000,
                      "address": "Mustamäe tee 3a, 10615 Tallinn",
                      "active_flag": true,
                      "cc_email": "company@pipedrivemail.com",
                      "value": 1481
                    },
                    "rel_linked_org_id": {
                      "name": "Telia",
                      "people_count": 2,
                      "owner_id": 925000,
                      "address": "USA",
                      "active_flag": true,
                      "cc_email": "company@pipedrivemail.com",
                      "value": 1480
                    },
                    "add_time": "2020-09-22 08:58:28",
                    "update_time": "2020-09-22 08:58:28",
                    "active_flag": "true",
                    "calculated_type": "daughter",
                    "calculated_related_org_id": 1480
                  },
                  "related_objects": {
                    "organization": {
                      "1482": {
                        "id": 457,
                        "name": "Yandex",
                        "people_count": 2,
                        "owner_id": 9271535,
                        "address": "Mustamäe tee 4b, 10615 Tallinn",
                        "active_flag": true,
                        "cc_email": "org@pipedrivemail.com"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update an organization relationship",
        "description": "Updates and returns an organization relationship.",
        "operationId": "updateOrganizationRelationship",
        "tags": [ "OrganizationRelationships" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the organization relationship",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "organizationRelationship",
                "type": "object",
                "properties": {
                  "org_id": {
                    "type": "integer",
                    "description": "The ID of the base organization for the returned calculated values"
                  },
                  "type": {
                    "type": "string",
                    "enum": [ "parent", "related" ],
                    "description": "The type of organization relationship"
                  },
                  "rel_owner_org_id": {
                    "type": "integer",
                    "description": "The owner of this relationship. If type is `parent`, then the owner is the parent and the linked organization is the daughter."
                  },
                  "rel_linked_org_id": {
                    "type": "integer",
                    "description": "The linked organization in this relationship. If type is `parent`, then the linked organization is the daughter."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "updateOrganizationRelationship",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "description": "The ID of the organization relationship"
                            },
                            "type": {
                              "type": "string",
                              "description": "The type of the relationship"
                            },
                            "rel_owner_org_id": {
                              "title": "relationshipOrganizationInfoItem",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "The name of the organization associated with the item"
                                    },
                                    "people_count": {
                                      "type": "integer",
                                      "description": "The number of people connected with the organization that is associated with the item"
                                    },
                                    "owner_id": {
                                      "type": "integer",
                                      "description": "The ID of the owner of the organization that is associated with the item"
                                    },
                                    "address": {
                                      "type": "string",
                                      "description": "The address of the organization"
                                    },
                                    "cc_email": {
                                      "type": "string",
                                      "description": "The BCC email of the organization associated with the item"
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "value": {
                                      "type": "integer",
                                      "description": "The ID of the organization"
                                    }
                                  }
                                }
                              ]
                            },
                            "rel_linked_org_id": {
                              "title": "relationshipOrganizationInfoItem",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "The name of the organization associated with the item"
                                    },
                                    "people_count": {
                                      "type": "integer",
                                      "description": "The number of people connected with the organization that is associated with the item"
                                    },
                                    "owner_id": {
                                      "type": "integer",
                                      "description": "The ID of the owner of the organization that is associated with the item"
                                    },
                                    "address": {
                                      "type": "string",
                                      "description": "The address of the organization"
                                    },
                                    "cc_email": {
                                      "type": "string",
                                      "description": "The BCC email of the organization associated with the item"
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "value": {
                                      "type": "integer",
                                      "description": "The ID of the organization"
                                    }
                                  }
                                }
                              ]
                            },
                            "add_time": {
                              "type": "string",
                              "description": "The creation date and time of the relationship"
                            },
                            "update_time": {
                              "type": "string",
                              "description": "The last updated date and time of the relationship"
                            },
                            "active_flag": {
                              "type": "string",
                              "description": "Whether the relationship is active or not"
                            }
                          }
                        },
                        "related_objects": {
                          "type": "object",
                          "properties": {
                            "organization": {
                              "type": "object",
                              "properties": {
                                "ORGANIZATION_ID": {
                                  "type": "object",
                                  "description": "The ID of the organization associated with the item",
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "integer",
                                          "description": "The ID of the organization associated with the item"
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "The name of the organization associated with the item"
                                        },
                                        "people_count": {
                                          "type": "integer",
                                          "description": "The number of people connected with the organization that is associated with the item"
                                        },
                                        "owner_id": {
                                          "type": "integer",
                                          "description": "The ID of the owner of the organization that is associated with the item"
                                        },
                                        "address": {
                                          "type": "string",
                                          "description": "The address of the organization"
                                        },
                                        "cc_email": {
                                          "type": "string",
                                          "description": "The BCC email of the organization associated with the item"
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "success": true,
                  "data": {
                    "id": 1,
                    "type": "parent",
                    "rel_owner_org_id": {
                      "name": "Pipedrive Inc.",
                      "people_count": 1,
                      "owner_id": 925000,
                      "address": "Mustamäe tee 3a, 10615 Tallinn",
                      "active_flag": true,
                      "cc_email": "company@pipedrivemail.com",
                      "value": 1481
                    },
                    "rel_linked_org_id": {
                      "name": "Telia",
                      "people_count": 2,
                      "owner_id": 925000,
                      "address": "USA",
                      "active_flag": true,
                      "cc_email": "company@pipedrivemail.com",
                      "value": 1480
                    },
                    "add_time": "2020-09-22 08:58:28",
                    "update_time": "2020-09-22 08:58:28",
                    "active_flag": "true"
                  },
                  "related_objects": {
                    "organization": {
                      "1482": {
                        "id": 457,
                        "name": "Yandex",
                        "people_count": 2,
                        "owner_id": 9271535,
                        "address": "Mustamäe tee 4b, 10615 Tallinn",
                        "active_flag": true,
                        "cc_email": "org@pipedrivemail.com"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/permissionSets": {
      "get": {
        "summary": "Get all permission sets",
        "description": "Returns data about all permission sets.",
        "operationId": "getPermissionSets",
        "tags": [ "PermissionSets" ],
        "parameters": [
          {
            "in": "query",
            "name": "app",
            "description": "The app to filter the permission sets by",
            "schema": {
              "type": "string",
              "enum": [
                "sales",
                "projects",
                "campaigns",
                "global",
                "account_settings"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get all permissions",
            "content": {
              "application/json": {
                "schema": {
                  "title": "getPermissionSets",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "The ID of user permission set"
                              },
                              "name": {
                                "type": "string",
                                "description": "The name of the permission set"
                              },
                              "description": {
                                "type": "string",
                                "description": "The description of the permission set"
                              },
                              "app": {
                                "type": "string",
                                "description": "The app that permission set belongs to",
                                "enum": [
                                  "sales",
                                  "projects",
                                  "campaigns",
                                  "global",
                                  "account_settings"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "description": "The type of permission set",
                                "enum": [
                                  "admin",
                                  "manager",
                                  "regular",
                                  "custom"
                                ]
                              },
                              "assignment_count": {
                                "type": "integer",
                                "description": "The number of users assigned to this permission set"
                              }
                            }
                          },
                          "description": "The array of permission set"
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "success": true,
                  "data": [
                    {
                      "id": "62cc4d7f-4038-4352-abf3-a8c1c822b631",
                      "name": "Deals admin",
                      "description": "See and edit all sales data (deals, leads), manage company-level sales setup (such as lost reasons and pipelines)",
                      "app": "sales",
                      "type": "admin",
                      "assignment_count": 1
                    },
                    {
                      "id": "f07d229d-088a-4144-a40f-1fe64295d180",
                      "name": "Deals regular user",
                      "description": "Access to sales data (deals, leads) and available actions may be limited depending on the custom permission setup. This set is the default for new users.",
                      "app": "sales",
                      "type": "regular",
                      "assignment_count": 3
                    },
                    {
                      "id": "233b7976-39bd-43a9-b305-ef3a2b0998e5",
                      "name": "Global admin",
                      "description": "See and edit all cross-product data (such as contacts, activities, reports) and access related features",
                      "app": "global",
                      "type": "admin",
                      "assignment_count": 1
                    },
                    {
                      "id": "ec8a42e5-1842-490d-9113-b3a3b4b1c0a9",
                      "name": "Global regular user",
                      "description": "Access to cross-product data (such as contacts, activities, reports) and available actions may be limited depending on the custom permission setup. This set is the default for new users.",
                      "app": "global",
                      "type": "regular",
                      "assignment_count": 2
                    },
                    {
                      "id": "982c5ce5-b8ba-4b47-b102-9da024f4b990",
                      "name": "Account settings",
                      "description": "Access company account level features and setup (billing, security center, company settings, user management)",
                      "app": "account_settings",
                      "type": "admin",
                      "assignment_count": 1
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/permissionSets/{id}": {
      "get": {
        "summary": "Get one permission set",
        "description": "Returns data about a specific permission set.",
        "operationId": "getPermissionSet",
        "tags": [ "PermissionSets" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the permission set",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "The permission set of a specific user ID",
            "content": {
              "application/json": {
                "schema": {
                  "title": "singlePermissionSet",
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The ID of user permission set"
                        },
                        "name": {
                          "type": "string",
                          "description": "The name of the permission set"
                        },
                        "description": {
                          "type": "string",
                          "description": "The description of the permission set"
                        },
                        "app": {
                          "type": "string",
                          "description": "The app that permission set belongs to",
                          "enum": [
                            "sales",
                            "projects",
                            "campaigns",
                            "global",
                            "account_settings"
                          ]
                        },
                        "type": {
                          "type": "string",
                          "description": "The type of permission set",
                          "enum": [ "admin", "manager", "regular", "custom" ]
                        },
                        "assignment_count": {
                          "type": "integer",
                          "description": "The number of users assigned to this permission set"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "contents": {
                          "type": "array",
                          "description": "A permission assigned to this permission set",
                          "items": { "type": "string" }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "success": true,
                  "data": [
                    {
                      "id": "f07d229d-088a-4144-a40f-1fe64295d180",
                      "name": "Deals regular user",
                      "description": "Access to sales data (deals, leads) and available actions may be limited depending on the custom permission setup. This set is the default for new users.",
                      "app": "sales",
                      "assignment_count": 3,
                      "contents": [
                        "can_add_products",
                        "can_bulk_edit_items",
                        "can_change_visibility_of_items",
                        "can_delete_activities",
                        "can_edit_products",
                        "can_edit_shared_filters",
                        "can_export_data_from_lists",
                        "can_see_deals_list_summary",
                        "can_see_other_users",
                        "can_share_filters",
                        "can_use_api",
                        "can_use_email_tracking"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "If the user ID has no assignments, then it will return NotFound",
            "content": {
              "application/json": {
                "schema": { "title": "notFoundResponse404" }
              }
            }
          }
        }
      }
    },
    "/permissionSets/{id}/assignments": {
      "get": {
        "summary": "List permission set assignments",
        "description": "Returns the list of assignments for a permission set.",
        "operationId": "getPermissionSetAssignments",
        "tags": [ "PermissionSets" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the permission set",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "in": "query",
            "name": "start",
            "description": "Pagination start",
            "schema": { "type": "integer", "default": 0 }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Items shown per page",
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "The assignments of a specific user ID",
            "content": {
              "application/json": {
                "schema": {
                  "title": "userAssignmentsToPermissionSet",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "user_id": {
                                "type": "integer",
                                "description": "The ID of the user in the permission set"
                              },
                              "permission_set_id": {
                                "type": "string",
                                "description": "The ID of the permission set"
                              },
                              "name": {
                                "type": "string",
                                "description": "The name of the permission set"
                              }
                            }
                          },
                          "description": "An array of the assignments of the user"
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "data": [
                    {
                      "user_id": 10,
                      "permission_set_id": "f07d229d-088a-4144-a40f-1fe64295d180",
                      "name": "Deals regular user"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "If the user ID has no assignments, then it will return NotFound",
            "content": {
              "application/json": {
                "schema": { "title": "notFoundResponse404" }
              }
            }
          }
        }
      }
    },
    "/persons": {
      "delete": {
        "summary": "Delete multiple persons in bulk",
        "description": "Marks multiple persons as deleted. After 30 days, the persons will be permanently deleted.",
        "operationId": "deletePersons",
        "tags": [ "Persons" ],
        "parameters": [
          {
            "in": "query",
            "name": "ids",
            "required": true,
            "schema": { "type": "string" },
            "description": "The comma-separated IDs that will be deleted"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "deletePersons",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "array",
                              "items": { "type": "integer" },
                              "description": "The list of deleted persons IDs"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": { "success": true, "data": { "id": [ 123, 456 ] } }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get all persons",
        "description": "Returns all persons.",
        "operationId": "getPersons",
        "tags": [ "Persons" ],
        "parameters": [
          {
            "in": "query",
            "name": "user_id",
            "schema": { "type": "integer" },
            "description": "If supplied, only persons owned by the given user will be returned. However, `filter_id` takes precedence over `user_id` when both are supplied."
          },
          {
            "in": "query",
            "name": "filter_id",
            "schema": { "type": "integer" },
            "description": "The ID of the filter to use"
          },
          {
            "in": "query",
            "name": "first_char",
            "schema": { "type": "string" },
            "description": "If supplied, only persons whose name starts with the specified letter will be returned (case insensitive)"
          },
          {
            "in": "query",
            "name": "start",
            "description": "Pagination start",
            "schema": { "type": "integer", "default": 0 }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Items shown per page",
            "schema": { "type": "integer" }
          },
          {
            "in": "query",
            "name": "sort",
            "schema": { "type": "string" },
            "description": "The field names and sorting mode separated by a comma (`field_name_1 ASC`, `field_name_2 DESC`). Only first-level field keys are supported (no nested keys)."
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "getPersons",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "title": "personItem",
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "integer",
                                    "description": "The ID of the person"
                                  },
                                  "company_id": {
                                    "type": "integer",
                                    "description": "The ID of the company related to the person"
                                  },
                                  "active_flag": {
                                    "type": "boolean",
                                    "description": "Whether the person is active or not"
                                  },
                                  "phone": {
                                    "type": "array",
                                    "description": "A phone number supplied as a string or an array of phone objects related to the person. The structure of the array is as follows: `[{ \"value\": \"12345\", \"primary\": \"true\", \"label\": \"mobile\" }]`. Please note that only `value` is required.",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "value": {
                                          "type": "string",
                                          "description": "The phone number"
                                        },
                                        "primary": {
                                          "type": "boolean",
                                          "description": "Boolean that indicates if phone number is primary for the person or not"
                                        },
                                        "label": {
                                          "type": "string",
                                          "description": "The label that indicates the type of the phone number. (Possible values - work, home, mobile or other)"
                                        }
                                      }
                                    }
                                  },
                                  "email": {
                                    "type": "array",
                                    "description": "An email address as a string or an array of email objects related to the person. The structure of the array is as follows: `[{ \"value\": \"mail@example.com\", \"primary\": \"true\", \"label\": \"main\" } ]`. Please note that only `value` is required.",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "value": {
                                          "type": "string",
                                          "description": "Email"
                                        },
                                        "primary": {
                                          "type": "boolean",
                                          "description": "Boolean that indicates if email is primary for the person or not"
                                        },
                                        "label": {
                                          "type": "string",
                                          "description": "The label that indicates the type of the email. (Possible values - work, home or other)"
                                        }
                                      }
                                    }
                                  },
                                  "first_char": {
                                    "type": "string",
                                    "description": "The first letter of the name of the person"
                                  },
                                  "add_time": {
                                    "type": "string",
                                    "description": "The date and time when the person was added/created. Format: YYYY-MM-DD HH:MM:SS"
                                  },
                                  "update_time": {
                                    "type": "string",
                                    "description": "The last updated date and time of the person. Format: YYYY-MM-DD HH:MM:SS"
                                  },
                                  "visible_to": {
                                    "type": "string",
                                    "description": "The visibility group ID of who can see the person"
                                  },
                                  "picture_id": {
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "integer",
                                            "description": "The ID of the picture associated with the item"
                                          }
                                        }
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "item_type": {
                                            "type": "string",
                                            "description": "The type of item the picture is related to"
                                          },
                                          "item_id": {
                                            "type": "integer",
                                            "description": "The ID of related item"
                                          },
                                          "active_flag": {
                                            "type": "boolean",
                                            "description": "Whether the associated picture is active or not"
                                          },
                                          "add_time": {
                                            "type": "string",
                                            "description": "The add time of the picture"
                                          },
                                          "update_time": {
                                            "type": "string",
                                            "description": "The update time of the picture"
                                          },
                                          "added_by_user_id": {
                                            "type": "integer",
                                            "description": "The ID of the user who added the picture"
                                          },
                                          "pictures": {
                                            "type": "object",
                                            "properties": {
                                              "128": {
                                                "type": "string",
                                                "description": "The URL of the 128*128 picture"
                                              },
                                              "512": {
                                                "type": "string",
                                                "description": "The URL of the 512*512 picture"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  "label": {
                                    "type": "integer",
                                    "description": "The label assigned to the person"
                                  },
                                  "org_name": {
                                    "type": "string",
                                    "description": "The name of the organization associated with the person"
                                  },
                                  "owner_name": {
                                    "type": "string",
                                    "description": "The name of the owner associated with the person"
                                  },
                                  "cc_email": {
                                    "type": "string",
                                    "description": "The BCC email associated with the person"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "title": "additionalPersonInfo",
                                "allOf": [
                                  {
                                    "type": "object",
                                    "title": "personNameInfoWithOrgAndOwnerId",
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "properties": {
                                          "owner_id": {
                                            "title": "owner",
                                            "allOf": [
                                              {
                                                "properties": {
                                                  "id": {
                                                    "type": "integer",
                                                    "description": "The ID of the user"
                                                  },
                                                  "name": {
                                                    "type": "string",
                                                    "description": "The name of the user"
                                                  },
                                                  "email": {
                                                    "type": "string",
                                                    "description": "The email of the user"
                                                  },
                                                  "has_pic": {
                                                    "type": "integer",
                                                    "description": "Whether the user has picture or not. 0 = No picture, 1 = Has picture."
                                                  },
                                                  "pic_hash": {
                                                    "type": "string",
                                                    "nullable": true,
                                                    "description": "The user picture hash"
                                                  },
                                                  "active_flag": {
                                                    "type": "boolean",
                                                    "description": "Whether the user is active or not"
                                                  }
                                                }
                                              },
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "value": {
                                                    "type": "integer",
                                                    "description": "The ID of the owner"
                                                  }
                                                }
                                              }
                                            ]
                                          },
                                          "org_id": {
                                            "title": "relationshipOrganizationInfoItemWithActiveFlag",
                                            "allOf": [
                                              {
                                                "title": "relationshipOrganizationInfoItem",
                                                "allOf": [
                                                  {
                                                    "type": "object",
                                                    "properties": {
                                                      "name": {
                                                        "type": "string",
                                                        "description": "The name of the organization associated with the item"
                                                      },
                                                      "people_count": {
                                                        "type": "integer",
                                                        "description": "The number of people connected with the organization that is associated with the item"
                                                      },
                                                      "owner_id": {
                                                        "type": "integer",
                                                        "description": "The ID of the owner of the organization that is associated with the item"
                                                      },
                                                      "address": {
                                                        "type": "string",
                                                        "description": "The address of the organization"
                                                      },
                                                      "cc_email": {
                                                        "type": "string",
                                                        "description": "The BCC email of the organization associated with the item"
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "type": "object",
                                                    "properties": {
                                                      "value": {
                                                        "type": "integer",
                                                        "description": "The ID of the organization"
                                                      }
                                                    }
                                                  }
                                                ]
                                              },
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "active_flag": {
                                                    "type": "boolean",
                                                    "description": "Whether the associated organization is active or not"
                                                  }
                                                }
                                              }
                                            ]
                                          }
                                        }
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "description": "The name of the person"
                                          },
                                          "first_name": {
                                            "type": "string",
                                            "description": "The first name of the person"
                                          },
                                          "last_name": {
                                            "type": "string",
                                            "description": "The last name of the person"
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  {
                                    "type": "object",
                                    "title": "personCountEmailDealAndActivityInfo",
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "title": "personCountAndEmailInfo",
                                        "allOf": [
                                          {
                                            "type": "object",
                                            "properties": {
                                              "email_messages_count": {
                                                "type": "integer",
                                                "description": "The count of email messages related to the person"
                                              },
                                              "activities_count": {
                                                "type": "integer",
                                                "description": "The count of activities related to the person"
                                              },
                                              "done_activities_count": {
                                                "type": "integer",
                                                "description": "The count of done activities related to the person"
                                              },
                                              "undone_activities_count": {
                                                "type": "integer",
                                                "description": "The count of undone activities related to the person"
                                              },
                                              "files_count": {
                                                "type": "integer",
                                                "description": "The count of files related to the person"
                                              },
                                              "notes_count": {
                                                "type": "integer",
                                                "description": "The count of notes related to the person"
                                              },
                                              "followers_count": {
                                                "type": "integer",
                                                "description": "The count of followers related to the person"
                                              }
                                            }
                                          },
                                          {
                                            "type": "object",
                                            "properties": {
                                              "last_incoming_mail_time": {
                                                "type": "string",
                                                "description": "The date and time of the last incoming email associated with the person"
                                              },
                                              "last_outgoing_mail_time": {
                                                "type": "string",
                                                "description": "The date and time of the last outgoing email associated with the person"
                                              }
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "type": "object",
                                        "title": "dealCountAndActivityInfo",
                                        "allOf": [
                                          {
                                            "type": "object",
                                            "properties": {
                                              "open_deals_count": {
                                                "type": "integer",
                                                "description": "The count of open deals related with the item"
                                              },
                                              "related_open_deals_count": {
                                                "type": "integer",
                                                "description": "The count of related open deals related with the item"
                                              },
                                              "closed_deals_count": {
                                                "type": "integer",
                                                "description": "The count of closed deals related with the item"
                                              },
                                              "related_closed_deals_count": {
                                                "type": "integer",
                                                "description": "The count of related closed deals related with the item"
                                              },
                                              "won_deals_count": {
                                                "type": "integer",
                                                "description": "The count of won deals related with the item"
                                              },
                                              "related_won_deals_count": {
                                                "type": "integer",
                                                "description": "The count of related won deals related with the item"
                                              },
                                              "lost_deals_count": {
                                                "type": "integer",
                                                "description": "The count of lost deals related with the item"
                                              },
                                              "related_lost_deals_count": {
                                                "type": "integer",
                                                "description": "The count of related lost deals related with the item"
                                              }
                                            }
                                          },
                                          {
                                            "type": "object",
                                            "properties": {
                                              "next_activity_date": {
                                                "type": "string",
                                                "description": "The date of the next activity associated with the deal"
                                              },
                                              "next_activity_time": {
                                                "type": "string",
                                                "description": "The time of the next activity associated with the deal"
                                              },
                                              "next_activity_id": {
                                                "type": "integer",
                                                "nullable": true,
                                                "description": "The ID of the next activity associated with the deal"
                                              },
                                              "last_activity_id": {
                                                "type": "integer",
                                                "nullable": true,
                                                "description": "The ID of the last activity associated with the deal"
                                              },
                                              "last_activity_date": {
                                                "type": "string",
                                                "nullable": true,
                                                "description": "The date of the last activity associated with the deal"
                                              }
                                            }
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          "description": "The array of persons"
                        },
                        "additional_data": {
                          "type": "object",
                          "properties": {
                            "pagination": {
                              "description": "Pagination details of the list",
                              "type": "object",
                              "properties": {
                                "start": {
                                  "type": "integer",
                                  "description": "Pagination start"
                                },
                                "limit": {
                                  "type": "integer",
                                  "description": "Items shown per page"
                                },
                                "more_items_in_collection": {
                                  "type": "boolean",
                                  "description": "Whether there are more list items in the collection than displayed"
                                },
                                "next_start": {
                                  "type": "integer",
                                  "description": "Next pagination start"
                                }
                              }
                            }
                          }
                        },
                        "related_objects": {
                          "type": "object",
                          "properties": {
                            "organization": {
                              "type": "object",
                              "properties": {
                                "ORGANIZATION_ID": {
                                  "type": "object",
                                  "description": "The ID of the organization associated with the item",
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "integer",
                                          "description": "The ID of the organization associated with the item"
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "The name of the organization associated with the item"
                                        },
                                        "people_count": {
                                          "type": "integer",
                                          "description": "The number of people connected with the organization that is associated with the item"
                                        },
                                        "owner_id": {
                                          "type": "integer",
                                          "description": "The ID of the owner of the organization that is associated with the item"
                                        },
                                        "address": {
                                          "type": "string",
                                          "description": "The address of the organization"
                                        },
                                        "cc_email": {
                                          "type": "string",
                                          "description": "The BCC email of the organization associated with the item"
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            },
                            "user": {
                              "type": "object",
                              "properties": {
                                "USER_ID": {
                                  "type": "object",
                                  "title": "userDataWithId",
                                  "allOf": [
                                    {
                                      "properties": {
                                        "id": {
                                          "type": "integer",
                                          "description": "The ID of the user"
                                        },
                                        "name": {
                                          "type": "string",
                                          "description": "The name of the user"
                                        },
                                        "email": {
                                          "type": "string",
                                          "description": "The email of the user"
                                        },
                                        "has_pic": {
                                          "type": "integer",
                                          "description": "Whether the user has picture or not. 0 = No picture, 1 = Has picture."
                                        },
                                        "pic_hash": {
                                          "type": "string",
                                          "nullable": true,
                                          "description": "The user picture hash"
                                        },
                                        "active_flag": {
                                          "type": "boolean",
                                          "description": "Whether the user is active or not"
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "description": "The ID of the user"
                                    }
                                  ]
                                }
                              }
                            },
                            "picture": {
                              "type": "object",
                              "description": "The picture that is associated with the item",
                              "properties": {
                                "PICTURE_ID": {
                                  "type": "object",
                                  "description": "The ID of the picture",
                                  "allOf": [
                                    {
                                      "allOf": [
                                        {
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "type": "integer",
                                              "description": "The ID of the picture associated with the item"
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "properties": {
                                            "item_type": {
                                              "type": "string",
                                              "description": "The type of item the picture is related to"
                                            },
                                            "item_id": {
                                              "type": "integer",
                                              "description": "The ID of related item"
                                            },
                                            "active_flag": {
                                              "type": "boolean",
                                              "description": "Whether the associated picture is active or not"
                                            },
                                            "add_time": {
                                              "type": "string",
                                              "description": "The add time of the picture"
                                            },
                                            "update_time": {
                                              "type": "string",
                                              "description": "The update time of the picture"
                                            },
                                            "added_by_user_id": {
                                              "type": "integer",
                                              "description": "The ID of the user who added the picture"
                                            },
                                            "pictures": {
                                              "type": "object",
                                              "properties": {
                                                "128": {
                                                  "type": "string",
                                                  "description": "The URL of the 128*128 picture"
                                                },
                                                "512": {
                                                  "type": "string",
                                                  "description": "The URL of the 512*512 picture"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "success": true,
                  "data": [
                    {
                      "id": 1,
                      "company_id": 12,
                      "owner_id": {
                        "id": 123,
                        "name": "Jane Doe",
                        "email": "jane@pipedrive.com",
                        "has_pic": 1,
                        "pic_hash": "2611ace8ac6a3afe2f69ed56f9e08c6b",
                        "active_flag": true,
                        "value": 123
                      },
                      "org_id": {
                        "name": "Org Name",
                        "people_count": 1,
                        "owner_id": 123,
                        "address": "Mustamäe tee 3a, 10615 Tallinn",
                        "active_flag": true,
                        "cc_email": "org@pipedrivemail.com",
                        "value": 1234
                      },
                      "name": "Will Smith",
                      "first_name": "Will",
                      "last_name": "Smith",
                      "open_deals_count": 2,
                      "related_open_deals_count": 2,
                      "closed_deals_count": 3,
                      "related_closed_deals_count": 3,
                      "participant_open_deals_count": 1,
                      "participant_closed_deals_count": 1,
                      "email_messages_count": 1,
                      "activities_count": 1,
                      "done_activities_count": 1,
                      "undone_activities_count": 2,
                      "files_count": 2,
                      "notes_count": 2,
                      "followers_count": 3,
                      "won_deals_count": 3,
                      "related_won_deals_count": 3,
                      "lost_deals_count": 1,
                      "related_lost_deals_count": 1,
                      "active_flag": true,
                      "phone": [
                        { "value": "12345", "primary": true, "label": "work" }
                      ],
                      "email": [
                        {
                          "value": "12345@email.com",
                          "primary": true,
                          "label": "work"
                        }
                      ],
                      "primary_email": "12345@email.com",
                      "first_char": "w",
                      "update_time": "2020-05-08 05:30:20",
                      "add_time": "2017-10-18 13:23:07",
                      "visible_to": "3",
                      "marketing_status": "no_consent",
                      "picture_id": {
                        "item_type": "person",
                        "item_id": 25,
                        "active_flag": true,
                        "add_time": "2020-09-08 08:17:52",
                        "update_time": "0000-00-00 00:00:00",
                        "added_by_user_id": 967055,
                        "pictures": {
                          "128": "https://pipedrive-profile-pics.s3.example.com/f8893852574273f2747bf6ef09d11cfb4ac8f269_128.jpg",
                          "512": "https://pipedrive-profile-pics.s3.example.com/f8893852574273f2747bf6ef09d11cfb4ac8f269_512.jpg"
                        },
                        "value": 4
                      },
                      "next_activity_date": "2019-11-29",
                      "next_activity_time": "11:30:00",
                      "next_activity_id": 128,
                      "last_activity_id": 34,
                      "last_activity_date": "2019-11-28",
                      "last_incoming_mail_time": "2019-05-29 18:21:42",
                      "last_outgoing_mail_time": "2019-05-30 03:45:35",
                      "label": 1,
                      "org_name": "Organization name",
                      "owner_name": "Jane Doe",
                      "cc_email": "org@pipedrivemail.com"
                    }
                  ],
                  "additional_data": {
                    "pagination": {
                      "start": 0,
                      "limit": 100,
                      "more_items_in_collection": false,
                      "next_start": 100
                    }
                  },
                  "related_objects": {
                    "organization": {
                      "1": {
                        "id": 1,
                        "name": "Org Name",
                        "people_count": 1,
                        "owner_id": 123,
                        "address": "Mustamäe tee 3a, 10615 Tallinn",
                        "active_flag": true,
                        "cc_email": "org@pipedrivemail.com"
                      }
                    },
                    "user": {
                      "123": {
                        "id": 123,
                        "name": "Jane Doe",
                        "email": "jane@pipedrive.com",
                        "has_pic": 1,
                        "pic_hash": "2611ace8ac6a3afe2f69ed56f9e08c6b",
                        "active_flag": true
                      }
                    },
                    "picture": {
                      "1": {
                        "id": 1,
                        "item_type": "person",
                        "item_id": 25,
                        "active_flag": true,
                        "add_time": "2020-09-08 08:17:52",
                        "update_time": "0000-00-00 00:00:00",
                        "added_by_user_id": 967055,
                        "pictures": {
                          "128": "https://pipedrive-profile-pics.s3.example.com/f8893852574273f2747bf6ef09d11cfb4ac8f269_128.jpg",
                          "512": "https://pipedrive-profile-pics.s3.example.com/f8893852574273f2747bf6ef09d11cfb4ac8f269_512.jpg"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add a person",
        "description": "Adds a new person. Note that you can supply additional custom fields along with the request that are not described here. These custom fields are different for each Pipedrive account and can be recognized by long hashes as keys. To determine which custom fields exists, fetch the personFields and look for `key` values.<br>If a company uses the [Campaigns product](https://pipedrive.readme.io/docs/campaigns-in-pipedrive-api), then this endpoint will also accept and return the `data.marketing_status` field.",
        "operationId": "addPerson",
        "tags": [ "Persons" ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "addPersonRequest",
                "allOf": [
                  {
                    "type": "object",
                    "required": [ "name" ],
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The name of the person"
                      }
                    }
                  },
                  {
                    "title": "basicPersonRequest",
                    "type": "object",
                    "properties": {
                      "owner_id": {
                        "type": "integer",
                        "description": "The ID of the user who will be marked as the owner of this person. When omitted, the authorized user ID will be used."
                      },
                      "org_id": {
                        "type": "integer",
                        "description": "The ID of the organization this person will belong to"
                      },
                      "email": {
                        "type": "array",
                        "description": "An email address as a string or an array of email objects related to the person. The structure of the array is as follows: `[{ \"value\": \"mail@example.com\", \"primary\": \"true\", \"label\": \"main\" }]`. Please note that only `value` is required.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "string",
                              "description": "The email"
                            },
                            "primary": {
                              "type": "boolean",
                              "description": "Boolean that indicates if email is primary for the person or not"
                            },
                            "label": {
                              "type": "string",
                              "description": "The label that indicates the type of the email. (Possible values - work, home or other)"
                            }
                          }
                        }
                      },
                      "phone": {
                        "type": "array",
                        "description": "A phone number supplied as a string or an array of phone objects related to the person. The structure of the array is as follows: `[{ \"value\": \"12345\", \"primary\": \"true\", \"label\": \"mobile\" }]`. Please note that only `value` is required.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "string",
                              "description": "The phone number"
                            },
                            "primary": {
                              "type": "boolean",
                              "description": "Boolean that indicates if phone number is primary for the person or not"
                            },
                            "label": {
                              "type": "string",
                              "description": "The label that indicates the type of the phone number. (Possible values - work, home, mobile or other)"
                            }
                          }
                        }
                      },
                      "visible_to": {
                        "type": "string",
                        "allOf": [
                          { "type": "string", "enum": [ "1", "3", "5", "7" ] }
                        ],
                        "description": "The visibility of the person. If omitted, the visibility will be set to the default visibility setting of this item type for the authorized user. Read more about visibility groups <a href=\"https://support.pipedrive.com/en/article/visibility-groups\" target=\"_blank\" rel=\"noopener noreferrer\">here</a>.<h4>Essential / Advanced plan</h4><table><tr><th style=\"width:40px\">Value</th><th>Description</th></tr><tr><td>`1`</td><td>Owner &amp; followers</td><tr><td>`3`</td><td>Entire company</td></tr></table><h4>Professional / Enterprise plan</h4><table><tr><th style=\"width:40px\">Value</th><th>Description</th></tr><tr><td>`1`</td><td>Owner only</td><tr><td>`3`</td><td>Owner's visibility group</td></tr><tr><td>`5`</td><td>Owner's visibility group and sub-groups</td></tr><tr><td>`7`</td><td>Entire company</td></tr></table>"
                      },
                      "marketing_status": {
                        "allOf": [
                          {
                            "type": "string",
                            "enum": [
                              "no_consent",
                              "unsubscribed",
                              "subscribed",
                              "archived"
                            ]
                          }
                        ],
                        "description": "If the person does not have a valid email address, then the marketing status is **not set** and `no_consent` is returned for the `marketing_status` value when the new person is created. If the change is forbidden, the status will remain unchanged for every call that tries to modify the marketing status. Please be aware that it is only allowed **once** to change the marketing status from an old status to a new one.<table><tr><th>Value</th><th>Description</th></tr><tr><td>`no_consent`</td><td>The customer has not given consent to receive any marketing communications</td></tr><tr><td>`unsubscribed`</td><td>The customers have unsubscribed from ALL marketing communications</td></tr><tr><td>`subscribed`</td><td>The customers are subscribed and are counted towards marketing caps</td></tr><tr><td>`archived`</td><td>The customers with `subscribed` status can be moved to `archived` to save consent, but they are not paid for</td></tr></table>"
                      },
                      "add_time": {
                        "type": "string",
                        "description": "The optional creation date & time of the person in UTC. Requires admin user API token. Format: YYYY-MM-DD HH:MM:SS"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "addPerson",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "title": "personItem",
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "description": "The ID of the person"
                                },
                                "company_id": {
                                  "type": "integer",
                                  "description": "The ID of the company related to the person"
                                },
                                "active_flag": {
                                  "type": "boolean",
                                  "description": "Whether the person is active or not"
                                },
                                "phone": {
                                  "type": "array",
                                  "description": "A phone number supplied as a string or an array of phone objects related to the person. The structure of the array is as follows: `[{ \"value\": \"12345\", \"primary\": \"true\", \"label\": \"mobile\" }]`. Please note that only `value` is required.",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "value": {
                                        "type": "string",
                                        "description": "The phone number"
                                      },
                                      "primary": {
                                        "type": "boolean",
                                        "description": "Boolean that indicates if phone number is primary for the person or not"
                                      },
                                      "label": {
                                        "type": "string",
                                        "description": "The label that indicates the type of the phone number. (Possible values - work, home, mobile or other)"
                                      }
                                    }
                                  }
                                },
                                "email": {
                                  "type": "array",
                                  "description": "An email address as a string or an array of email objects related to the person. The structure of the array is as follows: `[{ \"value\": \"mail@example.com\", \"primary\": \"true\", \"label\": \"main\" } ]`. Please note that only `value` is required.",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "value": {
                                        "type": "string",
                                        "description": "Email"
                                      },
                                      "primary": {
                                        "type": "boolean",
                                        "description": "Boolean that indicates if email is primary for the person or not"
                                      },
                                      "label": {
                                        "type": "string",
                                        "description": "The label that indicates the type of the email. (Possible values - work, home or other)"
                                      }
                                    }
                                  }
                                },
                                "first_char": {
                                  "type": "string",
                                  "description": "The first letter of the name of the person"
                                },
                                "add_time": {
                                  "type": "string",
                                  "description": "The date and time when the person was added/created. Format: YYYY-MM-DD HH:MM:SS"
                                },
                                "update_time": {
                                  "type": "string",
                                  "description": "The last updated date and time of the person. Format: YYYY-MM-DD HH:MM:SS"
                                },
                                "visible_to": {
                                  "type": "string",
                                  "description": "The visibility group ID of who can see the person"
                                },
                                "picture_id": {
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "integer",
                                          "description": "The ID of the picture associated with the item"
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "item_type": {
                                          "type": "string",
                                          "description": "The type of item the picture is related to"
                                        },
                                        "item_id": {
                                          "type": "integer",
                                          "description": "The ID of related item"
                                        },
                                        "active_flag": {
                                          "type": "boolean",
                                          "description": "Whether the associated picture is active or not"
                                        },
                                        "add_time": {
                                          "type": "string",
                                          "description": "The add time of the picture"
                                        },
                                        "update_time": {
                                          "type": "string",
                                          "description": "The update time of the picture"
                                        },
                                        "added_by_user_id": {
                                          "type": "integer",
                                          "description": "The ID of the user who added the picture"
                                        },
                                        "pictures": {
                                          "type": "object",
                                          "properties": {
                                            "128": {
                                              "type": "string",
                                              "description": "The URL of the 128*128 picture"
                                            },
                                            "512": {
                                              "type": "string",
                                              "description": "The URL of the 512*512 picture"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  ]
                                },
                                "label": {
                                  "type": "integer",
                                  "description": "The label assigned to the person"
                                },
                                "org_name": {
                                  "type": "string",
                                  "description": "The name of the organization associated with the person"
                                },
                                "owner_name": {
                                  "type": "string",
                                  "description": "The name of the owner associated with the person"
                                },
                                "cc_email": {
                                  "type": "string",
                                  "description": "The BCC email associated with the person"
                                }
                              }
                            },
                            {
                              "type": "object",
                              "title": "additionalPersonInfo",
                              "allOf": [
                                {
                                  "type": "object",
                                  "title": "personNameInfoWithOrgAndOwnerId",
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "owner_id": {
                                          "title": "owner",
                                          "allOf": [
                                            {
                                              "properties": {
                                                "id": {
                                                  "type": "integer",
                                                  "description": "The ID of the user"
                                                },
                                                "name": {
                                                  "type": "string",
                                                  "description": "The name of the user"
                                                },
                                                "email": {
                                                  "type": "string",
                                                  "description": "The email of the user"
                                                },
                                                "has_pic": {
                                                  "type": "integer",
                                                  "description": "Whether the user has picture or not. 0 = No picture, 1 = Has picture."
                                                },
                                                "pic_hash": {
                                                  "type": "string",
                                                  "nullable": true,
                                                  "description": "The user picture hash"
                                                },
                                                "active_flag": {
                                                  "type": "boolean",
                                                  "description": "Whether the user is active or not"
                                                }
                                              }
                                            },
                                            {
                                              "type": "object",
                                              "properties": {
                                                "value": {
                                                  "type": "integer",
                                                  "description": "The ID of the owner"
                                                }
                                              }
                                            }
                                          ]
                                        },
                                        "org_id": {
                                          "title": "relationshipOrganizationInfoItemWithActiveFlag",
                                          "allOf": [
                                            {
                                              "title": "relationshipOrganizationInfoItem",
                                              "allOf": [
                                                {
                                                  "type": "object",
                                                  "properties": {
                                                    "name": {
                                                      "type": "string",
                                                      "description": "The name of the organization associated with the item"
                                                    },
                                                    "people_count": {
                                                      "type": "integer",
                                                      "description": "The number of people connected with the organization that is associated with the item"
                                                    },
                                                    "owner_id": {
                                                      "type": "integer",
                                                      "description": "The ID of the owner of the organization that is associated with the item"
                                                    },
                                                    "address": {
                                                      "type": "string",
                                                      "description": "The address of the organization"
                                                    },
                                                    "cc_email": {
                                                      "type": "string",
                                                      "description": "The BCC email of the organization associated with the item"
                                                    }
                                                  }
                                                },
                                                {
                                                  "type": "object",
                                                  "properties": {
                                                    "value": {
                                                      "type": "integer",
                                                      "description": "The ID of the organization"
                                                    }
                                                  }
                                                }
                                              ]
                                            },
                                            {
                                              "type": "object",
                                              "properties": {
                                                "active_flag": {
                                                  "type": "boolean",
                                                  "description": "Whether the associated organization is active or not"
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "The name of the person"
                                        },
                                        "first_name": {
                                          "type": "string",
                                          "description": "The first name of the person"
                                        },
                                        "last_name": {
                                          "type": "string",
                                          "description": "The last name of the person"
                                        }
                                      }
                                    }
                                  ]
                                },
                                {
                                  "type": "object",
                                  "title": "personCountEmailDealAndActivityInfo",
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "title": "personCountAndEmailInfo",
                                      "allOf": [
                                        {
                                          "type": "object",
                                          "properties": {
                                            "email_messages_count": {
                                              "type": "integer",
                                              "description": "The count of email messages related to the person"
                                            },
                                            "activities_count": {
                                              "type": "integer",
                                              "description": "The count of activities related to the person"
                                            },
                                            "done_activities_count": {
                                              "type": "integer",
                                              "description": "The count of done activities related to the person"
                                            },
                                            "undone_activities_count": {
                                              "type": "integer",
                                              "description": "The count of undone activities related to the person"
                                            },
                                            "files_count": {
                                              "type": "integer",
                                              "description": "The count of files related to the person"
                                            },
                                            "notes_count": {
                                              "type": "integer",
                                              "description": "The count of notes related to the person"
                                            },
                                            "followers_count": {
                                              "type": "integer",
                                              "description": "The count of followers related to the person"
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "properties": {
                                            "last_incoming_mail_time": {
                                              "type": "string",
                                              "description": "The date and time of the last incoming email associated with the person"
                                            },
                                            "last_outgoing_mail_time": {
                                              "type": "string",
                                              "description": "The date and time of the last outgoing email associated with the person"
                                            }
                                          }
                                        }
                                      ]
                                    },
                                    {
                                      "type": "object",
                                      "title": "dealCountAndActivityInfo",
                                      "allOf": [
                                        {
                                          "type": "object",
                                          "properties": {
                                            "open_deals_count": {
                                              "type": "integer",
                                              "description": "The count of open deals related with the item"
                                            },
                                            "related_open_deals_count": {
                                              "type": "integer",
                                              "description": "The count of related open deals related with the item"
                                            },
                                            "closed_deals_count": {
                                              "type": "integer",
                                              "description": "The count of closed deals related with the item"
                                            },
                                            "related_closed_deals_count": {
                                              "type": "integer",
                                              "description": "The count of related closed deals related with the item"
                                            },
                                            "won_deals_count": {
                                              "type": "integer",
                                              "description": "The count of won deals related with the item"
                                            },
                                            "related_won_deals_count": {
                                              "type": "integer",
                                              "description": "The count of related won deals related with the item"
                                            },
                                            "lost_deals_count": {
                                              "type": "integer",
                                              "description": "The count of lost deals related with the item"
                                            },
                                            "related_lost_deals_count": {
                                              "type": "integer",
                                              "description": "The count of related lost deals related with the item"
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "properties": {
                                            "next_activity_date": {
                                              "type": "string",
                                              "description": "The date of the next activity associated with the deal"
                                            },
                                            "next_activity_time": {
                                              "type": "string",
                                              "description": "The time of the next activity associated with the deal"
                                            },
                                            "next_activity_id": {
                                              "type": "integer",
                                              "nullable": true,
                                              "description": "The ID of the next activity associated with the deal"
                                            },
                                            "last_activity_id": {
                                              "type": "integer",
                                              "nullable": true,
                                              "description": "The ID of the last activity associated with the deal"
                                            },
                                            "last_activity_date": {
                                              "type": "string",
                                              "nullable": true,
                                              "description": "The date of the last activity associated with the deal"
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "related_objects": {
                          "type": "object",
                          "properties": {
                            "user": {
                              "type": "object",
                              "properties": {
                                "USER_ID": {
                                  "type": "object",
                                  "title": "userDataWithId",
                                  "allOf": [
                                    {
                                      "properties": {
                                        "id": {
                                          "type": "integer",
                                          "description": "The ID of the user"
                                        },
                                        "name": {
                                          "type": "string",
                                          "description": "The name of the user"
                                        },
                                        "email": {
                                          "type": "string",
                                          "description": "The email of the user"
                                        },
                                        "has_pic": {
                                          "type": "integer",
                                          "description": "Whether the user has picture or not. 0 = No picture, 1 = Has picture."
                                        },
                                        "pic_hash": {
                                          "type": "string",
                                          "nullable": true,
                                          "description": "The user picture hash"
                                        },
                                        "active_flag": {
                                          "type": "boolean",
                                          "description": "Whether the user is active or not"
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "description": "The ID of the user"
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "success": true,
                  "data": {
                    "id": 1,
                    "company_id": 12,
                    "owner_id": {
                      "id": 123,
                      "name": "Jane Doe",
                      "email": "jane@pipedrive.com",
                      "has_pic": 1,
                      "pic_hash": "2611ace8ac6a3afe2f69ed56f9e08c6b",
                      "active_flag": true,
                      "value": 123
                    },
                    "org_id": {
                      "name": "Org Name",
                      "people_count": 1,
                      "owner_id": 123,
                      "address": "Mustamäe tee 3a, 10615 Tallinn",
                      "active_flag": true,
                      "cc_email": "org@pipedrivemail.com",
                      "value": 1234
                    },
                    "name": "Will Smith",
                    "first_name": "Will",
                    "last_name": "Smith",
                    "open_deals_count": 2,
                    "related_open_deals_count": 2,
                    "closed_deals_count": 3,
                    "related_closed_deals_count": 3,
                    "participant_open_deals_count": 1,
                    "participant_closed_deals_count": 1,
                    "email_messages_count": 1,
                    "activities_count": 1,
                    "done_activities_count": 1,
                    "undone_activities_count": 2,
                    "files_count": 2,
                    "notes_count": 2,
                    "followers_count": 3,
                    "won_deals_count": 3,
                    "related_won_deals_count": 3,
                    "lost_deals_count": 1,
                    "related_lost_deals_count": 1,
                    "active_flag": true,
                    "phone": [
                      { "value": "12345", "primary": true, "label": "work" }
                    ],
                    "email": [
                      {
                        "value": "12345@email.com",
                        "primary": true,
                        "label": "work"
                      }
                    ],
                    "primary_email": "12345@email.com",
                    "first_char": "w",
                    "update_time": "2020-05-08 05:30:20",
                    "add_time": "2017-10-18 13:23:07",
                    "visible_to": "3",
                    "marketing_status": "no_consent",
                    "picture_id": {
                      "item_type": "person",
                      "item_id": 25,
                      "active_flag": true,
                      "add_time": "2020-09-08 08:17:52",
                      "update_time": "0000-00-00 00:00:00",
                      "added_by_user_id": 967055,
                      "pictures": {
                        "128": "https://pipedrive-profile-pics.s3.example.com/f8893852574273f2747bf6ef09d11cfb4ac8f269_128.jpg",
                        "512": "https://pipedrive-profile-pics.s3.example.com/f8893852574273f2747bf6ef09d11cfb4ac8f269_512.jpg"
                      },
                      "value": 4
                    },
                    "next_activity_date": "2019-11-29",
                    "next_activity_time": "11:30:00",
                    "next_activity_id": 128,
                    "last_activity_id": 34,
                    "last_activity_date": "2019-11-28",
                    "last_incoming_mail_time": "2019-05-29 18:21:42",
                    "last_outgoing_mail_time": "2019-05-30 03:45:35",
                    "label": 1,
                    "org_name": "Organization name",
                    "owner_name": "Jane Doe",
                    "cc_email": "org@pipedrivemail.com"
                  },
                  "related_objects": {
                    "user": {
                      "123": {
                        "id": 123,
                        "name": "Jane Doe",
                        "email": "jane@pipedrive.com",
                        "has_pic": 1,
                        "pic_hash": "2611ace8ac6a3afe2f69ed56f9e08c6b",
                        "active_flag": true
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/persons/search": {
      "get": {
        "summary": "Search persons",
        "description": "Searches all persons by name, email, phone, notes and/or custom fields. This endpoint is a wrapper of <a href=\"https://developers.pipedrive.com/docs/api/v1/ItemSearch#searchItem\">/v1/itemSearch</a> with a narrower OAuth scope. Found persons can be filtered by organization ID.",
        "operationId": "searchPersons",
        "tags": [ "Persons" ],
        "parameters": [
          {
            "in": "query",
            "name": "term",
            "required": true,
            "schema": { "type": "string" },
            "description": "The search term to look for. Minimum 2 characters (or 1 if using `exact_match`). Please note that the search term has to be URL encoded."
          },
          {
            "in": "query",
            "name": "fields",
            "schema": {
              "type": "string",
              "enum": [ "custom_fields", "email", "notes", "phone", "name" ]
            },
            "description": "A comma-separated string array. The fields to perform the search from. Defaults to all of them."
          },
          {
            "in": "query",
            "name": "exact_match",
            "schema": { "type": "boolean", "enum": [ true, false ] },
            "description": "When enabled, only full exact matches against the given term are returned. It is <b>not</b> case sensitive."
          },
          {
            "in": "query",
            "name": "organization_id",
            "schema": { "type": "integer" },
            "description": "Will filter persons by the provided organization ID. The upper limit of found persons associated with the organization is 2000."
          },
          {
            "in": "query",
            "name": "include_fields",
            "schema": { "type": "string", "enum": [ "person.picture" ] },
            "description": "Supports including optional fields in the results which are not provided by default"
          },
          {
            "in": "query",
            "name": "start",
            "schema": { "type": "integer", "default": 0 },
            "description": "Pagination start. Note that the pagination is based on main results and does not include related items when using `search_for_related_items` parameter."
          },
          {
            "in": "query",
            "name": "limit",
            "schema": { "type": "integer" },
            "description": "Items shown per page"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "searchPersons",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "description": "The array of found items",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "result_score": {
                                    "type": "number",
                                    "description": "Search result relevancy"
                                  },
                                  "item": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "integer",
                                        "description": "The ID of the person"
                                      },
                                      "type": {
                                        "type": "string",
                                        "description": "The type of the item"
                                      },
                                      "name": {
                                        "type": "string",
                                        "description": "The name of the person"
                                      },
                                      "phones": {
                                        "type": "array",
                                        "description": "An array of phone numbers",
                                        "items": { "type": "string" }
                                      },
                                      "emails": {
                                        "type": "array",
                                        "description": "An array of email addresses",
                                        "items": { "type": "string" }
                                      },
                                      "visible_to": {
                                        "type": "integer",
                                        "description": "The visibility of the person"
                                      },
                                      "owner": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "integer",
                                            "description": "The ID of the owner of the person"
                                          }
                                        }
                                      },
                                      "organization": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "integer",
                                            "description": "The ID of the organization the person is associated with"
                                          },
                                          "name": {
                                            "type": "string",
                                            "description": "The name of the organization the person is associated with"
                                          }
                                        }
                                      },
                                      "custom_fields": {
                                        "type": "array",
                                        "items": { "type": "string" },
                                        "description": "Custom fields"
                                      },
                                      "notes": {
                                        "type": "array",
                                        "description": "An array of notes",
                                        "items": { "type": "string" }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "additional_data": {
                          "type": "object",
                          "properties": {
                            "pagination": {
                              "description": "Pagination details of the list",
                              "type": "object",
                              "properties": {
                                "start": {
                                  "type": "integer",
                                  "description": "Pagination start"
                                },
                                "limit": {
                                  "type": "integer",
                                  "description": "Items shown per page"
                                },
                                "more_items_in_collection": {
                                  "type": "boolean",
                                  "description": "Whether there are more list items in the collection than displayed"
                                },
                                "next_start": {
                                  "type": "integer",
                                  "description": "Next pagination start"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "success": true,
                  "data": {
                    "items": [
                      {
                        "result_score": 0.5092,
                        "item": {
                          "id": 1,
                          "type": "person",
                          "name": "Jane Doe",
                          "phones": [ "+372 555555555" ],
                          "emails": [ "jane@pipedrive.com" ],
                          "visible_to": 3,
                          "owner": { "id": 1 },
                          "organization": {
                            "id": 1,
                            "name": "Organization name",
                            "address": null
                          },
                          "custom_fields": [ ],
                          "notes": [ ]
                        }
                      }
                    ]
                  },
                  "additional_data": {
                    "pagination": {
                      "start": 0,
                      "limit": 100,
                      "more_items_in_collection": false
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/persons/{id}": {
      "delete": {
        "summary": "Delete a person",
        "description": "Marks a person as deleted. After 30 days, the person will be permanently deleted.",
        "operationId": "deletePerson",
        "tags": [ "Persons" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the person",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "deletePerson",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "description": "The ID of the deleted person"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": { "success": true, "data": { "id": 12 } }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get details of a person",
        "description": "Returns the details of a person. Note that this also returns some additional fields which are not present when asking for all persons. Also note that custom fields appear as long hashes in the resulting data. These hashes can be mapped against the `key` value of personFields.<br>If a company uses the [Campaigns product](https://pipedrive.readme.io/docs/campaigns-in-pipedrive-api), then this endpoint will also return the `data.marketing_status` field.",
        "operationId": "getPerson",
        "tags": [ "Persons" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the person",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "getPerson",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "title": "personItem",
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "description": "The ID of the person"
                                },
                                "company_id": {
                                  "type": "integer",
                                  "description": "The ID of the company related to the person"
                                },
                                "active_flag": {
                                  "type": "boolean",
                                  "description": "Whether the person is active or not"
                                },
                                "phone": {
                                  "type": "array",
                                  "description": "A phone number supplied as a string or an array of phone objects related to the person. The structure of the array is as follows: `[{ \"value\": \"12345\", \"primary\": \"true\", \"label\": \"mobile\" }]`. Please note that only `value` is required.",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "value": {
                                        "type": "string",
                                        "description": "The phone number"
                                      },
                                      "primary": {
                                        "type": "boolean",
                                        "description": "Boolean that indicates if phone number is primary for the person or not"
                                      },
                                      "label": {
                                        "type": "string",
                                        "description": "The label that indicates the type of the phone number. (Possible values - work, home, mobile or other)"
                                      }
                                    }
                                  }
                                },
                                "email": {
                                  "type": "array",
                                  "description": "An email address as a string or an array of email objects related to the person. The structure of the array is as follows: `[{ \"value\": \"mail@example.com\", \"primary\": \"true\", \"label\": \"main\" } ]`. Please note that only `value` is required.",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "value": {
                                        "type": "string",
                                        "description": "Email"
                                      },
                                      "primary": {
                                        "type": "boolean",
                                        "description": "Boolean that indicates if email is primary for the person or not"
                                      },
                                      "label": {
                                        "type": "string",
                                        "description": "The label that indicates the type of the email. (Possible values - work, home or other)"
                                      }
                                    }
                                  }
                                },
                                "first_char": {
                                  "type": "string",
                                  "description": "The first letter of the name of the person"
                                },
                                "add_time": {
                                  "type": "string",
                                  "description": "The date and time when the person was added/created. Format: YYYY-MM-DD HH:MM:SS"
                                },
                                "update_time": {
                                  "type": "string",
                                  "description": "The last updated date and time of the person. Format: YYYY-MM-DD HH:MM:SS"
                                },
                                "visible_to": {
                                  "type": "string",
                                  "description": "The visibility group ID of who can see the person"
                                },
                                "picture_id": {
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "integer",
                                          "description": "The ID of the picture associated with the item"
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "item_type": {
                                          "type": "string",
                                          "description": "The type of item the picture is related to"
                                        },
                                        "item_id": {
                                          "type": "integer",
                                          "description": "The ID of related item"
                                        },
                                        "active_flag": {
                                          "type": "boolean",
                                          "description": "Whether the associated picture is active or not"
                                        },
                                        "add_time": {
                                          "type": "string",
                                          "description": "The add time of the picture"
                                        },
                                        "update_time": {
                                          "type": "string",
                                          "description": "The update time of the picture"
                                        },
                                        "added_by_user_id": {
                                          "type": "integer",
                                          "description": "The ID of the user who added the picture"
                                        },
                                        "pictures": {
                                          "type": "object",
                                          "properties": {
                                            "128": {
                                              "type": "string",
                                              "description": "The URL of the 128*128 picture"
                                            },
                                            "512": {
                                              "type": "string",
                                              "description": "The URL of the 512*512 picture"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  ]
                                },
                                "label": {
                                  "type": "integer",
                                  "description": "The label assigned to the person"
                                },
                                "org_name": {
                                  "type": "string",
                                  "description": "The name of the organization associated with the person"
                                },
                                "owner_name": {
                                  "type": "string",
                                  "description": "The name of the owner associated with the person"
                                },
                                "cc_email": {
                                  "type": "string",
                                  "description": "The BCC email associated with the person"
                                }
                              }
                            },
                            {
                              "type": "object",
                              "title": "additionalPersonInfo",
                              "allOf": [
                                {
                                  "type": "object",
                                  "title": "personNameInfoWithOrgAndOwnerId",
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "owner_id": {
                                          "title": "owner",
                                          "allOf": [
                                            {
                                              "properties": {
                                                "id": {
                                                  "type": "integer",
                                                  "description": "The ID of the user"
                                                },
                                                "name": {
                                                  "type": "string",
                                                  "description": "The name of the user"
                                                },
                                                "email": {
                                                  "type": "string",
                                                  "description": "The email of the user"
                                                },
                                                "has_pic": {
                                                  "type": "integer",
                                                  "description": "Whether the user has picture or not. 0 = No picture, 1 = Has picture."
                                                },
                                                "pic_hash": {
                                                  "type": "string",
                                                  "nullable": true,
                                                  "description": "The user picture hash"
                                                },
                                                "active_flag": {
                                                  "type": "boolean",
                                                  "description": "Whether the user is active or not"
                                                }
                                              }
                                            },
                                            {
                                              "type": "object",
                                              "properties": {
                                                "value": {
                                                  "type": "integer",
                                                  "description": "The ID of the owner"
                                                }
                                              }
                                            }
                                          ]
                                        },
                                        "org_id": {
                                          "title": "relationshipOrganizationInfoItemWithActiveFlag",
                                          "allOf": [
                                            {
                                              "title": "relationshipOrganizationInfoItem",
                                              "allOf": [
                                                {
                                                  "type": "object",
                                                  "properties": {
                                                    "name": {
                                                      "type": "string",
                                                      "description": "The name of the organization associated with the item"
                                                    },
                                                    "people_count": {
                                                      "type": "integer",
                                                      "description": "The number of people connected with the organization that is associated with the item"
                                                    },
                                                    "owner_id": {
                                                      "type": "integer",
                                                      "description": "The ID of the owner of the organization that is associated with the item"
                                                    },
                                                    "address": {
                                                      "type": "string",
                                                      "description": "The address of the organization"
                                                    },
                                                    "cc_email": {
                                                      "type": "string",
                                                      "description": "The BCC email of the organization associated with the item"
                                                    }
                                                  }
                                                },
                                                {
                                                  "type": "object",
                                                  "properties": {
                                                    "value": {
                                                      "type": "integer",
                                                      "description": "The ID of the organization"
                                                    }
                                                  }
                                                }
                                              ]
                                            },
                                            {
                                              "type": "object",
                                              "properties": {
                                                "active_flag": {
                                                  "type": "boolean",
                                                  "description": "Whether the associated organization is active or not"
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "The name of the person"
                                        },
                                        "first_name": {
                                          "type": "string",
                                          "description": "The first name of the person"
                                        },
                                        "last_name": {
                                          "type": "string",
                                          "description": "The last name of the person"
                                        }
                                      }
                                    }
                                  ]
                                },
                                {
                                  "type": "object",
                                  "title": "personCountEmailDealAndActivityInfo",
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "title": "personCountAndEmailInfo",
                                      "allOf": [
                                        {
                                          "type": "object",
                                          "properties": {
                                            "email_messages_count": {
                                              "type": "integer",
                                              "description": "The count of email messages related to the person"
                                            },
                                            "activities_count": {
                                              "type": "integer",
                                              "description": "The count of activities related to the person"
                                            },
                                            "done_activities_count": {
                                              "type": "integer",
                                              "description": "The count of done activities related to the person"
                                            },
                                            "undone_activities_count": {
                                              "type": "integer",
                                              "description": "The count of undone activities related to the person"
                                            },
                                            "files_count": {
                                              "type": "integer",
                                              "description": "The count of files related to the person"
                                            },
                                            "notes_count": {
                                              "type": "integer",
                                              "description": "The count of notes related to the person"
                                            },
                                            "followers_count": {
                                              "type": "integer",
                                              "description": "The count of followers related to the person"
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "properties": {
                                            "last_incoming_mail_time": {
                                              "type": "string",
                                              "description": "The date and time of the last incoming email associated with the person"
                                            },
                                            "last_outgoing_mail_time": {
                                              "type": "string",
                                              "description": "The date and time of the last outgoing email associated with the person"
                                            }
                                          }
                                        }
                                      ]
                                    },
                                    {
                                      "type": "object",
                                      "title": "dealCountAndActivityInfo",
                                      "allOf": [
                                        {
                                          "type": "object",
                                          "properties": {
                                            "open_deals_count": {
                                              "type": "integer",
                                              "description": "The count of open deals related with the item"
                                            },
                                            "related_open_deals_count": {
                                              "type": "integer",
                                              "description": "The count of related open deals related with the item"
                                            },
                                            "closed_deals_count": {
                                              "type": "integer",
                                              "description": "The count of closed deals related with the item"
                                            },
                                            "related_closed_deals_count": {
                                              "type": "integer",
                                              "description": "The count of related closed deals related with the item"
                                            },
                                            "won_deals_count": {
                                              "type": "integer",
                                              "description": "The count of won deals related with the item"
                                            },
                                            "related_won_deals_count": {
                                              "type": "integer",
                                              "description": "The count of related won deals related with the item"
                                            },
                                            "lost_deals_count": {
                                              "type": "integer",
                                              "description": "The count of lost deals related with the item"
                                            },
                                            "related_lost_deals_count": {
                                              "type": "integer",
                                              "description": "The count of related lost deals related with the item"
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "properties": {
                                            "next_activity_date": {
                                              "type": "string",
                                              "description": "The date of the next activity associated with the deal"
                                            },
                                            "next_activity_time": {
                                              "type": "string",
                                              "description": "The time of the next activity associated with the deal"
                                            },
                                            "next_activity_id": {
                                              "type": "integer",
                                              "nullable": true,
                                              "description": "The ID of the next activity associated with the deal"
                                            },
                                            "last_activity_id": {
                                              "type": "integer",
                                              "nullable": true,
                                              "description": "The ID of the last activity associated with the deal"
                                            },
                                            "last_activity_date": {
                                              "type": "string",
                                              "nullable": true,
                                              "description": "The date of the last activity associated with the deal"
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "additional_data": {
                          "type": "object",
                          "properties": {
                            "dropbox_email": {
                              "type": "string",
                              "description": "Dropbox email for the person"
                            }
                          }
                        },
                        "related_objects": {
                          "type": "object",
                          "properties": {
                            "organization": {
                              "type": "object",
                              "properties": {
                                "ORGANIZATION_ID": {
                                  "type": "object",
                                  "description": "The ID of the organization associated with the item",
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "integer",
                                          "description": "The ID of the organization associated with the item"
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "The name of the organization associated with the item"
                                        },
                                        "people_count": {
                                          "type": "integer",
                                          "description": "The number of people connected with the organization that is associated with the item"
                                        },
                                        "owner_id": {
                                          "type": "integer",
                                          "description": "The ID of the owner of the organization that is associated with the item"
                                        },
                                        "address": {
                                          "type": "string",
                                          "description": "The address of the organization"
                                        },
                                        "cc_email": {
                                          "type": "string",
                                          "description": "The BCC email of the organization associated with the item"
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            },
                            "user": {
                              "type": "object",
                              "properties": {
                                "USER_ID": {
                                  "type": "object",
                                  "title": "userDataWithId",
                                  "allOf": [
                                    {
                                      "properties": {
                                        "id": {
                                          "type": "integer",
                                          "description": "The ID of the user"
                                        },
                                        "name": {
                                          "type": "string",
                                          "description": "The name of the user"
                                        },
                                        "email": {
                                          "type": "string",
                                          "description": "The email of the user"
                                        },
                                        "has_pic": {
                                          "type": "integer",
                                          "description": "Whether the user has picture or not. 0 = No picture, 1 = Has picture."
                                        },
                                        "pic_hash": {
                                          "type": "string",
                                          "nullable": true,
                                          "description": "The user picture hash"
                                        },
                                        "active_flag": {
                                          "type": "boolean",
                                          "description": "Whether the user is active or not"
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "description": "The ID of the user"
                                    }
                                  ]
                                }
                              }
                            },
                            "picture": {
                              "type": "object",
                              "description": "The picture that is associated with the item",
                              "properties": {
                                "PICTURE_ID": {
                                  "type": "object",
                                  "description": "The ID of the picture",
                                  "allOf": [
                                    {
                                      "allOf": [
                                        {
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "type": "integer",
                                              "description": "The ID of the picture associated with the item"
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "properties": {
                                            "item_type": {
                                              "type": "string",
                                              "description": "The type of item the picture is related to"
                                            },
                                            "item_id": {
                                              "type": "integer",
                                              "description": "The ID of related item"
                                            },
                                            "active_flag": {
                                              "type": "boolean",
                                              "description": "Whether the associated picture is active or not"
                                            },
                                            "add_time": {
                                              "type": "string",
                                              "description": "The add time of the picture"
                                            },
                                            "update_time": {
                                              "type": "string",
                                              "description": "The update time of the picture"
                                            },
                                            "added_by_user_id": {
                                              "type": "integer",
                                              "description": "The ID of the user who added the picture"
                                            },
                                            "pictures": {
                                              "type": "object",
                                              "properties": {
                                                "128": {
                                                  "type": "string",
                                                  "description": "The URL of the 128*128 picture"
                                                },
                                                "512": {
                                                  "type": "string",
                                                  "description": "The URL of the 512*512 picture"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "success": true,
                  "data": {
                    "id": 1,
                    "company_id": 12,
                    "owner_id": {
                      "id": 123,
                      "name": "Jane Doe",
                      "email": "jane@pipedrive.com",
                      "has_pic": 1,
                      "pic_hash": "2611ace8ac6a3afe2f69ed56f9e08c6b",
                      "active_flag": true,
                      "value": 123
                    },
                    "org_id": {
                      "name": "Org Name",
                      "people_count": 1,
                      "owner_id": 123,
                      "address": "Mustamäe tee 3a, 10615 Tallinn",
                      "active_flag": true,
                      "cc_email": "org@pipedrivemail.com",
                      "value": 1234
                    },
                    "name": "Will Smith",
                    "first_name": "Will",
                    "last_name": "Smith",
                    "open_deals_count": 2,
                    "related_open_deals_count": 2,
                    "closed_deals_count": 3,
                    "related_closed_deals_count": 3,
                    "participant_open_deals_count": 1,
                    "participant_closed_deals_count": 1,
                    "email_messages_count": 1,
                    "activities_count": 1,
                    "done_activities_count": 1,
                    "undone_activities_count": 2,
                    "files_count": 2,
                    "notes_count": 2,
                    "followers_count": 3,
                    "won_deals_count": 3,
                    "related_won_deals_count": 3,
                    "lost_deals_count": 1,
                    "related_lost_deals_count": 1,
                    "active_flag": true,
                    "phone": [
                      { "value": "12345", "primary": true, "label": "work" }
                    ],
                    "email": [
                      {
                        "value": "12345@email.com",
                        "primary": true,
                        "label": "work"
                      }
                    ],
                    "primary_email": "12345@email.com",
                    "first_char": "w",
                    "update_time": "2020-05-08 05:30:20",
                    "add_time": "2017-10-18 13:23:07",
                    "visible_to": "3",
                    "marketing_status": "no_consent",
                    "picture_id": {
                      "item_type": "person",
                      "item_id": 25,
                      "active_flag": true,
                      "add_time": "2020-09-08 08:17:52",
                      "update_time": "0000-00-00 00:00:00",
                      "added_by_user_id": 967055,
                      "pictures": {
                        "128": "https://pipedrive-profile-pics.s3.example.com/f8893852574273f2747bf6ef09d11cfb4ac8f269_128.jpg",
                        "512": "https://pipedrive-profile-pics.s3.example.com/f8893852574273f2747bf6ef09d11cfb4ac8f269_512.jpg"
                      },
                      "value": 4
                    },
                    "next_activity_date": "2019-11-29",
                    "next_activity_time": "11:30:00",
                    "next_activity_id": 128,
                    "last_activity_id": 34,
                    "last_activity_date": "2019-11-28",
                    "last_incoming_mail_time": "2019-05-29 18:21:42",
                    "last_outgoing_mail_time": "2019-05-30 03:45:35",
                    "label": 1,
                    "org_name": "Organization name",
                    "owner_name": "Jane Doe",
                    "cc_email": "org@pipedrivemail.com"
                  },
                  "additional_data": { "dropbox_email": "test@email.com" },
                  "related_objects": {
                    "organization": {
                      "1": {
                        "id": 1,
                        "name": "Org Name",
                        "people_count": 1,
                        "owner_id": 123,
                        "address": "Mustamäe tee 3a, 10615 Tallinn",
                        "active_flag": true,
                        "cc_email": "org@pipedrivemail.com"
                      }
                    },
                    "user": {
                      "123": {
                        "id": 123,
                        "name": "Jane Doe",
                        "email": "jane@pipedrive.com",
                        "has_pic": 1,
                        "pic_hash": "2611ace8ac6a3afe2f69ed56f9e08c6b",
                        "active_flag": true
                      }
                    },
                    "picture": {
                      "1": {
                        "id": 1,
                        "item_type": "person",
                        "item_id": 25,
                        "active_flag": true,
                        "add_time": "2020-09-08 08:17:52",
                        "update_time": "0000-00-00 00:00:00",
                        "added_by_user_id": 967055,
                        "pictures": {
                          "128": "https://pipedrive-profile-pics.s3.example.com/f8893852574273f2747bf6ef09d11cfb4ac8f269_128.jpg",
                          "512": "https://pipedrive-profile-pics.s3.example.com/f8893852574273f2747bf6ef09d11cfb4ac8f269_512.jpg"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update a person",
        "description": "Updates the properties of a person. For more information, see the tutorial for <a href=\"https://pipedrive.readme.io/docs/updating-a-person\" target=\"_blank\" rel=\"noopener noreferrer\">updating a person</a>.<br>If a company uses the [Campaigns product](https://pipedrive.readme.io/docs/campaigns-in-pipedrive-api), then this endpoint will also accept and return the `data.marketing_status` field.",
        "operationId": "updatePerson",
        "tags": [ "Persons" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the person",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "updatePersonRequest",
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The name of the person"
                      }
                    }
                  },
                  {
                    "title": "basicPersonRequest",
                    "type": "object",
                    "properties": {
                      "owner_id": {
                        "type": "integer",
                        "description": "The ID of the user who will be marked as the owner of this person. When omitted, the authorized user ID will be used."
                      },
                      "org_id": {
                        "type": "integer",
                        "description": "The ID of the organization this person will belong to"
                      },
                      "email": {
                        "type": "array",
                        "description": "An email address as a string or an array of email objects related to the person. The structure of the array is as follows: `[{ \"value\": \"mail@example.com\", \"primary\": \"true\", \"label\": \"main\" }]`. Please note that only `value` is required.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "string",
                              "description": "The email"
                            },
                            "primary": {
                              "type": "boolean",
                              "description": "Boolean that indicates if email is primary for the person or not"
                            },
                            "label": {
                              "type": "string",
                              "description": "The label that indicates the type of the email. (Possible values - work, home or other)"
                            }
                          }
                        }
                      },
                      "phone": {
                        "type": "array",
                        "description": "A phone number supplied as a string or an array of phone objects related to the person. The structure of the array is as follows: `[{ \"value\": \"12345\", \"primary\": \"true\", \"label\": \"mobile\" }]`. Please note that only `value` is required.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "string",
                              "description": "The phone number"
                            },
                            "primary": {
                              "type": "boolean",
                              "description": "Boolean that indicates if phone number is primary for the person or not"
                            },
                            "label": {
                              "type": "string",
                              "description": "The label that indicates the type of the phone number. (Possible values - work, home, mobile or other)"
                            }
                          }
                        }
                      },
                      "visible_to": {
                        "type": "string",
                        "allOf": [
                          { "type": "string", "enum": [ "1", "3", "5", "7" ] }
                        ],
                        "description": "The visibility of the person. If omitted, the visibility will be set to the default visibility setting of this item type for the authorized user. Read more about visibility groups <a href=\"https://support.pipedrive.com/en/article/visibility-groups\" target=\"_blank\" rel=\"noopener noreferrer\">here</a>.<h4>Essential / Advanced plan</h4><table><tr><th style=\"width:40px\">Value</th><th>Description</th></tr><tr><td>`1`</td><td>Owner &amp; followers</td><tr><td>`3`</td><td>Entire company</td></tr></table><h4>Professional / Enterprise plan</h4><table><tr><th style=\"width:40px\">Value</th><th>Description</th></tr><tr><td>`1`</td><td>Owner only</td><tr><td>`3`</td><td>Owner's visibility group</td></tr><tr><td>`5`</td><td>Owner's visibility group and sub-groups</td></tr><tr><td>`7`</td><td>Entire company</td></tr></table>"
                      },
                      "marketing_status": {
                        "allOf": [
                          {
                            "type": "string",
                            "enum": [
                              "no_consent",
                              "unsubscribed",
                              "subscribed",
                              "archived"
                            ]
                          }
                        ],
                        "description": "If the person does not have a valid email address, then the marketing status is **not set** and `no_consent` is returned for the `marketing_status` value when the new person is created. If the change is forbidden, the status will remain unchanged for every call that tries to modify the marketing status. Please be aware that it is only allowed **once** to change the marketing status from an old status to a new one.<table><tr><th>Value</th><th>Description</th></tr><tr><td>`no_consent`</td><td>The customer has not given consent to receive any marketing communications</td></tr><tr><td>`unsubscribed`</td><td>The customers have unsubscribed from ALL marketing communications</td></tr><tr><td>`subscribed`</td><td>The customers are subscribed and are counted towards marketing caps</td></tr><tr><td>`archived`</td><td>The customers with `subscribed` status can be moved to `archived` to save consent, but they are not paid for</td></tr></table>"
                      },
                      "add_time": {
                        "type": "string",
                        "description": "The optional creation date & time of the person in UTC. Requires admin user API token. Format: YYYY-MM-DD HH:MM:SS"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "updatePerson",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "title": "personItem",
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "description": "The ID of the person"
                                },
                                "company_id": {
                                  "type": "integer",
                                  "description": "The ID of the company related to the person"
                                },
                                "active_flag": {
                                  "type": "boolean",
                                  "description": "Whether the person is active or not"
                                },
                                "phone": {
                                  "type": "array",
                                  "description": "A phone number supplied as a string or an array of phone objects related to the person. The structure of the array is as follows: `[{ \"value\": \"12345\", \"primary\": \"true\", \"label\": \"mobile\" }]`. Please note that only `value` is required.",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "value": {
                                        "type": "string",
                                        "description": "The phone number"
                                      },
                                      "primary": {
                                        "type": "boolean",
                                        "description": "Boolean that indicates if phone number is primary for the person or not"
                                      },
                                      "label": {
                                        "type": "string",
                                        "description": "The label that indicates the type of the phone number. (Possible values - work, home, mobile or other)"
                                      }
                                    }
                                  }
                                },
                                "email": {
                                  "type": "array",
                                  "description": "An email address as a string or an array of email objects related to the person. The structure of the array is as follows: `[{ \"value\": \"mail@example.com\", \"primary\": \"true\", \"label\": \"main\" } ]`. Please note that only `value` is required.",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "value": {
                                        "type": "string",
                                        "description": "Email"
                                      },
                                      "primary": {
                                        "type": "boolean",
                                        "description": "Boolean that indicates if email is primary for the person or not"
                                      },
                                      "label": {
                                        "type": "string",
                                        "description": "The label that indicates the type of the email. (Possible values - work, home or other)"
                                      }
                                    }
                                  }
                                },
                                "first_char": {
                                  "type": "string",
                                  "description": "The first letter of the name of the person"
                                },
                                "add_time": {
                                  "type": "string",
                                  "description": "The date and time when the person was added/created. Format: YYYY-MM-DD HH:MM:SS"
                                },
                                "update_time": {
                                  "type": "string",
                                  "description": "The last updated date and time of the person. Format: YYYY-MM-DD HH:MM:SS"
                                },
                                "visible_to": {
                                  "type": "string",
                                  "description": "The visibility group ID of who can see the person"
                                },
                                "picture_id": {
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "integer",
                                          "description": "The ID of the picture associated with the item"
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "item_type": {
                                          "type": "string",
                                          "description": "The type of item the picture is related to"
                                        },
                                        "item_id": {
                                          "type": "integer",
                                          "description": "The ID of related item"
                                        },
                                        "active_flag": {
                                          "type": "boolean",
                                          "description": "Whether the associated picture is active or not"
                                        },
                                        "add_time": {
                                          "type": "string",
                                          "description": "The add time of the picture"
                                        },
                                        "update_time": {
                                          "type": "string",
                                          "description": "The update time of the picture"
                                        },
                                        "added_by_user_id": {
                                          "type": "integer",
                                          "description": "The ID of the user who added the picture"
                                        },
                                        "pictures": {
                                          "type": "object",
                                          "properties": {
                                            "128": {
                                              "type": "string",
                                              "description": "The URL of the 128*128 picture"
                                            },
                                            "512": {
                                              "type": "string",
                                              "description": "The URL of the 512*512 picture"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  ]
                                },
                                "label": {
                                  "type": "integer",
                                  "description": "The label assigned to the person"
                                },
                                "org_name": {
                                  "type": "string",
                                  "description": "The name of the organization associated with the person"
                                },
                                "owner_name": {
                                  "type": "string",
                                  "description": "The name of the owner associated with the person"
                                },
                                "cc_email": {
                                  "type": "string",
                                  "description": "The BCC email associated with the person"
                                }
                              }
                            },
                            {
                              "type": "object",
                              "title": "additionalPersonInfo",
                              "allOf": [
                                {
                                  "type": "object",
                                  "title": "personNameInfoWithOrgAndOwnerId",
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "owner_id": {
                                          "title": "owner",
                                          "allOf": [
                                            {
                                              "properties": {
                                                "id": {
                                                  "type": "integer",
                                                  "description": "The ID of the user"
                                                },
                                                "name": {
                                                  "type": "string",
                                                  "description": "The name of the user"
                                                },
                                                "email": {
                                                  "type": "string",
                                                  "description": "The email of the user"
                                                },
                                                "has_pic": {
                                                  "type": "integer",
                                                  "description": "Whether the user has picture or not. 0 = No picture, 1 = Has picture."
                                                },
                                                "pic_hash": {
                                                  "type": "string",
                                                  "nullable": true,
                                                  "description": "The user picture hash"
                                                },
                                                "active_flag": {
                                                  "type": "boolean",
                                                  "description": "Whether the user is active or not"
                                                }
                                              }
                                            },
                                            {
                                              "type": "object",
                                              "properties": {
                                                "value": {
                                                  "type": "integer",
                                                  "description": "The ID of the owner"
                                                }
                                              }
                                            }
                                          ]
                                        },
                                        "org_id": {
                                          "title": "relationshipOrganizationInfoItemWithActiveFlag",
                                          "allOf": [
                                            {
                                              "title": "relationshipOrganizationInfoItem",
                                              "allOf": [
                                                {
                                                  "type": "object",
                                                  "properties": {
                                                    "name": {
                                                      "type": "string",
                                                      "description": "The name of the organization associated with the item"
                                                    },
                                                    "people_count": {
                                                      "type": "integer",
                                                      "description": "The number of people connected with the organization that is associated with the item"
                                                    },
                                                    "owner_id": {
                                                      "type": "integer",
                                                      "description": "The ID of the owner of the organization that is associated with the item"
                                                    },
                                                    "address": {
                                                      "type": "string",
                                                      "description": "The address of the organization"
                                                    },
                                                    "cc_email": {
                                                      "type": "string",
                                                      "description": "The BCC email of the organization associated with the item"
                                                    }
                                                  }
                                                },
                                                {
                                                  "type": "object",
                                                  "properties": {
                                                    "value": {
                                                      "type": "integer",
                                                      "description": "The ID of the organization"
                                                    }
                                                  }
                                                }
                                              ]
                                            },
                                            {
                                              "type": "object",
                                              "properties": {
                                                "active_flag": {
                                                  "type": "boolean",
                                                  "description": "Whether the associated organization is active or not"
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "The name of the person"
                                        },
                                        "first_name": {
                                          "type": "string",
                                          "description": "The first name of the person"
                                        },
                                        "last_name": {
                                          "type": "string",
                                          "description": "The last name of the person"
                                        }
                                      }
                                    }
                                  ]
                                },
                                {
                                  "type": "object",
                                  "title": "personCountEmailDealAndActivityInfo",
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "title": "personCountAndEmailInfo",
                                      "allOf": [
                                        {
                                          "type": "object",
                                          "properties": {
                                            "email_messages_count": {
                                              "type": "integer",
                                              "description": "The count of email messages related to the person"
                                            },
                                            "activities_count": {
                                              "type": "integer",
                                              "description": "The count of activities related to the person"
                                            },
                                            "done_activities_count": {
                                              "type": "integer",
                                              "description": "The count of done activities related to the person"
                                            },
                                            "undone_activities_count": {
                                              "type": "integer",
                                              "description": "The count of undone activities related to the person"
                                            },
                                            "files_count": {
                                              "type": "integer",
                                              "description": "The count of files related to the person"
                                            },
                                            "notes_count": {
                                              "type": "integer",
                                              "description": "The count of notes related to the person"
                                            },
                                            "followers_count": {
                                              "type": "integer",
                                              "description": "The count of followers related to the person"
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "properties": {
                                            "last_incoming_mail_time": {
                                              "type": "string",
                                              "description": "The date and time of the last incoming email associated with the person"
                                            },
                                            "last_outgoing_mail_time": {
                                              "type": "string",
                                              "description": "The date and time of the last outgoing email associated with the person"
                                            }
                                          }
                                        }
                                      ]
                                    },
                                    {
                                      "type": "object",
                                      "title": "dealCountAndActivityInfo",
                                      "allOf": [
                                        {
                                          "type": "object",
                                          "properties": {
                                            "open_deals_count": {
                                              "type": "integer",
                                              "description": "The count of open deals related with the item"
                                            },
                                            "related_open_deals_count": {
                                              "type": "integer",
                                              "description": "The count of related open deals related with the item"
                                            },
                                            "closed_deals_count": {
                                              "type": "integer",
                                              "description": "The count of closed deals related with the item"
                                            },
                                            "related_closed_deals_count": {
                                              "type": "integer",
                                              "description": "The count of related closed deals related with the item"
                                            },
                                            "won_deals_count": {
                                              "type": "integer",
                                              "description": "The count of won deals related with the item"
                                            },
                                            "related_won_deals_count": {
                                              "type": "integer",
                                              "description": "The count of related won deals related with the item"
                                            },
                                            "lost_deals_count": {
                                              "type": "integer",
                                              "description": "The count of lost deals related with the item"
                                            },
                                            "related_lost_deals_count": {
                                              "type": "integer",
                                              "description": "The count of related lost deals related with the item"
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "properties": {
                                            "next_activity_date": {
                                              "type": "string",
                                              "description": "The date of the next activity associated with the deal"
                                            },
                                            "next_activity_time": {
                                              "type": "string",
                                              "description": "The time of the next activity associated with the deal"
                                            },
                                            "next_activity_id": {
                                              "type": "integer",
                                              "nullable": true,
                                              "description": "The ID of the next activity associated with the deal"
                                            },
                                            "last_activity_id": {
                                              "type": "integer",
                                              "nullable": true,
                                              "description": "The ID of the last activity associated with the deal"
                                            },
                                            "last_activity_date": {
                                              "type": "string",
                                              "nullable": true,
                                              "description": "The date of the last activity associated with the deal"
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "related_objects": {
                          "type": "object",
                          "properties": {
                            "user": {
                              "type": "object",
                              "properties": {
                                "USER_ID": {
                                  "type": "object",
                                  "title": "userDataWithId",
                                  "allOf": [
                                    {
                                      "properties": {
                                        "id": {
                                          "type": "integer",
                                          "description": "The ID of the user"
                                        },
                                        "name": {
                                          "type": "string",
                                          "description": "The name of the user"
                                        },
                                        "email": {
                                          "type": "string",
                                          "description": "The email of the user"
                                        },
                                        "has_pic": {
                                          "type": "integer",
                                          "description": "Whether the user has picture or not. 0 = No picture, 1 = Has picture."
                                        },
                                        "pic_hash": {
                                          "type": "string",
                                          "nullable": true,
                                          "description": "The user picture hash"
                                        },
                                        "active_flag": {
                                          "type": "boolean",
                                          "description": "Whether the user is active or not"
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "description": "The ID of the user"
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "success": true,
                  "data": {
                    "id": 1,
                    "company_id": 12,
                    "owner_id": {
                      "id": 123,
                      "name": "Jane Doe",
                      "email": "jane@pipedrive.com",
                      "has_pic": 1,
                      "pic_hash": "2611ace8ac6a3afe2f69ed56f9e08c6b",
                      "active_flag": true,
                      "value": 123
                    },
                    "org_id": {
                      "name": "Org Name",
                      "people_count": 1,
                      "owner_id": 123,
                      "address": "Mustamäe tee 3a, 10615 Tallinn",
                      "active_flag": true,
                      "cc_email": "org@pipedrivemail.com",
                      "value": 1234
                    },
                    "name": "Will Smith",
                    "first_name": "Will",
                    "last_name": "Smith",
                    "open_deals_count": 2,
                    "related_open_deals_count": 2,
                    "closed_deals_count": 3,
                    "related_closed_deals_count": 3,
                    "participant_open_deals_count": 1,
                    "participant_closed_deals_count": 1,
                    "email_messages_count": 1,
                    "activities_count": 1,
                    "done_activities_count": 1,
                    "undone_activities_count": 2,
                    "files_count": 2,
                    "notes_count": 2,
                    "followers_count": 3,
                    "won_deals_count": 3,
                    "related_won_deals_count": 3,
                    "lost_deals_count": 1,
                    "related_lost_deals_count": 1,
                    "active_flag": true,
                    "phone": [
                      { "value": "12345", "primary": true, "label": "work" }
                    ],
                    "email": [
                      {
                        "value": "12345@email.com",
                        "primary": true,
                        "label": "work"
                      }
                    ],
                    "primary_email": "12345@email.com",
                    "first_char": "w",
                    "update_time": "2020-05-08 05:30:20",
                    "add_time": "2017-10-18 13:23:07",
                    "visible_to": "3",
                    "marketing_status": "no_consent",
                    "picture_id": {
                      "item_type": "person",
                      "item_id": 25,
                      "active_flag": true,
                      "add_time": "2020-09-08 08:17:52",
                      "update_time": "0000-00-00 00:00:00",
                      "added_by_user_id": 967055,
                      "pictures": {
                        "128": "https://pipedrive-profile-pics.s3.example.com/f8893852574273f2747bf6ef09d11cfb4ac8f269_128.jpg",
                        "512": "https://pipedrive-profile-pics.s3.example.com/f8893852574273f2747bf6ef09d11cfb4ac8f269_512.jpg"
                      },
                      "value": 4
                    },
                    "next_activity_date": "2019-11-29",
                    "next_activity_time": "11:30:00",
                    "next_activity_id": 128,
                    "last_activity_id": 34,
                    "last_activity_date": "2019-11-28",
                    "last_incoming_mail_time": "2019-05-29 18:21:42",
                    "last_outgoing_mail_time": "2019-05-30 03:45:35",
                    "label": 1,
                    "org_name": "Organization name",
                    "owner_name": "Jane Doe",
                    "cc_email": "org@pipedrivemail.com"
                  },
                  "related_objects": {
                    "user": {
                      "123": {
                        "id": 123,
                        "name": "Jane Doe",
                        "email": "jane@pipedrive.com",
                        "has_pic": 1,
                        "pic_hash": "2611ace8ac6a3afe2f69ed56f9e08c6b",
                        "active_flag": true
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/persons/{id}/activities": {
      "get": {
        "summary": "List activities associated with a person",
        "description": "Lists activities associated with a person.",
        "operationId": "getPersonActivities",
        "tags": [ "Persons" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the person",
            "required": true,
            "schema": { "type": "integer" }
          },
          {
            "in": "query",
            "name": "start",
            "description": "Pagination start",
            "schema": { "type": "integer", "default": 0 }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Items shown per page",
            "schema": { "type": "integer" }
          },
          {
            "in": "query",
            "name": "done",
            "schema": {
              "title": "numberBoolean",
              "type": "number",
              "enum": [ 0, 1 ]
            },
            "description": "Whether the activity is done or not. 0 = Not done, 1 = Done. If omitted, returns both Done and Not done activities."
          },
          {
            "in": "query",
            "name": "exclude",
            "schema": { "type": "string" },
            "description": "A comma-separated string of activity IDs to exclude from result"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "getAssociatedActivities",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "title": "activityResponseObject",
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "due_date": {
                                    "description": "The due date of the activity. Format: YYYY-MM-DD",
                                    "type": "string",
                                    "format": "date"
                                  },
                                  "due_time": {
                                    "description": "The due time of the activity in UTC. Format: HH:MM",
                                    "type": "string"
                                  },
                                  "duration": {
                                    "description": "The duration of the activity. Format: HH:MM",
                                    "type": "string"
                                  },
                                  "deal_id": {
                                    "description": "The ID of the deal this activity is associated with",
                                    "type": "integer"
                                  },
                                  "lead_id": {
                                    "description": "The ID of the lead this activity is associated with",
                                    "type": "string"
                                  },
                                  "person_id": {
                                    "description": "The ID of the person this activity is associated with",
                                    "type": "integer"
                                  },
                                  "org_id": {
                                    "description": "The ID of the organization this activity is associated with",
                                    "type": "integer"
                                  },
                                  "note": {
                                    "description": "The note of the activity (HTML format)",
                                    "type": "string"
                                  },
                                  "location": {
                                    "description": "The address of the activity. Pipedrive will automatically check if the location matches a geo-location on Google maps.",
                                    "type": "string"
                                  },
                                  "public_description": {
                                    "description": "Additional details about the activity that is synced to your external calendar. Unlike the note added to the activity, the description is publicly visible to any guests added to the activity.",
                                    "type": "string"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "integer",
                                    "description": "The activity ID, generated when the activity was created"
                                  },
                                  "done": {
                                    "type": "boolean",
                                    "description": "Whether the activity is done or not"
                                  },
                                  "subject": {
                                    "description": "The subject of the activity",
                                    "type": "string"
                                  },
                                  "type": {
                                    "description": "The type of the activity. This is in correlation with the `key_string` parameter of ActivityTypes.",
                                    "type": "string"
                                  },
                                  "user_id": {
                                    "description": "The ID of the user whom the activity is assigned to",
                                    "type": "integer"
                                  },
                                  "participants": {
                                    "description": "List of multiple persons (participants) this activity is associated with",
                                    "type": "array",
                                    "nullable": true,
                                    "items": { "type": "object" }
                                  },
                                  "busy_flag": {
                                    "description": "Marks if the activity is set as 'Busy' or 'Free'. If the flag is set to `true`, your customers will not be able to book that time slot through any Scheduler links. The flag can also be unset. When the value of the flag is unset (`null`), the flag defaults to 'Busy' if it has a time set, and 'Free' if it is an all-day event without specified time.",
                                    "type": "boolean",
                                    "enum": [ true, false ]
                                  },
                                  "attendees": {
                                    "description": "The attendees of the activity. This can be either your existing Pipedrive contacts or an external email address.",
                                    "type": "array",
                                    "nullable": true,
                                    "items": { "type": "object" }
                                  },
                                  "company_id": {
                                    "type": "integer",
                                    "description": "The user's company ID"
                                  },
                                  "reference_type": {
                                    "type": "string",
                                    "description": "If the activity references some other object, it is indicated here. For example, value `Salesphone` refers to activities created with Caller."
                                  },
                                  "reference_id": {
                                    "type": "integer",
                                    "description": "Together with the `reference_type`, gives the ID of the other object"
                                  },
                                  "conference_meeting_client": {
                                    "type": "string",
                                    "description": "The ID of Marketplace app, which is connected to this activity"
                                  },
                                  "conference_meeting_url": {
                                    "type": "string",
                                    "description": "The link to join the meeting which is associated with this activity"
                                  },
                                  "conference_meeting_id": {
                                    "type": "string",
                                    "description": "The meeting ID of the meeting provider (Zoom, MS Teams etc.) that is associated with this activity"
                                  },
                                  "add_time": {
                                    "type": "string",
                                    "description": "The creation date and time of the activity in UTC. Format: YYYY-MM-DD HH:MM:SS."
                                  },
                                  "marked_as_done_time": {
                                    "type": "string",
                                    "description": "The date and time this activity was marked as done. Format: YYYY-MM-DD HH:MM:SS."
                                  },
                                  "last_notification_time": {
                                    "type": "string",
                                    "description": "The date and time of latest notifications sent about this activity to the participants or the attendees of this activity"
                                  },
                                  "last_notification_user_id": {
                                    "type": "integer",
                                    "description": "The ID of the user who triggered the sending of the latest notifications about this activity to the participants or the attendees of this activity"
                                  },
                                  "notification_language_id": {
                                    "type": "integer",
                                    "description": "The ID of the language the notifications are sent in"
                                  },
                                  "lead_id": {
                                    "description": "The ID of the lead in the UUID format this activity is associated with",
                                    "type": "string",
                                    "format": "uuid"
                                  },
                                  "active_flag": {
                                    "type": "boolean",
                                    "description": "Whether the activity is active or not"
                                  },
                                  "update_time": {
                                    "type": "string",
                                    "description": "The last update date and time of the activity. Format: YYYY-MM-DD HH:MM:SS."
                                  },
                                  "update_user_id": {
                                    "description": "The ID of the user who was the last to update this activity",
                                    "type": "integer"
                                  },
                                  "gcal_event_id": {
                                    "type": "string",
                                    "description": "For the activity which syncs to Google calendar, this is the Google event ID. NB! This field is related to old Google calendar sync and will be deprecated soon."
                                  },
                                  "google_calendar_id": {
                                    "type": "string",
                                    "description": "The Google calendar ID that this activity syncs to. NB! This field is related to old Google calendar sync and will be deprecated soon."
                                  },
                                  "google_calendar_etag": {
                                    "type": "string",
                                    "description": "The Google calendar API etag (version) that is used for syncing this activity. NB! This field is related to old Google calendar sync and will be deprecated soon."
                                  },
                                  "calendar_sync_include_context": {
                                    "type": "string",
                                    "description": "For activities that sync to an external calendar, this setting indicates if the activity syncs with context (what are the deals, persons, organizations this activity is related to)"
                                  },
                                  "source_timezone": {
                                    "type": "string",
                                    "description": "The timezone the activity was created in an external calendar"
                                  },
                                  "rec_rule": {
                                    "type": "string",
                                    "description": "The rule for the recurrence of the activity. Is important for activities synced into Pipedrive from an external calendar. Example: \"RRULE:FREQ=WEEKLY;BYDAY=WE\""
                                  },
                                  "rec_rule_extension": {
                                    "type": "string",
                                    "description": "Additional rules for the recurrence of the activity, extend the `rec_rule`. Is important for activities synced into Pipedrive from an external calendar."
                                  },
                                  "rec_master_activity_id": {
                                    "type": "integer",
                                    "description": "The ID of parent activity for a recurrent activity if the current activity is an exception to recurrence rules"
                                  },
                                  "series": {
                                    "description": "The list of recurring activity instances. It is in a structure as follows: `[{due_date: \"2020-06-24\", due_time: \"10:00:00\"}]`",
                                    "type": "array",
                                    "items": { "type": "object" }
                                  },
                                  "created_by_user_id": {
                                    "description": "The ID of the user who created the activity",
                                    "type": "integer"
                                  },
                                  "location_subpremise": {
                                    "type": "string",
                                    "description": "Subfield of location field. Indicates apartment/suite number."
                                  },
                                  "location_street_number": {
                                    "type": "string",
                                    "description": "Subfield of location field. Indicates house number."
                                  },
                                  "location_route": {
                                    "type": "string",
                                    "description": "Subfield of location field. Indicates street name."
                                  },
                                  "location_sublocality": {
                                    "type": "string",
                                    "description": "Subfield of location field. Indicates district/sublocality."
                                  },
                                  "location_locality": {
                                    "type": "string",
                                    "description": "Subfield of location field. Indicates city/town/village/locality."
                                  },
                                  "location_admin_area_level_1": {
                                    "type": "string",
                                    "description": "Subfield of location field. Indicates state/county."
                                  },
                                  "location_admin_area_level_2": {
                                    "type": "string",
                                    "description": "Subfield of location field. Indicates region."
                                  },
                                  "location_country": {
                                    "type": "string",
                                    "description": "Subfield of location field. Indicates country."
                                  },
                                  "location_postal_code": {
                                    "type": "string",
                                    "description": "Subfield of location field. Indicates ZIP/postal code."
                                  },
                                  "location_formatted_address": {
                                    "type": "string",
                                    "description": "Subfield of location field. Indicates full/combined address."
                                  },
                                  "org_name": {
                                    "description": "The name of the organization this activity is associated with",
                                    "type": "string"
                                  },
                                  "person_name": {
                                    "description": "The name of the person this activity is associated with",
                                    "type": "string"
                                  },
                                  "deal_title": {
                                    "description": "The name of the deal this activity is associated with",
                                    "type": "string"
                                  },
                                  "owner_name": {
                                    "description": "The name of the user this activity is owned by",
                                    "type": "string"
                                  },
                                  "person_dropbox_bcc": {
                                    "type": "string",
                                    "description": "The BCC email address of the person"
                                  },
                                  "deal_dropbox_bcc": {
                                    "type": "string",
                                    "description": "The BCC email address of the deal"
                                  },
                                  "assigned_to_user_id": {
                                    "description": "The ID of the user to whom the activity is assigned to. Equal to `user_id`.",
                                    "type": "integer"
                                  },
                                  "file": {
                                    "type": "object",
                                    "description": "The file that is attached to this activity. For example, this can be a reference to an audio note file generated with Pipedrive mobile app."
                                  }
                                }
                              }
                            ]
                          },
                          "description": "The array of activities"
                        },
                        "additional_data": {
                          "title": "activityDistributionDataWithAdditionalData",
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "activity_distribution": {
                                  "description": "The distribution of activities related to the organization grouped by the user ID",
                                  "type": "object",
                                  "properties": {
                                    "ASSIGNED_TO_USER_ID": {
                                      "description": "The ID of the user",
                                      "type": "object",
                                      "properties": {
                                        "activities": {
                                          "description": "The count of activities related to the user grouped by activity type",
                                          "type": "object",
                                          "properties": {
                                            "ACTIVITY_TYPE_NAME": {
                                              "description": "The count of activities related to a specific type",
                                              "type": "integer"
                                            }
                                          }
                                        },
                                        "name": {
                                          "type": "string",
                                          "description": "The name of the user"
                                        },
                                        "activity_count": {
                                          "type": "integer",
                                          "description": "The overall count of activities for the user"
                                        },
                                        "share": {
                                          "type": "integer",
                                          "description": "The percentage of activities belongs to the user"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            {
                              "description": "The additional data of the list",
                              "type": "object",
                              "properties": {
                                "start": {
                                  "type": "integer",
                                  "description": "Pagination start"
                                },
                                "limit": {
                                  "type": "integer",
                                  "description": "Items shown per page"
                                },
                                "more_items_in_collection": {
                                  "type": "boolean",
                                  "description": "If there are more list items in the collection than displayed or not"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "success": true,
                  "data": [
                    {
                      "id": 8,
                      "company_id": 22122,
                      "user_id": 1234,
                      "done": false,
                      "type": "deadline",
                      "reference_type": "scheduler-service",
                      "reference_id": 7,
                      "conference_meeting_client": "871b8bc88d3a1202",
                      "conference_meeting_url": "https://pipedrive.zoom.us/link",
                      "conference_meeting_id": "01758746701",
                      "due_date": "2020-06-09",
                      "due_time": "10:00",
                      "duration": "01:00",
                      "busy_flag": true,
                      "add_time": "2020-06-08 12:37:56",
                      "marked_as_done_time": "2020-08-08 08:08:38",
                      "last_notification_time": "2020-08-08 12:37:56",
                      "last_notification_user_id": 7655,
                      "notification_language_id": 1,
                      "subject": "Deadline",
                      "public_description": "This is a description",
                      "calendar_sync_include_context": "",
                      "location": "Mustamäe tee 3, Tallinn, Estonia",
                      "org_id": 5,
                      "person_id": 1101,
                      "deal_id": 300,
                      "lead_id": "46c3b0e1-db35-59ca-1828-4817378dff71",
                      "active_flag": true,
                      "update_time": "2020-08-08 12:37:56",
                      "update_user_id": 5596,
                      "gcal_event_id": "",
                      "google_calendar_id": "",
                      "google_calendar_etag": "",
                      "source_timezone": "",
                      "rec_rule": "RRULE:FREQ=WEEKLY;BYDAY=WE",
                      "rec_rule_extension": "",
                      "rec_master_activity_id": 1,
                      "series": [ ],
                      "note": "A note for the activity",
                      "created_by_user_id": 1234,
                      "location_subpremise": "",
                      "location_street_number": "3",
                      "location_route": "Mustamäe tee",
                      "location_sublocality": "Kristiine",
                      "location_locality": "Tallinn",
                      "location_admin_area_level_1": "Harju maakond",
                      "location_admin_area_level_2": "",
                      "location_country": "Estonia",
                      "location_postal_code": "10616",
                      "location_formatted_address": "Mustamäe tee 3, 10616 Tallinn, Estonia",
                      "attendees": [
                        {
                          "email_address": "attendee@pipedrivemail.com",
                          "is_organizer": 0,
                          "name": "Attendee",
                          "person_id": 25312,
                          "status": "noreply",
                          "user_id": null
                        }
                      ],
                      "participants": [
                        { "person_id": 17985, "primary_flag": false },
                        { "person_id": 1101, "primary_flag": true }
                      ],
                      "org_name": "Organization",
                      "person_name": "Person",
                      "deal_title": "Deal",
                      "owner_name": "Creator",
                      "person_dropbox_bcc": "company@pipedrivemail.com",
                      "deal_dropbox_bcc": "company+deal300@pipedrivemail.com",
                      "assigned_to_user_id": 1235,
                      "file": {
                        "id": "376892,",
                        "clean_name": "Audio 10:55:07.m4a",
                        "url": "https://pipedrive-files.s3-eu-west-1.amazonaws.com/Audio-recording.m4a"
                      }
                    }
                  ],
                  "additional_data": {
                    "allOf": [
                      {
                        "activity_distribution": {
                          "8877": {
                            "activities": { "call": 2, "meeting": 1 },
                            "name": "Will Smith",
                            "activity_count": 3,
                            "share": 100
                          }
                        }
                      },
                      {
                        "pagination": {
                          "start": 0,
                          "limit": 100,
                          "more_items_in_collection": true
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/persons/{id}/deals": {
      "get": {
        "summary": "List deals associated with a person",
        "description": "Lists deals associated with a person.",
        "operationId": "getPersonDeals",
        "tags": [ "Persons" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the person",
            "required": true,
            "schema": { "type": "integer" }
          },
          {
            "in": "query",
            "name": "start",
            "description": "Pagination start",
            "schema": { "type": "integer", "default": 0 }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Items shown per page",
            "schema": { "type": "integer" }
          },
          {
            "in": "query",
            "name": "status",
            "schema": {
              "type": "string",
              "default": "all_not_deleted",
              "enum": [ "open", "won", "lost", "deleted", "all_not_deleted" ]
            },
            "description": "Only fetch deals with a specific status. If omitted, all not deleted deals are returned. If set to deleted, deals that have been deleted up to 30 days ago will be included."
          },
          {
            "in": "query",
            "name": "sort",
            "schema": { "type": "string" },
            "description": "The field names and sorting mode separated by a comma (`field_name_1 ASC`, `field_name_2 DESC`). Only first-level field keys are supported (no nested keys)."
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "getAssociatedDeals",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "title": "dealNonStrict",
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "integer",
                                    "description": "The ID of the deal"
                                  },
                                  "creator_user_id": {
                                    "type": "object",
                                    "description": "The creator of the deal",
                                    "properties": {
                                      "id": {
                                        "type": "integer",
                                        "description": "The ID of the deal creator"
                                      },
                                      "name": {
                                        "type": "string",
                                        "description": "The name of the deal creator"
                                      },
                                      "email": {
                                        "type": "string",
                                        "description": "The email of the deal creator"
                                      },
                                      "has_pic": {
                                        "type": "boolean",
                                        "description": "If the creator has a picture or not"
                                      },
                                      "pic_hash": {
                                        "type": "string",
                                        "nullable": true,
                                        "description": "The creator picture hash"
                                      },
                                      "active_flag": {
                                        "type": "boolean",
                                        "description": "Whether the creator is active or not"
                                      },
                                      "value": {
                                        "type": "integer",
                                        "description": "The ID of the deal creator"
                                      }
                                    }
                                  },
                                  "user_id": {
                                    "title": "dealUserDataWithId",
                                    "allOf": [
                                      {
                                        "description": "The user who is associated with the deal",
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "integer",
                                            "description": "The ID of the user"
                                          },
                                          "name": {
                                            "type": "string",
                                            "description": "The name of the user"
                                          },
                                          "email": {
                                            "type": "string",
                                            "description": "The email of the user"
                                          },
                                          "has_pic": {
                                            "type": "boolean",
                                            "description": "If the user has a picture or not"
                                          },
                                          "pic_hash": {
                                            "type": "string",
                                            "nullable": true,
                                            "description": "The user picture hash"
                                          },
                                          "active_flag": {
                                            "type": "boolean",
                                            "description": "Whether the user is active or not"
                                          }
                                        }
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "value": {
                                            "type": "integer",
                                            "description": "The ID of the user"
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  "person_id": {
                                    "title": "dealPersonDataWithId",
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "description": "The person who is associated with the deal",
                                        "properties": {
                                          "active_flag": {
                                            "type": "boolean",
                                            "description": "Whether the associated person is active or not"
                                          },
                                          "name": {
                                            "type": "string",
                                            "description": "The name of the person associated with the deal"
                                          },
                                          "email": {
                                            "type": "array",
                                            "description": "The emails of the person associated with the deal",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "label": {
                                                  "type": "string",
                                                  "description": "The type of the email"
                                                },
                                                "value": {
                                                  "type": "string",
                                                  "description": "The email of the associated person"
                                                },
                                                "primary": {
                                                  "type": "boolean",
                                                  "description": "If this is the primary email or not"
                                                }
                                              }
                                            }
                                          },
                                          "phone": {
                                            "type": "array",
                                            "description": "The phone numbers of the person associated with the deal",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "label": {
                                                  "type": "string",
                                                  "description": "The type of the phone number"
                                                },
                                                "value": {
                                                  "type": "string",
                                                  "description": "The phone number of the person associated with the deal"
                                                },
                                                "primary": {
                                                  "type": "boolean",
                                                  "description": "If this is the primary phone number or not"
                                                }
                                              }
                                            }
                                          },
                                          "owner_id": {
                                            "type": "integer",
                                            "description": "The ID of the owner of the person that is associated with the deal"
                                          }
                                        }
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "value": {
                                            "type": "integer",
                                            "description": "The ID of the person associated with the deal"
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  "org_id": {
                                    "title": "dealOrganizationDataWithId",
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "description": "The organization which is associated with the deal",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "description": "The name of the organization associated with the deal"
                                          },
                                          "people_count": {
                                            "type": "integer",
                                            "description": "The number of people connected with the organization that is associated with the deal"
                                          },
                                          "owner_id": {
                                            "type": "integer",
                                            "description": "The ID of the owner of the organization that is associated with the deal"
                                          },
                                          "address": {
                                            "type": "string",
                                            "description": "The address of the organization that is associated with the deal"
                                          },
                                          "active_flag": {
                                            "type": "boolean",
                                            "description": "Whether the associated organization is active or not"
                                          },
                                          "cc_email": {
                                            "type": "string",
                                            "description": "The BCC email of the organization associated with the deal"
                                          }
                                        }
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "value": {
                                            "type": "integer",
                                            "description": "The ID of the organization associated with the deal"
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              },
                              {
                                "title": "baseDeal",
                                "type": "object",
                                "properties": {
                                  "stage_id": {
                                    "type": "integer",
                                    "description": "The ID of the deal stage"
                                  },
                                  "title": {
                                    "type": "string",
                                    "description": "The title of the deal"
                                  },
                                  "value": {
                                    "type": "number",
                                    "description": "The value of the deal"
                                  },
                                  "currency": {
                                    "type": "string",
                                    "description": "The currency associated with the deal"
                                  },
                                  "add_time": {
                                    "type": "string",
                                    "description": "The creation date and time of the deal"
                                  },
                                  "update_time": {
                                    "type": "string",
                                    "description": "The last updated date and time of the deal"
                                  },
                                  "stage_change_time": {
                                    "type": "string",
                                    "description": "The last updated date and time of the deal stage"
                                  },
                                  "active": {
                                    "type": "boolean",
                                    "description": "Whether the deal is active or not"
                                  },
                                  "deleted": {
                                    "type": "boolean",
                                    "description": "Whether the deal is deleted or not"
                                  },
                                  "status": {
                                    "type": "string",
                                    "description": "The status of the deal"
                                  },
                                  "probability": {
                                    "type": "number",
                                    "nullable": true,
                                    "description": "The success probability percentage of the deal"
                                  },
                                  "next_activity_date": {
                                    "type": "string",
                                    "description": "The date of the next activity associated with the deal"
                                  },
                                  "next_activity_time": {
                                    "type": "string",
                                    "description": "The time of the next activity associated with the deal"
                                  },
                                  "next_activity_id": {
                                    "type": "integer",
                                    "nullable": true,
                                    "description": "The ID of the next activity associated with the deal"
                                  },
                                  "last_activity_id": {
                                    "type": "integer",
                                    "nullable": true,
                                    "description": "The ID of the last activity associated with the deal"
                                  },
                                  "last_activity_date": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The date of the last activity associated with the deal"
                                  },
                                  "lost_reason": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The reason for losing the deal"
                                  },
                                  "visible_to": {
                                    "type": "string",
                                    "description": "The visibility of the deal"
                                  },
                                  "close_time": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The date and time of closing the deal"
                                  },
                                  "pipeline_id": {
                                    "type": "integer",
                                    "description": "The ID of pipeline associated with the deal"
                                  },
                                  "won_time": {
                                    "type": "string",
                                    "description": "The date and time of changing the deal status as won"
                                  },
                                  "first_won_time": {
                                    "type": "string",
                                    "description": "The date and time of the first time changing the deal status as won"
                                  },
                                  "lost_time": {
                                    "type": "string",
                                    "description": "The date and time of changing the deal status as lost"
                                  },
                                  "products_count": {
                                    "type": "integer",
                                    "description": "The number of products associated with the deal"
                                  },
                                  "files_count": {
                                    "type": "integer",
                                    "description": "The number of files associated with the deal"
                                  },
                                  "notes_count": {
                                    "type": "integer",
                                    "description": "The number of notes associated with the deal"
                                  },
                                  "followers_count": {
                                    "type": "integer",
                                    "description": "The number of followers associated with the deal"
                                  },
                                  "email_messages_count": {
                                    "type": "integer",
                                    "description": "The number of emails associated with the deal"
                                  },
                                  "activities_count": {
                                    "type": "integer",
                                    "description": "The number of activities associated with the deal"
                                  },
                                  "done_activities_count": {
                                    "type": "integer",
                                    "description": "The number of completed activities associated with the deal"
                                  },
                                  "undone_activities_count": {
                                    "type": "integer",
                                    "description": "The number of incomplete activities associated with the deal"
                                  },
                                  "participants_count": {
                                    "type": "integer",
                                    "description": "The number of participants associated with the deal"
                                  },
                                  "expected_close_date": {
                                    "type": "string",
                                    "format": "date",
                                    "description": "The expected close date of the deal"
                                  },
                                  "last_incoming_mail_time": {
                                    "type": "string",
                                    "description": "The date and time of the last incoming email associated with the deal"
                                  },
                                  "last_outgoing_mail_time": {
                                    "type": "string",
                                    "description": "The date and time of the last outgoing email associated with the deal"
                                  },
                                  "label": {
                                    "type": "integer",
                                    "description": "The label assigned to the deal"
                                  },
                                  "stage_order_nr": {
                                    "type": "integer",
                                    "description": "The order number of the deal stage associated with the deal"
                                  },
                                  "person_name": {
                                    "type": "string",
                                    "description": "The name of the person associated with the deal"
                                  },
                                  "org_name": {
                                    "type": "string",
                                    "description": "The name of the organization associated with the deal"
                                  },
                                  "next_activity_subject": {
                                    "type": "string",
                                    "description": "The subject of the next activity associated with the deal"
                                  },
                                  "next_activity_type": {
                                    "type": "string",
                                    "description": "The type of the next activity associated with the deal"
                                  },
                                  "next_activity_duration": {
                                    "type": "string",
                                    "description": "The duration of the next activity associated with the deal"
                                  },
                                  "next_activity_note": {
                                    "type": "string",
                                    "description": "The note of the next activity associated with the deal"
                                  },
                                  "formatted_value": {
                                    "type": "string",
                                    "description": "The deal value formatted with selected currency. E.g. US$500"
                                  },
                                  "weighted_value": {
                                    "type": "number",
                                    "description": "Probability times deal value. Probability can either be deal probability or if not set, then stage probability."
                                  },
                                  "formatted_weighted_value": {
                                    "type": "string",
                                    "description": "The weighted_value formatted with selected currency. E.g. US$500"
                                  },
                                  "weighted_value_currency": {
                                    "type": "string",
                                    "description": "The currency associated with the deal"
                                  },
                                  "rotten_time": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The date and time of changing the deal status as rotten"
                                  },
                                  "owner_name": {
                                    "type": "string",
                                    "description": "The name of the deal owner"
                                  },
                                  "cc_email": {
                                    "type": "string",
                                    "description": "The BCC email of the deal"
                                  },
                                  "org_hidden": {
                                    "type": "boolean",
                                    "description": "If the organization that is associated with the deal is hidden or not"
                                  },
                                  "person_hidden": {
                                    "type": "boolean",
                                    "description": "If the person that is associated with the deal is hidden or not"
                                  }
                                }
                              }
                            ]
                          },
                          "description": "The array of deals"
                        },
                        "additional_data": {
                          "description": "The additional data of the list",
                          "type": "object",
                          "properties": {
                            "start": {
                              "type": "integer",
                              "description": "Pagination start"
                            },
                            "limit": {
                              "type": "integer",
                              "description": "Items shown per page"
                            },
                            "more_items_in_collection": {
                              "type": "boolean",
                              "description": "If there are more list items in the collection than displayed or not"
                            }
                          }
                        },
                        "related_objects": {
                          "type": "object",
                          "properties": {
                            "organization": {
                              "type": "object",
                              "properties": {
                                "ORGANIZATION_ID": {
                                  "type": "object",
                                  "description": "The ID of the organization associated with the item",
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "active_flag": {
                                          "type": "boolean",
                                          "description": "Whether the associated organization is active or not"
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "description": "The ID of the organization associated with the item",
                                      "allOf": [
                                        {
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "type": "integer",
                                              "description": "The ID of the organization associated with the item"
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string",
                                              "description": "The name of the organization associated with the item"
                                            },
                                            "people_count": {
                                              "type": "integer",
                                              "description": "The number of people connected with the organization that is associated with the item"
                                            },
                                            "owner_id": {
                                              "type": "integer",
                                              "description": "The ID of the owner of the organization that is associated with the item"
                                            },
                                            "address": {
                                              "type": "string",
                                              "description": "The address of the organization"
                                            },
                                            "cc_email": {
                                              "type": "string",
                                              "description": "The BCC email of the organization associated with the item"
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  ]
                                }
                              }
                            },
                            "person": {
                              "type": "object",
                              "properties": {
                                "PERSON_ID": {
                                  "type": "object",
                                  "description": "The ID of the person associated with the item",
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "active_flag": {
                                          "type": "boolean",
                                          "description": "Whether the associated person is active or not"
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "integer",
                                          "description": "The ID of the person associated with the item"
                                        },
                                        "name": {
                                          "type": "string",
                                          "description": "The name of the person associated with the item"
                                        },
                                        "email": {
                                          "type": "array",
                                          "description": "The emails of the person associated with the item",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "label": {
                                                "type": "string",
                                                "description": "The type of the email"
                                              },
                                              "value": {
                                                "type": "string",
                                                "description": "The email of the associated person"
                                              },
                                              "primary": {
                                                "type": "boolean",
                                                "description": "Whether this is the primary email or not"
                                              }
                                            }
                                          }
                                        },
                                        "phone": {
                                          "type": "array",
                                          "description": "The phone numbers of the person associated with the item",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "label": {
                                                "type": "string",
                                                "description": "The type of the phone number"
                                              },
                                              "value": {
                                                "type": "string",
                                                "description": "The phone number of the person associated with the item"
                                              },
                                              "primary": {
                                                "type": "boolean",
                                                "description": "Whether this is the primary phone number or not"
                                              }
                                            }
                                          }
                                        },
                                        "owner_id": {
                                          "type": "integer",
                                          "description": "The ID of the owner of the person that is associated with the item"
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            },
                            "user": {
                              "type": "object",
                              "properties": {
                                "USER_ID": {
                                  "type": "object",
                                  "title": "userDataWithId",
                                  "allOf": [
                                    {
                                      "properties": {
                                        "id": {
                                          "type": "integer",
                                          "description": "The ID of the user"
                                        },
                                        "name": {
                                          "type": "string",
                                          "description": "The name of the user"
                                        },
                                        "email": {
                                          "type": "string",
                                          "description": "The email of the user"
                                        },
                                        "has_pic": {
                                          "type": "integer",
                                          "description": "Whether the user has picture or not. 0 = No picture, 1 = Has picture."
                                        },
                                        "pic_hash": {
                                          "type": "string",
                                          "nullable": true,
                                          "description": "The user picture hash"
                                        },
                                        "active_flag": {
                                          "type": "boolean",
                                          "description": "Whether the user is active or not"
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "description": "The ID of the user"
                                    }
                                  ]
                                }
                              }
                            },
                            "stage": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "description": "The ID of the stage"
                                },
                                "order_nr": {
                                  "type": "integer",
                                  "description": "Defines the order of the stage"
                                },
                                "name": {
                                  "type": "string",
                                  "description": "The name of the stage"
                                },
                                "active_flag": {
                                  "type": "boolean",
                                  "description": "Whether the stage is active or deleted"
                                },
                                "deal_probability": {
                                  "type": "integer",
                                  "description": "The success probability percentage of the deal. Used/shown when the deal weighted values are used."
                                },
                                "pipeline_id": {
                                  "type": "integer",
                                  "description": "The ID of the pipeline to add the stage to"
                                },
                                "rotten_flag": {
                                  "type": "boolean",
                                  "enum": [ true, false ],
                                  "description": "Whether deals in this stage can become rotten"
                                },
                                "rotten_days": {
                                  "type": "integer",
                                  "description": "The number of days the deals not updated in this stage would become rotten. Applies only if the `rotten_flag` is set."
                                },
                                "add_time": {
                                  "type": "string",
                                  "description": "The stage creation time. Format: YYYY-MM-DD HH:MM:SS."
                                },
                                "update_time": {
                                  "type": "string",
                                  "description": "The stage update time. Format: YYYY-MM-DD HH:MM:SS."
                                }
                              }
                            },
                            "pipeline": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "description": "The ID of the pipeline"
                                },
                                "name": {
                                  "type": "string",
                                  "description": "The name of the pipeline"
                                },
                                "url_title": {
                                  "type": "string",
                                  "description": "The pipeline title displayed in the URL"
                                },
                                "order_nr": {
                                  "type": "integer",
                                  "description": "Defines the order of pipelines. First order (`order_nr=0`) is the default pipeline."
                                },
                                "active": {
                                  "type": "boolean",
                                  "description": "Whether this pipeline will be made inactive (hidden) or active"
                                },
                                "deal_probability": {
                                  "type": "boolean",
                                  "description": "Whether deal probability is disabled or enabled for this pipeline"
                                },
                                "add_time": {
                                  "type": "string",
                                  "description": "The pipeline creation time. Format: YYYY-MM-DD HH:MM:SS."
                                },
                                "update_time": {
                                  "type": "string",
                                  "description": "The pipeline update time. Format: YYYY-MM-DD HH:MM:SS."
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "success": true,
                  "data": [
                    {
                      "id": 1,
                      "creator_user_id": {
                        "id": 8877,
                        "name": "Creator",
                        "email": "john.doe@pipedrive.com",
                        "has_pic": false,
                        "pic_hash": null,
                        "active_flag": true,
                        "value": 8877
                      },
                      "user_id": {
                        "id": 8877,
                        "name": "Creator",
                        "email": "john.doe@pipedrive.com",
                        "has_pic": false,
                        "pic_hash": null,
                        "active_flag": true,
                        "value": 8877
                      },
                      "person_id": {
                        "active_flag": true,
                        "name": "Person",
                        "email": [
                          {
                            "label": "work",
                            "value": "person@pipedrive.com",
                            "primary": true
                          }
                        ],
                        "phone": [
                          {
                            "label": "work",
                            "value": "37244499911",
                            "primary": true
                          }
                        ],
                        "value": 1101
                      },
                      "org_id": {
                        "name": "Organization",
                        "people_count": 2,
                        "owner_id": 8877,
                        "address": "Mustamäe tee 3a, 10615 Tallinn",
                        "active_flag": true,
                        "cc_email": "org@pipedrivemail.com",
                        "value": 5
                      },
                      "stage_id": 2,
                      "title": "Deal One",
                      "value": 5000,
                      "currency": "EUR",
                      "add_time": "2019-05-29 04:21:51",
                      "update_time": "2019-11-28 16:19:50",
                      "stage_change_time": "2019-11-28 15:41:22",
                      "active": true,
                      "deleted": false,
                      "status": "open",
                      "probability": null,
                      "next_activity_date": "2019-11-29",
                      "next_activity_time": "11:30:00",
                      "next_activity_id": 128,
                      "last_activity_id": null,
                      "last_activity_date": null,
                      "lost_reason": null,
                      "visible_to": "1",
                      "close_time": null,
                      "pipeline_id": 1,
                      "won_time": "2019-11-27 11:40:36",
                      "first_won_time": "2019-11-27 11:40:36",
                      "lost_time": "2019-11-27 11:40:36",
                      "products_count": 0,
                      "files_count": 0,
                      "notes_count": 2,
                      "followers_count": 0,
                      "email_messages_count": 4,
                      "activities_count": 1,
                      "done_activities_count": 0,
                      "undone_activities_count": 1,
                      "participants_count": 1,
                      "expected_close_date": "2019-06-29",
                      "last_incoming_mail_time": "2019-05-29 18:21:42",
                      "last_outgoing_mail_time": "2019-05-30 03:45:35",
                      "label": 11,
                      "stage_order_nr": 2,
                      "person_name": "Person",
                      "org_name": "Organization",
                      "next_activity_subject": "Call",
                      "next_activity_type": "call",
                      "next_activity_duration": "00:30:00",
                      "next_activity_note": "Note content",
                      "formatted_value": "€5,000",
                      "weighted_value": 5000,
                      "formatted_weighted_value": "€5,000",
                      "weighted_value_currency": "EUR",
                      "rotten_time": null,
                      "owner_name": "Creator",
                      "cc_email": "company+deal1@pipedrivemail.com",
                      "org_hidden": false,
                      "person_hidden": false
                    }
                  ],
                  "additional_data": {
                    "pagination": {
                      "start": 0,
                      "limit": 100,
                      "more_items_in_collection": true
                    }
                  },
                  "related_objects": {
                    "user": {
                      "8877": {
                        "id": 8877,
                        "name": "Creator",
                        "email": "john.doe@pipedrive.com",
                        "has_pic": false,
                        "pic_hash": null,
                        "active_flag": true
                      }
                    },
                    "organization": {
                      "5": {
                        "id": 5,
                        "name": "Organization",
                        "people_count": 2,
                        "owner_id": 8877,
                        "address": "Mustamäe tee 3a, 10615 Tallinn",
                        "active_flag": true,
                        "cc_email": "org@pipedrivemail.com"
                      }
                    },
                    "person": {
                      "1101": {
                        "active_flag": true,
                        "id": 1101,
                        "name": "Person",
                        "email": [
                          {
                            "label": "work",
                            "value": "person@pipedrive.com",
                            "primary": true
                          }
                        ],
                        "phone": [
                          {
                            "label": "work",
                            "value": "3421787767",
                            "primary": true
                          }
                        ],
                        "owner_id": 8877
                      }
                    },
                    "stage": {
                      "2": {
                        "id": 2,
                        "company_id": 123,
                        "order_nr": 1,
                        "name": "Stage Name",
                        "active_flag": true,
                        "deal_probability": 100,
                        "pipeline_id": 1,
                        "rotten_flag": false,
                        "rotten_days": null,
                        "add_time": "2015-12-08 13:54:06",
                        "update_time": "2015-12-08 13:54:06",
                        "pipeline_name": "Pipeline",
                        "pipeline_deal_probability": true
                      }
                    },
                    "pipeline": {
                      "1": {
                        "id": 1,
                        "name": "Pipeline",
                        "url_title": "Pipeline",
                        "order_nr": 0,
                        "active": true,
                        "deal_probability": true,
                        "add_time": "2015-12-08 10:00:24",
                        "update_time": "2015-12-08 10:00:24"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/persons/{id}/files": {
      "get": {
        "summary": "List files attached to a person",
        "description": "Lists files associated with a person.",
        "operationId": "getPersonFiles",
        "tags": [ "Persons" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the person",
            "required": true,
            "schema": { "type": "integer" }
          },
          {
            "in": "query",
            "name": "start",
            "description": "Pagination start",
            "schema": { "type": "integer", "default": 0 }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Items shown per page",
            "schema": { "type": "integer" }
          },
          {
            "in": "query",
            "name": "sort",
            "schema": { "type": "string" },
            "description": "The field names and sorting mode separated by a comma (`field_name_1 ASC`, `field_name_2 DESC`). Only first-level field keys are supported (no nested keys). Supported fields: `id`, `user_id`, `deal_id`, `person_id`, `org_id`, `product_id`, `add_time`, `update_time`, `file_name`, `file_type`, `file_size`, `comment`."
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "getAssociatedFiles",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The file data",
                            "properties": {
                              "id": {
                                "type": "integer",
                                "description": "The ID of the file"
                              },
                              "user_id": {
                                "type": "integer",
                                "description": "The ID of the user to associate the file with"
                              },
                              "deal_id": {
                                "type": "integer",
                                "description": "The ID of the deal to associate the file with"
                              },
                              "person_id": {
                                "type": "integer",
                                "description": "The ID of the person to associate the file with"
                              },
                              "org_id": {
                                "type": "integer",
                                "description": "The ID of the organization to associate the file with"
                              },
                              "product_id": {
                                "type": "integer",
                                "description": "The ID of the product to associate the file with"
                              },
                              "activity_id": {
                                "type": "integer",
                                "description": "The ID of the activity to associate the file with"
                              },
                              "lead_id": {
                                "type": "string",
                                "description": "The ID of the lead to associate the file with",
                                "format": "uuid"
                              },
                              "add_time": {
                                "type": "string",
                                "description": "The date and time when the file was added/created. Format: YYYY-MM-DD HH:MM:SS"
                              },
                              "update_time": {
                                "type": "string",
                                "description": "The last updated date and time of the file. Format: YYYY-MM-DD HH:MM:SS"
                              },
                              "file_name": {
                                "type": "string",
                                "description": "The original name of the file"
                              },
                              "file_size": {
                                "type": "integer",
                                "description": "The size of the file"
                              },
                              "active_flag": {
                                "type": "boolean",
                                "description": "Whether the user is active or not. false = Not activated, true = Activated"
                              },
                              "inline_flag": {
                                "type": "boolean",
                                "description": "Whether the file was uploaded as inline or not"
                              },
                              "remote_location": {
                                "type": "string",
                                "description": "The location type to send the file to. Only googledrive is supported at the moment."
                              },
                              "remote_id": {
                                "type": "string",
                                "description": "The ID of the remote item"
                              },
                              "cid": {
                                "type": "string",
                                "description": "The ID of the inline attachment"
                              },
                              "s3_bucket": {
                                "type": "string",
                                "description": "The location of the cloud storage"
                              },
                              "mail_message_id": {
                                "type": "string",
                                "description": "The ID of the mail message to associate the file with"
                              },
                              "mail_template_id": {
                                "type": "string",
                                "description": "The ID of the mail template to associate the file with"
                              },
                              "deal_name": {
                                "type": "string",
                                "description": "The name of the deal associated with the dile"
                              },
                              "person_name": {
                                "type": "string",
                                "description": "The name of the person associated with the file"
                              },
                              "org_name": {
                                "type": "string",
                                "description": "The name of the organization associated with the file"
                              },
                              "product_name": {
                                "type": "string",
                                "description": "The name of the product associated with the file"
                              },
                              "lead_name": {
                                "type": "string",
                                "description": "The name of the lead associated with the file"
                              },
                              "url": {
                                "type": "string",
                                "description": "The URL of the download file"
                              },
                              "name": {
                                "type": "string",
                                "description": "The visible name of the file"
                              },
                              "description": {
                                "type": "string",
                                "description": "The description of the file"
                              }
                            }
                          },
                          "description": "The array of files"
                        },
                        "additional_data": {
                          "description": "The additional data of the list",
                          "type": "object",
                          "properties": {
                            "start": {
                              "type": "integer",
                              "description": "Pagination start"
                            },
                            "limit": {
                              "type": "integer",
                              "description": "Items shown per page"
                            },
                            "more_items_in_collection": {
                              "type": "boolean",
                              "description": "If there are more list items in the collection than displayed or not"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "success": true,
                  "data": [
                    {
                      "id": 1,
                      "user_id": 8877,
                      "deal_id": 1,
                      "person_id": 1,
                      "org_id": 1480,
                      "product_id": 1,
                      "activity_id": 1,
                      "lead_id": "adf21080-0e10-11eb-879b-05d71fb426ec",
                      "log_id": null,
                      "add_time": "2020-09-16 11:19:36",
                      "update_time": "2020-09-16 11:19:36",
                      "file_name": "95781006_794143070992462_4330873630616453120_n_60817458877506f9eb74d03e5ef9ba061915b797998.jpg",
                      "file_type": "img",
                      "file_size": 95116,
                      "active_flag": true,
                      "inline_flag": false,
                      "remote_location": "s3",
                      "remote_id": "95781006_794143070992462_4330873630616453120_n.jpg",
                      "cid": "",
                      "s3_bucket": "",
                      "mail_message_id": "",
                      "mail_template_id": "",
                      "deal_name": "nice deal",
                      "person_name": "",
                      "people_name": "",
                      "org_name": "Pipedrive Inc.",
                      "product_name": "",
                      "lead_name": "nice lead",
                      "url": "https://app.pipedrive.com/api/v1/files/304/download",
                      "name": "95781006_794143070992462_4330873630616453120_n.jpg",
                      "description": ""
                    }
                  ],
                  "additional_data": {
                    "pagination": {
                      "start": 0,
                      "limit": 100,
                      "more_items_in_collection": true
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/persons/{id}/flow": {
      "get": {
        "summary": "List updates about a person",
        "description": "Lists updates about a person.<br>If a company uses the [Campaigns product](https://pipedrive.readme.io/docs/campaigns-in-pipedrive-api), then this endpoint's response will also include updates for the `marketing_status` field.",
        "operationId": "getPersonUpdates",
        "tags": [ "Persons" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the person",
            "required": true,
            "schema": { "type": "integer" }
          },
          {
            "in": "query",
            "name": "start",
            "description": "Pagination start",
            "schema": { "type": "integer", "default": 0 }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Items shown per page",
            "schema": { "type": "integer" }
          },
          {
            "in": "query",
            "name": "all_changes",
            "description": "Whether to show custom field updates or not. 1 = Include custom field changes. If omitted returns changes without custom field updates.",
            "schema": { "type": "string" }
          },
          {
            "in": "query",
            "name": "items",
            "description": "A comma-separated string for filtering out item specific updates. (Possible values - call, activity, plannedActivity, change, note, deal, file, dealChange, personChange, organizationChange, follower, dealFollower, personFollower, organizationFollower, participant, comment, mailMessage, mailMessageWithAttachment, invoice, document, marketing_campaign_stat, marketing_status_change)",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Get the person updates",
            "content": {
              "application/json": {
                "schema": {
                  "title": "getAssociatedPersonUpdates",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "object": {
                                "type": "string",
                                "description": "The type of the person update. (Possible object types - personChange, note, activity, file)"
                              },
                              "timestamp": {
                                "type": "string",
                                "description": "The creation date and time of the update"
                              },
                              "data": {
                                "type": "object",
                                "description": "The data related to the update"
                              }
                            }
                          }
                        },
                        "additional_data": {
                          "description": "The additional data of the list",
                          "type": "object",
                          "properties": {
                            "start": {
                              "type": "integer",
                              "description": "Pagination start"
                            },
                            "limit": {
                              "type": "integer",
                              "description": "Items shown per page"
                            },
                            "more_items_in_collection": {
                              "type": "boolean",
                              "description": "If there are more list items in the collection than displayed or not"
                            }
                          }
                        },
                        "related_objects": {
                          "type": "object",
                          "properties": {
                            "deal": {
                              "type": "object",
                              "properties": {
                                "DEAL_ID": {
                                  "type": "object",
                                  "description": "The ID of the deal which is associated with the item",
                                  "properties": {
                                    "id": {
                                      "type": "integer",
                                      "description": "The ID of the deal associated with the item"
                                    },
                                    "title": {
                                      "type": "string",
                                      "description": "The title of the deal associated with the item"
                                    },
                                    "status": {
                                      "type": "string",
                                      "description": "The status of the deal associated with the item"
                                    },
                                    "value": {
                                      "type": "number",
                                      "description": "The value of the deal that is associated with the item"
                                    },
                                    "currency": {
                                      "type": "string",
                                      "description": "The currency of the deal value"
                                    },
                                    "stage_id": {
                                      "type": "integer",
                                      "description": "The ID of the stage the deal is currently at"
                                    },
                                    "pipeline_id": {
                                      "type": "integer",
                                      "description": "The ID of the pipeline the deal is in"
                                    }
                                  }
                                }
                              }
                            },
                            "organization": {
                              "type": "object",
                              "properties": {
                                "ORGANIZATION_ID": {
                                  "type": "object",
                                  "description": "The ID of the organization associated with the item",
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "integer",
                                          "description": "The ID of the organization associated with the item"
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "The name of the organization associated with the item"
                                        },
                                        "people_count": {
                                          "type": "integer",
                                          "description": "The number of people connected with the organization that is associated with the item"
                                        },
                                        "owner_id": {
                                          "type": "integer",
                                          "description": "The ID of the owner of the organization that is associated with the item"
                                        },
                                        "address": {
                                          "type": "string",
                                          "description": "The address of the organization"
                                        },
                                        "cc_email": {
                                          "type": "string",
                                          "description": "The BCC email of the organization associated with the item"
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            },
                            "user": {
                              "type": "object",
                              "properties": {
                                "USER_ID": {
                                  "type": "object",
                                  "title": "userDataWithId",
                                  "allOf": [
                                    {
                                      "properties": {
                                        "id": {
                                          "type": "integer",
                                          "description": "The ID of the user"
                                        },
                                        "name": {
                                          "type": "string",
                                          "description": "The name of the user"
                                        },
                                        "email": {
                                          "type": "string",
                                          "description": "The email of the user"
                                        },
                                        "has_pic": {
                                          "type": "integer",
                                          "description": "Whether the user has picture or not. 0 = No picture, 1 = Has picture."
                                        },
                                        "pic_hash": {
                                          "type": "string",
                                          "nullable": true,
                                          "description": "The user picture hash"
                                        },
                                        "active_flag": {
                                          "type": "boolean",
                                          "description": "Whether the user is active or not"
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "description": "The ID of the user"
                                    }
                                  ]
                                }
                              }
                            },
                            "person": {
                              "type": "object",
                              "properties": {
                                "PERSON_ID": {
                                  "type": "object",
                                  "description": "The ID of the person associated with the item",
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "active_flag": {
                                          "type": "boolean",
                                          "description": "Whether the associated person is active or not"
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "integer",
                                          "description": "The ID of the person associated with the item"
                                        },
                                        "name": {
                                          "type": "string",
                                          "description": "The name of the person associated with the item"
                                        },
                                        "email": {
                                          "type": "array",
                                          "description": "The emails of the person associated with the item",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "label": {
                                                "type": "string",
                                                "description": "The type of the email"
                                              },
                                              "value": {
                                                "type": "string",
                                                "description": "The email of the associated person"
                                              },
                                              "primary": {
                                                "type": "boolean",
                                                "description": "Whether this is the primary email or not"
                                              }
                                            }
                                          }
                                        },
                                        "phone": {
                                          "type": "array",
                                          "description": "The phone numbers of the person associated with the item",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "label": {
                                                "type": "string",
                                                "description": "The type of the phone number"
                                              },
                                              "value": {
                                                "type": "string",
                                                "description": "The phone number of the person associated with the item"
                                              },
                                              "primary": {
                                                "type": "boolean",
                                                "description": "Whether this is the primary phone number or not"
                                              }
                                            }
                                          }
                                        },
                                        "owner_id": {
                                          "type": "integer",
                                          "description": "The ID of the owner of the person that is associated with the item"
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "success": true,
                  "data": [
                    {
                      "object": "personChange",
                      "timestamp": "2020-08-03 11:25:21",
                      "data": {
                        "id": 11158,
                        "item_id": 3512,
                        "user_id": 8877,
                        "field_key": "org_id",
                        "old_value": null,
                        "new_value": 1482,
                        "is_bulk_update_flag": null,
                        "log_time": "2020-08-03 11:25:21",
                        "change_source": "app",
                        "change_source_user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML like Gecko) Chrome/84.0.4147.89 Safari/537.36",
                        "additional_data": {
                          "new_value_formatted": "Umbrella Corp."
                        }
                      }
                    },
                    {
                      "object": "activity",
                      "timestamp": "2020-08-07 08:15:00",
                      "data": {
                        "id": 8,
                        "company_id": 22122,
                        "user_id": 1234,
                        "done": false,
                        "type": "deadline",
                        "reference_type": "scheduler-service",
                        "reference_id": 7,
                        "conference_meeting_client": "871b8bc88d3a1202",
                        "conference_meeting_url": "https://pipedrive.zoom.us/link",
                        "conference_meeting_id": "01758746701",
                        "due_date": "2020-06-09",
                        "due_time": "10:00",
                        "duration": "01:00",
                        "busy_flag": true,
                        "add_time": "2020-06-08 12:37:56",
                        "marked_as_done_time": "2020-08-08 08:08:38",
                        "last_notification_time": "2020-08-08 12:37:56",
                        "last_notification_user_id": 7655,
                        "notification_language_id": 1,
                        "subject": "Deadline",
                        "public_description": "This is a description",
                        "calendar_sync_include_context": "",
                        "location": "Mustamäe tee 3, Tallinn, Estonia",
                        "org_id": 5,
                        "person_id": 1101,
                        "deal_id": 300,
                        "lead_id": "46c3b0e1-db35-59ca-1828-4817378dff71",
                        "active_flag": true,
                        "update_time": "2020-08-08 12:37:56",
                        "update_user_id": 5596,
                        "gcal_event_id": "",
                        "google_calendar_id": "",
                        "google_calendar_etag": "",
                        "source_timezone": "",
                        "rec_rule": "RRULE:FREQ=WEEKLY;BYDAY=WE",
                        "rec_rule_extension": "",
                        "rec_master_activity_id": 1,
                        "series": [ ],
                        "note": "A note for the activity",
                        "created_by_user_id": 1234,
                        "location_subpremise": "",
                        "location_street_number": "3",
                        "location_route": "Mustamäe tee",
                        "location_sublocality": "Kristiine",
                        "location_locality": "Tallinn",
                        "location_admin_area_level_1": "Harju maakond",
                        "location_admin_area_level_2": "",
                        "location_country": "Estonia",
                        "location_postal_code": "10616",
                        "location_formatted_address": "Mustamäe tee 3, 10616 Tallinn, Estonia",
                        "attendees": [
                          {
                            "email_address": "attendee@pipedrivemail.com",
                            "is_organizer": 0,
                            "name": "Attendee",
                            "person_id": 25312,
                            "status": "noreply",
                            "user_id": null
                          }
                        ],
                        "participants": [
                          { "person_id": 17985, "primary_flag": false },
                          { "person_id": 1101, "primary_flag": true }
                        ],
                        "org_name": "Organization",
                        "person_name": "Person",
                        "deal_title": "Deal",
                        "owner_name": "Creator",
                        "person_dropbox_bcc": "company@pipedrivemail.com",
                        "deal_dropbox_bcc": "company+deal300@pipedrivemail.com",
                        "assigned_to_user_id": 1235,
                        "file": {
                          "id": "376892,",
                          "clean_name": "Audio 10:55:07.m4a",
                          "url": "https://pipedrive-files.s3-eu-west-1.amazonaws.com/Audio-recording.m4a"
                        }
                      }
                    }
                  ],
                  "additional_data": {
                    "pagination": {
                      "start": 0,
                      "limit": 100,
                      "more_items_in_collection": true
                    }
                  },
                  "related_objects": {
                    "allOf": [
                      {
                        "user": {
                          "123": {
                            "id": 123,
                            "name": "Jane Doe",
                            "email": "jane@pipedrive.com",
                            "has_pic": 1,
                            "pic_hash": "2611ace8ac6a3afe2f69ed56f9e08c6b",
                            "active_flag": true
                          }
                        }
                      },
                      {
                        "person": {
                          "1101": {
                            "active_flag": true,
                            "id": 1101,
                            "name": "Person",
                            "email": [
                              {
                                "label": "work",
                                "value": "person@pipedrive.com",
                                "primary": true
                              }
                            ],
                            "phone": [
                              {
                                "label": "work",
                                "value": "3421787767",
                                "primary": true
                              }
                            ],
                            "owner_id": 8877
                          }
                        }
                      },
                      {
                        "organization": {
                          "1": {
                            "id": 1,
                            "name": "Org Name",
                            "people_count": 1,
                            "owner_id": 123,
                            "address": "Mustamäe tee 3a, 10615 Tallinn",
                            "active_flag": true,
                            "cc_email": "org@pipedrivemail.com"
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/persons/{id}/followers": {
      "get": {
        "summary": "List followers of a person",
        "description": "Lists the followers of a person.",
        "operationId": "getPersonFollowers",
        "tags": [ "Persons" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the person",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "getAssociatedFollowers",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "description": "The list of followers",
                          "items": {
                            "type": "object",
                            "properties": {
                              "user_id": {
                                "type": "integer",
                                "description": "The ID of the user"
                              },
                              "id": {
                                "type": "integer",
                                "description": "The ID of the user follower"
                              },
                              "deal_id": {
                                "type": "integer",
                                "description": "The ID of the deal which the follower was added to"
                              },
                              "add_time": {
                                "type": "string",
                                "description": "The date and time when the follower was added to the person"
                              }
                            }
                          }
                        },
                        "additional_data": {
                          "description": "The additional data of the list",
                          "type": "object",
                          "properties": {
                            "start": {
                              "type": "integer",
                              "description": "Pagination start"
                            },
                            "limit": {
                              "type": "integer",
                              "description": "Items shown per page"
                            },
                            "more_items_in_collection": {
                              "type": "boolean",
                              "description": "If there are more list items in the collection than displayed or not"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "success": true,
                  "data": [
                    {
                      "user_id": 123,
                      "id": 456,
                      "deal_id": 789,
                      "add_time": "2020-09-09 11:36:23"
                    }
                  ],
                  "additional_data": {
                    "pagination": {
                      "start": 0,
                      "limit": 100,
                      "more_items_in_collection": true
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add a follower to a person",
        "description": "Adds a follower to a person.",
        "operationId": "addPersonFollower",
        "tags": [ "Persons" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the person",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "addPersonFollowerRequest",
                "type": "object",
                "required": [ "user_id" ],
                "properties": {
                  "user_id": {
                    "type": "integer",
                    "description": "The ID of the user"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "addPersonFollower",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "user_id": {
                              "type": "integer",
                              "description": "The ID of the user who was added as a follower to a person"
                            },
                            "id": {
                              "type": "integer",
                              "description": "The ID of the follower"
                            },
                            "person_id": {
                              "type": "integer",
                              "description": "The ID of the person to whom the follower was added"
                            },
                            "add_time": {
                              "type": "string",
                              "description": "The date and time when the follower was added to a person. Format: YYYY-MM-DD HH:MM:SS"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "success": true,
                  "data": {
                    "user_id": 1,
                    "id": 2,
                    "person_id": 3,
                    "add_time": "2020-04-03 11:44:31"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/persons/{id}/followers/{follower_id}": {
      "delete": {
        "summary": "Delete a follower from a person",
        "description": "Deletes a follower from a person.",
        "operationId": "deletePersonFollower",
        "tags": [ "Persons" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the person",
            "required": true,
            "schema": { "type": "integer" }
          },
          {
            "in": "path",
            "name": "follower_id",
            "required": true,
            "schema": { "type": "integer" },
            "description": "The ID of the follower"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "deletePerson",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "description": "The ID of the deleted person"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": { "success": true, "data": { "id": 12 } }
              }
            }
          }
        }
      }
    },
    "/persons/{id}/mailMessages": {
      "get": {
        "summary": "List mail messages associated with a person",
        "description": "Lists mail messages associated with a person.",
        "operationId": "getPersonMailMessages",
        "tags": [ "Persons" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the person",
            "required": true,
            "schema": { "type": "integer" }
          },
          {
            "in": "query",
            "name": "start",
            "description": "Pagination start",
            "schema": { "type": "integer", "default": 0 }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Items shown per page",
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "getAssociatedMailMessages",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "description": "The array of mail messages",
                          "items": {
                            "type": "object",
                            "properties": {
                              "object": {
                                "type": "string",
                                "description": "The type of the data item"
                              },
                              "timestamp": {
                                "type": "string",
                                "description": "The date and time when the item was created"
                              },
                              "data": {
                                "title": "mailMessageItemForList",
                                "allOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "description": "ID of the mail message.",
                                        "type": "integer"
                                      },
                                      "from": {
                                        "type": "array",
                                        "description": "The array of mail message sender (object)",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "description": "ID of the mail participant",
                                              "type": "integer"
                                            },
                                            "email_address": {
                                              "description": "Mail address of the mail participant",
                                              "type": "string"
                                            },
                                            "name": {
                                              "description": "Name of the mail participant",
                                              "type": "string"
                                            },
                                            "linked_person_id": {
                                              "description": "ID of the linked person to the mail message",
                                              "type": "integer"
                                            },
                                            "linked_person_name": {
                                              "description": "Name of the linked person to the mail message",
                                              "type": "string"
                                            },
                                            "mail_message_party_id": {
                                              "description": "ID of the mail message participant",
                                              "type": "integer"
                                            }
                                          }
                                        }
                                      },
                                      "to": {
                                        "type": "array",
                                        "description": "The array of mail message receiver (object)",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "description": "ID of the mail participant",
                                              "type": "integer"
                                            },
                                            "email_address": {
                                              "description": "Mail address of the mail participant",
                                              "type": "string"
                                            },
                                            "name": {
                                              "description": "Name of the mail participant",
                                              "type": "string"
                                            },
                                            "linked_person_id": {
                                              "description": "ID of the linked person to the mail message",
                                              "type": "integer"
                                            },
                                            "linked_person_name": {
                                              "description": "Name of the linked person to the mail message",
                                              "type": "string"
                                            },
                                            "mail_message_party_id": {
                                              "description": "ID of the mail message participant",
                                              "type": "integer"
                                            }
                                          }
                                        }
                                      },
                                      "cc": {
                                        "type": "array",
                                        "description": "The array of mail message copies (object)",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "description": "ID of the mail participant",
                                              "type": "integer"
                                            },
                                            "email_address": {
                                              "description": "Mail address of the mail participant",
                                              "type": "string"
                                            },
                                            "name": {
                                              "description": "Name of the mail participant",
                                              "type": "string"
                                            },
                                            "linked_person_id": {
                                              "description": "ID of the linked person to the mail message",
                                              "type": "integer"
                                            },
                                            "linked_person_name": {
                                              "description": "Name of the linked person to the mail message",
                                              "type": "string"
                                            },
                                            "mail_message_party_id": {
                                              "description": "ID of the mail message participant",
                                              "type": "integer"
                                            }
                                          }
                                        }
                                      },
                                      "bcc": {
                                        "type": "array",
                                        "description": "The array of mail message blind copies (object)",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "description": "ID of the mail participant",
                                              "type": "integer"
                                            },
                                            "email_address": {
                                              "description": "Mail address of the mail participant",
                                              "type": "string"
                                            },
                                            "name": {
                                              "description": "Name of the mail participant",
                                              "type": "string"
                                            },
                                            "linked_person_id": {
                                              "description": "ID of the linked person to the mail message",
                                              "type": "integer"
                                            },
                                            "linked_person_name": {
                                              "description": "Name of the linked person to the mail message",
                                              "type": "string"
                                            },
                                            "mail_message_party_id": {
                                              "description": "ID of the mail message participant",
                                              "type": "integer"
                                            }
                                          }
                                        }
                                      },
                                      "body_url": {
                                        "type": "string",
                                        "description": "The mail message body URL"
                                      },
                                      "account_id": {
                                        "type": "string",
                                        "description": "The connection account ID"
                                      },
                                      "user_id": {
                                        "type": "integer",
                                        "description": "ID of the user whom mail message will be assigned to"
                                      },
                                      "mail_thread_id": {
                                        "type": "integer",
                                        "description": "ID of the mail message thread"
                                      },
                                      "subject": {
                                        "type": "string",
                                        "description": "The subject of mail message"
                                      },
                                      "snippet": {
                                        "type": "string",
                                        "description": "The snippet of mail message. Snippet length is up to 225 characters."
                                      },
                                      "mail_tracking_status": {
                                        "type": "string",
                                        "nullable": true,
                                        "description": "The status of tracking mail message. Value is `null` if tracking is not enabled.",
                                        "enum": [ "opened", "not opened" ]
                                      },
                                      "mail_link_tracking_enabled_flag": {
                                        "description": "Whether the link tracking in mail message body is enabled.",
                                        "allOf": [
                                          {
                                            "title": "numberBooleanDefault0",
                                            "type": "number",
                                            "default": 0,
                                            "enum": [ 0, 1 ]
                                          }
                                        ]
                                      },
                                      "read_flag": {
                                        "description": "Whether the mail message is read or not by the user",
                                        "allOf": [
                                          {
                                            "title": "numberBooleanDefault0",
                                            "type": "number",
                                            "default": 0,
                                            "enum": [ 0, 1 ]
                                          }
                                        ]
                                      },
                                      "draft": {
                                        "type": "string",
                                        "description": "If the mail message has a draft status then the value is the mail message object as JSON formatted string, otherwise `null`."
                                      },
                                      "draft_flag": {
                                        "description": "Whether the mail message is a draft or not",
                                        "allOf": [
                                          {
                                            "title": "numberBooleanDefault0",
                                            "type": "number",
                                            "default": 0,
                                            "enum": [ 0, 1 ]
                                          }
                                        ]
                                      },
                                      "synced_flag": {
                                        "description": "Whether the mail message is synced with the provider or not",
                                        "allOf": [
                                          {
                                            "title": "numberBooleanDefault0",
                                            "type": "number",
                                            "default": 0,
                                            "enum": [ 0, 1 ]
                                          }
                                        ]
                                      },
                                      "deleted_flag": {
                                        "allOf": [
                                          {
                                            "title": "numberBooleanDefault0",
                                            "type": "number",
                                            "default": 0,
                                            "enum": [ 0, 1 ]
                                          }
                                        ],
                                        "description": "Whether the mail message is deleted or not"
                                      },
                                      "has_body_flag": {
                                        "description": "Whether the mail message has a body or not",
                                        "allOf": [
                                          {
                                            "title": "numberBooleanDefault0",
                                            "type": "number",
                                            "default": 0,
                                            "enum": [ 0, 1 ]
                                          }
                                        ]
                                      },
                                      "sent_flag": {
                                        "description": "Whether the mail message has been sent or not",
                                        "allOf": [
                                          {
                                            "title": "numberBooleanDefault0",
                                            "type": "number",
                                            "default": 0,
                                            "enum": [ 0, 1 ]
                                          }
                                        ]
                                      },
                                      "sent_from_pipedrive_flag": {
                                        "description": "Whether the mail message has been sent from Pipedrive app or not",
                                        "allOf": [
                                          {
                                            "title": "numberBooleanDefault0",
                                            "type": "number",
                                            "default": 0,
                                            "enum": [ 0, 1 ]
                                          }
                                        ]
                                      },
                                      "smart_bcc_flag": {
                                        "description": "Whether the mail message has been created by Smart Email BCC feature or not",
                                        "allOf": [
                                          {
                                            "title": "numberBooleanDefault0",
                                            "type": "number",
                                            "default": 0,
                                            "enum": [ 0, 1 ]
                                          }
                                        ]
                                      },
                                      "message_time": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "Creation or receival time of the mail message"
                                      },
                                      "add_time": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "The insertion into the database time of the mail message"
                                      },
                                      "update_time": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "The updating time in the database of the mail message"
                                      },
                                      "has_attachments_flag": {
                                        "description": "Whether the mail message has an attachment or not",
                                        "allOf": [
                                          {
                                            "title": "numberBooleanDefault0",
                                            "type": "number",
                                            "default": 0,
                                            "enum": [ 0, 1 ]
                                          }
                                        ]
                                      },
                                      "has_inline_attachments_flag": {
                                        "description": "Whether the mail message has an inline attachment or not",
                                        "allOf": [
                                          {
                                            "title": "numberBooleanDefault0",
                                            "type": "number",
                                            "default": 0,
                                            "enum": [ 0, 1 ]
                                          }
                                        ]
                                      },
                                      "has_real_attachments_flag": {
                                        "description": "Whether the mail message has an attachment (which is not inline) or not",
                                        "allOf": [
                                          {
                                            "title": "numberBooleanDefault0",
                                            "type": "number",
                                            "default": 0,
                                            "enum": [ 0, 1 ]
                                          }
                                        ]
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "nylas_id": {
                                        "type": "string",
                                        "description": "The Mail Message ID assigned by the sync provider"
                                      },
                                      "s3_bucket": {
                                        "type": "string",
                                        "description": "The name of the S3 bucket"
                                      },
                                      "s3_bucket_path": {
                                        "type": "string",
                                        "description": "The path of the S3 bucket"
                                      },
                                      "external_deleted_flag": {
                                        "type": "boolean",
                                        "description": "If the Mail Message has been deleted on the provider side or not"
                                      },
                                      "mua_message_id": {
                                        "type": "string",
                                        "description": "The Mail Message ID assigned by the mail user agent"
                                      },
                                      "template_id": {
                                        "type": "integer",
                                        "description": "The ID of the mail template"
                                      },
                                      "timestamp": {
                                        "type": "string",
                                        "description": "The add date and time of the Mail Message"
                                      },
                                      "item_type": {
                                        "type": "string",
                                        "description": "The type of the data item"
                                      },
                                      "company_id": {
                                        "type": "integer",
                                        "description": "The ID of the company"
                                      }
                                    }
                                  }
                                ]
                              }
                            }
                          }
                        },
                        "additional_data": {
                          "description": "The additional data of the list",
                          "type": "object",
                          "properties": {
                            "start": {
                              "type": "integer",
                              "description": "Pagination start"
                            },
                            "limit": {
                              "type": "integer",
                              "description": "Items shown per page"
                            },
                            "more_items_in_collection": {
                              "type": "boolean",
                              "description": "If there are more list items in the collection than displayed or not"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "success": true,
                  "data": [
                    {
                      "object": "mailMessage",
                      "timestamp": "2020-09-16 13:38:17",
                      "data": {
                        "id": 1,
                        "from": [
                          {
                            "id": 1,
                            "email_address": "mail@example.org",
                            "name": "Test",
                            "linked_person_id": 1,
                            "linked_person_name": "",
                            "mail_message_party_id": 1
                          }
                        ],
                        "to": [
                          {
                            "id": 1,
                            "email_address": "mail@example.org",
                            "name": "Test",
                            "linked_person_id": 1,
                            "linked_person_name": "",
                            "mail_message_party_id": 1
                          }
                        ],
                        "cc": [
                          {
                            "id": 1,
                            "email_address": "mail@example.org",
                            "name": "Test",
                            "linked_person_id": 1,
                            "linked_person_name": "",
                            "mail_message_party_id": 1
                          }
                        ],
                        "bcc": [
                          {
                            "id": 1,
                            "email_address": "mail@example.org",
                            "name": "Test",
                            "linked_person_id": 1,
                            "linked_person_name": "",
                            "mail_message_party_id": 1
                          }
                        ],
                        "body_url": "https://example.org",
                        "nylas_id": "8cfw8n7l4iy24xxxxxxxxx",
                        "account_id": "ao5gpry0zykr1xxxxxxxxx",
                        "user_id": 1,
                        "mail_thread_id": 1,
                        "subject": "test subject",
                        "snippet": "test subject",
                        "mail_tracking_status": "opened",
                        "mail_link_tracking_enabled_flag": 0,
                        "read_flag": 1,
                        "draft": "",
                        "s3_bucket": "pipedrive-mail-live-fr",
                        "s3_bucket_path": "e9cf-6081745/77777/nylas/111/1111/body",
                        "draft_flag": 0,
                        "synced_flag": 1,
                        "deleted_flag": 0,
                        "external_deleted_flag": false,
                        "has_body_flag": 1,
                        "sent_flag": 0,
                        "sent_from_pipedrive_flag": 0,
                        "smart_bcc_flag": 0,
                        "message_time": "2019-11-14T06:02:06.000Z",
                        "add_time": "2019-11-14T06:02:06.000Z",
                        "update_time": "2019-11-14T07:15:49.000Z",
                        "has_attachments_flag": 1,
                        "has_inline_attachments_flag": 0,
                        "has_real_attachments_flag": 1,
                        "mua_message_id": "8cfw8n7l4iy24lfhnexxxxxx-0@mailer.nylas.com",
                        "template_id": 1,
                        "item_type": "mailMessage",
                        "timestamp": "2020-09-16T13:37:50.000Z",
                        "company_id": 6081745
                      }
                    }
                  ],
                  "additional_data": {
                    "pagination": {
                      "start": 0,
                      "limit": 100,
                      "more_items_in_collection": true
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/persons/{id}/merge": {
      "put": {
        "summary": "Merge two persons",
        "description": "Merges a person with another person. For more information, see the tutorial for <a href=\"https://pipedrive.readme.io/docs/merging-two-persons\" target=\"_blank\" rel=\"noopener noreferrer\">merging two persons</a>.",
        "operationId": "mergePersons",
        "tags": [ "Persons" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the person",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "mergePersonsRequest",
                "type": "object",
                "required": [ "merge_with_id" ],
                "properties": {
                  "merge_with_id": {
                    "type": "integer",
                    "description": "The ID of the person that will not be overwritten. This person’s data will be prioritized in case of conflict with the other person."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "mergePersons",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "title": "mergePersonItem",
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "description": "The ID of the person"
                                },
                                "company_id": {
                                  "type": "integer",
                                  "description": "The ID of the company related to the person"
                                },
                                "active_flag": {
                                  "type": "boolean",
                                  "description": "Whether the person is active or not"
                                },
                                "phone": {
                                  "type": "array",
                                  "description": "A phone number supplied as a string or an array of phone objects related to the person. The structure of the array is as follows: `[{ \"value\": \"12345\", \"primary\": \"true\", \"label\": \"mobile\" }]`. Please note that only `value` is required.",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "value": {
                                        "type": "string",
                                        "description": "The phone number"
                                      },
                                      "primary": {
                                        "type": "boolean",
                                        "description": "Boolean that indicates if phone number is primary for the person or not"
                                      },
                                      "label": {
                                        "type": "string",
                                        "description": "The label that indicates the type of the phone number. (Possible values - work, home, mobile or other)"
                                      }
                                    }
                                  }
                                },
                                "email": {
                                  "type": "array",
                                  "description": "An email address as a string or an array of email objects related to the person. The structure of the array is as follows: `[{ \"value\": \"mail@example.com\", \"primary\": \"true\", \"label\": \"main\" } ]`. Please note that only `value` is required.",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "value": {
                                        "type": "string",
                                        "description": "Email"
                                      },
                                      "primary": {
                                        "type": "boolean",
                                        "description": "Boolean that indicates if email is primary for the person or not"
                                      },
                                      "label": {
                                        "type": "string",
                                        "description": "The label that indicates the type of the email. (Possible values - work, home or other)"
                                      }
                                    }
                                  }
                                },
                                "first_char": {
                                  "type": "string",
                                  "description": "The first letter of the name of the person"
                                },
                                "add_time": {
                                  "type": "string",
                                  "description": "The date and time when the person was added/created. Format: YYYY-MM-DD HH:MM:SS"
                                },
                                "update_time": {
                                  "type": "string",
                                  "description": "The last updated date and time of the person. Format: YYYY-MM-DD HH:MM:SS"
                                },
                                "visible_to": {
                                  "type": "string",
                                  "description": "The visibility group ID of who can see the person"
                                },
                                "picture_id": {
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "integer",
                                          "description": "The ID of the picture associated with the item"
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "item_type": {
                                          "type": "string",
                                          "description": "The type of item the picture is related to"
                                        },
                                        "item_id": {
                                          "type": "integer",
                                          "description": "The ID of related item"
                                        },
                                        "active_flag": {
                                          "type": "boolean",
                                          "description": "Whether the associated picture is active or not"
                                        },
                                        "add_time": {
                                          "type": "string",
                                          "description": "The add time of the picture"
                                        },
                                        "update_time": {
                                          "type": "string",
                                          "description": "The update time of the picture"
                                        },
                                        "added_by_user_id": {
                                          "type": "integer",
                                          "description": "The ID of the user who added the picture"
                                        },
                                        "pictures": {
                                          "type": "object",
                                          "properties": {
                                            "128": {
                                              "type": "string",
                                              "description": "The URL of the 128*128 picture"
                                            },
                                            "512": {
                                              "type": "string",
                                              "description": "The URL of the 512*512 picture"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  ]
                                },
                                "label": {
                                  "type": "integer",
                                  "description": "The label assigned to the person"
                                },
                                "org_name": {
                                  "type": "string",
                                  "description": "The name of the organization associated with the person"
                                },
                                "owner_name": {
                                  "type": "string",
                                  "description": "The name of the owner associated with the person"
                                },
                                "cc_email": {
                                  "type": "string",
                                  "description": "The BCC email associated with the person"
                                }
                              }
                            },
                            {
                              "type": "object",
                              "title": "additionalMergePersonInfo",
                              "allOf": [
                                {
                                  "type": "object",
                                  "title": "personNameCountAndEmailInfoWithIds",
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "owner_id": {
                                          "type": "integer",
                                          "description": "The ID of the owner related to the person"
                                        },
                                        "org_id": {
                                          "type": "integer",
                                          "description": "The ID of the organization related to the person"
                                        },
                                        "merge_what_id": {
                                          "type": "integer",
                                          "description": "The ID of the person with what the main person was merged"
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "title": "personNameCountAndEmailInfo",
                                      "allOf": [
                                        {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string",
                                              "description": "The name of the person"
                                            },
                                            "first_name": {
                                              "type": "string",
                                              "description": "The first name of the person"
                                            },
                                            "last_name": {
                                              "type": "string",
                                              "description": "The last name of the person"
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "title": "personCountAndEmailInfo",
                                          "allOf": [
                                            {
                                              "type": "object",
                                              "properties": {
                                                "email_messages_count": {
                                                  "type": "integer",
                                                  "description": "The count of email messages related to the person"
                                                },
                                                "activities_count": {
                                                  "type": "integer",
                                                  "description": "The count of activities related to the person"
                                                },
                                                "done_activities_count": {
                                                  "type": "integer",
                                                  "description": "The count of done activities related to the person"
                                                },
                                                "undone_activities_count": {
                                                  "type": "integer",
                                                  "description": "The count of undone activities related to the person"
                                                },
                                                "files_count": {
                                                  "type": "integer",
                                                  "description": "The count of files related to the person"
                                                },
                                                "notes_count": {
                                                  "type": "integer",
                                                  "description": "The count of notes related to the person"
                                                },
                                                "followers_count": {
                                                  "type": "integer",
                                                  "description": "The count of followers related to the person"
                                                }
                                              }
                                            },
                                            {
                                              "type": "object",
                                              "properties": {
                                                "last_incoming_mail_time": {
                                                  "type": "string",
                                                  "description": "The date and time of the last incoming email associated with the person"
                                                },
                                                "last_outgoing_mail_time": {
                                                  "type": "string",
                                                  "description": "The date and time of the last outgoing email associated with the person"
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "object",
                                  "title": "mergePersonDealRelatedInfo",
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "title": "dealCountAndActivityInfo",
                                      "allOf": [
                                        {
                                          "type": "object",
                                          "properties": {
                                            "open_deals_count": {
                                              "type": "integer",
                                              "description": "The count of open deals related with the item"
                                            },
                                            "related_open_deals_count": {
                                              "type": "integer",
                                              "description": "The count of related open deals related with the item"
                                            },
                                            "closed_deals_count": {
                                              "type": "integer",
                                              "description": "The count of closed deals related with the item"
                                            },
                                            "related_closed_deals_count": {
                                              "type": "integer",
                                              "description": "The count of related closed deals related with the item"
                                            },
                                            "won_deals_count": {
                                              "type": "integer",
                                              "description": "The count of won deals related with the item"
                                            },
                                            "related_won_deals_count": {
                                              "type": "integer",
                                              "description": "The count of related won deals related with the item"
                                            },
                                            "lost_deals_count": {
                                              "type": "integer",
                                              "description": "The count of lost deals related with the item"
                                            },
                                            "related_lost_deals_count": {
                                              "type": "integer",
                                              "description": "The count of related lost deals related with the item"
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "properties": {
                                            "next_activity_date": {
                                              "type": "string",
                                              "description": "The date of the next activity associated with the deal"
                                            },
                                            "next_activity_time": {
                                              "type": "string",
                                              "description": "The time of the next activity associated with the deal"
                                            },
                                            "next_activity_id": {
                                              "type": "integer",
                                              "nullable": true,
                                              "description": "The ID of the next activity associated with the deal"
                                            },
                                            "last_activity_id": {
                                              "type": "integer",
                                              "nullable": true,
                                              "description": "The ID of the last activity associated with the deal"
                                            },
                                            "last_activity_date": {
                                              "type": "string",
                                              "nullable": true,
                                              "description": "The date of the last activity associated with the deal"
                                            }
                                          }
                                        }
                                      ]
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "participant_open_deals_count": {
                                          "type": "integer",
                                          "description": "The count of open participant deals related with the item"
                                        },
                                        "participant_closed_deals_count": {
                                          "type": "integer",
                                          "description": "The count of closed participant deals related with the item"
                                        }
                                      }
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "success": true,
                  "data": {
                    "id": 1,
                    "company_id": 12,
                    "owner_id": 123,
                    "org_id": 123,
                    "name": "Will Smith",
                    "first_name": "Will",
                    "last_name": "Smith",
                    "open_deals_count": 2,
                    "related_open_deals_count": 2,
                    "closed_deals_count": 3,
                    "related_closed_deals_count": 3,
                    "participant_open_deals_count": 1,
                    "participant_closed_deals_count": 1,
                    "email_messages_count": 1,
                    "activities_count": 1,
                    "done_activities_count": 1,
                    "undone_activities_count": 2,
                    "files_count": 2,
                    "notes_count": 2,
                    "followers_count": 3,
                    "won_deals_count": 3,
                    "related_won_deals_count": 3,
                    "lost_deals_count": 1,
                    "related_lost_deals_count": 1,
                    "active_flag": true,
                    "phone": [
                      { "value": "12345", "primary": true, "label": "work" }
                    ],
                    "email": [
                      { "value": "12345", "primary": true, "label": "work" }
                    ],
                    "first_char": "w",
                    "update_time": "2020-05-08 05:30:20",
                    "add_time": "2017-10-18 13:23:07",
                    "visible_to": "3",
                    "picture_id": {
                      "item_type": "person",
                      "item_id": 25,
                      "active_flag": true,
                      "add_time": "2020-09-08 08:17:52",
                      "update_time": "0000-00-00 00:00:00",
                      "added_by_user_id": 967055,
                      "pictures": {
                        "128": "https://pipedrive-profile-pics.s3.example.com/f8893852574273f2747bf6ef09d11cfb4ac8f269_128.jpg",
                        "512": "https://pipedrive-profile-pics.s3.example.com/f8893852574273f2747bf6ef09d11cfb4ac8f269_512.jpg"
                      },
                      "value": 4
                    },
                    "next_activity_date": "2019-11-29",
                    "next_activity_time": "11:30:00",
                    "next_activity_id": 128,
                    "last_activity_id": 34,
                    "last_activity_date": "2019-11-28",
                    "last_incoming_mail_time": "2019-05-29 18:21:42",
                    "last_outgoing_mail_time": "2019-05-30 03:45:35",
                    "label": 1,
                    "org_name": "Organization name",
                    "owner_name": "Jane Doe",
                    "cc_email": "org@pipedrivemail.com",
                    "merge_what_id": 456
                  }
                }
              }
            }
          }
        }
      }
    },
    "/persons/{id}/permittedUsers": {
      "get": {
        "summary": "List permitted users",
        "description": "List users permitted to access a person.",
        "operationId": "getPersonUsers",
        "tags": [ "Persons" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the person",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "listPermittedUsers",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "description": "The list of permitted user IDs",
                          "items": { "type": "number" }
                        }
                      }
                    }
                  ]
                },
                "example": { "success": true, "data": [ 123, 777 ] }
              }
            }
          }
        }
      }
    },
    "/persons/{id}/picture": {
      "delete": {
        "summary": "Delete person picture",
        "description": "Deletes a person’s picture.",
        "operationId": "deletePersonPicture",
        "tags": [ "Persons" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the person",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "deletePerson",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "description": "The ID of the deleted person"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": { "success": true, "data": { "id": 12 } }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add person picture",
        "description": "Adds a picture to a person. If a picture is already set, the old picture will be replaced. Added image (or the cropping parameters supplied with the request) should have an equal width and height and should be at least 128 pixels. GIF, JPG and PNG are accepted. All added images will be resized to 128 and 512 pixel wide squares.",
        "operationId": "addPersonPicture",
        "tags": [ "Persons" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the person",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "title": "addPersonPictureRequest",
                "type": "object",
                "required": [ "file" ],
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "description": "One image supplied in the multipart/form-data encoding"
                  },
                  "crop_x": {
                    "type": "integer",
                    "description": "X coordinate to where start cropping form (in pixels)"
                  },
                  "crop_y": {
                    "type": "integer",
                    "description": "Y coordinate to where start cropping form (in pixels)"
                  },
                  "crop_width": {
                    "type": "integer",
                    "description": "The width of the cropping area (in pixels)"
                  },
                  "crop_height": {
                    "type": "integer",
                    "description": "The height of the cropping area (in pixels)"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "addPersonPicture",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "description": "The picture that is associated with the item",
                          "properties": {
                            "PICTURE_ID": {
                              "type": "object",
                              "description": "The ID of the picture",
                              "allOf": [
                                {
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "integer",
                                          "description": "The ID of the picture associated with the item"
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "item_type": {
                                          "type": "string",
                                          "description": "The type of item the picture is related to"
                                        },
                                        "item_id": {
                                          "type": "integer",
                                          "description": "The ID of related item"
                                        },
                                        "active_flag": {
                                          "type": "boolean",
                                          "description": "Whether the associated picture is active or not"
                                        },
                                        "add_time": {
                                          "type": "string",
                                          "description": "The add time of the picture"
                                        },
                                        "update_time": {
                                          "type": "string",
                                          "description": "The update time of the picture"
                                        },
                                        "added_by_user_id": {
                                          "type": "integer",
                                          "description": "The ID of the user who added the picture"
                                        },
                                        "pictures": {
                                          "type": "object",
                                          "properties": {
                                            "128": {
                                              "type": "string",
                                              "description": "The URL of the 128*128 picture"
                                            },
                                            "512": {
                                              "type": "string",
                                              "description": "The URL of the 512*512 picture"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  ]
                                }
                              ]
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "success": true,
                  "data": {
                    "id": 1,
                    "item_type": "person",
                    "item_id": 25,
                    "active_flag": true,
                    "add_time": "2020-09-08 08:17:52",
                    "update_time": "0000-00-00 00:00:00",
                    "added_by_user_id": 967055,
                    "pictures": {
                      "128": "https://pipedrive-profile-pics.s3.example.com/f8893852574273f2747bf6ef09d11cfb4ac8f269_128.jpg",
                      "512": "https://pipedrive-profile-pics.s3.example.com/f8893852574273f2747bf6ef09d11cfb4ac8f269_512.jpg"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/persons/{id}/products": {
      "get": {
        "summary": "List products associated with a person",
        "description": "Lists products associated with a person.",
        "operationId": "getPersonProducts",
        "tags": [ "Persons" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the person",
            "required": true,
            "schema": { "type": "integer" }
          },
          {
            "in": "query",
            "name": "start",
            "description": "Pagination start",
            "schema": { "type": "integer", "default": 0 }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Items shown per page",
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "getPersonProducts",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "description": "The array of deal products",
                          "items": {
                            "type": "object",
                            "properties": {
                              "DEAL_ID": {
                                "type": "object",
                                "properties": {
                                  "deal": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "integer",
                                        "description": "The ID of the deal"
                                      },
                                      "company_id": {
                                        "type": "integer",
                                        "description": "The ID of the company"
                                      },
                                      "creator_user_id": {
                                        "type": "integer",
                                        "description": "The ID of the deal creator"
                                      },
                                      "user_id": {
                                        "type": "integer",
                                        "description": "The ID of the user"
                                      },
                                      "person_id": {
                                        "type": "integer",
                                        "description": "The ID of the person associated with the deal"
                                      },
                                      "org_id": {
                                        "type": "integer",
                                        "description": "The ID of the organization associated with the deal"
                                      },
                                      "stage_id": {
                                        "type": "integer",
                                        "description": "The ID of the deal stage"
                                      },
                                      "title": {
                                        "type": "string",
                                        "description": "The title of the deal"
                                      },
                                      "value": {
                                        "type": "number",
                                        "description": "The value of the deal"
                                      },
                                      "currency": {
                                        "type": "string",
                                        "description": "The currency associated with the deal"
                                      },
                                      "add_time": {
                                        "type": "string",
                                        "description": "The creation date and time of the deal"
                                      },
                                      "first_add_time": {
                                        "type": "string",
                                        "description": "The first creation date and time of the deal"
                                      },
                                      "update_time": {
                                        "type": "string",
                                        "description": "The last updated date and time of the deal"
                                      },
                                      "stage_change_time": {
                                        "type": "string",
                                        "description": "The last updated date and time of the deal stage"
                                      },
                                      "active": {
                                        "type": "boolean",
                                        "description": "Whether the deal is active or not"
                                      },
                                      "deleted": {
                                        "type": "boolean",
                                        "description": "Whether the deal is deleted or not"
                                      },
                                      "status": {
                                        "type": "string",
                                        "description": "The status of the deal"
                                      },
                                      "probability": {
                                        "type": "number",
                                        "nullable": true,
                                        "description": "The success probability percentage of the deal"
                                      },
                                      "next_activity_date": {
                                        "type": "string",
                                        "description": "The date of the next activity associated with the deal"
                                      },
                                      "next_activity_time": {
                                        "type": "string",
                                        "description": "The time of the next activity associated with the deal"
                                      },
                                      "next_activity_id": {
                                        "type": "integer",
                                        "nullable": true,
                                        "description": "The ID of the next activity associated with the deal"
                                      },
                                      "last_activity_id": {
                                        "type": "integer",
                                        "nullable": true,
                                        "description": "The ID of the last activity associated with the deal"
                                      },
                                      "last_activity_date": {
                                        "type": "string",
                                        "nullable": true,
                                        "description": "The date of the last activity associated with the deal"
                                      },
                                      "lost_reason": {
                                        "type": "string",
                                        "nullable": true,
                                        "description": "The reason for losing the deal"
                                      },
                                      "visible_to": {
                                        "type": "string",
                                        "description": "The visibility of the deal"
                                      },
                                      "close_time": {
                                        "type": "string",
                                        "nullable": true,
                                        "description": "The date and time of closing the deal"
                                      },
                                      "pipeline_id": {
                                        "type": "integer",
                                        "description": "The ID of pipeline associated with the deal"
                                      },
                                      "won_time": {
                                        "type": "string",
                                        "description": "The date and time of changing the deal status as won"
                                      },
                                      "first_won_time": {
                                        "type": "string",
                                        "description": "The date and time of the first time changing the deal status as won"
                                      },
                                      "lost_time": {
                                        "type": "string",
                                        "description": "The date and time of changing the deal status as lost"
                                      },
                                      "products_count": {
                                        "type": "integer",
                                        "description": "The number of products associated with the deal"
                                      },
                                      "files_count": {
                                        "type": "integer",
                                        "description": "The number of files associated with the deal"
                                      },
                                      "notes_count": {
                                        "type": "integer",
                                        "description": "The number of notes associated with the deal"
                                      },
                                      "followers_count": {
                                        "type": "integer",
                                        "description": "The number of followers associated with the deal"
                                      },
                                      "email_messages_count": {
                                        "type": "integer",
                                        "description": "The number of emails associated with the deal"
                                      },
                                      "activities_count": {
                                        "type": "integer",
                                        "description": "The number of activities associated with the deal"
                                      },
                                      "done_activities_count": {
                                        "type": "integer",
                                        "description": "The number of completed activities associated with the deal"
                                      },
                                      "undone_activities_count": {
                                        "type": "integer",
                                        "description": "The number of incomplete activities associated with the deal"
                                      },
                                      "participants_count": {
                                        "type": "integer",
                                        "description": "The number of participants associated with the deal"
                                      },
                                      "expected_close_date": {
                                        "type": "string",
                                        "format": "date",
                                        "description": "The expected close date of the deal"
                                      },
                                      "last_incoming_mail_time": {
                                        "type": "string",
                                        "description": "The date and time of the last incoming email associated with the deal"
                                      },
                                      "last_outgoing_mail_time": {
                                        "type": "string",
                                        "description": "The date and time of the last outgoing email associated with the deal"
                                      },
                                      "label": {
                                        "type": "string",
                                        "description": "The label assigned to the deal"
                                      }
                                    }
                                  },
                                  "product": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "integer",
                                        "description": "The ID of the product"
                                      },
                                      "company_id": {
                                        "type": "integer",
                                        "description": "The ID of the company"
                                      },
                                      "name": {
                                        "type": "string",
                                        "description": "The name of the product"
                                      },
                                      "code": {
                                        "type": "string",
                                        "description": "The product code"
                                      },
                                      "description": {
                                        "type": "string",
                                        "description": "The description of the product"
                                      },
                                      "unit": {
                                        "type": "string",
                                        "description": "The unit in which this product is sold"
                                      },
                                      "tax": {
                                        "type": "number",
                                        "description": "The tax percentage",
                                        "default": 0
                                      },
                                      "category": {
                                        "type": "string",
                                        "description": "The category of the product"
                                      },
                                      "active_flag": {
                                        "description": "Whether this product will be made active or not",
                                        "title": "numberBooleanDefault1",
                                        "type": "number",
                                        "default": 1,
                                        "enum": [ 0, 1 ]
                                      },
                                      "selectable": {
                                        "description": "Whether this product can be selected in deals or not",
                                        "title": "numberBooleanDefault1",
                                        "type": "number",
                                        "default": 1,
                                        "enum": [ 0, 1 ]
                                      },
                                      "first_char": {
                                        "type": "string",
                                        "description": "The first letter of the product name"
                                      },
                                      "visible_to": {
                                        "allOf": [
                                          {
                                            "type": "string",
                                            "enum": [ "1", "3", "5", "7" ]
                                          }
                                        ],
                                        "description": "The visibility of the product. If omitted, the visibility will be set to the default visibility setting of this item type for the authorized user.<table><tr><th>Value</th><th>Description</th></tr><tr><td>`1`</td><td>Owner &amp; followers (private)</td></tr><tr><td>`3`</td><td>Entire company (shared)</td></tr></table>"
                                      },
                                      "owner_id": {
                                        "type": "integer",
                                        "description": "The ID of the user who will be marked as the owner of this product. When omitted, the authorized user ID will be used."
                                      },
                                      "files_count": {
                                        "type": "integer",
                                        "description": "The count of files"
                                      },
                                      "add_time": {
                                        "type": "string",
                                        "description": "The date and time when the product was added to the deal"
                                      },
                                      "update_time": {
                                        "type": "string",
                                        "description": "The date and time when the product was updated to the deal"
                                      },
                                      "deal_id": {
                                        "type": "integer",
                                        "description": "The ID of the deal"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "additional_data": {
                          "type": "object",
                          "properties": {
                            "pagination": {
                              "description": "Pagination details of the list",
                              "type": "object",
                              "properties": {
                                "start": {
                                  "type": "integer",
                                  "description": "Pagination start"
                                },
                                "limit": {
                                  "type": "integer",
                                  "description": "Items shown per page"
                                },
                                "more_items_in_collection": {
                                  "type": "boolean",
                                  "description": "Whether there are more list items in the collection than displayed"
                                },
                                "next_start": {
                                  "type": "integer",
                                  "description": "Next pagination start"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "success": true,
                  "data": [
                    {
                      "123": {
                        "deal": {
                          "id": 123,
                          "company_id": 1938610,
                          "creator_user_id": 599218,
                          "user_id": 599218,
                          "person_id": 25,
                          "org_id": 1,
                          "stage_id": 2,
                          "title": "tervist",
                          "value": 3342.79,
                          "currency": "EUR",
                          "add_time": "2017-10-18 13:23:07",
                          "first_add_time": "2017-10-18 13:23:07",
                          "update_time": "2020-09-18 12:12:54",
                          "stage_change_time": "2020-05-07 11:44:00",
                          "active": true,
                          "deleted": false,
                          "status": "open",
                          "probability": null,
                          "next_activity_date": "2020-01-17",
                          "next_activity_time": null,
                          "next_activity_id": 7,
                          "last_activity_id": null,
                          "last_activity_date": null,
                          "lost_reason": null,
                          "visible_to": "3",
                          "close_time": null,
                          "pipeline_id": 1,
                          "won_time": null,
                          "first_won_time": null,
                          "lost_time": null,
                          "products_count": 6,
                          "files_count": 1,
                          "notes_count": 0,
                          "email_messages_count": 0,
                          "activities_count": 1,
                          "done_activities_count": 0,
                          "undone_activities_count": 1,
                          "participants_count": 2,
                          "expected_close_date": null,
                          "last_incoming_mail_time": "2020-09-18 12:12:54",
                          "last_outgoing_mail_time": "2020-09-18 12:12:54",
                          "label": null
                        },
                        "product": {
                          "id": 4,
                          "company_id": 1938610,
                          "name": "1234",
                          "code": "444",
                          "description": "123",
                          "unit": "",
                          "tax": 0,
                          "category": "40",
                          "active_flag": true,
                          "selectable": true,
                          "first_char": "1",
                          "visible_to": "3",
                          "owner_id": 967055,
                          "files_count": null,
                          "add_time": "2020-01-28 11:54:41",
                          "update_time": "2020-09-18 11:54:36",
                          "deal_id": 5
                        }
                      }
                    }
                  ],
                  "additional_data": {
                    "pagination": {
                      "start": 0,
                      "limit": 100,
                      "more_items_in_collection": true
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/personFields": {
      "get": {
        "summary": "Get all person fields",
        "description": "Returns data about all person fields.<br>If a company uses the [Campaigns product](https://pipedrive.readme.io/docs/campaigns-in-pipedrive-api), then this endpoint will also return the `data.marketing_status` field.",
        "operationId": "getPersonFields",
        "parameters": [
          {
            "in": "query",
            "name": "start",
            "description": "Pagination start",
            "schema": { "type": "integer", "default": 0 }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Items shown per page",
            "schema": { "type": "integer" }
          }
        ],
        "tags": [ "PersonFields" ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "fields",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer",
                                "description": "The ID of the field. Value is `null` in case of subfields."
                              },
                              "key": {
                                "type": "string",
                                "description": "The key of the field. For custom fields this is generated upon creation."
                              },
                              "name": {
                                "type": "string",
                                "description": "The name of the field"
                              },
                              "order_nr": {
                                "type": "integer",
                                "description": "The order number of the field"
                              },
                              "field_type": {
                                "allOf": [
                                  {
                                    "type": "string",
                                    "enum": [
                                      "address",
                                      "date",
                                      "daterange",
                                      "double",
                                      "enum",
                                      "monetary",
                                      "org",
                                      "people",
                                      "phone",
                                      "set",
                                      "text",
                                      "time",
                                      "timerange",
                                      "user",
                                      "varchar",
                                      "varchar_auto",
                                      "visible_to"
                                    ],
                                    "description": "The type of the field<table><tr><th>Value</th><th>Description</th></tr><tr><td>`address`</td><td>Address field (has multiple subfields, autocompleted by Google Maps)</td></tr><tr><td>`date`</td><td>Date (format YYYY-MM-DD)</td></tr><tr><td>`daterange`</td><td>Date-range field (has a start date and end date value, both YYYY-MM-DD)</td></tr><tr><td>`double`</td><td>Numeric value</td></tr><tr><td>`enum`</td><td>Options field with a single possible chosen option</td></tr><tr></tr><tr><td>`monetary`</td><td>Monetary field (has a numeric value and a currency value)</td></tr><tr><td>`org`</td><td>Organization field (contains an organization ID which is stored on the same account)</td></tr><tr><td>`people`</td><td>Person field (contains a person ID which is stored on the same account)</td></tr><tr><td>`phone`</td><td>Phone field (up to 255 numbers and/or characters)</td></tr><tr><td>`set`</td><td>Options field with a possibility of having multiple chosen options</td></tr><tr><td>`text`</td><td>Long text (up to 65k characters)</td></tr><tr><td>`time`</td><td>Time field (format HH:MM:SS)</td></tr><tr><td>`timerange`</td><td>Time-range field (has a start time and end time value, both HH:MM:SS)</td></tr><tr><td>`user`</td><td>User field (contains a user ID of another Pipedrive user)</td></tr><tr><td>`varchar`</td><td>Text (up to 255 characters)</td></tr><tr><td>`varchar_auto`</td><td>Autocomplete text (up to 255 characters)</td></tr><tr><td>`visible_to`</td><td>System field that keeps item's visibility setting</td></tr></table>"
                                  }
                                ]
                              },
                              "add_time": {
                                "type": "string",
                                "format": "datetime",
                                "description": "The creation time of the field"
                              },
                              "update_time": {
                                "type": "string",
                                "format": "datetime",
                                "description": "The update time of the field"
                              },
                              "last_updated_by_user_id": {
                                "type": "integer",
                                "description": "The ID of the user who created or most recently updated the field, only applicable for custom fields"
                              },
                              "active_flag": {
                                "type": "boolean",
                                "description": "The active flag of the field"
                              },
                              "edit_flag": {
                                "type": "boolean",
                                "description": "The edit flag of the field"
                              },
                              "index_visible_flag": {
                                "type": "boolean",
                                "description": "Not used"
                              },
                              "details_visible_flag": {
                                "type": "boolean",
                                "description": "Not used"
                              },
                              "add_visible_flag": {
                                "type": "boolean",
                                "description": "Not used"
                              },
                              "important_flag": {
                                "type": "boolean",
                                "description": "Not used"
                              },
                              "bulk_edit_allowed": {
                                "type": "boolean",
                                "description": "Whether or not the field of an item can be edited in bulk"
                              },
                              "searchable_flag": {
                                "type": "boolean",
                                "description": "Whether or not items can be searched by this field"
                              },
                              "filtering_allowed": {
                                "type": "boolean",
                                "description": "Whether or not items can be filtered by this field"
                              },
                              "sortable_flag": {
                                "type": "boolean",
                                "description": "Whether or not items can be sorted by this field"
                              },
                              "mandatory_flag": {
                                "type": "boolean",
                                "description": "Whether or not the field is mandatory"
                              },
                              "options": {
                                "type": "array",
                                "nullable": true,
                                "items": { "type": "object" },
                                "description": "The options of the field. When there are no options, `null` is returned."
                              },
                              "options_deleted": {
                                "type": "array",
                                "items": { "type": "object" },
                                "description": "The deleted options of the field. Only present when there is at least 1 deleted option."
                              },
                              "is_subfield": {
                                "type": "boolean",
                                "description": "Whether or not the field is a subfield of another field. Only present if field is subfield."
                              },
                              "subfields": {
                                "type": "array",
                                "items": { "type": "object" },
                                "description": "The subfields of the field. Only present when the field has subfields."
                              }
                            }
                          }
                        },
                        "additional_data": {
                          "description": "The additional data of the list",
                          "type": "object",
                          "properties": {
                            "start": {
                              "type": "integer",
                              "description": "Pagination start"
                            },
                            "limit": {
                              "type": "integer",
                              "description": "Items shown per page"
                            },
                            "more_items_in_collection": {
                              "type": "boolean",
                              "description": "If there are more list items in the collection than displayed or not"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "success": true,
                  "data": [
                    {
                      "id": 1,
                      "key": "title",
                      "name": "Title",
                      "order_nr": 2,
                      "field_type": "varchar",
                      "add_time": "2019-02-04 13:58:03",
                      "update_time": "2019-02-04 13:58:03",
                      "last_updated_by_user_id": 1,
                      "active_flag": true,
                      "edit_flag": false,
                      "index_visible_flag": true,
                      "details_visible_flag": true,
                      "add_visible_flag": true,
                      "important_flag": false,
                      "bulk_edit_allowed": true,
                      "searchable_flag": false,
                      "filtering_allowed": true,
                      "sortable_flag": true,
                      "options": null,
                      "mandatory_flag": true
                    },
                    {
                      "id": 2,
                      "key": "9dc80c50d78a15643bfc4ca79d76156a73a1ca0e",
                      "name": "Customer Type",
                      "order_nr": 1,
                      "field_type": "enum",
                      "add_time": "2019-02-04 13:58:03",
                      "update_time": "2019-02-04 13:58:03",
                      "last_updated_by_user_id": 1,
                      "active_flag": true,
                      "edit_flag": true,
                      "index_visible_flag": true,
                      "details_visible_flag": true,
                      "add_visible_flag": false,
                      "important_flag": false,
                      "bulk_edit_allowed": true,
                      "searchable_flag": false,
                      "filtering_allowed": true,
                      "sortable_flag": true,
                      "options": [
                        { "id": 190, "label": "Private person" },
                        { "id": 191, "label": "Company" },
                        { "id": 192, "label": "Government" }
                      ],
                      "mandatory_flag": true
                    }
                  ],
                  "additional_data": {
                    "pagination": {
                      "start": 0,
                      "limit": 100,
                      "more_items_in_collection": false
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add a new person field",
        "description": "Adds a new person field. For more information, see the tutorial for <a href=\"https://pipedrive.readme.io/docs/adding-a-new-custom-field\" target=\"_blank\" rel=\"noopener noreferrer\">adding a new custom field</a>.",
        "operationId": "addPersonField",
        "tags": [ "PersonFields" ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "createFieldRequest",
                "allOf": [
                  {
                    "type": "object",
                    "required": [ "name" ],
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The name of the field"
                      },
                      "options": {
                        "type": "string",
                        "description": "When `field_type` is either set or enum, possible options must be supplied as a JSON-encoded sequential array of objects. Example: `[{\"label\":\"New Item\"}]`"
                      },
                      "add_visible_flag": {
                        "type": "boolean",
                        "enum": [ true, false ],
                        "default": true,
                        "description": "Whether the field is available in the 'add new' modal or not (both in the web and mobile app)"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "required": [ "field_type" ],
                    "properties": {
                      "field_type": {
                        "type": "string",
                        "enum": [
                          "address",
                          "date",
                          "daterange",
                          "double",
                          "enum",
                          "monetary",
                          "org",
                          "people",
                          "phone",
                          "set",
                          "text",
                          "time",
                          "timerange",
                          "user",
                          "varchar",
                          "varchar_auto",
                          "visible_to"
                        ],
                        "description": "The type of the field<table><tr><th>Value</th><th>Description</th></tr><tr><td>`address`</td><td>Address field (has multiple subfields, autocompleted by Google Maps)</td></tr><tr><td>`date`</td><td>Date (format YYYY-MM-DD)</td></tr><tr><td>`daterange`</td><td>Date-range field (has a start date and end date value, both YYYY-MM-DD)</td></tr><tr><td>`double`</td><td>Numeric value</td></tr><tr><td>`enum`</td><td>Options field with a single possible chosen option</td></tr><tr></tr><tr><td>`monetary`</td><td>Monetary field (has a numeric value and a currency value)</td></tr><tr><td>`org`</td><td>Organization field (contains an organization ID which is stored on the same account)</td></tr><tr><td>`people`</td><td>Person field (contains a person ID which is stored on the same account)</td></tr><tr><td>`phone`</td><td>Phone field (up to 255 numbers and/or characters)</td></tr><tr><td>`set`</td><td>Options field with a possibility of having multiple chosen options</td></tr><tr><td>`text`</td><td>Long text (up to 65k characters)</td></tr><tr><td>`time`</td><td>Time field (format HH:MM:SS)</td></tr><tr><td>`timerange`</td><td>Time-range field (has a start time and end time value, both HH:MM:SS)</td></tr><tr><td>`user`</td><td>User field (contains a user ID of another Pipedrive user)</td></tr><tr><td>`varchar`</td><td>Text (up to 255 characters)</td></tr><tr><td>`varchar_auto`</td><td>Autocomplete text (up to 255 characters)</td></tr><tr><td>`visible_to`</td><td>System field that keeps item's visibility setting</td></tr></table>"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "field",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "description": "The ID of the field. Value is `null` in case of subfields."
                            },
                            "key": {
                              "type": "string",
                              "description": "The key of the field. For custom fields this is generated upon creation."
                            },
                            "name": {
                              "type": "string",
                              "description": "The name of the field"
                            },
                            "order_nr": {
                              "type": "integer",
                              "description": "The order number of the field"
                            },
                            "field_type": {
                              "allOf": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "address",
                                    "date",
                                    "daterange",
                                    "double",
                                    "enum",
                                    "monetary",
                                    "org",
                                    "people",
                                    "phone",
                                    "set",
                                    "text",
                                    "time",
                                    "timerange",
                                    "user",
                                    "varchar",
                                    "varchar_auto",
                                    "visible_to"
                                  ],
                                  "description": "The type of the field<table><tr><th>Value</th><th>Description</th></tr><tr><td>`address`</td><td>Address field (has multiple subfields, autocompleted by Google Maps)</td></tr><tr><td>`date`</td><td>Date (format YYYY-MM-DD)</td></tr><tr><td>`daterange`</td><td>Date-range field (has a start date and end date value, both YYYY-MM-DD)</td></tr><tr><td>`double`</td><td>Numeric value</td></tr><tr><td>`enum`</td><td>Options field with a single possible chosen option</td></tr><tr></tr><tr><td>`monetary`</td><td>Monetary field (has a numeric value and a currency value)</td></tr><tr><td>`org`</td><td>Organization field (contains an organization ID which is stored on the same account)</td></tr><tr><td>`people`</td><td>Person field (contains a person ID which is stored on the same account)</td></tr><tr><td>`phone`</td><td>Phone field (up to 255 numbers and/or characters)</td></tr><tr><td>`set`</td><td>Options field with a possibility of having multiple chosen options</td></tr><tr><td>`text`</td><td>Long text (up to 65k characters)</td></tr><tr><td>`time`</td><td>Time field (format HH:MM:SS)</td></tr><tr><td>`timerange`</td><td>Time-range field (has a start time and end time value, both HH:MM:SS)</td></tr><tr><td>`user`</td><td>User field (contains a user ID of another Pipedrive user)</td></tr><tr><td>`varchar`</td><td>Text (up to 255 characters)</td></tr><tr><td>`varchar_auto`</td><td>Autocomplete text (up to 255 characters)</td></tr><tr><td>`visible_to`</td><td>System field that keeps item's visibility setting</td></tr></table>"
                                }
                              ]
                            },
                            "add_time": {
                              "type": "string",
                              "format": "datetime",
                              "description": "The creation time of the field"
                            },
                            "update_time": {
                              "type": "string",
                              "format": "datetime",
                              "description": "The update time of the field"
                            },
                            "last_updated_by_user_id": {
                              "type": "integer",
                              "description": "The ID of the user who created or most recently updated the field, only applicable for custom fields"
                            },
                            "active_flag": {
                              "type": "boolean",
                              "description": "The active flag of the field"
                            },
                            "edit_flag": {
                              "type": "boolean",
                              "description": "The edit flag of the field"
                            },
                            "index_visible_flag": {
                              "type": "boolean",
                              "description": "Not used"
                            },
                            "details_visible_flag": {
                              "type": "boolean",
                              "description": "Not used"
                            },
                            "add_visible_flag": {
                              "type": "boolean",
                              "description": "Not used"
                            },
                            "important_flag": {
                              "type": "boolean",
                              "description": "Not used"
                            },
                            "bulk_edit_allowed": {
                              "type": "boolean",
                              "description": "Whether or not the field of an item can be edited in bulk"
                            },
                            "searchable_flag": {
                              "type": "boolean",
                              "description": "Whether or not items can be searched by this field"
                            },
                            "filtering_allowed": {
                              "type": "boolean",
                              "description": "Whether or not items can be filtered by this field"
                            },
                            "sortable_flag": {
                              "type": "boolean",
                              "description": "Whether or not items can be sorted by this field"
                            },
                            "mandatory_flag": {
                              "type": "boolean",
                              "description": "Whether or not the field is mandatory"
                            },
                            "options": {
                              "type": "array",
                              "nullable": true,
                              "items": { "type": "object" },
                              "description": "The options of the field. When there are no options, `null` is returned."
                            },
                            "options_deleted": {
                              "type": "array",
                              "items": { "type": "object" },
                              "description": "The deleted options of the field. Only present when there is at least 1 deleted option."
                            },
                            "is_subfield": {
                              "type": "boolean",
                              "description": "Whether or not the field is a subfield of another field. Only present if field is subfield."
                            },
                            "subfields": {
                              "type": "array",
                              "items": { "type": "object" },
                              "description": "The subfields of the field. Only present when the field has subfields."
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "success": true,
                  "data": {
                    "id": 2,
                    "key": "9dc80c50d78a15643bfc4ca79d76156a73a1ca0e",
                    "name": "Customer Type",
                    "order_nr": 1,
                    "field_type": "enum",
                    "add_time": "2019-02-04 13:58:03",
                    "update_time": "2019-02-04 13:58:03",
                    "last_updated_by_user_id": 1,
                    "active_flag": true,
                    "edit_flag": true,
                    "index_visible_flag": true,
                    "details_visible_flag": true,
                    "add_visible_flag": false,
                    "important_flag": false,
                    "bulk_edit_allowed": true,
                    "searchable_flag": false,
                    "filtering_allowed": true,
                    "sortable_flag": true,
                    "options": [
                      { "id": 190, "label": "Private person" },
                      { "id": 191, "label": "Company" },
                      { "id": 192, "label": "Government" }
                    ],
                    "mandatory_flag": true
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete multiple person fields in bulk",
        "description": "Marks multiple fields as deleted.",
        "operationId": "deletePersonFields",
        "tags": [ "PersonFields" ],
        "parameters": [
          {
            "in": "query",
            "name": "ids",
            "schema": { "type": "string" },
            "required": true,
            "description": "The comma-separated field IDs to delete"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "deleteFields",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "array",
                              "items": { "type": "integer" },
                              "description": "The list of deleted field IDs"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": { "success": true, "data": { "id": [ 123, 456 ] } }
              }
            }
          }
        }
      }
    },
    "/personFields/{id}": {
      "get": {
        "summary": "Get one person field",
        "description": "Returns data about a specific person field.",
        "operationId": "getPersonField",
        "tags": [ "PersonFields" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the field",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "field",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "description": "The ID of the field. Value is `null` in case of subfields."
                            },
                            "key": {
                              "type": "string",
                              "description": "The key of the field. For custom fields this is generated upon creation."
                            },
                            "name": {
                              "type": "string",
                              "description": "The name of the field"
                            },
                            "order_nr": {
                              "type": "integer",
                              "description": "The order number of the field"
                            },
                            "field_type": {
                              "allOf": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "address",
                                    "date",
                                    "daterange",
                                    "double",
                                    "enum",
                                    "monetary",
                                    "org",
                                    "people",
                                    "phone",
                                    "set",
                                    "text",
                                    "time",
                                    "timerange",
                                    "user",
                                    "varchar",
                                    "varchar_auto",
                                    "visible_to"
                                  ],
                                  "description": "The type of the field<table><tr><th>Value</th><th>Description</th></tr><tr><td>`address`</td><td>Address field (has multiple subfields, autocompleted by Google Maps)</td></tr><tr><td>`date`</td><td>Date (format YYYY-MM-DD)</td></tr><tr><td>`daterange`</td><td>Date-range field (has a start date and end date value, both YYYY-MM-DD)</td></tr><tr><td>`double`</td><td>Numeric value</td></tr><tr><td>`enum`</td><td>Options field with a single possible chosen option</td></tr><tr></tr><tr><td>`monetary`</td><td>Monetary field (has a numeric value and a currency value)</td></tr><tr><td>`org`</td><td>Organization field (contains an organization ID which is stored on the same account)</td></tr><tr><td>`people`</td><td>Person field (contains a person ID which is stored on the same account)</td></tr><tr><td>`phone`</td><td>Phone field (up to 255 numbers and/or characters)</td></tr><tr><td>`set`</td><td>Options field with a possibility of having multiple chosen options</td></tr><tr><td>`text`</td><td>Long text (up to 65k characters)</td></tr><tr><td>`time`</td><td>Time field (format HH:MM:SS)</td></tr><tr><td>`timerange`</td><td>Time-range field (has a start time and end time value, both HH:MM:SS)</td></tr><tr><td>`user`</td><td>User field (contains a user ID of another Pipedrive user)</td></tr><tr><td>`varchar`</td><td>Text (up to 255 characters)</td></tr><tr><td>`varchar_auto`</td><td>Autocomplete text (up to 255 characters)</td></tr><tr><td>`visible_to`</td><td>System field that keeps item's visibility setting</td></tr></table>"
                                }
                              ]
                            },
                            "add_time": {
                              "type": "string",
                              "format": "datetime",
                              "description": "The creation time of the field"
                            },
                            "update_time": {
                              "type": "string",
                              "format": "datetime",
                              "description": "The update time of the field"
                            },
                            "last_updated_by_user_id": {
                              "type": "integer",
                              "description": "The ID of the user who created or most recently updated the field, only applicable for custom fields"
                            },
                            "active_flag": {
                              "type": "boolean",
                              "description": "The active flag of the field"
                            },
                            "edit_flag": {
                              "type": "boolean",
                              "description": "The edit flag of the field"
                            },
                            "index_visible_flag": {
                              "type": "boolean",
                              "description": "Not used"
                            },
                            "details_visible_flag": {
                              "type": "boolean",
                              "description": "Not used"
                            },
                            "add_visible_flag": {
                              "type": "boolean",
                              "description": "Not used"
                            },
                            "important_flag": {
                              "type": "boolean",
                              "description": "Not used"
                            },
                            "bulk_edit_allowed": {
                              "type": "boolean",
                              "description": "Whether or not the field of an item can be edited in bulk"
                            },
                            "searchable_flag": {
                              "type": "boolean",
                              "description": "Whether or not items can be searched by this field"
                            },
                            "filtering_allowed": {
                              "type": "boolean",
                              "description": "Whether or not items can be filtered by this field"
                            },
                            "sortable_flag": {
                              "type": "boolean",
                              "description": "Whether or not items can be sorted by this field"
                            },
                            "mandatory_flag": {
                              "type": "boolean",
                              "description": "Whether or not the field is mandatory"
                            },
                            "options": {
                              "type": "array",
                              "nullable": true,
                              "items": { "type": "object" },
                              "description": "The options of the field. When there are no options, `null` is returned."
                            },
                            "options_deleted": {
                              "type": "array",
                              "items": { "type": "object" },
                              "description": "The deleted options of the field. Only present when there is at least 1 deleted option."
                            },
                            "is_subfield": {
                              "type": "boolean",
                              "description": "Whether or not the field is a subfield of another field. Only present if field is subfield."
                            },
                            "subfields": {
                              "type": "array",
                              "items": { "type": "object" },
                              "description": "The subfields of the field. Only present when the field has subfields."
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "success": true,
                  "data": {
                    "id": 2,
                    "key": "9dc80c50d78a15643bfc4ca79d76156a73a1ca0e",
                    "name": "Customer Type",
                    "order_nr": 1,
                    "field_type": "enum",
                    "add_time": "2019-02-04 13:58:03",
                    "update_time": "2019-02-04 13:58:03",
                    "last_updated_by_user_id": 1,
                    "active_flag": true,
                    "edit_flag": true,
                    "index_visible_flag": true,
                    "details_visible_flag": true,
                    "add_visible_flag": false,
                    "important_flag": false,
                    "bulk_edit_allowed": true,
                    "searchable_flag": false,
                    "filtering_allowed": true,
                    "sortable_flag": true,
                    "options": [
                      { "id": 190, "label": "Private person" },
                      { "id": 191, "label": "Company" },
                      { "id": 192, "label": "Government" }
                    ],
                    "mandatory_flag": true
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a person field",
        "description": "Marks a field as deleted. For more information, see the tutorial for <a href=\"https://pipedrive.readme.io/docs/deleting-a-custom-field\" target=\"_blank\" rel=\"noopener noreferrer\">deleting a custom field</a>.",
        "operationId": "deletePersonField",
        "tags": [ "PersonFields" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the field",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "deleteField",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "description": "The ID of the field that was deleted"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": { "success": true, "data": { "id": 123 } }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update a person field",
        "description": "Updates a person field. For more information, see the tutorial for <a href=\" https://pipedrive.readme.io/docs/updating-custom-field-value \" target=\"_blank\" rel=\"noopener noreferrer\">updating custom fields' values</a>.",
        "operationId": "updatePersonField",
        "tags": [ "PersonFields" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the field",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "updateFieldRequest",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the field"
                  },
                  "options": {
                    "type": "string",
                    "description": "When `field_type` is either set or enum, possible options must be supplied as a JSON-encoded sequential array of objects. All active items must be supplied and already existing items must have their ID supplied. New items only require a label. Example: `[{\"id\":123,\"label\":\"Existing Item\"},{\"label\":\"New Item\"}]`"
                  },
                  "add_visible_flag": {
                    "type": "boolean",
                    "enum": [ true, false ],
                    "default": true,
                    "description": "Whether the field is available in 'add new' modal or not (both in web and mobile app)"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "field",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "description": "The ID of the field. Value is `null` in case of subfields."
                            },
                            "key": {
                              "type": "string",
                              "description": "The key of the field. For custom fields this is generated upon creation."
                            },
                            "name": {
                              "type": "string",
                              "description": "The name of the field"
                            },
                            "order_nr": {
                              "type": "integer",
                              "description": "The order number of the field"
                            },
                            "field_type": {
                              "allOf": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "address",
                                    "date",
                                    "daterange",
                                    "double",
                                    "enum",
                                    "monetary",
                                    "org",
                                    "people",
                                    "phone",
                                    "set",
                                    "text",
                                    "time",
                                    "timerange",
                                    "user",
                                    "varchar",
                                    "varchar_auto",
                                    "visible_to"
                                  ],
                                  "description": "The type of the field<table><tr><th>Value</th><th>Description</th></tr><tr><td>`address`</td><td>Address field (has multiple subfields, autocompleted by Google Maps)</td></tr><tr><td>`date`</td><td>Date (format YYYY-MM-DD)</td></tr><tr><td>`daterange`</td><td>Date-range field (has a start date and end date value, both YYYY-MM-DD)</td></tr><tr><td>`double`</td><td>Numeric value</td></tr><tr><td>`enum`</td><td>Options field with a single possible chosen option</td></tr><tr></tr><tr><td>`monetary`</td><td>Monetary field (has a numeric value and a currency value)</td></tr><tr><td>`org`</td><td>Organization field (contains an organization ID which is stored on the same account)</td></tr><tr><td>`people`</td><td>Person field (contains a person ID which is stored on the same account)</td></tr><tr><td>`phone`</td><td>Phone field (up to 255 numbers and/or characters)</td></tr><tr><td>`set`</td><td>Options field with a possibility of having multiple chosen options</td></tr><tr><td>`text`</td><td>Long text (up to 65k characters)</td></tr><tr><td>`time`</td><td>Time field (format HH:MM:SS)</td></tr><tr><td>`timerange`</td><td>Time-range field (has a start time and end time value, both HH:MM:SS)</td></tr><tr><td>`user`</td><td>User field (contains a user ID of another Pipedrive user)</td></tr><tr><td>`varchar`</td><td>Text (up to 255 characters)</td></tr><tr><td>`varchar_auto`</td><td>Autocomplete text (up to 255 characters)</td></tr><tr><td>`visible_to`</td><td>System field that keeps item's visibility setting</td></tr></table>"
                                }
                              ]
                            },
                            "add_time": {
                              "type": "string",
                              "format": "datetime",
                              "description": "The creation time of the field"
                            },
                            "update_time": {
                              "type": "string",
                              "format": "datetime",
                              "description": "The update time of the field"
                            },
                            "last_updated_by_user_id": {
                              "type": "integer",
                              "description": "The ID of the user who created or most recently updated the field, only applicable for custom fields"
                            },
                            "active_flag": {
                              "type": "boolean",
                              "description": "The active flag of the field"
                            },
                            "edit_flag": {
                              "type": "boolean",
                              "description": "The edit flag of the field"
                            },
                            "index_visible_flag": {
                              "type": "boolean",
                              "description": "Not used"
                            },
                            "details_visible_flag": {
                              "type": "boolean",
                              "description": "Not used"
                            },
                            "add_visible_flag": {
                              "type": "boolean",
                              "description": "Not used"
                            },
                            "important_flag": {
                              "type": "boolean",
                              "description": "Not used"
                            },
                            "bulk_edit_allowed": {
                              "type": "boolean",
                              "description": "Whether or not the field of an item can be edited in bulk"
                            },
                            "searchable_flag": {
                              "type": "boolean",
                              "description": "Whether or not items can be searched by this field"
                            },
                            "filtering_allowed": {
                              "type": "boolean",
                              "description": "Whether or not items can be filtered by this field"
                            },
                            "sortable_flag": {
                              "type": "boolean",
                              "description": "Whether or not items can be sorted by this field"
                            },
                            "mandatory_flag": {
                              "type": "boolean",
                              "description": "Whether or not the field is mandatory"
                            },
                            "options": {
                              "type": "array",
                              "nullable": true,
                              "items": { "type": "object" },
                              "description": "The options of the field. When there are no options, `null` is returned."
                            },
                            "options_deleted": {
                              "type": "array",
                              "items": { "type": "object" },
                              "description": "The deleted options of the field. Only present when there is at least 1 deleted option."
                            },
                            "is_subfield": {
                              "type": "boolean",
                              "description": "Whether or not the field is a subfield of another field. Only present if field is subfield."
                            },
                            "subfields": {
                              "type": "array",
                              "items": { "type": "object" },
                              "description": "The subfields of the field. Only present when the field has subfields."
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "success": true,
                  "data": {
                    "id": 2,
                    "key": "9dc80c50d78a15643bfc4ca79d76156a73a1ca0e",
                    "name": "Customer Type",
                    "order_nr": 1,
                    "field_type": "enum",
                    "add_time": "2019-02-04 13:58:03",
                    "update_time": "2019-02-04 13:58:03",
                    "last_updated_by_user_id": 1,
                    "active_flag": true,
                    "edit_flag": true,
                    "index_visible_flag": true,
                    "details_visible_flag": true,
                    "add_visible_flag": false,
                    "important_flag": false,
                    "bulk_edit_allowed": true,
                    "searchable_flag": false,
                    "filtering_allowed": true,
                    "sortable_flag": true,
                    "options": [
                      { "id": 190, "label": "Private person" },
                      { "id": 191, "label": "Company" },
                      { "id": 192, "label": "Government" }
                    ],
                    "mandatory_flag": true
                  }
                }
              }
            }
          }
        }
      }
    },
    "/pipelines": {
      "get": {
        "summary": "Get all pipelines",
        "description": "Returns data about all pipelines.",
        "operationId": "getPipelines",
        "tags": [ "Pipelines" ],
        "responses": {
          "200": {
            "description": "Get all pipelines",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "getPipelines",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "description": "Pipelines array",
                          "items": {
                            "type": "object",
                            "title": "basePipelineWithSelectedFlag",
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "integer",
                                    "description": "The ID of the pipeline"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "The name of the pipeline"
                                  },
                                  "url_title": {
                                    "type": "string",
                                    "description": "The pipeline title displayed in the URL"
                                  },
                                  "order_nr": {
                                    "type": "integer",
                                    "description": "Defines the order of pipelines. First order (`order_nr=0`) is the default pipeline."
                                  },
                                  "active": {
                                    "type": "boolean",
                                    "description": "Whether this pipeline will be made inactive (hidden) or active"
                                  },
                                  "deal_probability": {
                                    "type": "boolean",
                                    "description": "Whether deal probability is disabled or enabled for this pipeline"
                                  },
                                  "add_time": {
                                    "type": "string",
                                    "description": "The pipeline creation time. Format: YYYY-MM-DD HH:MM:SS."
                                  },
                                  "update_time": {
                                    "type": "string",
                                    "description": "The pipeline update time. Format: YYYY-MM-DD HH:MM:SS."
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "selected": {
                                    "type": "boolean",
                                    "description": "A boolean that shows if the pipeline is selected from a filter or not"
                                  }
                                }
                              }
                            ]
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "success": true,
                  "data": [
                    {
                      "id": 1,
                      "name": "Pipeline Name",
                      "url_title": "Pipeline-Name",
                      "order_nr": 1,
                      "active": true,
                      "deal_probability": true,
                      "add_time": "2017-08-03 12:51:18",
                      "update_time": "2020-03-23 13:15:25",
                      "selected": true
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add a new pipeline",
        "description": "Adds a new pipeline.",
        "operationId": "addPipeline",
        "tags": [ "Pipelines" ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [ "name" ],
                "title": "pipelineRequest",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the pipeline"
                  },
                  "deal_probability": {
                    "allOf": [
                      {
                        "title": "numberBoolean",
                        "type": "number",
                        "enum": [ 0, 1 ]
                      }
                    ],
                    "description": "Whether deal probability is disabled or enabled for this pipeline"
                  },
                  "order_nr": {
                    "type": "integer",
                    "description": "Defines the order of pipelines. First order (`order_nr=0`) is the default pipeline."
                  },
                  "active": {
                    "allOf": [
                      {
                        "title": "numberBoolean",
                        "type": "number",
                        "enum": [ 0, 1 ]
                      }
                    ],
                    "description": "Whether this pipeline will be made inactive (hidden) or active"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Add pipeline",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "addPipeline",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "description": "The ID of the pipeline"
                            },
                            "name": {
                              "type": "string",
                              "description": "The name of the pipeline"
                            },
                            "url_title": {
                              "type": "string",
                              "description": "The pipeline title displayed in the URL"
                            },
                            "order_nr": {
                              "type": "integer",
                              "description": "Defines the order of pipelines. First order (`order_nr=0`) is the default pipeline."
                            },
                            "active": {
                              "type": "boolean",
                              "description": "Whether this pipeline will be made inactive (hidden) or active"
                            },
                            "deal_probability": {
                              "type": "boolean",
                              "description": "Whether deal probability is disabled or enabled for this pipeline"
                            },
                            "add_time": {
                              "type": "string",
                              "description": "The pipeline creation time. Format: YYYY-MM-DD HH:MM:SS."
                            },
                            "update_time": {
                              "type": "string",
                              "description": "The pipeline update time. Format: YYYY-MM-DD HH:MM:SS."
                            }
                          },
                          "description": "The pipeline object"
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "success": true,
                  "data": {
                    "id": 1,
                    "name": "Pipeline",
                    "url_title": "Pipeline",
                    "order_nr": 1,
                    "active": true,
                    "deal_probability": true,
                    "add_time": "2017-08-03 12:51:18",
                    "update_time": "2020-03-23 13:15:25"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/pipelines/{id}": {
      "delete": {
        "summary": "Delete a pipeline",
        "description": "Marks a pipeline as deleted.",
        "operationId": "deletePipeline",
        "tags": [ "Pipelines" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the pipeline",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "Delete pipeline",
            "content": {
              "application/json": {
                "schema": {
                  "title": "deletePipeline",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "If the request was successful or not"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "description": "Deleted Pipeline ID"
                        }
                      }
                    }
                  }
                },
                "example": { "success": true, "data": { "id": 1 } }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get one pipeline",
        "description": "Returns data about a specific pipeline. Also returns the summary of the deals in this pipeline across its stages.",
        "operationId": "getPipeline",
        "tags": [ "Pipelines" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the pipeline",
            "required": true,
            "schema": { "type": "integer" }
          },
          {
            "in": "query",
            "name": "totals_convert_currency",
            "schema": { "type": "string" },
            "description": "The 3-letter currency code of any of the supported currencies. When supplied, `per_stages_converted` is returned in `deals_summary` which contains the currency-converted total amounts in the given currency per each stage. You may also set this parameter to `default_currency` in which case users default currency is used."
          }
        ],
        "responses": {
          "200": {
            "description": "Get pipeline",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "getPipeline",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "description": "The pipeline object",
                          "title": "pipelineDetails",
                          "allOf": [
                            {
                              "type": "object",
                              "title": "basePipelineWithSelectedFlag",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "integer",
                                      "description": "The ID of the pipeline"
                                    },
                                    "name": {
                                      "type": "string",
                                      "description": "The name of the pipeline"
                                    },
                                    "url_title": {
                                      "type": "string",
                                      "description": "The pipeline title displayed in the URL"
                                    },
                                    "order_nr": {
                                      "type": "integer",
                                      "description": "Defines the order of pipelines. First order (`order_nr=0`) is the default pipeline."
                                    },
                                    "active": {
                                      "type": "boolean",
                                      "description": "Whether this pipeline will be made inactive (hidden) or active"
                                    },
                                    "deal_probability": {
                                      "type": "boolean",
                                      "description": "Whether deal probability is disabled or enabled for this pipeline"
                                    },
                                    "add_time": {
                                      "type": "string",
                                      "description": "The pipeline creation time. Format: YYYY-MM-DD HH:MM:SS."
                                    },
                                    "update_time": {
                                      "type": "string",
                                      "description": "The pipeline update time. Format: YYYY-MM-DD HH:MM:SS."
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "selected": {
                                      "type": "boolean",
                                      "description": "A boolean that shows if the pipeline is selected from a filter or not"
                                    }
                                  }
                                }
                              ]
                            },
                            {
                              "type": "object",
                              "properties": {
                                "deals_summary": {
                                  "type": "object",
                                  "description": "Deals summary",
                                  "properties": {
                                    "per_stages": {
                                      "type": "object",
                                      "description": "The stage objects containing deals currency information",
                                      "properties": {
                                        "STAGE_ID": {
                                          "type": "object",
                                          "description": "The currency summaries per stage. This parameter is dynamic and changes according to `stage_id` value.",
                                          "properties": {
                                            "CURRENCY_ID": {
                                              "type": "object",
                                              "description": "The currency summary. This parameter is dynamic and changes according to `currency_id` value.",
                                              "properties": {
                                                "count": {
                                                  "type": "integer",
                                                  "description": "Deals count per currency"
                                                },
                                                "value": {
                                                  "type": "integer",
                                                  "description": "Deals value per currency"
                                                },
                                                "value_formatted": {
                                                  "type": "string",
                                                  "description": "Deals value formatted per currency"
                                                },
                                                "weighted_value": {
                                                  "type": "integer",
                                                  "description": "Deals weighted value per currency"
                                                },
                                                "weighted_value_formatted": {
                                                  "type": "string",
                                                  "description": "Deals weighted value formatted per currency"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "per_currency": {
                                      "type": "object",
                                      "description": "The currency count summary",
                                      "properties": {
                                        "CURRENCY_ID": {
                                          "type": "integer",
                                          "description": "Deals count per currency. This parameter is dynamic and changes according to `currency_id` value."
                                        }
                                      }
                                    },
                                    "total_count": {
                                      "type": "integer",
                                      "description": "Deals count"
                                    },
                                    "per_currency_full": {
                                      "type": "object",
                                      "description": "Full currency summaries",
                                      "properties": {
                                        "CURRENCY_ID": {
                                          "type": "object",
                                          "description": "The currency summary. This parameter is dynamic and changes according to `currency_id` value.",
                                          "properties": {
                                            "count": {
                                              "type": "integer",
                                              "description": "Deals count per currency"
                                            },
                                            "value": {
                                              "type": "integer",
                                              "description": "Deals value per currency"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "success": true,
                  "data": {
                    "id": 1,
                    "name": "Pipeline",
                    "url_title": "Pipeline",
                    "order_nr": 1,
                    "active": true,
                    "deal_probability": true,
                    "add_time": "2017-08-03 12:51:18",
                    "update_time": "2020-03-23 13:15:25",
                    "selected": true,
                    "deals_summary": {
                      "per_stages": {
                        "1": {
                          "EUR": {
                            "count": 1,
                            "value": 10,
                            "value_formatted": "10 €",
                            "weighted_value": 10,
                            "weighted_value_formatted": "10€"
                          }
                        }
                      },
                      "per_currency": { "EUR": 1 },
                      "total_count": 1,
                      "per_currency_full": {
                        "EUR": { "count": 1, "value": 10 }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update a pipeline",
        "description": "Updates the properties of a pipeline.",
        "operationId": "updatePipeline",
        "tags": [ "Pipelines" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the pipeline",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "pipelineRequest",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the pipeline"
                  },
                  "deal_probability": {
                    "allOf": [
                      {
                        "title": "numberBoolean",
                        "type": "number",
                        "enum": [ 0, 1 ]
                      }
                    ],
                    "description": "Whether deal probability is disabled or enabled for this pipeline"
                  },
                  "order_nr": {
                    "type": "integer",
                    "description": "Defines the order of pipelines. First order (`order_nr=0`) is the default pipeline."
                  },
                  "active": {
                    "allOf": [
                      {
                        "title": "numberBoolean",
                        "type": "number",
                        "enum": [ 0, 1 ]
                      }
                    ],
                    "description": "Whether this pipeline will be made inactive (hidden) or active"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Edit pipeline",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "updatePipeline",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "description": "The pipeline object",
                          "allOf": [
                            {
                              "type": "object",
                              "title": "basePipelineWithSelectedFlag",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "integer",
                                      "description": "The ID of the pipeline"
                                    },
                                    "name": {
                                      "type": "string",
                                      "description": "The name of the pipeline"
                                    },
                                    "url_title": {
                                      "type": "string",
                                      "description": "The pipeline title displayed in the URL"
                                    },
                                    "order_nr": {
                                      "type": "integer",
                                      "description": "Defines the order of pipelines. First order (`order_nr=0`) is the default pipeline."
                                    },
                                    "active": {
                                      "type": "boolean",
                                      "description": "Whether this pipeline will be made inactive (hidden) or active"
                                    },
                                    "deal_probability": {
                                      "type": "boolean",
                                      "description": "Whether deal probability is disabled or enabled for this pipeline"
                                    },
                                    "add_time": {
                                      "type": "string",
                                      "description": "The pipeline creation time. Format: YYYY-MM-DD HH:MM:SS."
                                    },
                                    "update_time": {
                                      "type": "string",
                                      "description": "The pipeline update time. Format: YYYY-MM-DD HH:MM:SS."
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "selected": {
                                      "type": "boolean",
                                      "description": "A boolean that shows if the pipeline is selected from a filter or not"
                                    }
                                  }
                                }
                              ]
                            }
                          ]
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "success": true,
                  "data": {
                    "id": 1,
                    "name": "Pipeline",
                    "url_title": "Pipeline",
                    "order_nr": 1,
                    "active": true,
                    "deal_probability": true,
                    "add_time": "2017-08-03 12:51:18",
                    "update_time": "2020-03-23 13:15:25",
                    "selected": true
                  }
                }
              }
            }
          }
        }
      }
    },
    "/pipelines/{id}/conversion_statistics": {
      "get": {
        "summary": "Get deals conversion rates in pipeline",
        "description": "Returns all stage-to-stage conversion and pipeline-to-close rates for the given time period.",
        "operationId": "getPipelineConversionStatistics",
        "tags": [ "Pipelines" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the pipeline",
            "required": true,
            "schema": { "type": "integer" }
          },
          {
            "in": "query",
            "name": "start_date",
            "required": true,
            "schema": { "type": "string", "format": "date" },
            "description": "The start of the period. Date in format of YYYY-MM-DD."
          },
          {
            "in": "query",
            "name": "end_date",
            "required": true,
            "schema": { "type": "string", "format": "date" },
            "description": "The end of the period. Date in format of YYYY-MM-DD."
          },
          {
            "in": "query",
            "name": "user_id",
            "schema": { "type": "integer" },
            "description": "The ID of the user who's pipeline metrics statistics to fetch. If omitted, the authorized user will be used."
          }
        ],
        "responses": {
          "200": {
            "description": "Get pipeline deals conversion rates",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "getPipelineConversionStatistics",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "description": "The pipeline object",
                          "properties": {
                            "stage_conversions": {
                              "type": "array",
                              "description": "The stage conversions",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "from_stage_id": {
                                    "type": "integer",
                                    "description": "The stage ID from where conversion starts"
                                  },
                                  "to_stage_id": {
                                    "type": "integer",
                                    "description": "The stage ID to where conversion ends"
                                  },
                                  "conversion_rate": {
                                    "type": "integer",
                                    "description": "The conversion rate"
                                  }
                                }
                              }
                            },
                            "won_conversion": {
                              "type": "integer",
                              "description": "The won conversion"
                            },
                            "lost_conversion": {
                              "type": "integer",
                              "description": "The lost conversion"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "success": true,
                  "data": {
                    "stage_conversions": [
                      {
                        "from_stage_id": 1,
                        "to_stage_id": 2,
                        "conversion_rate": 0
                      }
                    ],
                    "won_conversion": 0,
                    "lost_conversion": 0
                  }
                }
              }
            }
          }
        }
      }
    },
    "/pipelines/{id}/deals": {
      "get": {
        "summary": "Get deals in a pipeline",
        "description": "Lists deals in a specific pipeline across all its stages.",
        "operationId": "getPipelineDeals",
        "tags": [ "Pipelines" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the pipeline",
            "required": true,
            "schema": { "type": "integer" }
          },
          {
            "in": "query",
            "name": "filter_id",
            "schema": { "type": "integer" },
            "description": "If supplied, only deals matching the given filter will be returned"
          },
          {
            "in": "query",
            "name": "user_id",
            "schema": { "type": "integer" },
            "description": "If supplied, `filter_id` will not be considered and only deals owned by the given user will be returned. If omitted, deals owned by the authorized user will be returned."
          },
          {
            "in": "query",
            "name": "everyone",
            "schema": {
              "title": "numberBoolean",
              "type": "number",
              "enum": [ 0, 1 ]
            },
            "description": "If supplied, `filter_id` and `user_id` will not be considered – instead, deals owned by everyone will be returned"
          },
          {
            "in": "query",
            "name": "stage_id",
            "schema": { "type": "integer" },
            "description": "If supplied, only deals within the given stage will be returned"
          },
          {
            "in": "query",
            "name": "start",
            "description": "Pagination start",
            "schema": { "type": "integer", "default": 0 }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Items shown per page",
            "schema": { "type": "integer" }
          },
          {
            "in": "query",
            "name": "get_summary",
            "schema": {
              "title": "numberBoolean",
              "type": "number",
              "enum": [ 0, 1 ]
            },
            "description": "Whether to include a summary of the pipeline in the `additional_data` or not"
          },
          {
            "in": "query",
            "name": "totals_convert_currency",
            "schema": { "type": "string" },
            "description": "The 3-letter currency code of any of the supported currencies. When supplied, `per_stages_converted` is returned inside `deals_summary` inside `additional_data` which contains the currency-converted total amounts in the given currency per each stage. You may also set this parameter to `default_currency` in which case users default currency is used. Only works when `get_summary` parameter flag is enabled."
          }
        ],
        "responses": {
          "200": {
            "description": "Get deals in a stage",
            "content": {
              "application/json": {
                "schema": {
                  "title": "getStageDeals",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "If the request was successful or not"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "title": "dealStrict",
                        "allOf": [
                          {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer",
                                "description": "The ID of the deal"
                              },
                              "creator_user_id": {
                                "type": "integer",
                                "description": "The ID of the deal creator"
                              },
                              "user_id": {
                                "type": "integer",
                                "description": "The ID of the user"
                              },
                              "person_id": {
                                "type": "integer",
                                "description": "The ID of the person associated with the deal"
                              },
                              "org_id": {
                                "type": "integer",
                                "description": "The ID of the organization associated with the deal"
                              }
                            }
                          },
                          {
                            "title": "baseDeal",
                            "type": "object",
                            "properties": {
                              "stage_id": {
                                "type": "integer",
                                "description": "The ID of the deal stage"
                              },
                              "title": {
                                "type": "string",
                                "description": "The title of the deal"
                              },
                              "value": {
                                "type": "number",
                                "description": "The value of the deal"
                              },
                              "currency": {
                                "type": "string",
                                "description": "The currency associated with the deal"
                              },
                              "add_time": {
                                "type": "string",
                                "description": "The creation date and time of the deal"
                              },
                              "update_time": {
                                "type": "string",
                                "description": "The last updated date and time of the deal"
                              },
                              "stage_change_time": {
                                "type": "string",
                                "description": "The last updated date and time of the deal stage"
                              },
                              "active": {
                                "type": "boolean",
                                "description": "Whether the deal is active or not"
                              },
                              "deleted": {
                                "type": "boolean",
                                "description": "Whether the deal is deleted or not"
                              },
                              "status": {
                                "type": "string",
                                "description": "The status of the deal"
                              },
                              "probability": {
                                "type": "number",
                                "nullable": true,
                                "description": "The success probability percentage of the deal"
                              },
                              "next_activity_date": {
                                "type": "string",
                                "description": "The date of the next activity associated with the deal"
                              },
                              "next_activity_time": {
                                "type": "string",
                                "description": "The time of the next activity associated with the deal"
                              },
                              "next_activity_id": {
                                "type": "integer",
                                "nullable": true,
                                "description": "The ID of the next activity associated with the deal"
                              },
                              "last_activity_id": {
                                "type": "integer",
                                "nullable": true,
                                "description": "The ID of the last activity associated with the deal"
                              },
                              "last_activity_date": {
                                "type": "string",
                                "nullable": true,
                                "description": "The date of the last activity associated with the deal"
                              },
                              "lost_reason": {
                                "type": "string",
                                "nullable": true,
                                "description": "The reason for losing the deal"
                              },
                              "visible_to": {
                                "type": "string",
                                "description": "The visibility of the deal"
                              },
                              "close_time": {
                                "type": "string",
                                "nullable": true,
                                "description": "The date and time of closing the deal"
                              },
                              "pipeline_id": {
                                "type": "integer",
                                "description": "The ID of pipeline associated with the deal"
                              },
                              "won_time": {
                                "type": "string",
                                "description": "The date and time of changing the deal status as won"
                              },
                              "first_won_time": {
                                "type": "string",
                                "description": "The date and time of the first time changing the deal status as won"
                              },
                              "lost_time": {
                                "type": "string",
                                "description": "The date and time of changing the deal status as lost"
                              },
                              "products_count": {
                                "type": "integer",
                                "description": "The number of products associated with the deal"
                              },
                              "files_count": {
                                "type": "integer",
                                "description": "The number of files associated with the deal"
                              },
                              "notes_count": {
                                "type": "integer",
                                "description": "The number of notes associated with the deal"
                              },
                              "followers_count": {
                                "type": "integer",
                                "description": "The number of followers associated with the deal"
                              },
                              "email_messages_count": {
                                "type": "integer",
                                "description": "The number of emails associated with the deal"
                              },
                              "activities_count": {
                                "type": "integer",
                                "description": "The number of activities associated with the deal"
                              },
                              "done_activities_count": {
                                "type": "integer",
                                "description": "The number of completed activities associated with the deal"
                              },
                              "undone_activities_count": {
                                "type": "integer",
                                "description": "The number of incomplete activities associated with the deal"
                              },
                              "participants_count": {
                                "type": "integer",
                                "description": "The number of participants associated with the deal"
                              },
                              "expected_close_date": {
                                "type": "string",
                                "format": "date",
                                "description": "The expected close date of the deal"
                              },
                              "last_incoming_mail_time": {
                                "type": "string",
                                "description": "The date and time of the last incoming email associated with the deal"
                              },
                              "last_outgoing_mail_time": {
                                "type": "string",
                                "description": "The date and time of the last outgoing email associated with the deal"
                              },
                              "label": {
                                "type": "integer",
                                "description": "The label assigned to the deal"
                              },
                              "stage_order_nr": {
                                "type": "integer",
                                "description": "The order number of the deal stage associated with the deal"
                              },
                              "person_name": {
                                "type": "string",
                                "description": "The name of the person associated with the deal"
                              },
                              "org_name": {
                                "type": "string",
                                "description": "The name of the organization associated with the deal"
                              },
                              "next_activity_subject": {
                                "type": "string",
                                "description": "The subject of the next activity associated with the deal"
                              },
                              "next_activity_type": {
                                "type": "string",
                                "description": "The type of the next activity associated with the deal"
                              },
                              "next_activity_duration": {
                                "type": "string",
                                "description": "The duration of the next activity associated with the deal"
                              },
                              "next_activity_note": {
                                "type": "string",
                                "description": "The note of the next activity associated with the deal"
                              },
                              "formatted_value": {
                                "type": "string",
                                "description": "The deal value formatted with selected currency. E.g. US$500"
                              },
                              "weighted_value": {
                                "type": "number",
                                "description": "Probability times deal value. Probability can either be deal probability or if not set, then stage probability."
                              },
                              "formatted_weighted_value": {
                                "type": "string",
                                "description": "The weighted_value formatted with selected currency. E.g. US$500"
                              },
                              "weighted_value_currency": {
                                "type": "string",
                                "description": "The currency associated with the deal"
                              },
                              "rotten_time": {
                                "type": "string",
                                "nullable": true,
                                "description": "The date and time of changing the deal status as rotten"
                              },
                              "owner_name": {
                                "type": "string",
                                "description": "The name of the deal owner"
                              },
                              "cc_email": {
                                "type": "string",
                                "description": "The BCC email of the deal"
                              },
                              "org_hidden": {
                                "type": "boolean",
                                "description": "If the organization that is associated with the deal is hidden or not"
                              },
                              "person_hidden": {
                                "type": "boolean",
                                "description": "If the person that is associated with the deal is hidden or not"
                              }
                            }
                          }
                        ]
                      },
                      "description": "The array of deals"
                    },
                    "additional_data": {
                      "description": "The additional data of the list",
                      "type": "object",
                      "properties": {
                        "start": {
                          "type": "integer",
                          "description": "Pagination start"
                        },
                        "limit": {
                          "type": "integer",
                          "description": "Items shown per page"
                        },
                        "more_items_in_collection": {
                          "type": "boolean",
                          "description": "If there are more list items in the collection than displayed or not"
                        }
                      }
                    }
                  }
                },
                "example": {
                  "success": true,
                  "data": [
                    {
                      "id": 1,
                      "creator_user_id": 123,
                      "user_id": 456,
                      "person_id": 1,
                      "org_id": 2,
                      "stage_id": 2,
                      "title": "Deal One",
                      "value": 5000,
                      "currency": "EUR",
                      "add_time": "2019-05-29 04:21:51",
                      "update_time": "2019-05-29 04:21:51",
                      "stage_change_time": "2019-11-28 15:41:22",
                      "active": true,
                      "deleted": false,
                      "status": "open",
                      "probability": null,
                      "next_activity_date": "2019-11-29",
                      "next_activity_time": "11:30:00",
                      "next_activity_id": 128,
                      "last_activity_id": null,
                      "last_activity_date": null,
                      "lost_reason": null,
                      "visible_to": "1",
                      "close_time": null,
                      "pipeline_id": 1,
                      "won_time": "2019-11-27 11:40:36",
                      "first_won_time": "2019-11-27 11:40:36",
                      "lost_time": "2019-11-27 11:40:36",
                      "products_count": 0,
                      "files_count": 0,
                      "notes_count": 2,
                      "followers_count": 0,
                      "email_messages_count": 4,
                      "activities_count": 1,
                      "done_activities_count": 0,
                      "undone_activities_count": 1,
                      "participants_count": 1,
                      "expected_close_date": "2019-06-29",
                      "last_incoming_mail_time": "2019-05-29 18:21:42",
                      "last_outgoing_mail_time": "2019-05-30 03:45:35",
                      "label": 11,
                      "stage_order_nr": 2,
                      "person_name": "Person",
                      "org_name": "Organization",
                      "next_activity_subject": "Call",
                      "next_activity_type": "call",
                      "next_activity_duration": "00:30:00",
                      "next_activity_note": "Note content",
                      "formatted_value": "€5,000",
                      "weighted_value": 5000,
                      "formatted_weighted_value": "€5,000",
                      "weighted_value_currency": "EUR",
                      "rotten_time": null,
                      "owner_name": "Creator",
                      "cc_email": "company+deal1@pipedrivemail.com",
                      "org_hidden": false,
                      "person_hidden": false
                    }
                  ],
                  "additional_data": {
                    "pagination": {
                      "start": 0,
                      "limit": 100,
                      "more_items_in_collection": false
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/pipelines/{id}/movement_statistics": {
      "get": {
        "summary": "Get deals movements in pipeline",
        "description": "Returns statistics for deals movements for the given time period.",
        "operationId": "getPipelineMovementStatistics",
        "tags": [ "Pipelines" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the pipeline",
            "required": true,
            "schema": { "type": "integer" }
          },
          {
            "in": "query",
            "name": "start_date",
            "required": true,
            "schema": { "type": "string", "format": "date" },
            "description": "The start of the period. Date in format of YYYY-MM-DD."
          },
          {
            "in": "query",
            "name": "end_date",
            "required": true,
            "schema": { "type": "string", "format": "date" },
            "description": "The end of the period. Date in format of YYYY-MM-DD."
          },
          {
            "in": "query",
            "name": "user_id",
            "schema": { "type": "integer" },
            "description": "The ID of the user who's pipeline statistics to fetch. If omitted, the authorized user will be used."
          }
        ],
        "responses": {
          "200": {
            "description": "Get pipeline deals conversion rates",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "getPipelineMovementStatistics",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "description": "The pipeline object",
                          "properties": {
                            "movements_between_stages": {
                              "type": "object",
                              "description": "Movements between stages",
                              "properties": {
                                "count": {
                                  "type": "integer",
                                  "description": "The count of the deals that have been moved between stages"
                                }
                              }
                            },
                            "new_deals": {
                              "type": "object",
                              "description": "Deals summary",
                              "properties": {
                                "count": {
                                  "type": "integer",
                                  "description": "The count of the deals"
                                },
                                "deals_ids": {
                                  "type": "array",
                                  "description": "The IDs of the deals that have been moved",
                                  "items": { "type": "integer" }
                                },
                                "values": {
                                  "type": "object",
                                  "description": "The values of the deals",
                                  "properties": {
                                    "CURRENCY_ID": {
                                      "type": "integer",
                                      "description": "The value of the deals"
                                    }
                                  }
                                },
                                "formatted_values": {
                                  "type": "object",
                                  "description": "The formatted values of the deals",
                                  "properties": {
                                    "CURRENCY_ID": {
                                      "type": "string",
                                      "description": "The formatted values of the deals"
                                    }
                                  }
                                }
                              }
                            },
                            "deals_left_open": {
                              "type": "object",
                              "description": "Deals summary",
                              "properties": {
                                "count": {
                                  "type": "integer",
                                  "description": "The count of the deals"
                                },
                                "deals_ids": {
                                  "type": "array",
                                  "description": "The IDs of the deals that have been moved",
                                  "items": { "type": "integer" }
                                },
                                "values": {
                                  "type": "object",
                                  "description": "The values of the deals",
                                  "properties": {
                                    "CURRENCY_ID": {
                                      "type": "integer",
                                      "description": "The value of the deals"
                                    }
                                  }
                                },
                                "formatted_values": {
                                  "type": "object",
                                  "description": "The formatted values of the deals",
                                  "properties": {
                                    "CURRENCY_ID": {
                                      "type": "string",
                                      "description": "The formatted values of the deals"
                                    }
                                  }
                                }
                              }
                            },
                            "won_deals": {
                              "type": "object",
                              "description": "Deals summary",
                              "properties": {
                                "count": {
                                  "type": "integer",
                                  "description": "The count of the deals"
                                },
                                "deals_ids": {
                                  "type": "array",
                                  "description": "The IDs of the deals that have been moved",
                                  "items": { "type": "integer" }
                                },
                                "values": {
                                  "type": "object",
                                  "description": "The values of the deals",
                                  "properties": {
                                    "CURRENCY_ID": {
                                      "type": "integer",
                                      "description": "The value of the deals"
                                    }
                                  }
                                },
                                "formatted_values": {
                                  "type": "object",
                                  "description": "The formatted values of the deals",
                                  "properties": {
                                    "CURRENCY_ID": {
                                      "type": "string",
                                      "description": "The formatted values of the deals"
                                    }
                                  }
                                }
                              }
                            },
                            "lost_deals": {
                              "type": "object",
                              "description": "Deals summary",
                              "properties": {
                                "count": {
                                  "type": "integer",
                                  "description": "The count of the deals"
                                },
                                "deals_ids": {
                                  "type": "array",
                                  "description": "The IDs of the deals that have been moved",
                                  "items": { "type": "integer" }
                                },
                                "values": {
                                  "type": "object",
                                  "description": "The values of the deals",
                                  "properties": {
                                    "CURRENCY_ID": {
                                      "type": "integer",
                                      "description": "The value of the deals"
                                    }
                                  }
                                },
                                "formatted_values": {
                                  "type": "object",
                                  "description": "The formatted values of the deals",
                                  "properties": {
                                    "CURRENCY_ID": {
                                      "type": "string",
                                      "description": "The formatted values of the deals"
                                    }
                                  }
                                }
                              }
                            },
                            "average_age_in_days": {
                              "type": "object",
                              "description": "The moved deals average age in days",
                              "properties": {
                                "across_all_stages": {
                                  "type": "integer",
                                  "description": "The moved deals average age across all stages"
                                },
                                "by_stages": {
                                  "type": "array",
                                  "description": "The moved deals average age by stages",
                                  "items": {
                                    "type": "object",
                                    "description": "The moved deals average age by the stage",
                                    "properties": {
                                      "stage_id": {
                                        "type": "integer",
                                        "description": "The stage ID"
                                      },
                                      "value": {
                                        "type": "integer",
                                        "description": "The average deals age in specific stage"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "success": true,
                  "data": {
                    "movements_between_stages": { "count": 1 },
                    "new_deals": {
                      "count": 1,
                      "deals_ids": [ 1, 2 ],
                      "values": { "USD": 10 },
                      "formatted_values": { "USD": "US$10" }
                    },
                    "deals_left_open": {
                      "count": 1,
                      "deals_ids": [ 1, 2 ],
                      "values": { "USD": 10 },
                      "formatted_values": { "USD": "US$10" }
                    },
                    "won_deals": {
                      "count": 1,
                      "deals_ids": [ 1, 2 ],
                      "values": { "USD": 10 },
                      "formatted_values": { "USD": "US$10" }
                    },
                    "lost_deals": {
                      "count": 1,
                      "deals_ids": [ 1, 2 ],
                      "values": { "USD": 10 },
                      "formatted_values": { "USD": "US$10" }
                    },
                    "average_age_in_days": {
                      "across_all_stages": 2,
                      "by_stages": [ { "stage_id": 10, "value": 15 } ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/products": {
      "get": {
        "summary": "Get all products",
        "description": "Returns data about all products.",
        "operationId": "getProducts",
        "tags": [ "Products" ],
        "parameters": [
          {
            "in": "query",
            "name": "user_id",
            "schema": { "type": "integer" },
            "description": "If supplied, only products owned by the given user will be returned"
          },
          {
            "in": "query",
            "name": "filter_id",
            "schema": { "type": "integer" },
            "description": "The ID of the filter to use"
          },
          {
            "in": "query",
            "name": "ids",
            "schema": { "type": "array", "items": { "type": "integer" } },
            "description": "An array of integers with the IDs of the products that should be returned in the response"
          },
          {
            "in": "query",
            "name": "first_char",
            "schema": { "type": "string" },
            "description": "If supplied, only products whose name starts with the specified letter will be returned (case insensitive)"
          },
          {
            "in": "query",
            "name": "get_summary",
            "schema": { "type": "boolean" },
            "description": "If supplied, the response will return the total numbers of products in the `additional_data.summary.total_count` property"
          },
          {
            "in": "query",
            "name": "start",
            "description": "Pagination start",
            "schema": { "type": "integer", "default": 0 }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Items shown per page",
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of products",
            "content": {
              "application/json": {
                "schema": {
                  "title": "getProducts",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "If the response is successful or not"
                    },
                    "data": {
                      "type": "array",
                      "description": "Array containing data for all products",
                      "items": {
                        "title": "getproduct",
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "If the response is successful or not"
                          },
                          "data": {
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "number",
                                    "description": "The ID of the product"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "The name of the product"
                                  },
                                  "code": {
                                    "type": "string",
                                    "description": "The product code"
                                  },
                                  "unit": {
                                    "type": "string",
                                    "description": "The unit in which this product is sold"
                                  },
                                  "tax": {
                                    "type": "number",
                                    "description": "The ax percentage",
                                    "default": 0
                                  },
                                  "active_flag": {
                                    "description": "Whether this product is active or not",
                                    "title": "numberBooleanDefault1",
                                    "type": "number",
                                    "default": 1,
                                    "enum": [ 0, 1 ]
                                  },
                                  "selectable": {
                                    "description": "Whether this product is selected in deals or not",
                                    "title": "numberBooleanDefault1",
                                    "type": "number",
                                    "default": 1,
                                    "enum": [ 0, 1 ]
                                  },
                                  "visible_to": {
                                    "allOf": [
                                      {
                                        "type": "string",
                                        "enum": [ "1", "3", "5", "7" ]
                                      }
                                    ],
                                    "description": "Visibility of the product"
                                  },
                                  "owner_id": {
                                    "type": "object",
                                    "description": "Information about the Pipedrive user who owns the product"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "prices": {
                                    "type": "array",
                                    "items": { "type": "object" },
                                    "description": "Array of objects, each containing: currency (string), price (number), cost (number, optional), overhead_cost (number, optional)"
                                  }
                                }
                              }
                            ]
                          },
                          "related_objects": {
                            "type": "object",
                            "properties": {
                              "user": {
                                "type": "object",
                                "properties": {
                                  "USER_ID": {
                                    "type": "object",
                                    "title": "userDataWithId",
                                    "allOf": [
                                      {
                                        "properties": {
                                          "id": {
                                            "type": "integer",
                                            "description": "The ID of the user"
                                          },
                                          "name": {
                                            "type": "string",
                                            "description": "The name of the user"
                                          },
                                          "email": {
                                            "type": "string",
                                            "description": "The email of the user"
                                          },
                                          "has_pic": {
                                            "type": "integer",
                                            "description": "Whether the user has picture or not. 0 = No picture, 1 = Has picture."
                                          },
                                          "pic_hash": {
                                            "type": "string",
                                            "nullable": true,
                                            "description": "The user picture hash"
                                          },
                                          "active_flag": {
                                            "type": "boolean",
                                            "description": "Whether the user is active or not"
                                          }
                                        }
                                      },
                                      {
                                        "type": "object",
                                        "description": "The ID of the user"
                                      }
                                    ]
                                  }
                                }
                              },
                              "deal": {
                                "type": "object",
                                "properties": {
                                  "DEAL_ID": {
                                    "type": "object",
                                    "description": "The ID of the deal which is associated with the item",
                                    "properties": {
                                      "id": {
                                        "type": "integer",
                                        "description": "The ID of the deal associated with the item"
                                      },
                                      "title": {
                                        "type": "string",
                                        "description": "The title of the deal associated with the item"
                                      },
                                      "status": {
                                        "type": "string",
                                        "description": "The status of the deal associated with the item"
                                      },
                                      "value": {
                                        "type": "number",
                                        "description": "The value of the deal that is associated with the item"
                                      },
                                      "currency": {
                                        "type": "string",
                                        "description": "The currency of the deal value"
                                      },
                                      "stage_id": {
                                        "type": "integer",
                                        "description": "The ID of the stage the deal is currently at"
                                      },
                                      "pipeline_id": {
                                        "type": "integer",
                                        "description": "The ID of the pipeline the deal is in"
                                      }
                                    }
                                  }
                                }
                              },
                              "person": {
                                "type": "object",
                                "properties": {
                                  "PERSON_ID": {
                                    "type": "object",
                                    "description": "The ID of the person associated with the item",
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "integer",
                                            "description": "The ID of the person associated with the item"
                                          },
                                          "name": {
                                            "type": "string",
                                            "description": "The name of the person associated with the item"
                                          },
                                          "email": {
                                            "type": "array",
                                            "description": "The emails of the person associated with the item",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "label": {
                                                  "type": "string",
                                                  "description": "The type of the email"
                                                },
                                                "value": {
                                                  "type": "string",
                                                  "description": "The email of the associated person"
                                                },
                                                "primary": {
                                                  "type": "boolean",
                                                  "description": "Whether this is the primary email or not"
                                                }
                                              }
                                            }
                                          },
                                          "phone": {
                                            "type": "array",
                                            "description": "The phone numbers of the person associated with the item",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "label": {
                                                  "type": "string",
                                                  "description": "The type of the phone number"
                                                },
                                                "value": {
                                                  "type": "string",
                                                  "description": "The phone number of the person associated with the item"
                                                },
                                                "primary": {
                                                  "type": "boolean",
                                                  "description": "Whether this is the primary phone number or not"
                                                }
                                              }
                                            }
                                          },
                                          "owner_id": {
                                            "type": "integer",
                                            "description": "The ID of the owner of the person that is associated with the item"
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              },
                              "organization": {
                                "type": "object",
                                "properties": {
                                  "ORGANIZATION_ID": {
                                    "type": "object",
                                    "description": "The ID of the organization associated with the item",
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "integer",
                                            "description": "The ID of the organization associated with the item"
                                          }
                                        }
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "description": "The name of the organization associated with the item"
                                          },
                                          "people_count": {
                                            "type": "integer",
                                            "description": "The number of people connected with the organization that is associated with the item"
                                          },
                                          "owner_id": {
                                            "type": "integer",
                                            "description": "The ID of the owner of the organization that is associated with the item"
                                          },
                                          "address": {
                                            "type": "string",
                                            "description": "The address of the organization"
                                          },
                                          "cc_email": {
                                            "type": "string",
                                            "description": "The BCC email of the organization associated with the item"
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "additional_data": {
                      "description": "The additional data of the list",
                      "type": "object",
                      "properties": {
                        "start": {
                          "type": "integer",
                          "description": "Pagination start"
                        },
                        "limit": {
                          "type": "integer",
                          "description": "Items shown per page"
                        },
                        "more_items_in_collection": {
                          "type": "boolean",
                          "description": "If there are more list items in the collection than displayed or not"
                        }
                      }
                    },
                    "related_objects": {
                      "type": "object",
                      "properties": {
                        "user": {
                          "type": "object",
                          "properties": {
                            "USER_ID": {
                              "type": "object",
                              "title": "userDataWithId",
                              "allOf": [
                                {
                                  "properties": {
                                    "id": {
                                      "type": "integer",
                                      "description": "The ID of the user"
                                    },
                                    "name": {
                                      "type": "string",
                                      "description": "The name of the user"
                                    },
                                    "email": {
                                      "type": "string",
                                      "description": "The email of the user"
                                    },
                                    "has_pic": {
                                      "type": "integer",
                                      "description": "Whether the user has picture or not. 0 = No picture, 1 = Has picture."
                                    },
                                    "pic_hash": {
                                      "type": "string",
                                      "nullable": true,
                                      "description": "The user picture hash"
                                    },
                                    "active_flag": {
                                      "type": "boolean",
                                      "description": "Whether the user is active or not"
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "description": "The ID of the user"
                                }
                              ]
                            }
                          }
                        },
                        "deal": {
                          "type": "object",
                          "properties": {
                            "DEAL_ID": {
                              "type": "object",
                              "description": "The ID of the deal which is associated with the item",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "description": "The ID of the deal associated with the item"
                                },
                                "title": {
                                  "type": "string",
                                  "description": "The title of the deal associated with the item"
                                },
                                "status": {
                                  "type": "string",
                                  "description": "The status of the deal associated with the item"
                                },
                                "value": {
                                  "type": "number",
                                  "description": "The value of the deal that is associated with the item"
                                },
                                "currency": {
                                  "type": "string",
                                  "description": "The currency of the deal value"
                                },
                                "stage_id": {
                                  "type": "integer",
                                  "description": "The ID of the stage the deal is currently at"
                                },
                                "pipeline_id": {
                                  "type": "integer",
                                  "description": "The ID of the pipeline the deal is in"
                                }
                              }
                            }
                          }
                        },
                        "person": {
                          "type": "object",
                          "properties": {
                            "PERSON_ID": {
                              "type": "object",
                              "description": "The ID of the person associated with the item",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "integer",
                                      "description": "The ID of the person associated with the item"
                                    },
                                    "name": {
                                      "type": "string",
                                      "description": "The name of the person associated with the item"
                                    },
                                    "email": {
                                      "type": "array",
                                      "description": "The emails of the person associated with the item",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "label": {
                                            "type": "string",
                                            "description": "The type of the email"
                                          },
                                          "value": {
                                            "type": "string",
                                            "description": "The email of the associated person"
                                          },
                                          "primary": {
                                            "type": "boolean",
                                            "description": "Whether this is the primary email or not"
                                          }
                                        }
                                      }
                                    },
                                    "phone": {
                                      "type": "array",
                                      "description": "The phone numbers of the person associated with the item",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "label": {
                                            "type": "string",
                                            "description": "The type of the phone number"
                                          },
                                          "value": {
                                            "type": "string",
                                            "description": "The phone number of the person associated with the item"
                                          },
                                          "primary": {
                                            "type": "boolean",
                                            "description": "Whether this is the primary phone number or not"
                                          }
                                        }
                                      }
                                    },
                                    "owner_id": {
                                      "type": "integer",
                                      "description": "The ID of the owner of the person that is associated with the item"
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        },
                        "organization": {
                          "type": "object",
                          "properties": {
                            "ORGANIZATION_ID": {
                              "type": "object",
                              "description": "The ID of the organization associated with the item",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "integer",
                                      "description": "The ID of the organization associated with the item"
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "The name of the organization associated with the item"
                                    },
                                    "people_count": {
                                      "type": "integer",
                                      "description": "The number of people connected with the organization that is associated with the item"
                                    },
                                    "owner_id": {
                                      "type": "integer",
                                      "description": "The ID of the owner of the organization that is associated with the item"
                                    },
                                    "address": {
                                      "type": "string",
                                      "description": "The address of the organization"
                                    },
                                    "cc_email": {
                                      "type": "string",
                                      "description": "The BCC email of the organization associated with the item"
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "success": true,
                  "data": [
                    {
                      "id": 1,
                      "name": "Mechanical Pencil",
                      "code": "MPENCIL",
                      "description": null,
                      "unit": "",
                      "tax": 0,
                      "category": null,
                      "active_flag": 1,
                      "selectable": 1,
                      "first_char": "m",
                      "visible_to": "3",
                      "owner_id": {
                        "id": 10100010,
                        "name": "Test User",
                        "email": "example@test.com",
                        "has_pic": true,
                        "pic_hash": "5df5332929fab76702207f38b29a5d88",
                        "active_flag": true,
                        "value": 10100010
                      },
                      "files_count": null,
                      "add_time": "2019-12-19 11:36:49",
                      "update_time": "2019-12-19 11:36:49",
                      "prices": [
                        {
                          "id": 1,
                          "product_id": 1,
                          "price": 5,
                          "currency": "EUR",
                          "cost": 2,
                          "overhead_cost": null
                        }
                      ]
                    }
                  ],
                  "additional_data": {
                    "pagination": {
                      "start": 0,
                      "limit": 50,
                      "next_start": 25,
                      "more_items_in_collection": true
                    },
                    "summary": { "total_count": "35" }
                  },
                  "related_objects": {
                    "user": {
                      "10100010": {
                        "id": 10100010,
                        "name": "Test User",
                        "email": "example@test.com",
                        "has_pic": true,
                        "pic_hash": "5df5332929fab76702207f38b29a5d88",
                        "active_flag": true
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add a product",
        "description": "Adds a new product to the Products inventory. For more information, see the tutorial for <a href=\"https://pipedrive.readme.io/docs/adding-a-product\" target=\"_blank\" rel=\"noopener noreferrer\">adding a product</a>.",
        "operationId": "addProduct",
        "tags": [ "Products" ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "addProductRequest",
                "allOf": [
                  {
                    "type": "object",
                    "required": [ "name" ],
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The name of the product"
                      }
                    }
                  },
                  {
                    "title": "productRequest",
                    "type": "object",
                    "required": [ "name" ],
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "The product code"
                      },
                      "unit": {
                        "type": "string",
                        "description": "The unit in which this product is sold"
                      },
                      "tax": {
                        "type": "number",
                        "description": "The tax percentage",
                        "default": 0
                      },
                      "active_flag": {
                        "description": "Whether this product will be made active or not",
                        "title": "numberBooleanDefault1",
                        "type": "number",
                        "default": 1,
                        "enum": [ 0, 1 ]
                      },
                      "selectable": {
                        "description": "Whether this product can be selected in deals or not",
                        "title": "numberBooleanDefault1",
                        "type": "number",
                        "default": 1,
                        "enum": [ 0, 1 ]
                      },
                      "visible_to": {
                        "type": "string",
                        "allOf": [
                          { "type": "string", "enum": [ "1", "3", "5", "7" ] }
                        ],
                        "description": "The visibility of the product. If omitted, the visibility will be set to the default visibility setting of this item type for the authorized user. Read more about visibility groups <a href=\"https://support.pipedrive.com/en/article/visibility-groups\" target=\"_blank\" rel=\"noopener noreferrer\">here</a>.<h4>Essential / Advanced plan</h4><table><tr><th style=\"width: 40px\">Value</th><th>Description</th></tr><tr><td>`1`</td><td>Owner &amp; followers</td><tr><td>`3`</td><td>Entire company</td></tr></table><h4>Professional / Enterprise plan</h4><table><tr><th style=\"width: 40px\">Value</th><th>Description</th></tr><tr><td>`1`</td><td>Owner only</td><tr><td>`3`</td><td>Owner's visibility group</td></tr><tr><td>`5`</td><td>Owner's visibility group and sub-groups</td></tr><tr><td>`7`</td><td>Entire company</td></tr></table>"
                      },
                      "owner_id": {
                        "type": "integer",
                        "description": "The ID of the user who will be marked as the owner of this product. When omitted, the authorized user ID will be used."
                      },
                      "prices": {
                        "type": "array",
                        "items": { "type": "object" },
                        "description": "An array of objects, each containing: `currency` (string), `price` (number), `cost` (number, optional), `overhead_cost` (number, optional). Note that there can only be one price per product per currency. When `prices` is omitted altogether, a default price of 0 and a default currency based on the company's currency will be assigned."
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Add product data",
            "content": {
              "application/json": {
                "schema": {
                  "title": "getproduct",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "If the response is successful or not"
                    },
                    "data": {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "number",
                              "description": "The ID of the product"
                            },
                            "name": {
                              "type": "string",
                              "description": "The name of the product"
                            },
                            "code": {
                              "type": "string",
                              "description": "The product code"
                            },
                            "unit": {
                              "type": "string",
                              "description": "The unit in which this product is sold"
                            },
                            "tax": {
                              "type": "number",
                              "description": "The ax percentage",
                              "default": 0
                            },
                            "active_flag": {
                              "description": "Whether this product is active or not",
                              "title": "numberBooleanDefault1",
                              "type": "number",
                              "default": 1,
                              "enum": [ 0, 1 ]
                            },
                            "selectable": {
                              "description": "Whether this product is selected in deals or not",
                              "title": "numberBooleanDefault1",
                              "type": "number",
                              "default": 1,
                              "enum": [ 0, 1 ]
                            },
                            "visible_to": {
                              "allOf": [
                                {
                                  "type": "string",
                                  "enum": [ "1", "3", "5", "7" ]
                                }
                              ],
                              "description": "Visibility of the product"
                            },
                            "owner_id": {
                              "type": "object",
                              "description": "Information about the Pipedrive user who owns the product"
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "prices": {
                              "type": "array",
                              "items": { "type": "object" },
                              "description": "Array of objects, each containing: currency (string), price (number), cost (number, optional), overhead_cost (number, optional)"
                            }
                          }
                        }
                      ]
                    },
                    "related_objects": {
                      "type": "object",
                      "properties": {
                        "user": {
                          "type": "object",
                          "properties": {
                            "USER_ID": {
                              "type": "object",
                              "title": "userDataWithId",
                              "allOf": [
                                {
                                  "properties": {
                                    "id": {
                                      "type": "integer",
                                      "description": "The ID of the user"
                                    },
                                    "name": {
                                      "type": "string",
                                      "description": "The name of the user"
                                    },
                                    "email": {
                                      "type": "string",
                                      "description": "The email of the user"
                                    },
                                    "has_pic": {
                                      "type": "integer",
                                      "description": "Whether the user has picture or not. 0 = No picture, 1 = Has picture."
                                    },
                                    "pic_hash": {
                                      "type": "string",
                                      "nullable": true,
                                      "description": "The user picture hash"
                                    },
                                    "active_flag": {
                                      "type": "boolean",
                                      "description": "Whether the user is active or not"
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "description": "The ID of the user"
                                }
                              ]
                            }
                          }
                        },
                        "deal": {
                          "type": "object",
                          "properties": {
                            "DEAL_ID": {
                              "type": "object",
                              "description": "The ID of the deal which is associated with the item",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "description": "The ID of the deal associated with the item"
                                },
                                "title": {
                                  "type": "string",
                                  "description": "The title of the deal associated with the item"
                                },
                                "status": {
                                  "type": "string",
                                  "description": "The status of the deal associated with the item"
                                },
                                "value": {
                                  "type": "number",
                                  "description": "The value of the deal that is associated with the item"
                                },
                                "currency": {
                                  "type": "string",
                                  "description": "The currency of the deal value"
                                },
                                "stage_id": {
                                  "type": "integer",
                                  "description": "The ID of the stage the deal is currently at"
                                },
                                "pipeline_id": {
                                  "type": "integer",
                                  "description": "The ID of the pipeline the deal is in"
                                }
                              }
                            }
                          }
                        },
                        "person": {
                          "type": "object",
                          "properties": {
                            "PERSON_ID": {
                              "type": "object",
                              "description": "The ID of the person associated with the item",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "integer",
                                      "description": "The ID of the person associated with the item"
                                    },
                                    "name": {
                                      "type": "string",
                                      "description": "The name of the person associated with the item"
                                    },
                                    "email": {
                                      "type": "array",
                                      "description": "The emails of the person associated with the item",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "label": {
                                            "type": "string",
                                            "description": "The type of the email"
                                          },
                                          "value": {
                                            "type": "string",
                                            "description": "The email of the associated person"
                                          },
                                          "primary": {
                                            "type": "boolean",
                                            "description": "Whether this is the primary email or not"
                                          }
                                        }
                                      }
                                    },
                                    "phone": {
                                      "type": "array",
                                      "description": "The phone numbers of the person associated with the item",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "label": {
                                            "type": "string",
                                            "description": "The type of the phone number"
                                          },
                                          "value": {
                                            "type": "string",
                                            "description": "The phone number of the person associated with the item"
                                          },
                                          "primary": {
                                            "type": "boolean",
                                            "description": "Whether this is the primary phone number or not"
                                          }
                                        }
                                      }
                                    },
                                    "owner_id": {
                                      "type": "integer",
                                      "description": "The ID of the owner of the person that is associated with the item"
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        },
                        "organization": {
                          "type": "object",
                          "properties": {
                            "ORGANIZATION_ID": {
                              "type": "object",
                              "description": "The ID of the organization associated with the item",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "integer",
                                      "description": "The ID of the organization associated with the item"
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "The name of the organization associated with the item"
                                    },
                                    "people_count": {
                                      "type": "integer",
                                      "description": "The number of people connected with the organization that is associated with the item"
                                    },
                                    "owner_id": {
                                      "type": "integer",
                                      "description": "The ID of the owner of the organization that is associated with the item"
                                    },
                                    "address": {
                                      "type": "string",
                                      "description": "The address of the organization"
                                    },
                                    "cc_email": {
                                      "type": "string",
                                      "description": "The BCC email of the organization associated with the item"
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "success": true,
                  "data": {
                    "id": 1,
                    "name": "Regular Pencil",
                    "code": "MPENCIL",
                    "description": null,
                    "unit": "",
                    "tax": 0,
                    "category": null,
                    "active_flag": 1,
                    "selectable": 1,
                    "first_char": "r",
                    "visible_to": "3",
                    "owner_id": {
                      "id": 10100010,
                      "name": "Example User",
                      "email": "example@test.com",
                      "has_pic": true,
                      "pic_hash": "5df5332929fab76702207f38b29a5d82",
                      "active_flag": true,
                      "value": 10100010
                    },
                    "files_count": null,
                    "add_time": "2019-12-19 11:36:49",
                    "update_time": "2019-12-26 13:35:17",
                    "prices": [
                      {
                        "id": 1,
                        "product_id": 1,
                        "price": 5,
                        "currency": "EUR",
                        "cost": 2,
                        "overhead_cost": null
                      }
                    ]
                  },
                  "related_objects": {
                    "user": {
                      "10100010": {
                        "id": 10100010,
                        "name": "Example User",
                        "email": "example@test.com",
                        "has_pic": true,
                        "pic_hash": "5df5332929fab76702207f38b29a5d82",
                        "active_flag": true
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/products/search": {
      "get": {
        "summary": "Search products",
        "description": "Searches all products by name, code and/or custom fields. This endpoint is a wrapper of <a href=\"https://developers.pipedrive.com/docs/api/v1/ItemSearch#searchItem\">/v1/itemSearch</a> with a narrower OAuth scope.",
        "operationId": "searchProducts",
        "tags": [ "Products" ],
        "parameters": [
          {
            "in": "query",
            "name": "term",
            "required": true,
            "schema": { "type": "string" },
            "description": "The search term to look for. Minimum 2 characters (or 1 if using `exact_match`). Please note that the search term has to be URL encoded."
          },
          {
            "in": "query",
            "name": "fields",
            "schema": {
              "type": "string",
              "enum": [ "code", "custom_fields", "name" ]
            },
            "description": "A comma-separated string array. The fields to perform the search from. Defaults to all of them."
          },
          {
            "in": "query",
            "name": "exact_match",
            "schema": { "type": "boolean", "enum": [ true, false ] },
            "description": "When enabled, only full exact matches against the given term are returned. It is <b>not</b> case sensitive."
          },
          {
            "in": "query",
            "name": "include_fields",
            "schema": { "type": "string", "enum": [ "product.price" ] },
            "description": "Supports including optional fields in the results which are not provided by default"
          },
          {
            "in": "query",
            "name": "start",
            "schema": { "type": "integer", "default": 0 },
            "description": "Pagination start. Note that the pagination is based on main results and does not include related items when using `search_for_related_items` parameter."
          },
          {
            "in": "query",
            "name": "limit",
            "schema": { "type": "integer" },
            "description": "Items shown per page"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "searchProducts",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "description": "The array of found items",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "result_score": {
                                    "type": "number",
                                    "description": "Search result relevancy"
                                  },
                                  "item": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "integer",
                                        "description": "The ID of the product"
                                      },
                                      "type": {
                                        "type": "string",
                                        "description": "The type of the item"
                                      },
                                      "name": {
                                        "type": "string",
                                        "description": "The name of the product"
                                      },
                                      "code": {
                                        "type": "integer",
                                        "description": "The code of the product"
                                      },
                                      "visible_to": {
                                        "type": "integer",
                                        "description": "The visibility of the product"
                                      },
                                      "owner": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "integer",
                                            "description": "The ID of the owner of the product"
                                          }
                                        }
                                      },
                                      "custom_fields": {
                                        "type": "array",
                                        "items": { "type": "string" },
                                        "description": "The custom fields"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "additional_data": {
                          "type": "object",
                          "properties": {
                            "pagination": {
                              "description": "Pagination details of the list",
                              "type": "object",
                              "properties": {
                                "start": {
                                  "type": "integer",
                                  "description": "Pagination start"
                                },
                                "limit": {
                                  "type": "integer",
                                  "description": "Items shown per page"
                                },
                                "more_items_in_collection": {
                                  "type": "boolean",
                                  "description": "Whether there are more list items in the collection than displayed"
                                },
                                "next_start": {
                                  "type": "integer",
                                  "description": "Next pagination start"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "success": true,
                  "data": {
                    "items": [
                      {
                        "result_score": 0.8766,
                        "item": {
                          "id": 1,
                          "type": "product",
                          "name": "Some product",
                          "code": 123,
                          "visible_to": 3,
                          "owner": { "id": 1 },
                          "custom_fields": [ ]
                        }
                      }
                    ]
                  },
                  "additional_data": {
                    "pagination": {
                      "start": 0,
                      "limit": 100,
                      "more_items_in_collection": false
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/products/{id}": {
      "delete": {
        "summary": "Delete a product",
        "description": "Marks a product as deleted. After 30 days, the product will be permanently deleted.",
        "operationId": "deleteProduct",
        "tags": [ "Products" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the product",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "Deletes a product",
            "content": {
              "application/json": {
                "schema": {
                  "title": "deleteProduct",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "If the response is successful or not"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "allOf": [ { "type": "integer" } ],
                          "description": "The ID of the removed product"
                        }
                      }
                    }
                  }
                },
                "example": { "success": true, "data": { "id": 1 } }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get one product",
        "description": "Returns data about a specific product.",
        "operationId": "getProduct",
        "tags": [ "Products" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the product",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "Get product information by id",
            "content": {
              "application/json": {
                "schema": {
                  "title": "getproduct",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "If the response is successful or not"
                    },
                    "data": {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "number",
                              "description": "The ID of the product"
                            },
                            "name": {
                              "type": "string",
                              "description": "The name of the product"
                            },
                            "code": {
                              "type": "string",
                              "description": "The product code"
                            },
                            "unit": {
                              "type": "string",
                              "description": "The unit in which this product is sold"
                            },
                            "tax": {
                              "type": "number",
                              "description": "The ax percentage",
                              "default": 0
                            },
                            "active_flag": {
                              "description": "Whether this product is active or not",
                              "title": "numberBooleanDefault1",
                              "type": "number",
                              "default": 1,
                              "enum": [ 0, 1 ]
                            },
                            "selectable": {
                              "description": "Whether this product is selected in deals or not",
                              "title": "numberBooleanDefault1",
                              "type": "number",
                              "default": 1,
                              "enum": [ 0, 1 ]
                            },
                            "visible_to": {
                              "allOf": [
                                {
                                  "type": "string",
                                  "enum": [ "1", "3", "5", "7" ]
                                }
                              ],
                              "description": "Visibility of the product"
                            },
                            "owner_id": {
                              "type": "object",
                              "description": "Information about the Pipedrive user who owns the product"
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "prices": {
                              "type": "array",
                              "items": { "type": "object" },
                              "description": "Array of objects, each containing: currency (string), price (number), cost (number, optional), overhead_cost (number, optional)"
                            }
                          }
                        }
                      ]
                    },
                    "related_objects": {
                      "type": "object",
                      "properties": {
                        "user": {
                          "type": "object",
                          "properties": {
                            "USER_ID": {
                              "type": "object",
                              "title": "userDataWithId",
                              "allOf": [
                                {
                                  "properties": {
                                    "id": {
                                      "type": "integer",
                                      "description": "The ID of the user"
                                    },
                                    "name": {
                                      "type": "string",
                                      "description": "The name of the user"
                                    },
                                    "email": {
                                      "type": "string",
                                      "description": "The email of the user"
                                    },
                                    "has_pic": {
                                      "type": "integer",
                                      "description": "Whether the user has picture or not. 0 = No picture, 1 = Has picture."
                                    },
                                    "pic_hash": {
                                      "type": "string",
                                      "nullable": true,
                                      "description": "The user picture hash"
                                    },
                                    "active_flag": {
                                      "type": "boolean",
                                      "description": "Whether the user is active or not"
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "description": "The ID of the user"
                                }
                              ]
                            }
                          }
                        },
                        "deal": {
                          "type": "object",
                          "properties": {
                            "DEAL_ID": {
                              "type": "object",
                              "description": "The ID of the deal which is associated with the item",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "description": "The ID of the deal associated with the item"
                                },
                                "title": {
                                  "type": "string",
                                  "description": "The title of the deal associated with the item"
                                },
                                "status": {
                                  "type": "string",
                                  "description": "The status of the deal associated with the item"
                                },
                                "value": {
                                  "type": "number",
                                  "description": "The value of the deal that is associated with the item"
                                },
                                "currency": {
                                  "type": "string",
                                  "description": "The currency of the deal value"
                                },
                                "stage_id": {
                                  "type": "integer",
                                  "description": "The ID of the stage the deal is currently at"
                                },
                                "pipeline_id": {
                                  "type": "integer",
                                  "description": "The ID of the pipeline the deal is in"
                                }
                              }
                            }
                          }
                        },
                        "person": {
                          "type": "object",
                          "properties": {
                            "PERSON_ID": {
                              "type": "object",
                              "description": "The ID of the person associated with the item",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "integer",
                                      "description": "The ID of the person associated with the item"
                                    },
                                    "name": {
                                      "type": "string",
                                      "description": "The name of the person associated with the item"
                                    },
                                    "email": {
                                      "type": "array",
                                      "description": "The emails of the person associated with the item",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "label": {
                                            "type": "string",
                                            "description": "The type of the email"
                                          },
                                          "value": {
                                            "type": "string",
                                            "description": "The email of the associated person"
                                          },
                                          "primary": {
                                            "type": "boolean",
                                            "description": "Whether this is the primary email or not"
                                          }
                                        }
                                      }
                                    },
                                    "phone": {
                                      "type": "array",
                                      "description": "The phone numbers of the person associated with the item",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "label": {
                                            "type": "string",
                                            "description": "The type of the phone number"
                                          },
                                          "value": {
                                            "type": "string",
                                            "description": "The phone number of the person associated with the item"
                                          },
                                          "primary": {
                                            "type": "boolean",
                                            "description": "Whether this is the primary phone number or not"
                                          }
                                        }
                                      }
                                    },
                                    "owner_id": {
                                      "type": "integer",
                                      "description": "The ID of the owner of the person that is associated with the item"
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        },
                        "organization": {
                          "type": "object",
                          "properties": {
                            "ORGANIZATION_ID": {
                              "type": "object",
                              "description": "The ID of the organization associated with the item",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "integer",
                                      "description": "The ID of the organization associated with the item"
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "The name of the organization associated with the item"
                                    },
                                    "people_count": {
                                      "type": "integer",
                                      "description": "The number of people connected with the organization that is associated with the item"
                                    },
                                    "owner_id": {
                                      "type": "integer",
                                      "description": "The ID of the owner of the organization that is associated with the item"
                                    },
                                    "address": {
                                      "type": "string",
                                      "description": "The address of the organization"
                                    },
                                    "cc_email": {
                                      "type": "string",
                                      "description": "The BCC email of the organization associated with the item"
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "success": true,
                  "data": {
                    "id": 1,
                    "name": "Regular Pencil",
                    "code": "MPENCIL",
                    "description": null,
                    "unit": "",
                    "tax": 0,
                    "category": null,
                    "active_flag": 1,
                    "selectable": 1,
                    "first_char": "r",
                    "visible_to": "3",
                    "owner_id": {
                      "id": 10100010,
                      "name": "Example User",
                      "email": "example@test.com",
                      "has_pic": true,
                      "pic_hash": "5df5332929fab76702207f38b29a5d82",
                      "active_flag": true,
                      "value": 10100010
                    },
                    "files_count": null,
                    "add_time": "2019-12-19 11:36:49",
                    "update_time": "2019-12-26 13:35:17",
                    "prices": [
                      {
                        "id": 1,
                        "product_id": 1,
                        "price": 5,
                        "currency": "EUR",
                        "cost": 2,
                        "overhead_cost": null
                      }
                    ]
                  },
                  "related_objects": {
                    "user": {
                      "10100010": {
                        "id": 10100010,
                        "name": "Example User",
                        "email": "example@test.com",
                        "has_pic": true,
                        "pic_hash": "5df5332929fab76702207f38b29a5d82",
                        "active_flag": true
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update a product",
        "description": "Updates product data.",
        "operationId": "updateProduct",
        "tags": [ "Products" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the product",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "addProductRequest",
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The name of the product"
                      }
                    }
                  },
                  {
                    "title": "productRequest",
                    "type": "object",
                    "required": [ "name" ],
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "The product code"
                      },
                      "unit": {
                        "type": "string",
                        "description": "The unit in which this product is sold"
                      },
                      "tax": {
                        "type": "number",
                        "description": "The tax percentage",
                        "default": 0
                      },
                      "active_flag": {
                        "description": "Whether this product will be made active or not",
                        "title": "numberBooleanDefault1",
                        "type": "number",
                        "default": 1,
                        "enum": [ 0, 1 ]
                      },
                      "selectable": {
                        "description": "Whether this product can be selected in deals or not",
                        "title": "numberBooleanDefault1",
                        "type": "number",
                        "default": 1,
                        "enum": [ 0, 1 ]
                      },
                      "visible_to": {
                        "type": "string",
                        "allOf": [
                          { "type": "string", "enum": [ "1", "3", "5", "7" ] }
                        ],
                        "description": "The visibility of the product. If omitted, the visibility will be set to the default visibility setting of this item type for the authorized user. Read more about visibility groups <a href=\"https://support.pipedrive.com/en/article/visibility-groups\" target=\"_blank\" rel=\"noopener noreferrer\">here</a>.<h4>Essential / Advanced plan</h4><table><tr><th style=\"width: 40px\">Value</th><th>Description</th></tr><tr><td>`1`</td><td>Owner &amp; followers</td><tr><td>`3`</td><td>Entire company</td></tr></table><h4>Professional / Enterprise plan</h4><table><tr><th style=\"width: 40px\">Value</th><th>Description</th></tr><tr><td>`1`</td><td>Owner only</td><tr><td>`3`</td><td>Owner's visibility group</td></tr><tr><td>`5`</td><td>Owner's visibility group and sub-groups</td></tr><tr><td>`7`</td><td>Entire company</td></tr></table>"
                      },
                      "owner_id": {
                        "type": "integer",
                        "description": "The ID of the user who will be marked as the owner of this product. When omitted, the authorized user ID will be used."
                      },
                      "prices": {
                        "type": "array",
                        "items": { "type": "object" },
                        "description": "An array of objects, each containing: `currency` (string), `price` (number), `cost` (number, optional), `overhead_cost` (number, optional). Note that there can only be one price per product per currency. When `prices` is omitted altogether, a default price of 0 and a default currency based on the company's currency will be assigned."
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updates product data",
            "content": {
              "application/json": {
                "schema": {
                  "title": "updateProduct",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "If the response is successful or not"
                    },
                    "data": {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "number",
                              "description": "The ID of the product"
                            },
                            "name": {
                              "type": "string",
                              "description": "The name of the product"
                            },
                            "code": {
                              "type": "string",
                              "description": "The product code"
                            },
                            "unit": {
                              "type": "string",
                              "description": "The unit in which this product is sold"
                            },
                            "tax": {
                              "type": "number",
                              "description": "The ax percentage",
                              "default": 0
                            },
                            "active_flag": {
                              "description": "Whether this product is active or not",
                              "title": "numberBooleanDefault1",
                              "type": "number",
                              "default": 1,
                              "enum": [ 0, 1 ]
                            },
                            "selectable": {
                              "description": "Whether this product is selected in deals or not",
                              "title": "numberBooleanDefault1",
                              "type": "number",
                              "default": 1,
                              "enum": [ 0, 1 ]
                            },
                            "visible_to": {
                              "allOf": [
                                {
                                  "type": "string",
                                  "enum": [ "1", "3", "5", "7" ]
                                }
                              ],
                              "description": "Visibility of the product"
                            },
                            "owner_id": {
                              "type": "object",
                              "description": "Information about the Pipedrive user who owns the product"
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "prices": {
                              "type": "object",
                              "description": "Object of objects, each containing: currency (string), price (number), cost (number, optional), overhead_cost (number, optional)"
                            }
                          }
                        }
                      ]
                    },
                    "related_objects": {
                      "type": "object",
                      "properties": {
                        "user": {
                          "type": "object",
                          "properties": {
                            "USER_ID": {
                              "type": "object",
                              "title": "userDataWithId",
                              "allOf": [
                                {
                                  "properties": {
                                    "id": {
                                      "type": "integer",
                                      "description": "The ID of the user"
                                    },
                                    "name": {
                                      "type": "string",
                                      "description": "The name of the user"
                                    },
                                    "email": {
                                      "type": "string",
                                      "description": "The email of the user"
                                    },
                                    "has_pic": {
                                      "type": "integer",
                                      "description": "Whether the user has picture or not. 0 = No picture, 1 = Has picture."
                                    },
                                    "pic_hash": {
                                      "type": "string",
                                      "nullable": true,
                                      "description": "The user picture hash"
                                    },
                                    "active_flag": {
                                      "type": "boolean",
                                      "description": "Whether the user is active or not"
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "description": "The ID of the user"
                                }
                              ]
                            }
                          }
                        },
                        "deal": {
                          "type": "object",
                          "properties": {
                            "DEAL_ID": {
                              "type": "object",
                              "description": "The ID of the deal which is associated with the item",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "description": "The ID of the deal associated with the item"
                                },
                                "title": {
                                  "type": "string",
                                  "description": "The title of the deal associated with the item"
                                },
                                "status": {
                                  "type": "string",
                                  "description": "The status of the deal associated with the item"
                                },
                                "value": {
                                  "type": "number",
                                  "description": "The value of the deal that is associated with the item"
                                },
                                "currency": {
                                  "type": "string",
                                  "description": "The currency of the deal value"
                                },
                                "stage_id": {
                                  "type": "integer",
                                  "description": "The ID of the stage the deal is currently at"
                                },
                                "pipeline_id": {
                                  "type": "integer",
                                  "description": "The ID of the pipeline the deal is in"
                                }
                              }
                            }
                          }
                        },
                        "person": {
                          "type": "object",
                          "properties": {
                            "PERSON_ID": {
                              "type": "object",
                              "description": "The ID of the person associated with the item",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "integer",
                                      "description": "The ID of the person associated with the item"
                                    },
                                    "name": {
                                      "type": "string",
                                      "description": "The name of the person associated with the item"
                                    },
                                    "email": {
                                      "type": "array",
                                      "description": "The emails of the person associated with the item",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "label": {
                                            "type": "string",
                                            "description": "The type of the email"
                                          },
                                          "value": {
                                            "type": "string",
                                            "description": "The email of the associated person"
                                          },
                                          "primary": {
                                            "type": "boolean",
                                            "description": "Whether this is the primary email or not"
                                          }
                                        }
                                      }
                                    },
                                    "phone": {
                                      "type": "array",
                                      "description": "The phone numbers of the person associated with the item",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "label": {
                                            "type": "string",
                                            "description": "The type of the phone number"
                                          },
                                          "value": {
                                            "type": "string",
                                            "description": "The phone number of the person associated with the item"
                                          },
                                          "primary": {
                                            "type": "boolean",
                                            "description": "Whether this is the primary phone number or not"
                                          }
                                        }
                                      }
                                    },
                                    "owner_id": {
                                      "type": "integer",
                                      "description": "The ID of the owner of the person that is associated with the item"
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        },
                        "organization": {
                          "type": "object",
                          "properties": {
                            "ORGANIZATION_ID": {
                              "type": "object",
                              "description": "The ID of the organization associated with the item",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "integer",
                                      "description": "The ID of the organization associated with the item"
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "The name of the organization associated with the item"
                                    },
                                    "people_count": {
                                      "type": "integer",
                                      "description": "The number of people connected with the organization that is associated with the item"
                                    },
                                    "owner_id": {
                                      "type": "integer",
                                      "description": "The ID of the owner of the organization that is associated with the item"
                                    },
                                    "address": {
                                      "type": "string",
                                      "description": "The address of the organization"
                                    },
                                    "cc_email": {
                                      "type": "string",
                                      "description": "The BCC email of the organization associated with the item"
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "success": true,
                  "data": {
                    "id": 1,
                    "name": "Regular Pencil",
                    "code": "MPENCIL",
                    "description": null,
                    "unit": "",
                    "tax": 0,
                    "category": null,
                    "active_flag": 1,
                    "selectable": 1,
                    "first_char": "r",
                    "visible_to": "3",
                    "owner_id": {
                      "id": 10100010,
                      "name": "Example User",
                      "email": "example@test.com",
                      "has_pic": true,
                      "pic_hash": "5df5332929fab76702207f38b29a5d82",
                      "active_flag": true,
                      "value": 10100010
                    },
                    "files_count": null,
                    "add_time": "2019-12-19 11:36:49",
                    "update_time": "2019-12-26 13:35:17",
                    "prices": {
                      "EUR": {
                        "id": 1,
                        "product_id": 1,
                        "price": 5,
                        "currency": "EUR",
                        "cost": 2,
                        "overhead_cost": 3
                      }
                    }
                  },
                  "related_objects": {
                    "user": {
                      "10100010": {
                        "id": 10100010,
                        "name": "Example User",
                        "email": "example@test.com",
                        "has_pic": true,
                        "pic_hash": "5df5332929fab76702207f38b29a5d82",
                        "active_flag": true
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/products/{id}/deals": {
      "get": {
        "summary": "Get deals where a product is attached to",
        "description": "Returns data about deals that have a product attached to it.",
        "operationId": "getProductDeals",
        "tags": [ "Products" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the product",
            "required": true,
            "schema": { "type": "integer" }
          },
          {
            "in": "query",
            "name": "start",
            "description": "Pagination start",
            "schema": { "type": "integer", "default": 0 }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Items shown per page",
            "schema": { "type": "integer" }
          },
          {
            "in": "query",
            "name": "status",
            "schema": {
              "type": "string",
              "default": "all_not_deleted",
              "enum": [ "open", "won", "lost", "deleted", "all_not_deleted" ]
            },
            "description": "Only fetch deals with a specific status. If omitted, all not deleted deals are returned. If set to deleted, deals that have been deleted up to 30 days ago will be included."
          }
        ],
        "responses": {
          "200": {
            "description": "The data of deals that have a product attached",
            "content": {
              "application/json": {
                "schema": {
                  "title": "getAssociatedDeals",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "title": "dealNonStrict",
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "integer",
                                    "description": "The ID of the deal"
                                  },
                                  "creator_user_id": {
                                    "type": "object",
                                    "description": "The creator of the deal",
                                    "properties": {
                                      "id": {
                                        "type": "integer",
                                        "description": "The ID of the deal creator"
                                      },
                                      "name": {
                                        "type": "string",
                                        "description": "The name of the deal creator"
                                      },
                                      "email": {
                                        "type": "string",
                                        "description": "The email of the deal creator"
                                      },
                                      "has_pic": {
                                        "type": "boolean",
                                        "description": "If the creator has a picture or not"
                                      },
                                      "pic_hash": {
                                        "type": "string",
                                        "nullable": true,
                                        "description": "The creator picture hash"
                                      },
                                      "active_flag": {
                                        "type": "boolean",
                                        "description": "Whether the creator is active or not"
                                      },
                                      "value": {
                                        "type": "integer",
                                        "description": "The ID of the deal creator"
                                      }
                                    }
                                  },
                                  "user_id": {
                                    "title": "dealUserDataWithId",
                                    "allOf": [
                                      {
                                        "description": "The user who is associated with the deal",
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "integer",
                                            "description": "The ID of the user"
                                          },
                                          "name": {
                                            "type": "string",
                                            "description": "The name of the user"
                                          },
                                          "email": {
                                            "type": "string",
                                            "description": "The email of the user"
                                          },
                                          "has_pic": {
                                            "type": "boolean",
                                            "description": "If the user has a picture or not"
                                          },
                                          "pic_hash": {
                                            "type": "string",
                                            "nullable": true,
                                            "description": "The user picture hash"
                                          },
                                          "active_flag": {
                                            "type": "boolean",
                                            "description": "Whether the user is active or not"
                                          }
                                        }
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "value": {
                                            "type": "integer",
                                            "description": "The ID of the user"
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  "person_id": {
                                    "title": "dealPersonDataWithId",
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "description": "The person who is associated with the deal",
                                        "properties": {
                                          "active_flag": {
                                            "type": "boolean",
                                            "description": "Whether the associated person is active or not"
                                          },
                                          "name": {
                                            "type": "string",
                                            "description": "The name of the person associated with the deal"
                                          },
                                          "email": {
                                            "type": "array",
                                            "description": "The emails of the person associated with the deal",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "label": {
                                                  "type": "string",
                                                  "description": "The type of the email"
                                                },
                                                "value": {
                                                  "type": "string",
                                                  "description": "The email of the associated person"
                                                },
                                                "primary": {
                                                  "type": "boolean",
                                                  "description": "If this is the primary email or not"
                                                }
                                              }
                                            }
                                          },
                                          "phone": {
                                            "type": "array",
                                            "description": "The phone numbers of the person associated with the deal",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "label": {
                                                  "type": "string",
                                                  "description": "The type of the phone number"
                                                },
                                                "value": {
                                                  "type": "string",
                                                  "description": "The phone number of the person associated with the deal"
                                                },
                                                "primary": {
                                                  "type": "boolean",
                                                  "description": "If this is the primary phone number or not"
                                                }
                                              }
                                            }
                                          },
                                          "owner_id": {
                                            "type": "integer",
                                            "description": "The ID of the owner of the person that is associated with the deal"
                                          }
                                        }
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "value": {
                                            "type": "integer",
                                            "description": "The ID of the person associated with the deal"
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  "org_id": {
                                    "title": "dealOrganizationDataWithId",
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "description": "The organization which is associated with the deal",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "description": "The name of the organization associated with the deal"
                                          },
                                          "people_count": {
                                            "type": "integer",
                                            "description": "The number of people connected with the organization that is associated with the deal"
                                          },
                                          "owner_id": {
                                            "type": "integer",
                                            "description": "The ID of the owner of the organization that is associated with the deal"
                                          },
                                          "address": {
                                            "type": "string",
                                            "description": "The address of the organization that is associated with the deal"
                                          },
                                          "active_flag": {
                                            "type": "boolean",
                                            "description": "Whether the associated organization is active or not"
                                          },
                                          "cc_email": {
                                            "type": "string",
                                            "description": "The BCC email of the organization associated with the deal"
                                          }
                                        }
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "value": {
                                            "type": "integer",
                                            "description": "The ID of the organization associated with the deal"
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              },
                              {
                                "title": "baseDeal",
                                "type": "object",
                                "properties": {
                                  "stage_id": {
                                    "type": "integer",
                                    "description": "The ID of the deal stage"
                                  },
                                  "title": {
                                    "type": "string",
                                    "description": "The title of the deal"
                                  },
                                  "value": {
                                    "type": "number",
                                    "description": "The value of the deal"
                                  },
                                  "currency": {
                                    "type": "string",
                                    "description": "The currency associated with the deal"
                                  },
                                  "add_time": {
                                    "type": "string",
                                    "description": "The creation date and time of the deal"
                                  },
                                  "update_time": {
                                    "type": "string",
                                    "description": "The last updated date and time of the deal"
                                  },
                                  "stage_change_time": {
                                    "type": "string",
                                    "description": "The last updated date and time of the deal stage"
                                  },
                                  "active": {
                                    "type": "boolean",
                                    "description": "Whether the deal is active or not"
                                  },
                                  "deleted": {
                                    "type": "boolean",
                                    "description": "Whether the deal is deleted or not"
                                  },
                                  "status": {
                                    "type": "string",
                                    "description": "The status of the deal"
                                  },
                                  "probability": {
                                    "type": "number",
                                    "nullable": true,
                                    "description": "The success probability percentage of the deal"
                                  },
                                  "next_activity_date": {
                                    "type": "string",
                                    "description": "The date of the next activity associated with the deal"
                                  },
                                  "next_activity_time": {
                                    "type": "string",
                                    "description": "The time of the next activity associated with the deal"
                                  },
                                  "next_activity_id": {
                                    "type": "integer",
                                    "nullable": true,
                                    "description": "The ID of the next activity associated with the deal"
                                  },
                                  "last_activity_id": {
                                    "type": "integer",
                                    "nullable": true,
                                    "description": "The ID of the last activity associated with the deal"
                                  },
                                  "last_activity_date": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The date of the last activity associated with the deal"
                                  },
                                  "lost_reason": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The reason for losing the deal"
                                  },
                                  "visible_to": {
                                    "type": "string",
                                    "description": "The visibility of the deal"
                                  },
                                  "close_time": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The date and time of closing the deal"
                                  },
                                  "pipeline_id": {
                                    "type": "integer",
                                    "description": "The ID of pipeline associated with the deal"
                                  },
                                  "won_time": {
                                    "type": "string",
                                    "description": "The date and time of changing the deal status as won"
                                  },
                                  "first_won_time": {
                                    "type": "string",
                                    "description": "The date and time of the first time changing the deal status as won"
                                  },
                                  "lost_time": {
                                    "type": "string",
                                    "description": "The date and time of changing the deal status as lost"
                                  },
                                  "products_count": {
                                    "type": "integer",
                                    "description": "The number of products associated with the deal"
                                  },
                                  "files_count": {
                                    "type": "integer",
                                    "description": "The number of files associated with the deal"
                                  },
                                  "notes_count": {
                                    "type": "integer",
                                    "description": "The number of notes associated with the deal"
                                  },
                                  "followers_count": {
                                    "type": "integer",
                                    "description": "The number of followers associated with the deal"
                                  },
                                  "email_messages_count": {
                                    "type": "integer",
                                    "description": "The number of emails associated with the deal"
                                  },
                                  "activities_count": {
                                    "type": "integer",
                                    "description": "The number of activities associated with the deal"
                                  },
                                  "done_activities_count": {
                                    "type": "integer",
                                    "description": "The number of completed activities associated with the deal"
                                  },
                                  "undone_activities_count": {
                                    "type": "integer",
                                    "description": "The number of incomplete activities associated with the deal"
                                  },
                                  "participants_count": {
                                    "type": "integer",
                                    "description": "The number of participants associated with the deal"
                                  },
                                  "expected_close_date": {
                                    "type": "string",
                                    "format": "date",
                                    "description": "The expected close date of the deal"
                                  },
                                  "last_incoming_mail_time": {
                                    "type": "string",
                                    "description": "The date and time of the last incoming email associated with the deal"
                                  },
                                  "last_outgoing_mail_time": {
                                    "type": "string",
                                    "description": "The date and time of the last outgoing email associated with the deal"
                                  },
                                  "label": {
                                    "type": "integer",
                                    "description": "The label assigned to the deal"
                                  },
                                  "stage_order_nr": {
                                    "type": "integer",
                                    "description": "The order number of the deal stage associated with the deal"
                                  },
                                  "person_name": {
                                    "type": "string",
                                    "description": "The name of the person associated with the deal"
                                  },
                                  "org_name": {
                                    "type": "string",
                                    "description": "The name of the organization associated with the deal"
                                  },
                                  "next_activity_subject": {
                                    "type": "string",
                                    "description": "The subject of the next activity associated with the deal"
                                  },
                                  "next_activity_type": {
                                    "type": "string",
                                    "description": "The type of the next activity associated with the deal"
                                  },
                                  "next_activity_duration": {
                                    "type": "string",
                                    "description": "The duration of the next activity associated with the deal"
                                  },
                                  "next_activity_note": {
                                    "type": "string",
                                    "description": "The note of the next activity associated with the deal"
                                  },
                                  "formatted_value": {
                                    "type": "string",
                                    "description": "The deal value formatted with selected currency. E.g. US$500"
                                  },
                                  "weighted_value": {
                                    "type": "number",
                                    "description": "Probability times deal value. Probability can either be deal probability or if not set, then stage probability."
                                  },
                                  "formatted_weighted_value": {
                                    "type": "string",
                                    "description": "The weighted_value formatted with selected currency. E.g. US$500"
                                  },
                                  "weighted_value_currency": {
                                    "type": "string",
                                    "description": "The currency associated with the deal"
                                  },
                                  "rotten_time": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The date and time of changing the deal status as rotten"
                                  },
                                  "owner_name": {
                                    "type": "string",
                                    "description": "The name of the deal owner"
                                  },
                                  "cc_email": {
                                    "type": "string",
                                    "description": "The BCC email of the deal"
                                  },
                                  "org_hidden": {
                                    "type": "boolean",
                                    "description": "If the organization that is associated with the deal is hidden or not"
                                  },
                                  "person_hidden": {
                                    "type": "boolean",
                                    "description": "If the person that is associated with the deal is hidden or not"
                                  }
                                }
                              }
                            ]
                          },
                          "description": "The array of deals"
                        },
                        "additional_data": {
                          "description": "The additional data of the list",
                          "type": "object",
                          "properties": {
                            "start": {
                              "type": "integer",
                              "description": "Pagination start"
                            },
                            "limit": {
                              "type": "integer",
                              "description": "Items shown per page"
                            },
                            "more_items_in_collection": {
                              "type": "boolean",
                              "description": "If there are more list items in the collection than displayed or not"
                            }
                          }
                        },
                        "related_objects": {
                          "type": "object",
                          "properties": {
                            "organization": {
                              "type": "object",
                              "properties": {
                                "ORGANIZATION_ID": {
                                  "type": "object",
                                  "description": "The ID of the organization associated with the item",
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "active_flag": {
                                          "type": "boolean",
                                          "description": "Whether the associated organization is active or not"
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "description": "The ID of the organization associated with the item",
                                      "allOf": [
                                        {
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "type": "integer",
                                              "description": "The ID of the organization associated with the item"
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string",
                                              "description": "The name of the organization associated with the item"
                                            },
                                            "people_count": {
                                              "type": "integer",
                                              "description": "The number of people connected with the organization that is associated with the item"
                                            },
                                            "owner_id": {
                                              "type": "integer",
                                              "description": "The ID of the owner of the organization that is associated with the item"
                                            },
                                            "address": {
                                              "type": "string",
                                              "description": "The address of the organization"
                                            },
                                            "cc_email": {
                                              "type": "string",
                                              "description": "The BCC email of the organization associated with the item"
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  ]
                                }
                              }
                            },
                            "person": {
                              "type": "object",
                              "properties": {
                                "PERSON_ID": {
                                  "type": "object",
                                  "description": "The ID of the person associated with the item",
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "active_flag": {
                                          "type": "boolean",
                                          "description": "Whether the associated person is active or not"
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "integer",
                                          "description": "The ID of the person associated with the item"
                                        },
                                        "name": {
                                          "type": "string",
                                          "description": "The name of the person associated with the item"
                                        },
                                        "email": {
                                          "type": "array",
                                          "description": "The emails of the person associated with the item",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "label": {
                                                "type": "string",
                                                "description": "The type of the email"
                                              },
                                              "value": {
                                                "type": "string",
                                                "description": "The email of the associated person"
                                              },
                                              "primary": {
                                                "type": "boolean",
                                                "description": "Whether this is the primary email or not"
                                              }
                                            }
                                          }
                                        },
                                        "phone": {
                                          "type": "array",
                                          "description": "The phone numbers of the person associated with the item",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "label": {
                                                "type": "string",
                                                "description": "The type of the phone number"
                                              },
                                              "value": {
                                                "type": "string",
                                                "description": "The phone number of the person associated with the item"
                                              },
                                              "primary": {
                                                "type": "boolean",
                                                "description": "Whether this is the primary phone number or not"
                                              }
                                            }
                                          }
                                        },
                                        "owner_id": {
                                          "type": "integer",
                                          "description": "The ID of the owner of the person that is associated with the item"
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            },
                            "user": {
                              "type": "object",
                              "properties": {
                                "USER_ID": {
                                  "type": "object",
                                  "title": "userDataWithId",
                                  "allOf": [
                                    {
                                      "properties": {
                                        "id": {
                                          "type": "integer",
                                          "description": "The ID of the user"
                                        },
                                        "name": {
                                          "type": "string",
                                          "description": "The name of the user"
                                        },
                                        "email": {
                                          "type": "string",
                                          "description": "The email of the user"
                                        },
                                        "has_pic": {
                                          "type": "integer",
                                          "description": "Whether the user has picture or not. 0 = No picture, 1 = Has picture."
                                        },
                                        "pic_hash": {
                                          "type": "string",
                                          "nullable": true,
                                          "description": "The user picture hash"
                                        },
                                        "active_flag": {
                                          "type": "boolean",
                                          "description": "Whether the user is active or not"
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "description": "The ID of the user"
                                    }
                                  ]
                                }
                              }
                            },
                            "stage": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "description": "The ID of the stage"
                                },
                                "order_nr": {
                                  "type": "integer",
                                  "description": "Defines the order of the stage"
                                },
                                "name": {
                                  "type": "string",
                                  "description": "The name of the stage"
                                },
                                "active_flag": {
                                  "type": "boolean",
                                  "description": "Whether the stage is active or deleted"
                                },
                                "deal_probability": {
                                  "type": "integer",
                                  "description": "The success probability percentage of the deal. Used/shown when the deal weighted values are used."
                                },
                                "pipeline_id": {
                                  "type": "integer",
                                  "description": "The ID of the pipeline to add the stage to"
                                },
                                "rotten_flag": {
                                  "type": "boolean",
                                  "enum": [ true, false ],
                                  "description": "Whether deals in this stage can become rotten"
                                },
                                "rotten_days": {
                                  "type": "integer",
                                  "description": "The number of days the deals not updated in this stage would become rotten. Applies only if the `rotten_flag` is set."
                                },
                                "add_time": {
                                  "type": "string",
                                  "description": "The stage creation time. Format: YYYY-MM-DD HH:MM:SS."
                                },
                                "update_time": {
                                  "type": "string",
                                  "description": "The stage update time. Format: YYYY-MM-DD HH:MM:SS."
                                }
                              }
                            },
                            "pipeline": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "description": "The ID of the pipeline"
                                },
                                "name": {
                                  "type": "string",
                                  "description": "The name of the pipeline"
                                },
                                "url_title": {
                                  "type": "string",
                                  "description": "The pipeline title displayed in the URL"
                                },
                                "order_nr": {
                                  "type": "integer",
                                  "description": "Defines the order of pipelines. First order (`order_nr=0`) is the default pipeline."
                                },
                                "active": {
                                  "type": "boolean",
                                  "description": "Whether this pipeline will be made inactive (hidden) or active"
                                },
                                "deal_probability": {
                                  "type": "boolean",
                                  "description": "Whether deal probability is disabled or enabled for this pipeline"
                                },
                                "add_time": {
                                  "type": "string",
                                  "description": "The pipeline creation time. Format: YYYY-MM-DD HH:MM:SS."
                                },
                                "update_time": {
                                  "type": "string",
                                  "description": "The pipeline update time. Format: YYYY-MM-DD HH:MM:SS."
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "success": true,
                  "data": [
                    {
                      "id": 1,
                      "creator_user_id": {
                        "id": 8877,
                        "name": "Creator",
                        "email": "john.doe@pipedrive.com",
                        "has_pic": false,
                        "pic_hash": null,
                        "active_flag": true,
                        "value": 8877
                      },
                      "user_id": {
                        "id": 8877,
                        "name": "Creator",
                        "email": "john.doe@pipedrive.com",
                        "has_pic": false,
                        "pic_hash": null,
                        "active_flag": true,
                        "value": 8877
                      },
                      "person_id": {
                        "active_flag": true,
                        "name": "Person",
                        "email": [
                          {
                            "label": "work",
                            "value": "person@pipedrive.com",
                            "primary": true
                          }
                        ],
                        "phone": [
                          {
                            "label": "work",
                            "value": "37244499911",
                            "primary": true
                          }
                        ],
                        "value": 1101
                      },
                      "org_id": {
                        "name": "Organization",
                        "people_count": 2,
                        "owner_id": 8877,
                        "address": "Mustamäe tee 3a, 10615 Tallinn",
                        "active_flag": true,
                        "cc_email": "org@pipedrivemail.com",
                        "value": 5
                      },
                      "stage_id": 2,
                      "title": "Deal One",
                      "value": 5000,
                      "currency": "EUR",
                      "add_time": "2019-05-29 04:21:51",
                      "update_time": "2019-11-28 16:19:50",
                      "stage_change_time": "2019-11-28 15:41:22",
                      "active": true,
                      "deleted": false,
                      "status": "open",
                      "probability": null,
                      "next_activity_date": "2019-11-29",
                      "next_activity_time": "11:30:00",
                      "next_activity_id": 128,
                      "last_activity_id": null,
                      "last_activity_date": null,
                      "lost_reason": null,
                      "visible_to": "1",
                      "close_time": null,
                      "pipeline_id": 1,
                      "won_time": "2019-11-27 11:40:36",
                      "first_won_time": "2019-11-27 11:40:36",
                      "lost_time": "2019-11-27 11:40:36",
                      "products_count": 0,
                      "files_count": 0,
                      "notes_count": 2,
                      "followers_count": 0,
                      "email_messages_count": 4,
                      "activities_count": 1,
                      "done_activities_count": 0,
                      "undone_activities_count": 1,
                      "participants_count": 1,
                      "expected_close_date": "2019-06-29",
                      "last_incoming_mail_time": "2019-05-29 18:21:42",
                      "last_outgoing_mail_time": "2019-05-30 03:45:35",
                      "label": 11,
                      "stage_order_nr": 2,
                      "person_name": "Person",
                      "org_name": "Organization",
                      "next_activity_subject": "Call",
                      "next_activity_type": "call",
                      "next_activity_duration": "00:30:00",
                      "next_activity_note": "Note content",
                      "formatted_value": "€5,000",
                      "weighted_value": 5000,
                      "formatted_weighted_value": "€5,000",
                      "weighted_value_currency": "EUR",
                      "rotten_time": null,
                      "owner_name": "Creator",
                      "cc_email": "company+deal1@pipedrivemail.com",
                      "org_hidden": false,
                      "person_hidden": false
                    }
                  ],
                  "additional_data": {
                    "pagination": {
                      "start": 0,
                      "limit": 100,
                      "more_items_in_collection": true
                    }
                  },
                  "related_objects": {
                    "user": {
                      "8877": {
                        "id": 8877,
                        "name": "Creator",
                        "email": "john.doe@pipedrive.com",
                        "has_pic": false,
                        "pic_hash": null,
                        "active_flag": true
                      }
                    },
                    "organization": {
                      "5": {
                        "id": 5,
                        "name": "Organization",
                        "people_count": 2,
                        "owner_id": 8877,
                        "address": "Mustamäe tee 3a, 10615 Tallinn",
                        "active_flag": true,
                        "cc_email": "org@pipedrivemail.com"
                      }
                    },
                    "person": {
                      "1101": {
                        "active_flag": true,
                        "id": 1101,
                        "name": "Person",
                        "email": [
                          {
                            "label": "work",
                            "value": "person@pipedrive.com",
                            "primary": true
                          }
                        ],
                        "phone": [
                          {
                            "label": "work",
                            "value": "3421787767",
                            "primary": true
                          }
                        ],
                        "owner_id": 8877
                      }
                    },
                    "stage": {
                      "2": {
                        "id": 2,
                        "company_id": 123,
                        "order_nr": 1,
                        "name": "Stage Name",
                        "active_flag": true,
                        "deal_probability": 100,
                        "pipeline_id": 1,
                        "rotten_flag": false,
                        "rotten_days": null,
                        "add_time": "2015-12-08 13:54:06",
                        "update_time": "2015-12-08 13:54:06",
                        "pipeline_name": "Pipeline",
                        "pipeline_deal_probability": true
                      }
                    },
                    "pipeline": {
                      "1": {
                        "id": 1,
                        "name": "Pipeline",
                        "url_title": "Pipeline",
                        "order_nr": 0,
                        "active": true,
                        "deal_probability": true,
                        "add_time": "2015-12-08 10:00:24",
                        "update_time": "2015-12-08 10:00:24"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/products/{id}/files": {
      "get": {
        "summary": "List files attached to a product",
        "description": "Lists files associated with a product.",
        "operationId": "getProductFiles",
        "tags": [ "Products" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the product",
            "required": true,
            "schema": { "type": "integer" }
          },
          {
            "in": "query",
            "name": "start",
            "description": "Pagination start",
            "schema": { "type": "integer", "default": 0 }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Items shown per page",
            "schema": { "type": "integer" }
          },
          {
            "in": "query",
            "name": "sort",
            "schema": { "type": "string" },
            "description": "The field name and sorting mode (`field_name_1 ASC` or `field_name_1 DESC`). Supported fields: `update_time`, `id`"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "getAssociatedFiles",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The file data",
                            "properties": {
                              "id": {
                                "type": "integer",
                                "description": "The ID of the file"
                              },
                              "product_id": {
                                "type": "integer",
                                "description": "The ID of the product associated with the file"
                              },
                              "add_time": {
                                "type": "string",
                                "description": "The UTC date time when the file was uploaded. Format: YYYY-MM-DD HH:MM:SS"
                              },
                              "update_time": {
                                "type": "string",
                                "description": "The UTC date time when the file was last updated. Format: YYYY-MM-DD HH:MM:SS"
                              },
                              "file_name": {
                                "type": "string",
                                "description": "The original name of the file"
                              },
                              "file_size": {
                                "type": "integer",
                                "description": "The size of the file in bytes"
                              },
                              "active_flag": {
                                "type": "boolean",
                                "description": "Whether the user is active or not."
                              },
                              "inline_flag": {
                                "type": "boolean",
                                "description": "Whether the file was uploaded as inline or not"
                              },
                              "remote_location": {
                                "type": "string",
                                "description": "The location type to send the file to. Only googledrive is supported at the moment."
                              },
                              "remote_id": {
                                "type": "string",
                                "description": "The ID of the remote item"
                              },
                              "s3_bucket": {
                                "type": "string",
                                "description": "The location of the cloud storage"
                              },
                              "product_name": {
                                "type": "string",
                                "description": "The name of the product associated with the file"
                              },
                              "url": {
                                "type": "string",
                                "description": "The URL to download the file"
                              },
                              "name": {
                                "type": "string",
                                "description": "The visible name of the file"
                              },
                              "description": {
                                "type": "string",
                                "description": "The description of the file"
                              }
                            }
                          },
                          "description": "The array of files"
                        },
                        "additional_data": {
                          "description": "The additional data of the list",
                          "type": "object",
                          "properties": {
                            "start": {
                              "type": "integer",
                              "description": "Pagination start"
                            },
                            "limit": {
                              "type": "integer",
                              "description": "Items shown per page"
                            },
                            "more_items_in_collection": {
                              "type": "boolean",
                              "description": "If there are more list items in the collection than displayed or not"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "success": true,
                  "data": [
                    {
                      "id": 1,
                      "product_id": 1,
                      "add_time": "2020-09-16 11:19:36",
                      "update_time": "2020-09-16 11:19:36",
                      "file_name": "95781006_794143070992462_4330873630616453120_n_60817458877506f9eb74d03e5ef9ba061915b797998.jpg",
                      "file_type": "img",
                      "file_size": 95116,
                      "active_flag": true,
                      "inline_flag": false,
                      "remote_location": "s3",
                      "remote_id": "95781006_794143070992462_4330873630616453120_n.jpg",
                      "s3_bucket": "files",
                      "product_name": "contract.pdf",
                      "url": "https://app.pipedrive.com/api/v1/files/304/download",
                      "name": "95781006_794143070992462_4330873630616453120_n.jpg",
                      "description": "contract for client"
                    }
                  ],
                  "additional_data": {
                    "pagination": {
                      "start": 0,
                      "limit": 100,
                      "more_items_in_collection": true
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/products/{id}/followers": {
      "get": {
        "summary": "List followers of a product",
        "description": "Lists the followers of a product.",
        "operationId": "getProductFollowers",
        "tags": [ "Products" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the product",
            "required": true,
            "schema": { "type": "integer" }
          },
          {
            "in": "query",
            "name": "start",
            "description": "Pagination start",
            "schema": { "type": "integer", "default": 0 }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Items shown per page",
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "Lists the followers of a product",
            "content": {
              "application/json": {
                "schema": {
                  "title": "getProductFollowersResponseSuccess",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "description": "The list of followers",
                          "items": {
                            "type": "object",
                            "properties": {
                              "user_id": {
                                "type": "integer",
                                "description": "The ID of the user"
                              },
                              "id": {
                                "type": "integer",
                                "description": "The ID of the user follower"
                              },
                              "product_id": {
                                "type": "integer",
                                "description": "The ID of the product"
                              },
                              "add_time": {
                                "type": "string",
                                "description": "The date and time when the follower was added to the person"
                              }
                            }
                          }
                        },
                        "additional_data": {
                          "description": "The additional data of the list",
                          "type": "object",
                          "properties": {
                            "start": {
                              "type": "integer",
                              "description": "Pagination start"
                            },
                            "limit": {
                              "type": "integer",
                              "description": "Items shown per page"
                            },
                            "more_items_in_collection": {
                              "type": "boolean",
                              "description": "If there are more list items in the collection than displayed or not"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "success": true,
                  "data": [
                    {
                      "user_id": 123,
                      "id": 456,
                      "product_id": 789,
                      "add_time": "2021-08-03 12:07:05"
                    }
                  ],
                  "additional_data": {
                    "pagination": {
                      "start": 0,
                      "limit": 100,
                      "more_items_in_collection": false
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add a follower to a product",
        "description": "Adds a follower to a product.",
        "operationId": "addProductFollower",
        "tags": [ "Products" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the product",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "addProductFollowerRequest",
                "type": "object",
                "required": [ "user_id" ],
                "properties": {
                  "user_id": {
                    "type": "integer",
                    "description": "The ID of the user"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Adds a follower to a product",
            "content": {
              "application/json": {
                "schema": {
                  "title": "newFollower",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "If the response is successful or not"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "user_id": {
                          "type": "integer",
                          "description": "The ID of the user that was added as follower"
                        },
                        "id": {
                          "type": "integer",
                          "description": "The ID of the follower"
                        },
                        "product_id": {
                          "type": "integer",
                          "description": "The ID of the product"
                        },
                        "add_time": {
                          "type": "string",
                          "description": "The follower creation time. Format: YYYY-MM-DD HH:MM:SS"
                        }
                      }
                    }
                  }
                },
                "example": {
                  "success": true,
                  "data": {
                    "user_id": 10100010,
                    "id": 1,
                    "product_id": 2,
                    "add_time": "2019-12-24 12:02:04"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/products/{id}/followers/{follower_id}": {
      "delete": {
        "summary": "Delete a follower from a product",
        "description": "Deletes a follower from a product.",
        "operationId": "deleteProductFollower",
        "tags": [ "Products" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the product",
            "required": true,
            "schema": { "type": "integer" }
          },
          {
            "in": "path",
            "name": "follower_id",
            "required": true,
            "schema": { "type": "integer" },
            "description": "The ID of the relationship between the follower and the product"
          }
        ],
        "responses": {
          "200": {
            "description": "Deletes a follower from a product",
            "content": {
              "application/json": {
                "schema": {
                  "title": "deleteProductFollower",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "If the response is successful or not"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "allOf": [ { "type": "integer" } ],
                          "description": "The ID of the removed follower"
                        }
                      }
                    }
                  }
                },
                "example": { "success": true, "data": { "id": 1 } }
              }
            }
          }
        }
      }
    },
    "/products/{id}/permittedUsers": {
      "get": {
        "summary": "List permitted users",
        "description": "Lists users permitted to access a product.",
        "operationId": "getProductUsers",
        "tags": [ "Products" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the product",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "Lists users permitted to access a product",
            "content": {
              "application/json": {
                "schema": {
                  "title": "userIds",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": { "type": "integer" },
                          "description": "The list of user IDs"
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "success": true,
                  "data": [ 10100010, 22302444, 33511023 ]
                }
              }
            }
          }
        }
      }
    },
    "/productFields": {
      "delete": {
        "summary": "Delete multiple product fields in bulk",
        "description": "Marks multiple fields as deleted.",
        "operationId": "deleteProductFields",
        "tags": [ "ProductFields" ],
        "parameters": [
          {
            "in": "query",
            "name": "ids",
            "required": true,
            "schema": { "type": "string" },
            "description": "The comma-separated field IDs to delete"
          }
        ],
        "responses": {
          "200": {
            "description": "Mark multiple product fields as deleted",
            "content": {
              "application/json": {
                "schema": {
                  "title": "deleteProductFields",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "If the response is successful or not"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "array",
                          "description": "Array of all the IDs of the deleted product fields",
                          "items": { "type": "integer" }
                        }
                      }
                    }
                  }
                },
                "example": { "success": true, "data": { "id": [ 32, 35 ] } }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get all product fields",
        "description": "Returns data about all product fields.",
        "operationId": "getProductFields",
        "parameters": [
          {
            "in": "query",
            "name": "start",
            "description": "Pagination start",
            "schema": { "type": "integer", "default": 0 }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Items shown per page",
            "schema": { "type": "integer" }
          }
        ],
        "tags": [ "ProductFields" ],
        "responses": {
          "200": {
            "description": "Get data about all product fields",
            "content": {
              "application/json": {
                "schema": {
                  "title": "getProductFields",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "If the response is successful or not"
                    },
                    "data": {
                      "type": "array",
                      "description": "Array containing data for all product fields",
                      "items": {
                        "title": "productField",
                        "allOf": [
                          {
                            "type": "object",
                            "required": [ "name", "field_type" ],
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "The name of the field"
                              },
                              "options": {
                                "type": "array",
                                "items": { "type": "object" },
                                "description": "When `field_type` is either `set` or `enum`, possible options must be supplied as a JSON-encoded sequential array, for example:</br>`[{\"label\":\"red\"}, {\"label\":\"blue\"}, {\"label\":\"lilac\"}]`"
                              },
                              "field_type": {
                                "type": "string",
                                "enum": [
                                  "varchar",
                                  "varchar_auto",
                                  "text",
                                  "double",
                                  "monetary",
                                  "date",
                                  "set",
                                  "enum",
                                  "user",
                                  "org",
                                  "people",
                                  "phone",
                                  "time",
                                  "timerange",
                                  "daterange",
                                  "address"
                                ],
                                "description": "The type of the field<table><tr><th>Value</th><th>Description</th></tr><tr><td>`varchar`</td><td>Text (up to 255 characters)</td><tr><td>`varchar_auto`</td><td>Autocomplete text (up to 255 characters)</td><tr><td>`text`</td><td>Long text (up to 65k characters)</td><tr><td>`double`</td><td>Numeric value</td><tr><td>`monetary`</td><td>Monetary field (has a numeric value and a currency value)</td><tr><td>`date`</td><td>Date (format YYYY-MM-DD)</td><tr><td>`set`</td><td>Options field with a possibility of having multiple chosen options</td><tr><td>`enum`</td><td>Options field with a single possible chosen option</td><tr><td>`user`</td><td>User field (contains a user ID of another Pipedrive user)</td><tr><td>`org`</td><td>Organization field (contains an organization ID which is stored on the same account)</td><tr><td>`people`</td><td>Person field (contains a product ID which is stored on the same account)</td><tr><td>`phone`</td><td>Phone field (up to 255 numbers and/or characters)</td><tr><td>`time`</td><td>Time field (format HH:MM:SS)</td><tr><td>`timerange`</td><td>Time-range field (has a start time and end time value, both HH:MM:SS)</td><tr><td>`daterange`</td><td>Date-range field (has a start date and end date value, both YYYY-MM-DD)</td><tr><td>`address`</td><td>Address field (autocompleted by Google Maps)</dd></table>"
                              }
                            }
                          },
                          {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer",
                                "description": "The ID of the product field"
                              },
                              "key": {
                                "type": "string",
                                "description": "The key of the product field"
                              },
                              "order_nr": {
                                "type": "integer",
                                "description": "The position (index) of the product field in the detail view"
                              },
                              "add_time": {
                                "type": "string",
                                "description": "The product field creation time. Format: YYYY-MM-DD HH:MM:SS"
                              },
                              "update_time": {
                                "type": "string",
                                "description": "The product field last update time. Format: YYYY-MM-DD HH:MM:SS"
                              },
                              "last_updated_by_user_id": {
                                "type": "integer",
                                "description": "The ID of the last user to update the product field"
                              },
                              "active_flag": {
                                "type": "boolean",
                                "description": "Whether or not the product field is currently active"
                              },
                              "edit_flag": {
                                "type": "boolean",
                                "description": "Whether or not the product field name and metadata is editable"
                              },
                              "add_visible_flag": {
                                "type": "boolean",
                                "description": "Whether or not the product field is visible in the Add Product Modal"
                              },
                              "important_flag": {
                                "type": "boolean",
                                "description": "Whether or not the product field is marked as important"
                              },
                              "bulk_edit_allowed": {
                                "type": "boolean",
                                "description": "Whether or not the product field data can be edited"
                              },
                              "searchable_flag": {
                                "type": "boolean",
                                "description": "Whether or not the product field is searchable"
                              },
                              "filtering_allowed": {
                                "type": "boolean",
                                "description": "Whether or not the product field value can be used when filtering searches"
                              },
                              "sortable_flag": {
                                "type": "boolean",
                                "description": "Whether or not the product field is sortable"
                              },
                              "mandatory_flag": {
                                "type": "boolean",
                                "description": "Whether or not the product field is mandatory when creating products"
                              }
                            }
                          }
                        ]
                      }
                    },
                    "additional_data": {
                      "type": "object",
                      "description": "Additional data for the product field, such as pagination"
                    }
                  }
                },
                "example": {
                  "success": true,
                  "data": [
                    {
                      "id": 20,
                      "key": "name",
                      "name": "Name",
                      "order_nr": 1,
                      "picklist_data": null,
                      "field_type": "varchar",
                      "add_time": "2019-11-25 13:34:03",
                      "update_time": "2019-11-25 13:34:02",
                      "last_updated_by_user_id": 1,
                      "active_flag": true,
                      "edit_flag": false,
                      "index_visible_flag": true,
                      "details_visible_flag": false,
                      "add_visible_flag": true,
                      "important_flag": false,
                      "bulk_edit_allowed": true,
                      "searchable_flag": false,
                      "filtering_allowed": true,
                      "sortable_flag": true,
                      "mandatory_flag": true
                    },
                    {
                      "id": 24,
                      "key": "visible_to",
                      "name": "Visible to",
                      "order_nr": 5,
                      "field_type": "double",
                      "add_time": "2019-11-25 13:34:03",
                      "update_time": "2019-11-25 13:34:02",
                      "last_updated_by_user_id": 1,
                      "active_flag": true,
                      "edit_flag": false,
                      "index_visible_flag": true,
                      "details_visible_flag": true,
                      "add_visible_flag": false,
                      "important_flag": false,
                      "bulk_edit_allowed": true,
                      "searchable_flag": false,
                      "filtering_allowed": true,
                      "sortable_flag": true,
                      "options": [
                        { "id": 1, "label": "Owner & followers" },
                        { "id": 3, "label": "Entire company" }
                      ],
                      "mandatory_flag": true
                    }
                  ],
                  "additional_data": {
                    "pagination": {
                      "start": 0,
                      "limit": 100,
                      "more_items_in_collection": false
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add a new product field",
        "description": "Adds a new product field. For more information, see the tutorial for <a href=\"https://pipedrive.readme.io/docs/adding-a-new-custom-field\" target=\"_blank\" rel=\"noopener noreferrer\">adding a new custom field</a>.",
        "operationId": "addProductField",
        "tags": [ "ProductFields" ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [ "name", "field_type" ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the field"
                  },
                  "options": {
                    "type": "array",
                    "items": { "type": "object" },
                    "description": "When `field_type` is either `set` or `enum`, possible options must be supplied as a JSON-encoded sequential array, for example:</br>`[{\"label\":\"red\"}, {\"label\":\"blue\"}, {\"label\":\"lilac\"}]`"
                  },
                  "field_type": {
                    "type": "string",
                    "enum": [
                      "varchar",
                      "varchar_auto",
                      "text",
                      "double",
                      "monetary",
                      "date",
                      "set",
                      "enum",
                      "user",
                      "org",
                      "people",
                      "phone",
                      "time",
                      "timerange",
                      "daterange",
                      "address"
                    ],
                    "description": "The type of the field<table><tr><th>Value</th><th>Description</th></tr><tr><td>`varchar`</td><td>Text (up to 255 characters)</td><tr><td>`varchar_auto`</td><td>Autocomplete text (up to 255 characters)</td><tr><td>`text`</td><td>Long text (up to 65k characters)</td><tr><td>`double`</td><td>Numeric value</td><tr><td>`monetary`</td><td>Monetary field (has a numeric value and a currency value)</td><tr><td>`date`</td><td>Date (format YYYY-MM-DD)</td><tr><td>`set`</td><td>Options field with a possibility of having multiple chosen options</td><tr><td>`enum`</td><td>Options field with a single possible chosen option</td><tr><td>`user`</td><td>User field (contains a user ID of another Pipedrive user)</td><tr><td>`org`</td><td>Organization field (contains an organization ID which is stored on the same account)</td><tr><td>`people`</td><td>Person field (contains a product ID which is stored on the same account)</td><tr><td>`phone`</td><td>Phone field (up to 255 numbers and/or characters)</td><tr><td>`time`</td><td>Time field (format HH:MM:SS)</td><tr><td>`timerange`</td><td>Time-range field (has a start time and end time value, both HH:MM:SS)</td><tr><td>`daterange`</td><td>Date-range field (has a start date and end date value, both YYYY-MM-DD)</td><tr><td>`address`</td><td>Address field (autocompleted by Google Maps)</dd></table>"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Get the data for a single product field",
            "content": {
              "application/json": {
                "schema": {
                  "title": "getProductField",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "If the response is successful or not"
                    },
                    "data": {
                      "allOf": [
                        {
                          "title": "productField",
                          "allOf": [
                            {
                              "type": "object",
                              "required": [ "name", "field_type" ],
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "The name of the field"
                                },
                                "options": {
                                  "type": "array",
                                  "items": { "type": "object" },
                                  "description": "When `field_type` is either `set` or `enum`, possible options must be supplied as a JSON-encoded sequential array, for example:</br>`[{\"label\":\"red\"}, {\"label\":\"blue\"}, {\"label\":\"lilac\"}]`"
                                },
                                "field_type": {
                                  "type": "string",
                                  "enum": [
                                    "varchar",
                                    "varchar_auto",
                                    "text",
                                    "double",
                                    "monetary",
                                    "date",
                                    "set",
                                    "enum",
                                    "user",
                                    "org",
                                    "people",
                                    "phone",
                                    "time",
                                    "timerange",
                                    "daterange",
                                    "address"
                                  ],
                                  "description": "The type of the field<table><tr><th>Value</th><th>Description</th></tr><tr><td>`varchar`</td><td>Text (up to 255 characters)</td><tr><td>`varchar_auto`</td><td>Autocomplete text (up to 255 characters)</td><tr><td>`text`</td><td>Long text (up to 65k characters)</td><tr><td>`double`</td><td>Numeric value</td><tr><td>`monetary`</td><td>Monetary field (has a numeric value and a currency value)</td><tr><td>`date`</td><td>Date (format YYYY-MM-DD)</td><tr><td>`set`</td><td>Options field with a possibility of having multiple chosen options</td><tr><td>`enum`</td><td>Options field with a single possible chosen option</td><tr><td>`user`</td><td>User field (contains a user ID of another Pipedrive user)</td><tr><td>`org`</td><td>Organization field (contains an organization ID which is stored on the same account)</td><tr><td>`people`</td><td>Person field (contains a product ID which is stored on the same account)</td><tr><td>`phone`</td><td>Phone field (up to 255 numbers and/or characters)</td><tr><td>`time`</td><td>Time field (format HH:MM:SS)</td><tr><td>`timerange`</td><td>Time-range field (has a start time and end time value, both HH:MM:SS)</td><tr><td>`daterange`</td><td>Date-range field (has a start date and end date value, both YYYY-MM-DD)</td><tr><td>`address`</td><td>Address field (autocompleted by Google Maps)</dd></table>"
                                }
                              }
                            },
                            {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "description": "The ID of the product field"
                                },
                                "key": {
                                  "type": "string",
                                  "description": "The key of the product field"
                                },
                                "order_nr": {
                                  "type": "integer",
                                  "description": "The position (index) of the product field in the detail view"
                                },
                                "add_time": {
                                  "type": "string",
                                  "description": "The product field creation time. Format: YYYY-MM-DD HH:MM:SS"
                                },
                                "update_time": {
                                  "type": "string",
                                  "description": "The product field last update time. Format: YYYY-MM-DD HH:MM:SS"
                                },
                                "last_updated_by_user_id": {
                                  "type": "integer",
                                  "description": "The ID of the last user to update the product field"
                                },
                                "active_flag": {
                                  "type": "boolean",
                                  "description": "Whether or not the product field is currently active"
                                },
                                "edit_flag": {
                                  "type": "boolean",
                                  "description": "Whether or not the product field name and metadata is editable"
                                },
                                "add_visible_flag": {
                                  "type": "boolean",
                                  "description": "Whether or not the product field is visible in the Add Product Modal"
                                },
                                "important_flag": {
                                  "type": "boolean",
                                  "description": "Whether or not the product field is marked as important"
                                },
                                "bulk_edit_allowed": {
                                  "type": "boolean",
                                  "description": "Whether or not the product field data can be edited"
                                },
                                "searchable_flag": {
                                  "type": "boolean",
                                  "description": "Whether or not the product field is searchable"
                                },
                                "filtering_allowed": {
                                  "type": "boolean",
                                  "description": "Whether or not the product field value can be used when filtering searches"
                                },
                                "sortable_flag": {
                                  "type": "boolean",
                                  "description": "Whether or not the product field is sortable"
                                },
                                "mandatory_flag": {
                                  "type": "boolean",
                                  "description": "Whether or not the product field is mandatory when creating products"
                                }
                              }
                            }
                          ]
                        }
                      ],
                      "description": "All data for the product field"
                    }
                  }
                },
                "example": {
                  "success": true,
                  "data": {
                    "id": 32,
                    "key": "397b0f545d134b479a5485041b33b0f0f3da2333",
                    "name": "Color",
                    "order_nr": 13,
                    "field_type": "enum",
                    "add_time": "2019-12-20 11:01:24",
                    "update_time": "2019-12-20 11:01:24",
                    "last_updated_by_user_id": 10999910,
                    "active_flag": true,
                    "edit_flag": true,
                    "index_visible_flag": true,
                    "details_visible_flag": true,
                    "add_visible_flag": true,
                    "important_flag": false,
                    "bulk_edit_allowed": true,
                    "searchable_flag": false,
                    "filtering_allowed": true,
                    "sortable_flag": true,
                    "options": [
                      { "id": 9, "label": "red" },
                      { "id": 10, "label": "blue" },
                      { "id": 11, "label": "lilac" }
                    ],
                    "mandatory_flag": false
                  }
                }
              }
            }
          }
        }
      }
    },
    "/productFields/{id}": {
      "delete": {
        "summary": "Delete a product field",
        "description": "Marks a product field as deleted. For more information, see the tutorial for <a href=\"https://pipedrive.readme.io/docs/deleting-a-custom-field\" target=\"_blank\" rel=\"noopener noreferrer\">deleting a custom field</a>.",
        "operationId": "deleteProductField",
        "tags": [ "ProductFields" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the product field",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "Delete a product field",
            "content": {
              "application/json": {
                "schema": {
                  "title": "deleteProductField",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "If the response is successful or not"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "allOf": [ { "type": "integer" } ],
                          "description": "The ID of the deleted product field"
                        }
                      }
                    }
                  }
                },
                "example": { "success": true, "data": { "id": 32 } }
              }
            }
          },
          "410": {
            "description": "The product field with the specified ID does not exist or is inaccessible",
            "content": {
              "application/json": {
                "schema": {
                  "title": "failResponse",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "If the response is successful or not"
                    },
                    "error": {
                      "type": "string",
                      "description": "The error message"
                    }
                  }
                },
                "example": {
                  "success": false,
                  "error": "The field is not found"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get one product field",
        "description": "Returns data about a specific product field.",
        "operationId": "getProductField",
        "tags": [ "ProductFields" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the product field",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "Get the data for a single product field",
            "content": {
              "application/json": {
                "schema": {
                  "title": "getProductField",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "If the response is successful or not"
                    },
                    "data": {
                      "allOf": [
                        {
                          "title": "productField",
                          "allOf": [
                            {
                              "type": "object",
                              "required": [ "name", "field_type" ],
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "The name of the field"
                                },
                                "options": {
                                  "type": "array",
                                  "items": { "type": "object" },
                                  "description": "When `field_type` is either `set` or `enum`, possible options must be supplied as a JSON-encoded sequential array, for example:</br>`[{\"label\":\"red\"}, {\"label\":\"blue\"}, {\"label\":\"lilac\"}]`"
                                },
                                "field_type": {
                                  "type": "string",
                                  "enum": [
                                    "varchar",
                                    "varchar_auto",
                                    "text",
                                    "double",
                                    "monetary",
                                    "date",
                                    "set",
                                    "enum",
                                    "user",
                                    "org",
                                    "people",
                                    "phone",
                                    "time",
                                    "timerange",
                                    "daterange",
                                    "address"
                                  ],
                                  "description": "The type of the field<table><tr><th>Value</th><th>Description</th></tr><tr><td>`varchar`</td><td>Text (up to 255 characters)</td><tr><td>`varchar_auto`</td><td>Autocomplete text (up to 255 characters)</td><tr><td>`text`</td><td>Long text (up to 65k characters)</td><tr><td>`double`</td><td>Numeric value</td><tr><td>`monetary`</td><td>Monetary field (has a numeric value and a currency value)</td><tr><td>`date`</td><td>Date (format YYYY-MM-DD)</td><tr><td>`set`</td><td>Options field with a possibility of having multiple chosen options</td><tr><td>`enum`</td><td>Options field with a single possible chosen option</td><tr><td>`user`</td><td>User field (contains a user ID of another Pipedrive user)</td><tr><td>`org`</td><td>Organization field (contains an organization ID which is stored on the same account)</td><tr><td>`people`</td><td>Person field (contains a product ID which is stored on the same account)</td><tr><td>`phone`</td><td>Phone field (up to 255 numbers and/or characters)</td><tr><td>`time`</td><td>Time field (format HH:MM:SS)</td><tr><td>`timerange`</td><td>Time-range field (has a start time and end time value, both HH:MM:SS)</td><tr><td>`daterange`</td><td>Date-range field (has a start date and end date value, both YYYY-MM-DD)</td><tr><td>`address`</td><td>Address field (autocompleted by Google Maps)</dd></table>"
                                }
                              }
                            },
                            {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "description": "The ID of the product field"
                                },
                                "key": {
                                  "type": "string",
                                  "description": "The key of the product field"
                                },
                                "order_nr": {
                                  "type": "integer",
                                  "description": "The position (index) of the product field in the detail view"
                                },
                                "add_time": {
                                  "type": "string",
                                  "description": "The product field creation time. Format: YYYY-MM-DD HH:MM:SS"
                                },
                                "update_time": {
                                  "type": "string",
                                  "description": "The product field last update time. Format: YYYY-MM-DD HH:MM:SS"
                                },
                                "last_updated_by_user_id": {
                                  "type": "integer",
                                  "description": "The ID of the last user to update the product field"
                                },
                                "active_flag": {
                                  "type": "boolean",
                                  "description": "Whether or not the product field is currently active"
                                },
                                "edit_flag": {
                                  "type": "boolean",
                                  "description": "Whether or not the product field name and metadata is editable"
                                },
                                "add_visible_flag": {
                                  "type": "boolean",
                                  "description": "Whether or not the product field is visible in the Add Product Modal"
                                },
                                "important_flag": {
                                  "type": "boolean",
                                  "description": "Whether or not the product field is marked as important"
                                },
                                "bulk_edit_allowed": {
                                  "type": "boolean",
                                  "description": "Whether or not the product field data can be edited"
                                },
                                "searchable_flag": {
                                  "type": "boolean",
                                  "description": "Whether or not the product field is searchable"
                                },
                                "filtering_allowed": {
                                  "type": "boolean",
                                  "description": "Whether or not the product field value can be used when filtering searches"
                                },
                                "sortable_flag": {
                                  "type": "boolean",
                                  "description": "Whether or not the product field is sortable"
                                },
                                "mandatory_flag": {
                                  "type": "boolean",
                                  "description": "Whether or not the product field is mandatory when creating products"
                                }
                              }
                            }
                          ]
                        }
                      ],
                      "description": "All data for the product field"
                    }
                  }
                },
                "example": {
                  "success": true,
                  "data": {
                    "id": 32,
                    "key": "397b0f545d134b479a5485041b33b0f0f3da2333",
                    "name": "Color",
                    "order_nr": 13,
                    "field_type": "enum",
                    "add_time": "2019-12-20 11:01:24",
                    "update_time": "2019-12-20 11:01:24",
                    "last_updated_by_user_id": 10999910,
                    "active_flag": true,
                    "edit_flag": true,
                    "index_visible_flag": true,
                    "details_visible_flag": true,
                    "add_visible_flag": true,
                    "important_flag": false,
                    "bulk_edit_allowed": true,
                    "searchable_flag": false,
                    "filtering_allowed": true,
                    "sortable_flag": true,
                    "options": [
                      { "id": 9, "label": "red" },
                      { "id": 10, "label": "blue" },
                      { "id": 11, "label": "lilac" }
                    ],
                    "mandatory_flag": false
                  }
                }
              }
            }
          },
          "410": {
            "description": "The product field with the specified ID does not exist or is inaccessible",
            "content": {
              "application/json": {
                "schema": {
                  "title": "failResponse",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "If the response is successful or not"
                    },
                    "error": {
                      "type": "string",
                      "description": "The error message"
                    }
                  }
                },
                "example": {
                  "success": false,
                  "error": "The field is not found"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update a product field",
        "description": "Updates a product field. For more information, see the tutorial for <a href=\" https://pipedrive.readme.io/docs/updating-custom-field-value \" target=\"_blank\" rel=\"noopener noreferrer\">updating custom fields' values</a>.",
        "operationId": "updateProductField",
        "tags": [ "ProductFields" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the product field",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "UpdateProductField",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the field"
                  },
                  "options": {
                    "type": "array",
                    "items": { "type": "object" },
                    "description": "When `field_type` is either set or enum, possible options on update must be supplied as an array of objects each containing id and label, for example: [{\"id\":1, \"label\":\"red\"},{\"id\":2, \"label\":\"blue\"},{\"id\":3, \"label\":\"lilac\"}]"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Get the data for a single product field",
            "content": {
              "application/json": {
                "schema": {
                  "title": "getProductField",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "If the response is successful or not"
                    },
                    "data": {
                      "allOf": [
                        {
                          "title": "productField",
                          "allOf": [
                            {
                              "type": "object",
                              "required": [ "name", "field_type" ],
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "The name of the field"
                                },
                                "options": {
                                  "type": "array",
                                  "items": { "type": "object" },
                                  "description": "When `field_type` is either `set` or `enum`, possible options must be supplied as a JSON-encoded sequential array, for example:</br>`[{\"label\":\"red\"}, {\"label\":\"blue\"}, {\"label\":\"lilac\"}]`"
                                },
                                "field_type": {
                                  "type": "string",
                                  "enum": [
                                    "varchar",
                                    "varchar_auto",
                                    "text",
                                    "double",
                                    "monetary",
                                    "date",
                                    "set",
                                    "enum",
                                    "user",
                                    "org",
                                    "people",
                                    "phone",
                                    "time",
                                    "timerange",
                                    "daterange",
                                    "address"
                                  ],
                                  "description": "The type of the field<table><tr><th>Value</th><th>Description</th></tr><tr><td>`varchar`</td><td>Text (up to 255 characters)</td><tr><td>`varchar_auto`</td><td>Autocomplete text (up to 255 characters)</td><tr><td>`text`</td><td>Long text (up to 65k characters)</td><tr><td>`double`</td><td>Numeric value</td><tr><td>`monetary`</td><td>Monetary field (has a numeric value and a currency value)</td><tr><td>`date`</td><td>Date (format YYYY-MM-DD)</td><tr><td>`set`</td><td>Options field with a possibility of having multiple chosen options</td><tr><td>`enum`</td><td>Options field with a single possible chosen option</td><tr><td>`user`</td><td>User field (contains a user ID of another Pipedrive user)</td><tr><td>`org`</td><td>Organization field (contains an organization ID which is stored on the same account)</td><tr><td>`people`</td><td>Person field (contains a product ID which is stored on the same account)</td><tr><td>`phone`</td><td>Phone field (up to 255 numbers and/or characters)</td><tr><td>`time`</td><td>Time field (format HH:MM:SS)</td><tr><td>`timerange`</td><td>Time-range field (has a start time and end time value, both HH:MM:SS)</td><tr><td>`daterange`</td><td>Date-range field (has a start date and end date value, both YYYY-MM-DD)</td><tr><td>`address`</td><td>Address field (autocompleted by Google Maps)</dd></table>"
                                }
                              }
                            },
                            {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "description": "The ID of the product field"
                                },
                                "key": {
                                  "type": "string",
                                  "description": "The key of the product field"
                                },
                                "order_nr": {
                                  "type": "integer",
                                  "description": "The position (index) of the product field in the detail view"
                                },
                                "add_time": {
                                  "type": "string",
                                  "description": "The product field creation time. Format: YYYY-MM-DD HH:MM:SS"
                                },
                                "update_time": {
                                  "type": "string",
                                  "description": "The product field last update time. Format: YYYY-MM-DD HH:MM:SS"
                                },
                                "last_updated_by_user_id": {
                                  "type": "integer",
                                  "description": "The ID of the last user to update the product field"
                                },
                                "active_flag": {
                                  "type": "boolean",
                                  "description": "Whether or not the product field is currently active"
                                },
                                "edit_flag": {
                                  "type": "boolean",
                                  "description": "Whether or not the product field name and metadata is editable"
                                },
                                "add_visible_flag": {
                                  "type": "boolean",
                                  "description": "Whether or not the product field is visible in the Add Product Modal"
                                },
                                "important_flag": {
                                  "type": "boolean",
                                  "description": "Whether or not the product field is marked as important"
                                },
                                "bulk_edit_allowed": {
                                  "type": "boolean",
                                  "description": "Whether or not the product field data can be edited"
                                },
                                "searchable_flag": {
                                  "type": "boolean",
                                  "description": "Whether or not the product field is searchable"
                                },
                                "filtering_allowed": {
                                  "type": "boolean",
                                  "description": "Whether or not the product field value can be used when filtering searches"
                                },
                                "sortable_flag": {
                                  "type": "boolean",
                                  "description": "Whether or not the product field is sortable"
                                },
                                "mandatory_flag": {
                                  "type": "boolean",
                                  "description": "Whether or not the product field is mandatory when creating products"
                                }
                              }
                            }
                          ]
                        }
                      ],
                      "description": "All data for the product field"
                    }
                  }
                },
                "example": {
                  "success": true,
                  "data": {
                    "id": 32,
                    "key": "397b0f545d134b479a5485041b33b0f0f3da2333",
                    "name": "Color",
                    "order_nr": 13,
                    "field_type": "enum",
                    "add_time": "2019-12-20 11:01:24",
                    "update_time": "2019-12-20 11:01:24",
                    "last_updated_by_user_id": 10999910,
                    "active_flag": true,
                    "edit_flag": true,
                    "index_visible_flag": true,
                    "details_visible_flag": true,
                    "add_visible_flag": true,
                    "important_flag": false,
                    "bulk_edit_allowed": true,
                    "searchable_flag": false,
                    "filtering_allowed": true,
                    "sortable_flag": true,
                    "options": [
                      { "id": 9, "label": "red" },
                      { "id": 10, "label": "blue" },
                      { "id": 11, "label": "lilac" }
                    ],
                    "mandatory_flag": false
                  }
                }
              }
            }
          }
        }
      }
    },
    "/recents": {
      "get": {
        "summary": "Get recents",
        "description": "Returns data about all recent changes occurred after the given timestamp.",
        "operationId": "getRecents",
        "tags": [ "Recents" ],
        "parameters": [
          {
            "in": "query",
            "name": "since_timestamp",
            "required": true,
            "schema": { "type": "string" },
            "description": "The timestamp in UTC. Format: YYYY-MM-DD HH:MM:SS"
          },
          {
            "in": "query",
            "name": "items",
            "schema": {
              "type": "string",
              "enum": [
                "activity",
                "activityType",
                "deal",
                "file",
                "filter",
                "note",
                "person",
                "organization",
                "pipeline",
                "product",
                "stage",
                "user"
              ]
            },
            "description": "Multiple selection of item types to include in the query (optional)"
          },
          {
            "in": "query",
            "name": "start",
            "description": "Pagination start",
            "schema": { "type": "integer", "default": 0 }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Items shown per page",
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of items changed since \"since_timestamp\"",
            "content": {
              "application/json": {
                "schema": {
                  "title": "getRecents",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "If the response is successful or not"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "type": "object",
                            "properties": {
                              "item": {
                                "type": "string",
                                "enum": [ "activity" ]
                              },
                              "id": { "type": "integer" },
                              "data": {
                                "title": "activityResponseObject",
                                "allOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "due_date": {
                                        "description": "The due date of the activity. Format: YYYY-MM-DD",
                                        "type": "string",
                                        "format": "date"
                                      },
                                      "due_time": {
                                        "description": "The due time of the activity in UTC. Format: HH:MM",
                                        "type": "string"
                                      },
                                      "duration": {
                                        "description": "The duration of the activity. Format: HH:MM",
                                        "type": "string"
                                      },
                                      "deal_id": {
                                        "description": "The ID of the deal this activity is associated with",
                                        "type": "integer"
                                      },
                                      "lead_id": {
                                        "description": "The ID of the lead this activity is associated with",
                                        "type": "string"
                                      },
                                      "person_id": {
                                        "description": "The ID of the person this activity is associated with",
                                        "type": "integer"
                                      },
                                      "org_id": {
                                        "description": "The ID of the organization this activity is associated with",
                                        "type": "integer"
                                      },
                                      "note": {
                                        "description": "The note of the activity (HTML format)",
                                        "type": "string"
                                      },
                                      "location": {
                                        "description": "The address of the activity. Pipedrive will automatically check if the location matches a geo-location on Google maps.",
                                        "type": "string"
                                      },
                                      "public_description": {
                                        "description": "Additional details about the activity that is synced to your external calendar. Unlike the note added to the activity, the description is publicly visible to any guests added to the activity.",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "integer",
                                        "description": "The activity ID, generated when the activity was created"
                                      },
                                      "done": {
                                        "type": "boolean",
                                        "description": "Whether the activity is done or not"
                                      },
                                      "subject": {
                                        "description": "The subject of the activity",
                                        "type": "string"
                                      },
                                      "type": {
                                        "description": "The type of the activity. This is in correlation with the `key_string` parameter of ActivityTypes.",
                                        "type": "string"
                                      },
                                      "user_id": {
                                        "description": "The ID of the user whom the activity is assigned to",
                                        "type": "integer"
                                      },
                                      "participants": {
                                        "description": "List of multiple persons (participants) this activity is associated with",
                                        "type": "array",
                                        "nullable": true,
                                        "items": { "type": "object" }
                                      },
                                      "busy_flag": {
                                        "description": "Marks if the activity is set as 'Busy' or 'Free'. If the flag is set to `true`, your customers will not be able to book that time slot through any Scheduler links. The flag can also be unset. When the value of the flag is unset (`null`), the flag defaults to 'Busy' if it has a time set, and 'Free' if it is an all-day event without specified time.",
                                        "type": "boolean",
                                        "enum": [ true, false ]
                                      },
                                      "attendees": {
                                        "description": "The attendees of the activity. This can be either your existing Pipedrive contacts or an external email address.",
                                        "type": "array",
                                        "nullable": true,
                                        "items": { "type": "object" }
                                      },
                                      "company_id": {
                                        "type": "integer",
                                        "description": "The user's company ID"
                                      },
                                      "reference_type": {
                                        "type": "string",
                                        "description": "If the activity references some other object, it is indicated here. For example, value `Salesphone` refers to activities created with Caller."
                                      },
                                      "reference_id": {
                                        "type": "integer",
                                        "description": "Together with the `reference_type`, gives the ID of the other object"
                                      },
                                      "conference_meeting_client": {
                                        "type": "string",
                                        "description": "The ID of Marketplace app, which is connected to this activity"
                                      },
                                      "conference_meeting_url": {
                                        "type": "string",
                                        "description": "The link to join the meeting which is associated with this activity"
                                      },
                                      "conference_meeting_id": {
                                        "type": "string",
                                        "description": "The meeting ID of the meeting provider (Zoom, MS Teams etc.) that is associated with this activity"
                                      },
                                      "add_time": {
                                        "type": "string",
                                        "description": "The creation date and time of the activity in UTC. Format: YYYY-MM-DD HH:MM:SS."
                                      },
                                      "marked_as_done_time": {
                                        "type": "string",
                                        "description": "The date and time this activity was marked as done. Format: YYYY-MM-DD HH:MM:SS."
                                      },
                                      "last_notification_time": {
                                        "type": "string",
                                        "description": "The date and time of latest notifications sent about this activity to the participants or the attendees of this activity"
                                      },
                                      "last_notification_user_id": {
                                        "type": "integer",
                                        "description": "The ID of the user who triggered the sending of the latest notifications about this activity to the participants or the attendees of this activity"
                                      },
                                      "notification_language_id": {
                                        "type": "integer",
                                        "description": "The ID of the language the notifications are sent in"
                                      },
                                      "lead_id": {
                                        "description": "The ID of the lead in the UUID format this activity is associated with",
                                        "type": "string",
                                        "format": "uuid"
                                      },
                                      "active_flag": {
                                        "type": "boolean",
                                        "description": "Whether the activity is active or not"
                                      },
                                      "update_time": {
                                        "type": "string",
                                        "description": "The last update date and time of the activity. Format: YYYY-MM-DD HH:MM:SS."
                                      },
                                      "update_user_id": {
                                        "description": "The ID of the user who was the last to update this activity",
                                        "type": "integer"
                                      },
                                      "gcal_event_id": {
                                        "type": "string",
                                        "description": "For the activity which syncs to Google calendar, this is the Google event ID. NB! This field is related to old Google calendar sync and will be deprecated soon."
                                      },
                                      "google_calendar_id": {
                                        "type": "string",
                                        "description": "The Google calendar ID that this activity syncs to. NB! This field is related to old Google calendar sync and will be deprecated soon."
                                      },
                                      "google_calendar_etag": {
                                        "type": "string",
                                        "description": "The Google calendar API etag (version) that is used for syncing this activity. NB! This field is related to old Google calendar sync and will be deprecated soon."
                                      },
                                      "calendar_sync_include_context": {
                                        "type": "string",
                                        "description": "For activities that sync to an external calendar, this setting indicates if the activity syncs with context (what are the deals, persons, organizations this activity is related to)"
                                      },
                                      "source_timezone": {
                                        "type": "string",
                                        "description": "The timezone the activity was created in an external calendar"
                                      },
                                      "rec_rule": {
                                        "type": "string",
                                        "description": "The rule for the recurrence of the activity. Is important for activities synced into Pipedrive from an external calendar. Example: \"RRULE:FREQ=WEEKLY;BYDAY=WE\""
                                      },
                                      "rec_rule_extension": {
                                        "type": "string",
                                        "description": "Additional rules for the recurrence of the activity, extend the `rec_rule`. Is important for activities synced into Pipedrive from an external calendar."
                                      },
                                      "rec_master_activity_id": {
                                        "type": "integer",
                                        "description": "The ID of parent activity for a recurrent activity if the current activity is an exception to recurrence rules"
                                      },
                                      "series": {
                                        "description": "The list of recurring activity instances. It is in a structure as follows: `[{due_date: \"2020-06-24\", due_time: \"10:00:00\"}]`",
                                        "type": "array",
                                        "items": { "type": "object" }
                                      },
                                      "created_by_user_id": {
                                        "description": "The ID of the user who created the activity",
                                        "type": "integer"
                                      },
                                      "location_subpremise": {
                                        "type": "string",
                                        "description": "Subfield of location field. Indicates apartment/suite number."
                                      },
                                      "location_street_number": {
                                        "type": "string",
                                        "description": "Subfield of location field. Indicates house number."
                                      },
                                      "location_route": {
                                        "type": "string",
                                        "description": "Subfield of location field. Indicates street name."
                                      },
                                      "location_sublocality": {
                                        "type": "string",
                                        "description": "Subfield of location field. Indicates district/sublocality."
                                      },
                                      "location_locality": {
                                        "type": "string",
                                        "description": "Subfield of location field. Indicates city/town/village/locality."
                                      },
                                      "location_admin_area_level_1": {
                                        "type": "string",
                                        "description": "Subfield of location field. Indicates state/county."
                                      },
                                      "location_admin_area_level_2": {
                                        "type": "string",
                                        "description": "Subfield of location field. Indicates region."
                                      },
                                      "location_country": {
                                        "type": "string",
                                        "description": "Subfield of location field. Indicates country."
                                      },
                                      "location_postal_code": {
                                        "type": "string",
                                        "description": "Subfield of location field. Indicates ZIP/postal code."
                                      },
                                      "location_formatted_address": {
                                        "type": "string",
                                        "description": "Subfield of location field. Indicates full/combined address."
                                      },
                                      "org_name": {
                                        "description": "The name of the organization this activity is associated with",
                                        "type": "string"
                                      },
                                      "person_name": {
                                        "description": "The name of the person this activity is associated with",
                                        "type": "string"
                                      },
                                      "deal_title": {
                                        "description": "The name of the deal this activity is associated with",
                                        "type": "string"
                                      },
                                      "owner_name": {
                                        "description": "The name of the user this activity is owned by",
                                        "type": "string"
                                      },
                                      "person_dropbox_bcc": {
                                        "type": "string",
                                        "description": "The BCC email address of the person"
                                      },
                                      "deal_dropbox_bcc": {
                                        "type": "string",
                                        "description": "The BCC email address of the deal"
                                      },
                                      "assigned_to_user_id": {
                                        "description": "The ID of the user to whom the activity is assigned to. Equal to `user_id`.",
                                        "type": "integer"
                                      },
                                      "file": {
                                        "type": "object",
                                        "description": "The file that is attached to this activity. For example, this can be a reference to an audio note file generated with Pipedrive mobile app."
                                      }
                                    }
                                  }
                                ]
                              }
                            }
                          },
                          {
                            "type": "object",
                            "properties": {
                              "item": {
                                "type": "string",
                                "enum": [ "activityType" ]
                              },
                              "id": { "type": "integer" },
                              "data": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "integer",
                                    "description": "The ID of the activity type"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "The name of the activity type"
                                  },
                                  "icon_key": {
                                    "type": "string",
                                    "description": "Icon graphic to use for representing this activity type",
                                    "enum": [
                                      "task",
                                      "email",
                                      "meeting",
                                      "deadline",
                                      "call",
                                      "lunch",
                                      "calendar",
                                      "downarrow",
                                      "document",
                                      "smartphone",
                                      "camera",
                                      "scissors",
                                      "cogs",
                                      "bubble",
                                      "uparrow",
                                      "checkbox",
                                      "signpost",
                                      "shuffle",
                                      "addressbook",
                                      "linegraph",
                                      "picture",
                                      "car",
                                      "world",
                                      "search",
                                      "clip",
                                      "sound",
                                      "brush",
                                      "key",
                                      "padlock",
                                      "pricetag",
                                      "suitcase",
                                      "finish",
                                      "plane",
                                      "loop",
                                      "wifi",
                                      "truck",
                                      "cart",
                                      "bulb",
                                      "bell",
                                      "presentation"
                                    ]
                                  },
                                  "color": {
                                    "type": "string",
                                    "description": "A designated color for the activity type in 6-character HEX format (e.g. `FFFFFF` for white, `000000` for black)"
                                  },
                                  "order_nr": {
                                    "type": "integer",
                                    "description": "An order number for the activity type. Order numbers should be used to order the types in the activity type selections."
                                  },
                                  "key_string": {
                                    "type": "string",
                                    "description": "A string that is generated by the API based on the given name of the activity type upon creation"
                                  },
                                  "active_flag": {
                                    "type": "boolean",
                                    "description": "The active flag of the activity type"
                                  },
                                  "is_custom_flag": {
                                    "type": "boolean",
                                    "description": "Whether the activity type is a custom one or not"
                                  },
                                  "add_time": {
                                    "type": "string",
                                    "format": "datetime",
                                    "description": "The creation time of the activity type"
                                  },
                                  "update_time": {
                                    "type": "string",
                                    "format": "datetime",
                                    "description": "The update time of the activity type"
                                  }
                                }
                              }
                            }
                          },
                          {
                            "type": "object",
                            "properties": {
                              "item": { "type": "string", "enum": [ "deal" ] },
                              "id": { "type": "integer" },
                              "data": {
                                "title": "dealStrict",
                                "allOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "integer",
                                        "description": "The ID of the deal"
                                      },
                                      "creator_user_id": {
                                        "type": "integer",
                                        "description": "The ID of the deal creator"
                                      },
                                      "user_id": {
                                        "type": "integer",
                                        "description": "The ID of the user"
                                      },
                                      "person_id": {
                                        "type": "integer",
                                        "description": "The ID of the person associated with the deal"
                                      },
                                      "org_id": {
                                        "type": "integer",
                                        "description": "The ID of the organization associated with the deal"
                                      }
                                    }
                                  },
                                  {
                                    "title": "baseDeal",
                                    "type": "object",
                                    "properties": {
                                      "stage_id": {
                                        "type": "integer",
                                        "description": "The ID of the deal stage"
                                      },
                                      "title": {
                                        "type": "string",
                                        "description": "The title of the deal"
                                      },
                                      "value": {
                                        "type": "number",
                                        "description": "The value of the deal"
                                      },
                                      "currency": {
                                        "type": "string",
                                        "description": "The currency associated with the deal"
                                      },
                                      "add_time": {
                                        "type": "string",
                                        "description": "The creation date and time of the deal"
                                      },
                                      "update_time": {
                                        "type": "string",
                                        "description": "The last updated date and time of the deal"
                                      },
                                      "stage_change_time": {
                                        "type": "string",
                                        "description": "The last updated date and time of the deal stage"
                                      },
                                      "active": {
                                        "type": "boolean",
                                        "description": "Whether the deal is active or not"
                                      },
                                      "deleted": {
                                        "type": "boolean",
                                        "description": "Whether the deal is deleted or not"
                                      },
                                      "status": {
                                        "type": "string",
                                        "description": "The status of the deal"
                                      },
                                      "probability": {
                                        "type": "number",
                                        "nullable": true,
                                        "description": "The success probability percentage of the deal"
                                      },
                                      "next_activity_date": {
                                        "type": "string",
                                        "description": "The date of the next activity associated with the deal"
                                      },
                                      "next_activity_time": {
                                        "type": "string",
                                        "description": "The time of the next activity associated with the deal"
                                      },
                                      "next_activity_id": {
                                        "type": "integer",
                                        "nullable": true,
                                        "description": "The ID of the next activity associated with the deal"
                                      },
                                      "last_activity_id": {
                                        "type": "integer",
                                        "nullable": true,
                                        "description": "The ID of the last activity associated with the deal"
                                      },
                                      "last_activity_date": {
                                        "type": "string",
                                        "nullable": true,
                                        "description": "The date of the last activity associated with the deal"
                                      },
                                      "lost_reason": {
                                        "type": "string",
                                        "nullable": true,
                                        "description": "The reason for losing the deal"
                                      },
                                      "visible_to": {
                                        "type": "string",
                                        "description": "The visibility of the deal"
                                      },
                                      "close_time": {
                                        "type": "string",
                                        "nullable": true,
                                        "description": "The date and time of closing the deal"
                                      },
                                      "pipeline_id": {
                                        "type": "integer",
                                        "description": "The ID of pipeline associated with the deal"
                                      },
                                      "won_time": {
                                        "type": "string",
                                        "description": "The date and time of changing the deal status as won"
                                      },
                                      "first_won_time": {
                                        "type": "string",
                                        "description": "The date and time of the first time changing the deal status as won"
                                      },
                                      "lost_time": {
                                        "type": "string",
                                        "description": "The date and time of changing the deal status as lost"
                                      },
                                      "products_count": {
                                        "type": "integer",
                                        "description": "The number of products associated with the deal"
                                      },
                                      "files_count": {
                                        "type": "integer",
                                        "description": "The number of files associated with the deal"
                                      },
                                      "notes_count": {
                                        "type": "integer",
                                        "description": "The number of notes associated with the deal"
                                      },
                                      "followers_count": {
                                        "type": "integer",
                                        "description": "The number of followers associated with the deal"
                                      },
                                      "email_messages_count": {
                                        "type": "integer",
                                        "description": "The number of emails associated with the deal"
                                      },
                                      "activities_count": {
                                        "type": "integer",
                                        "description": "The number of activities associated with the deal"
                                      },
                                      "done_activities_count": {
                                        "type": "integer",
                                        "description": "The number of completed activities associated with the deal"
                                      },
                                      "undone_activities_count": {
                                        "type": "integer",
                                        "description": "The number of incomplete activities associated with the deal"
                                      },
                                      "participants_count": {
                                        "type": "integer",
                                        "description": "The number of participants associated with the deal"
                                      },
                                      "expected_close_date": {
                                        "type": "string",
                                        "format": "date",
                                        "description": "The expected close date of the deal"
                                      },
                                      "last_incoming_mail_time": {
                                        "type": "string",
                                        "description": "The date and time of the last incoming email associated with the deal"
                                      },
                                      "last_outgoing_mail_time": {
                                        "type": "string",
                                        "description": "The date and time of the last outgoing email associated with the deal"
                                      },
                                      "label": {
                                        "type": "integer",
                                        "description": "The label assigned to the deal"
                                      },
                                      "stage_order_nr": {
                                        "type": "integer",
                                        "description": "The order number of the deal stage associated with the deal"
                                      },
                                      "person_name": {
                                        "type": "string",
                                        "description": "The name of the person associated with the deal"
                                      },
                                      "org_name": {
                                        "type": "string",
                                        "description": "The name of the organization associated with the deal"
                                      },
                                      "next_activity_subject": {
                                        "type": "string",
                                        "description": "The subject of the next activity associated with the deal"
                                      },
                                      "next_activity_type": {
                                        "type": "string",
                                        "description": "The type of the next activity associated with the deal"
                                      },
                                      "next_activity_duration": {
                                        "type": "string",
                                        "description": "The duration of the next activity associated with the deal"
                                      },
                                      "next_activity_note": {
                                        "type": "string",
                                        "description": "The note of the next activity associated with the deal"
                                      },
                                      "formatted_value": {
                                        "type": "string",
                                        "description": "The deal value formatted with selected currency. E.g. US$500"
                                      },
                                      "weighted_value": {
                                        "type": "number",
                                        "description": "Probability times deal value. Probability can either be deal probability or if not set, then stage probability."
                                      },
                                      "formatted_weighted_value": {
                                        "type": "string",
                                        "description": "The weighted_value formatted with selected currency. E.g. US$500"
                                      },
                                      "weighted_value_currency": {
                                        "type": "string",
                                        "description": "The currency associated with the deal"
                                      },
                                      "rotten_time": {
                                        "type": "string",
                                        "nullable": true,
                                        "description": "The date and time of changing the deal status as rotten"
                                      },
                                      "owner_name": {
                                        "type": "string",
                                        "description": "The name of the deal owner"
                                      },
                                      "cc_email": {
                                        "type": "string",
                                        "description": "The BCC email of the deal"
                                      },
                                      "org_hidden": {
                                        "type": "boolean",
                                        "description": "If the organization that is associated with the deal is hidden or not"
                                      },
                                      "person_hidden": {
                                        "type": "boolean",
                                        "description": "If the person that is associated with the deal is hidden or not"
                                      }
                                    }
                                  }
                                ]
                              }
                            }
                          },
                          {
                            "type": "object",
                            "properties": {
                              "item": { "type": "string", "enum": [ "file" ] },
                              "id": { "type": "integer" },
                              "data": {
                                "type": "object",
                                "description": "The file data",
                                "properties": {
                                  "id": {
                                    "type": "integer",
                                    "description": "The ID of the file"
                                  },
                                  "user_id": {
                                    "type": "integer",
                                    "description": "The ID of the user to associate the file with"
                                  },
                                  "deal_id": {
                                    "type": "integer",
                                    "description": "The ID of the deal to associate the file with"
                                  },
                                  "person_id": {
                                    "type": "integer",
                                    "description": "The ID of the person to associate the file with"
                                  },
                                  "org_id": {
                                    "type": "integer",
                                    "description": "The ID of the organization to associate the file with"
                                  },
                                  "product_id": {
                                    "type": "integer",
                                    "description": "The ID of the product to associate the file with"
                                  },
                                  "activity_id": {
                                    "type": "integer",
                                    "description": "The ID of the activity to associate the file with"
                                  },
                                  "lead_id": {
                                    "type": "string",
                                    "description": "The ID of the lead to associate the file with",
                                    "format": "uuid"
                                  },
                                  "add_time": {
                                    "type": "string",
                                    "description": "The date and time when the file was added/created. Format: YYYY-MM-DD HH:MM:SS"
                                  },
                                  "update_time": {
                                    "type": "string",
                                    "description": "The last updated date and time of the file. Format: YYYY-MM-DD HH:MM:SS"
                                  },
                                  "file_name": {
                                    "type": "string",
                                    "description": "The original name of the file"
                                  },
                                  "file_size": {
                                    "type": "integer",
                                    "description": "The size of the file"
                                  },
                                  "active_flag": {
                                    "type": "boolean",
                                    "description": "Whether the user is active or not. false = Not activated, true = Activated"
                                  },
                                  "inline_flag": {
                                    "type": "boolean",
                                    "description": "Whether the file was uploaded as inline or not"
                                  },
                                  "remote_location": {
                                    "type": "string",
                                    "description": "The location type to send the file to. Only googledrive is supported at the moment."
                                  },
                                  "remote_id": {
                                    "type": "string",
                                    "description": "The ID of the remote item"
                                  },
                                  "cid": {
                                    "type": "string",
                                    "description": "The ID of the inline attachment"
                                  },
                                  "s3_bucket": {
                                    "type": "string",
                                    "description": "The location of the cloud storage"
                                  },
                                  "mail_message_id": {
                                    "type": "string",
                                    "description": "The ID of the mail message to associate the file with"
                                  },
                                  "mail_template_id": {
                                    "type": "string",
                                    "description": "The ID of the mail template to associate the file with"
                                  },
                                  "deal_name": {
                                    "type": "string",
                                    "description": "The name of the deal associated with the dile"
                                  },
                                  "person_name": {
                                    "type": "string",
                                    "description": "The name of the person associated with the file"
                                  },
                                  "org_name": {
                                    "type": "string",
                                    "description": "The name of the organization associated with the file"
                                  },
                                  "product_name": {
                                    "type": "string",
                                    "description": "The name of the product associated with the file"
                                  },
                                  "lead_name": {
                                    "type": "string",
                                    "description": "The name of the lead associated with the file"
                                  },
                                  "url": {
                                    "type": "string",
                                    "description": "The URL of the download file"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "The visible name of the file"
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "The description of the file"
                                  }
                                }
                              }
                            }
                          },
                          {
                            "type": "object",
                            "properties": {
                              "item": { "type": "string", "enum": [ "filter" ] },
                              "id": { "type": "integer" },
                              "data": {
                                "description": "The filter object",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "integer",
                                    "description": "The ID of the filter"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "The name of the filter"
                                  },
                                  "active_flag": {
                                    "type": "boolean",
                                    "description": "The active flag of the filter"
                                  },
                                  "type": {
                                    "type": "string",
                                    "description": "The type of the item"
                                  },
                                  "user_id": {
                                    "type": "integer",
                                    "description": "The owner of the filter"
                                  },
                                  "add_time": {
                                    "type": "string",
                                    "description": "The date and time when the filter was added"
                                  },
                                  "update_time": {
                                    "type": "string",
                                    "description": "The date and time when the filter was updated"
                                  },
                                  "visible_to": {
                                    "type": "integer",
                                    "description": "The visibility group ID of who can see then filter"
                                  },
                                  "custom_view_id": {
                                    "type": "integer",
                                    "description": "Used by Pipedrive webapp"
                                  }
                                }
                              }
                            }
                          },
                          {
                            "type": "object",
                            "properties": {
                              "item": { "type": "string", "enum": [ "note" ] },
                              "id": { "type": "integer" },
                              "data": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "integer",
                                    "description": "The ID of the note"
                                  },
                                  "active_flag": {
                                    "type": "boolean",
                                    "description": "Whether the note is active or deleted"
                                  },
                                  "add_time": {
                                    "type": "string",
                                    "description": "The creation date and time of the note"
                                  },
                                  "content": {
                                    "type": "string",
                                    "description": "The content of the note in HTML format. Subject to sanitization on the back-end."
                                  },
                                  "deal": {
                                    "type": "object",
                                    "description": "The deal this note is attached to",
                                    "properties": {
                                      "title": {
                                        "type": "string",
                                        "description": "The title of the deal this note is attached to"
                                      }
                                    }
                                  },
                                  "lead_id": {
                                    "type": "string",
                                    "format": "uuid",
                                    "description": "The ID of the lead the note is attached to"
                                  },
                                  "deal_id": {
                                    "type": "integer",
                                    "description": "The ID of the deal the note is attached to"
                                  },
                                  "last_update_user_id": {
                                    "type": "integer",
                                    "description": "The ID of the user who last updated the note"
                                  },
                                  "org_id": {
                                    "type": "integer",
                                    "description": "The ID of the organization the note is attached to"
                                  },
                                  "organization": {
                                    "type": "object",
                                    "description": "The organization the note is attached to",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "description": "The name of the organization the note is attached to"
                                      }
                                    }
                                  },
                                  "person": {
                                    "type": "object",
                                    "description": "The person the note is attached to",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "description": "The name of the person the note is attached to"
                                      }
                                    }
                                  },
                                  "person_id": {
                                    "type": "integer",
                                    "description": "The ID of the person the note is attached to"
                                  },
                                  "pinned_to_deal_flag": {
                                    "type": "boolean",
                                    "description": "If true, the results are filtered by note to deal pinning state"
                                  },
                                  "pinned_to_organization_flag": {
                                    "type": "boolean",
                                    "description": "If true, the results are filtered by note to organization pinning state"
                                  },
                                  "pinned_to_person_flag": {
                                    "type": "boolean",
                                    "description": "If true, the results are filtered by note to person pinning state"
                                  },
                                  "update_time": {
                                    "type": "string",
                                    "description": "The last updated date and time of the note"
                                  },
                                  "user": {
                                    "type": "object",
                                    "description": "The user who created the note",
                                    "properties": {
                                      "email": {
                                        "type": "string",
                                        "description": "The email of the note creator"
                                      },
                                      "icon_url": {
                                        "type": "string",
                                        "description": "The URL of the note creator avatar picture"
                                      },
                                      "is_you": {
                                        "type": "boolean",
                                        "description": "Whether the note is created by you or not"
                                      },
                                      "name": {
                                        "type": "string",
                                        "description": "The name of the note creator"
                                      }
                                    }
                                  },
                                  "user_id": {
                                    "type": "integer",
                                    "description": "The ID of the note creator"
                                  }
                                }
                              }
                            }
                          },
                          {
                            "type": "object",
                            "properties": {
                              "item": { "type": "string", "enum": [ "person" ] },
                              "id": { "type": "integer" },
                              "data": {
                                "type": "object",
                                "title": "mergePersonItem",
                                "allOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "integer",
                                        "description": "The ID of the person"
                                      },
                                      "company_id": {
                                        "type": "integer",
                                        "description": "The ID of the company related to the person"
                                      },
                                      "active_flag": {
                                        "type": "boolean",
                                        "description": "Whether the person is active or not"
                                      },
                                      "phone": {
                                        "type": "array",
                                        "description": "A phone number supplied as a string or an array of phone objects related to the person. The structure of the array is as follows: `[{ \"value\": \"12345\", \"primary\": \"true\", \"label\": \"mobile\" }]`. Please note that only `value` is required.",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "value": {
                                              "type": "string",
                                              "description": "The phone number"
                                            },
                                            "primary": {
                                              "type": "boolean",
                                              "description": "Boolean that indicates if phone number is primary for the person or not"
                                            },
                                            "label": {
                                              "type": "string",
                                              "description": "The label that indicates the type of the phone number. (Possible values - work, home, mobile or other)"
                                            }
                                          }
                                        }
                                      },
                                      "email": {
                                        "type": "array",
                                        "description": "An email address as a string or an array of email objects related to the person. The structure of the array is as follows: `[{ \"value\": \"mail@example.com\", \"primary\": \"true\", \"label\": \"main\" } ]`. Please note that only `value` is required.",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "value": {
                                              "type": "string",
                                              "description": "Email"
                                            },
                                            "primary": {
                                              "type": "boolean",
                                              "description": "Boolean that indicates if email is primary for the person or not"
                                            },
                                            "label": {
                                              "type": "string",
                                              "description": "The label that indicates the type of the email. (Possible values - work, home or other)"
                                            }
                                          }
                                        }
                                      },
                                      "first_char": {
                                        "type": "string",
                                        "description": "The first letter of the name of the person"
                                      },
                                      "add_time": {
                                        "type": "string",
                                        "description": "The date and time when the person was added/created. Format: YYYY-MM-DD HH:MM:SS"
                                      },
                                      "update_time": {
                                        "type": "string",
                                        "description": "The last updated date and time of the person. Format: YYYY-MM-DD HH:MM:SS"
                                      },
                                      "visible_to": {
                                        "type": "string",
                                        "description": "The visibility group ID of who can see the person"
                                      },
                                      "picture_id": {
                                        "allOf": [
                                          {
                                            "type": "object",
                                            "properties": {
                                              "id": {
                                                "type": "integer",
                                                "description": "The ID of the picture associated with the item"
                                              }
                                            }
                                          },
                                          {
                                            "type": "object",
                                            "properties": {
                                              "item_type": {
                                                "type": "string",
                                                "description": "The type of item the picture is related to"
                                              },
                                              "item_id": {
                                                "type": "integer",
                                                "description": "The ID of related item"
                                              },
                                              "active_flag": {
                                                "type": "boolean",
                                                "description": "Whether the associated picture is active or not"
                                              },
                                              "add_time": {
                                                "type": "string",
                                                "description": "The add time of the picture"
                                              },
                                              "update_time": {
                                                "type": "string",
                                                "description": "The update time of the picture"
                                              },
                                              "added_by_user_id": {
                                                "type": "integer",
                                                "description": "The ID of the user who added the picture"
                                              },
                                              "pictures": {
                                                "type": "object",
                                                "properties": {
                                                  "128": {
                                                    "type": "string",
                                                    "description": "The URL of the 128*128 picture"
                                                  },
                                                  "512": {
                                                    "type": "string",
                                                    "description": "The URL of the 512*512 picture"
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        ]
                                      },
                                      "label": {
                                        "type": "integer",
                                        "description": "The label assigned to the person"
                                      },
                                      "org_name": {
                                        "type": "string",
                                        "description": "The name of the organization associated with the person"
                                      },
                                      "owner_name": {
                                        "type": "string",
                                        "description": "The name of the owner associated with the person"
                                      },
                                      "cc_email": {
                                        "type": "string",
                                        "description": "The BCC email associated with the person"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "additionalMergePersonInfo",
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "title": "personNameCountAndEmailInfoWithIds",
                                        "allOf": [
                                          {
                                            "type": "object",
                                            "properties": {
                                              "owner_id": {
                                                "type": "integer",
                                                "description": "The ID of the owner related to the person"
                                              },
                                              "org_id": {
                                                "type": "integer",
                                                "description": "The ID of the organization related to the person"
                                              },
                                              "merge_what_id": {
                                                "type": "integer",
                                                "description": "The ID of the person with what the main person was merged"
                                              }
                                            }
                                          },
                                          {
                                            "type": "object",
                                            "title": "personNameCountAndEmailInfo",
                                            "allOf": [
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "name": {
                                                    "type": "string",
                                                    "description": "The name of the person"
                                                  },
                                                  "first_name": {
                                                    "type": "string",
                                                    "description": "The first name of the person"
                                                  },
                                                  "last_name": {
                                                    "type": "string",
                                                    "description": "The last name of the person"
                                                  }
                                                }
                                              },
                                              {
                                                "type": "object",
                                                "title": "personCountAndEmailInfo",
                                                "allOf": [
                                                  {
                                                    "type": "object",
                                                    "properties": {
                                                      "email_messages_count": {
                                                        "type": "integer",
                                                        "description": "The count of email messages related to the person"
                                                      },
                                                      "activities_count": {
                                                        "type": "integer",
                                                        "description": "The count of activities related to the person"
                                                      },
                                                      "done_activities_count": {
                                                        "type": "integer",
                                                        "description": "The count of done activities related to the person"
                                                      },
                                                      "undone_activities_count": {
                                                        "type": "integer",
                                                        "description": "The count of undone activities related to the person"
                                                      },
                                                      "files_count": {
                                                        "type": "integer",
                                                        "description": "The count of files related to the person"
                                                      },
                                                      "notes_count": {
                                                        "type": "integer",
                                                        "description": "The count of notes related to the person"
                                                      },
                                                      "followers_count": {
                                                        "type": "integer",
                                                        "description": "The count of followers related to the person"
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "type": "object",
                                                    "properties": {
                                                      "last_incoming_mail_time": {
                                                        "type": "string",
                                                        "description": "The date and time of the last incoming email associated with the person"
                                                      },
                                                      "last_outgoing_mail_time": {
                                                        "type": "string",
                                                        "description": "The date and time of the last outgoing email associated with the person"
                                                      }
                                                    }
                                                  }
                                                ]
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      {
                                        "type": "object",
                                        "title": "mergePersonDealRelatedInfo",
                                        "allOf": [
                                          {
                                            "type": "object",
                                            "title": "dealCountAndActivityInfo",
                                            "allOf": [
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "open_deals_count": {
                                                    "type": "integer",
                                                    "description": "The count of open deals related with the item"
                                                  },
                                                  "related_open_deals_count": {
                                                    "type": "integer",
                                                    "description": "The count of related open deals related with the item"
                                                  },
                                                  "closed_deals_count": {
                                                    "type": "integer",
                                                    "description": "The count of closed deals related with the item"
                                                  },
                                                  "related_closed_deals_count": {
                                                    "type": "integer",
                                                    "description": "The count of related closed deals related with the item"
                                                  },
                                                  "won_deals_count": {
                                                    "type": "integer",
                                                    "description": "The count of won deals related with the item"
                                                  },
                                                  "related_won_deals_count": {
                                                    "type": "integer",
                                                    "description": "The count of related won deals related with the item"
                                                  },
                                                  "lost_deals_count": {
                                                    "type": "integer",
                                                    "description": "The count of lost deals related with the item"
                                                  },
                                                  "related_lost_deals_count": {
                                                    "type": "integer",
                                                    "description": "The count of related lost deals related with the item"
                                                  }
                                                }
                                              },
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "next_activity_date": {
                                                    "type": "string",
                                                    "description": "The date of the next activity associated with the deal"
                                                  },
                                                  "next_activity_time": {
                                                    "type": "string",
                                                    "description": "The time of the next activity associated with the deal"
                                                  },
                                                  "next_activity_id": {
                                                    "type": "integer",
                                                    "nullable": true,
                                                    "description": "The ID of the next activity associated with the deal"
                                                  },
                                                  "last_activity_id": {
                                                    "type": "integer",
                                                    "nullable": true,
                                                    "description": "The ID of the last activity associated with the deal"
                                                  },
                                                  "last_activity_date": {
                                                    "type": "string",
                                                    "nullable": true,
                                                    "description": "The date of the last activity associated with the deal"
                                                  }
                                                }
                                              }
                                            ]
                                          },
                                          {
                                            "type": "object",
                                            "properties": {
                                              "participant_open_deals_count": {
                                                "type": "integer",
                                                "description": "The count of open participant deals related with the item"
                                              },
                                              "participant_closed_deals_count": {
                                                "type": "integer",
                                                "description": "The count of closed participant deals related with the item"
                                              }
                                            }
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              }
                            }
                          },
                          {
                            "type": "object",
                            "properties": {
                              "item": {
                                "type": "string",
                                "enum": [ "organization" ]
                              },
                              "id": { "type": "integer" },
                              "data": {
                                "type": "object",
                                "title": "baseOrganizationItem",
                                "allOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "integer",
                                        "description": "The ID of the organization"
                                      },
                                      "company_id": {
                                        "type": "integer",
                                        "description": "The ID of the company related to the organization"
                                      },
                                      "owner_id": {
                                        "title": "owner",
                                        "allOf": [
                                          {
                                            "properties": {
                                              "id": {
                                                "type": "integer",
                                                "description": "The ID of the user"
                                              },
                                              "name": {
                                                "type": "string",
                                                "description": "The name of the user"
                                              },
                                              "email": {
                                                "type": "string",
                                                "description": "The email of the user"
                                              },
                                              "has_pic": {
                                                "type": "integer",
                                                "description": "Whether the user has picture or not. 0 = No picture, 1 = Has picture."
                                              },
                                              "pic_hash": {
                                                "type": "string",
                                                "nullable": true,
                                                "description": "The user picture hash"
                                              },
                                              "active_flag": {
                                                "type": "boolean",
                                                "description": "Whether the user is active or not"
                                              }
                                            }
                                          },
                                          {
                                            "type": "object",
                                            "properties": {
                                              "value": {
                                                "type": "integer",
                                                "description": "The ID of the owner"
                                              }
                                            }
                                          }
                                        ]
                                      },
                                      "name": {
                                        "type": "string",
                                        "description": "The name of the organization"
                                      },
                                      "active_flag": {
                                        "type": "boolean",
                                        "description": "Whether the organization is active or not"
                                      },
                                      "picture_id": {
                                        "allOf": [
                                          {
                                            "type": "object",
                                            "properties": {
                                              "value": {
                                                "type": "integer",
                                                "description": "The ID of the picture associated with the item"
                                              }
                                            }
                                          },
                                          {
                                            "type": "object",
                                            "properties": {
                                              "item_type": {
                                                "type": "string",
                                                "description": "The type of item the picture is related to"
                                              },
                                              "item_id": {
                                                "type": "integer",
                                                "description": "The ID of related item"
                                              },
                                              "active_flag": {
                                                "type": "boolean",
                                                "description": "Whether the associated picture is active or not"
                                              },
                                              "add_time": {
                                                "type": "string",
                                                "description": "The add time of the picture"
                                              },
                                              "update_time": {
                                                "type": "string",
                                                "description": "The update time of the picture"
                                              },
                                              "added_by_user_id": {
                                                "type": "integer",
                                                "description": "The ID of the user who added the picture"
                                              },
                                              "pictures": {
                                                "type": "object",
                                                "properties": {
                                                  "128": {
                                                    "type": "string",
                                                    "description": "The URL of the 128*128 picture"
                                                  },
                                                  "512": {
                                                    "type": "string",
                                                    "description": "The URL of the 512*512 picture"
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        ]
                                      },
                                      "country_code": {
                                        "type": "string",
                                        "description": "The country code of the organization"
                                      },
                                      "first_char": {
                                        "type": "string",
                                        "description": "The first character of the organization name"
                                      },
                                      "add_time": {
                                        "type": "string",
                                        "description": "The creation date and time of the organization"
                                      },
                                      "update_time": {
                                        "type": "string",
                                        "description": "The last updated date and time of the organization"
                                      },
                                      "visible_to": {
                                        "type": "string",
                                        "description": "The visibility group ID of who can see the organization"
                                      },
                                      "label": {
                                        "type": "integer",
                                        "description": "The ID of the label"
                                      },
                                      "owner_name": {
                                        "type": "string",
                                        "description": "The name of the organization owner"
                                      },
                                      "cc_email": {
                                        "type": "string",
                                        "description": "The BCC email of the organization"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "additionalBaseOrganizationItemInfo",
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "title": "organizationCountAndAddressInfo",
                                        "allOf": [
                                          {
                                            "type": "object",
                                            "properties": {
                                              "email_messages_count": {
                                                "type": "integer",
                                                "description": "The count of email messages related to the organization"
                                              },
                                              "people_count": {
                                                "type": "integer",
                                                "description": "The count of persons related to the organization"
                                              },
                                              "activities_count": {
                                                "type": "integer",
                                                "description": "The count of activities related to the organization"
                                              },
                                              "done_activities_count": {
                                                "type": "integer",
                                                "description": "The count of done activities related to the organization"
                                              },
                                              "undone_activities_count": {
                                                "type": "integer",
                                                "description": "The count of undone activities related to the organization"
                                              },
                                              "files_count": {
                                                "type": "integer",
                                                "description": "The count of files related to the organization"
                                              },
                                              "notes_count": {
                                                "type": "integer",
                                                "description": "The count of notes related to the organization"
                                              },
                                              "followers_count": {
                                                "type": "integer",
                                                "description": "The count of followers related to the organization"
                                              }
                                            }
                                          },
                                          {
                                            "type": "object",
                                            "properties": {
                                              "address": {
                                                "type": "string",
                                                "description": "The full address of the organization"
                                              },
                                              "address_subpremise": {
                                                "type": "string",
                                                "description": "The sub-premise of the organization location"
                                              },
                                              "address_street_number": {
                                                "type": "string",
                                                "description": "The street number of the organization location"
                                              },
                                              "address_route": {
                                                "type": "string",
                                                "description": "The route of the organization location"
                                              },
                                              "address_sublocality": {
                                                "type": "string",
                                                "description": "The sub-locality of the organization location"
                                              },
                                              "address_locality": {
                                                "type": "string",
                                                "description": "The locality of the organization location"
                                              },
                                              "address_admin_area_level_1": {
                                                "type": "string",
                                                "description": "The level 1 admin area of the organization location"
                                              },
                                              "address_admin_area_level_2": {
                                                "type": "string",
                                                "description": "The level 2 admin area of the organization location"
                                              },
                                              "address_country": {
                                                "type": "string",
                                                "description": "The country of the organization location"
                                              },
                                              "address_postal_code": {
                                                "type": "string",
                                                "description": "The postal code of the organization location"
                                              },
                                              "address_formatted_address": {
                                                "type": "string",
                                                "description": "The formatted organization location"
                                              }
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "type": "object",
                                        "title": "dealsCountAndActivityInfo",
                                        "allOf": [
                                          {
                                            "type": "object",
                                            "properties": {
                                              "open_deals_count": {
                                                "type": "integer",
                                                "description": "The count of open deals related with the item"
                                              },
                                              "related_open_deals_count": {
                                                "type": "integer",
                                                "description": "The count of related open deals related with the item"
                                              },
                                              "closed_deals_count": {
                                                "type": "integer",
                                                "description": "The count of closed deals related with the item"
                                              },
                                              "related_closed_deals_count": {
                                                "type": "integer",
                                                "description": "The count of related closed deals related with the item"
                                              },
                                              "won_deals_count": {
                                                "type": "integer",
                                                "description": "The count of won deals related with the item"
                                              },
                                              "related_won_deals_count": {
                                                "type": "integer",
                                                "description": "The count of related won deals related with the item"
                                              },
                                              "lost_deals_count": {
                                                "type": "integer",
                                                "description": "The count of lost deals related with the item"
                                              },
                                              "related_lost_deals_count": {
                                                "type": "integer",
                                                "description": "The count of related lost deals related with the item"
                                              }
                                            }
                                          },
                                          {
                                            "type": "object",
                                            "properties": {
                                              "next_activity_date": {
                                                "type": "string",
                                                "description": "The date of the next activity associated with the deal"
                                              },
                                              "next_activity_time": {
                                                "type": "string",
                                                "description": "The time of the next activity associated with the deal"
                                              },
                                              "next_activity_id": {
                                                "type": "integer",
                                                "nullable": true,
                                                "description": "The ID of the next activity associated with the deal"
                                              },
                                              "last_activity_id": {
                                                "type": "integer",
                                                "nullable": true,
                                                "description": "The ID of the last activity associated with the deal"
                                              },
                                              "last_activity_date": {
                                                "type": "string",
                                                "nullable": true,
                                                "description": "The date of the last activity associated with the deal"
                                              }
                                            }
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              }
                            }
                          },
                          {
                            "type": "object",
                            "properties": {
                              "item": {
                                "type": "string",
                                "enum": [ "pipeline" ]
                              },
                              "id": { "type": "integer" },
                              "data": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "integer",
                                    "description": "The ID of the pipeline"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "The name of the pipeline"
                                  },
                                  "url_title": {
                                    "type": "string",
                                    "description": "The pipeline title displayed in the URL"
                                  },
                                  "order_nr": {
                                    "type": "integer",
                                    "description": "Defines the order of pipelines. First order (`order_nr=0`) is the default pipeline."
                                  },
                                  "active": {
                                    "type": "boolean",
                                    "description": "Whether this pipeline will be made inactive (hidden) or active"
                                  },
                                  "deal_probability": {
                                    "type": "boolean",
                                    "description": "Whether deal probability is disabled or enabled for this pipeline"
                                  },
                                  "add_time": {
                                    "type": "string",
                                    "description": "The pipeline creation time. Format: YYYY-MM-DD HH:MM:SS."
                                  },
                                  "update_time": {
                                    "type": "string",
                                    "description": "The pipeline update time. Format: YYYY-MM-DD HH:MM:SS."
                                  }
                                }
                              }
                            }
                          },
                          {
                            "type": "object",
                            "properties": {
                              "item": { "type": "string", "enum": [ "product" ] },
                              "id": { "type": "integer" },
                              "data": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "integer",
                                    "description": "The ID of the product"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "The name of the product"
                                  },
                                  "code": {
                                    "type": "string",
                                    "description": "The product code"
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "The description of the product"
                                  },
                                  "unit": {
                                    "type": "string",
                                    "description": "The unit in which this product is sold"
                                  },
                                  "tax": {
                                    "type": "number",
                                    "description": "The tax percentage",
                                    "default": 0
                                  },
                                  "category": {
                                    "type": "string",
                                    "description": "The category of the product"
                                  },
                                  "active_flag": {
                                    "type": "boolean",
                                    "description": "Whether this product will be made active or not"
                                  },
                                  "selectable": {
                                    "type": "boolean",
                                    "description": "Whether this product can be selected in deals or not"
                                  },
                                  "first_char": {
                                    "type": "string",
                                    "description": "The first letter of the product name"
                                  },
                                  "visible_to": {
                                    "type": "integer",
                                    "description": "The visibility of the product. If omitted, the visibility will be set to the default visibility setting of this item type for the authorized user."
                                  },
                                  "owner_id": {
                                    "type": "integer",
                                    "description": "The ID of the user who will be marked as the owner of this product. When omitted, authorized user ID will be used."
                                  },
                                  "files_count": {
                                    "type": "integer",
                                    "description": "The count of files"
                                  },
                                  "add_time": {
                                    "type": "string",
                                    "description": "The date and time when the product was added to the deal"
                                  },
                                  "update_time": {
                                    "type": "string",
                                    "description": "The date and time when the product was updated to the deal"
                                  },
                                  "prices": {
                                    "type": "array",
                                    "items": { "type": "object" },
                                    "description": "Array of objects, each containing: `currency` (string), `price` (number), `cost` (number, optional), `overhead_cost` (number, optional). Note that there can only be one price per product per currency. When `prices` is omitted altogether, a default price of 0 and a default currency based on the company's currency will be assigned."
                                  }
                                }
                              }
                            }
                          },
                          {
                            "type": "object",
                            "properties": {
                              "item": { "type": "string", "enum": [ "stage" ] },
                              "id": { "type": "integer" },
                              "data": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "integer",
                                    "description": "The ID of the stage"
                                  },
                                  "order_nr": {
                                    "type": "integer",
                                    "description": "Defines the order of the stage"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "The name of the stage"
                                  },
                                  "active_flag": {
                                    "type": "boolean",
                                    "description": "Whether the stage is active or deleted"
                                  },
                                  "deal_probability": {
                                    "type": "integer",
                                    "description": "The success probability percentage of the deal. Used/shown when the deal weighted values are used."
                                  },
                                  "pipeline_id": {
                                    "type": "integer",
                                    "description": "The ID of the pipeline to add the stage to"
                                  },
                                  "rotten_flag": {
                                    "type": "boolean",
                                    "enum": [ true, false ],
                                    "description": "Whether deals in this stage can become rotten"
                                  },
                                  "rotten_days": {
                                    "type": "integer",
                                    "description": "The number of days the deals not updated in this stage would become rotten. Applies only if the `rotten_flag` is set."
                                  },
                                  "add_time": {
                                    "type": "string",
                                    "description": "The stage creation time. Format: YYYY-MM-DD HH:MM:SS."
                                  },
                                  "update_time": {
                                    "type": "string",
                                    "description": "The stage update time. Format: YYYY-MM-DD HH:MM:SS."
                                  }
                                }
                              }
                            }
                          },
                          {
                            "type": "object",
                            "properties": {
                              "item": { "type": "string", "enum": [ "user" ] },
                              "id": { "type": "integer" },
                              "data": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "integer",
                                    "description": "The user ID"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "The user name"
                                  },
                                  "default_currency": {
                                    "type": "string",
                                    "description": "The user default currency"
                                  },
                                  "locale": {
                                    "type": "string",
                                    "description": "The user locale"
                                  },
                                  "lang": {
                                    "type": "integer",
                                    "description": "The user language ID"
                                  },
                                  "email": {
                                    "type": "string",
                                    "description": "The user email"
                                  },
                                  "phone": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The user phone"
                                  },
                                  "activated": {
                                    "type": "boolean",
                                    "description": "Boolean that indicates whether the user is activated"
                                  },
                                  "last_login": {
                                    "type": "string",
                                    "description": "The last login date and time of the user. Format: YYYY-MM-DD HH:MM:SS"
                                  },
                                  "created": {
                                    "type": "string",
                                    "description": "The creation date and time of the user. Format: YYYY-MM-DD HH:MM:SS"
                                  },
                                  "modified": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The last modification date and time of the user. Format: YYYY-MM-DD HH:MM:SS"
                                  },
                                  "has_created_company": {
                                    "type": "boolean",
                                    "description": "Boolean that indicates whether the user has created a company"
                                  },
                                  "access": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "app": {
                                          "type": "string",
                                          "enum": [
                                            "sales",
                                            "projects",
                                            "campaigns",
                                            "global",
                                            "account_settings"
                                          ]
                                        },
                                        "admin": { "type": "boolean" },
                                        "permission_set_id": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "active_flag": {
                                    "type": "boolean",
                                    "description": "Boolean that indicates whether the user is activated"
                                  },
                                  "timezone_name": {
                                    "type": "string",
                                    "description": "The user timezone name"
                                  },
                                  "timezone_offset": {
                                    "type": "string",
                                    "description": "The user timezone offset"
                                  },
                                  "role_id": {
                                    "type": "integer",
                                    "description": "The ID of the user role"
                                  },
                                  "icon_url": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The user icon URL"
                                  },
                                  "is_you": {
                                    "type": "boolean",
                                    "description": "Boolean that indicates if the requested user is the same which is logged in (in this case, always true)"
                                  }
                                }
                              }
                            }
                          }
                        ]
                      }
                    },
                    "additional_data": {
                      "type": "object",
                      "properties": {
                        "since_timestamp": {
                          "type": "string",
                          "description": "The timestamp in UTC. Format: YYYY-MM-DD HH:MM:SS"
                        },
                        "last_timestamp_on_page": {
                          "type": "string",
                          "description": "The timestamp in UTC. Format: YYYY-MM-DD HH:MM:SS"
                        },
                        "pagination": {
                          "description": "The additional data of the list",
                          "type": "object",
                          "properties": {
                            "start": {
                              "type": "integer",
                              "description": "Pagination start"
                            },
                            "limit": {
                              "type": "integer",
                              "description": "Items shown per page"
                            },
                            "more_items_in_collection": {
                              "type": "boolean",
                              "description": "If there are more list items in the collection than displayed or not"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "success": true,
                  "data": [
                    {
                      "item": "activity",
                      "id": 8,
                      "data": {
                        "id": 8,
                        "company_id": 22122,
                        "user_id": 1234,
                        "done": false,
                        "type": "deadline",
                        "reference_type": "scheduler-service",
                        "reference_id": 7,
                        "conference_meeting_client": "871b8bc88d3a1202",
                        "conference_meeting_url": "https://pipedrive.zoom.us/link",
                        "conference_meeting_id": "01758746701",
                        "due_date": "2020-06-09",
                        "due_time": "10:00",
                        "duration": "01:00",
                        "busy_flag": true,
                        "add_time": "2020-06-08 12:37:56",
                        "marked_as_done_time": "2020-08-08 08:08:38",
                        "last_notification_time": "2020-08-08 12:37:56",
                        "last_notification_user_id": 7655,
                        "notification_language_id": 1,
                        "subject": "Deadline",
                        "public_description": "This is a description",
                        "calendar_sync_include_context": "",
                        "location": "Mustamäe tee 3, Tallinn, Estonia",
                        "org_id": 5,
                        "person_id": 1101,
                        "deal_id": 300,
                        "lead_id": "46c3b0e1-db35-59ca-1828-4817378dff71",
                        "active_flag": true,
                        "update_time": "2020-08-08 12:37:56",
                        "update_user_id": 5596,
                        "gcal_event_id": "",
                        "google_calendar_id": "",
                        "google_calendar_etag": "",
                        "source_timezone": "",
                        "rec_rule": "RRULE:FREQ=WEEKLY;BYDAY=WE",
                        "rec_rule_extension": "",
                        "rec_master_activity_id": 1,
                        "series": [ ],
                        "note": "A note for the activity",
                        "created_by_user_id": 1234,
                        "location_subpremise": "",
                        "location_street_number": "3",
                        "location_route": "Mustamäe tee",
                        "location_sublocality": "Kristiine",
                        "location_locality": "Tallinn",
                        "location_admin_area_level_1": "Harju maakond",
                        "location_admin_area_level_2": "",
                        "location_country": "Estonia",
                        "location_postal_code": "10616",
                        "location_formatted_address": "Mustamäe tee 3, 10616 Tallinn, Estonia",
                        "attendees": [
                          {
                            "email_address": "attendee@pipedrivemail.com",
                            "is_organizer": 0,
                            "name": "Attendee",
                            "person_id": 25312,
                            "status": "noreply",
                            "user_id": null
                          }
                        ],
                        "participants": [
                          { "person_id": 17985, "primary_flag": false },
                          { "person_id": 1101, "primary_flag": true }
                        ],
                        "org_name": "Organization",
                        "person_name": "Person",
                        "deal_title": "Deal",
                        "owner_name": "Creator",
                        "person_dropbox_bcc": "company@pipedrivemail.com",
                        "deal_dropbox_bcc": "company+deal300@pipedrivemail.com",
                        "assigned_to_user_id": 1235,
                        "file": {
                          "id": "376892,",
                          "clean_name": "Audio 10:55:07.m4a",
                          "url": "https://pipedrive-files.s3-eu-west-1.amazonaws.com/Audio-recording.m4a"
                        }
                      }
                    },
                    {
                      "item": "deal",
                      "id": 1,
                      "data": {
                        "id": 1,
                        "creator_user_id": 8877,
                        "user_id": 8877,
                        "person_id": 1101,
                        "org_id": 5,
                        "stage_id": 2,
                        "title": "Deal One",
                        "value": 5000,
                        "currency": "EUR",
                        "add_time": "2019-05-29 04:21:51",
                        "update_time": "2019-11-28 16:19:50",
                        "stage_change_time": "2019-11-28 15:41:22",
                        "active": true,
                        "deleted": false,
                        "status": "open",
                        "probability": null,
                        "next_activity_date": "2019-11-29",
                        "next_activity_time": "11:30:00",
                        "next_activity_id": 128,
                        "last_activity_id": null,
                        "last_activity_date": null,
                        "lost_reason": null,
                        "visible_to": "1",
                        "close_time": null,
                        "pipeline_id": 1,
                        "won_time": "2019-11-27 11:40:36",
                        "first_won_time": "2019-11-27 11:40:36",
                        "lost_time": "2019-11-27 11:40:36",
                        "products_count": 0,
                        "files_count": 0,
                        "notes_count": 2,
                        "followers_count": 0,
                        "email_messages_count": 4,
                        "activities_count": 1,
                        "done_activities_count": 0,
                        "undone_activities_count": 1,
                        "participants_count": 1,
                        "expected_close_date": "2019-06-29",
                        "last_incoming_mail_time": "2019-05-29 18:21:42",
                        "last_outgoing_mail_time": "2019-05-30 03:45:35",
                        "label": 11,
                        "stage_order_nr": 2,
                        "person_name": "Person",
                        "org_name": "Organization",
                        "next_activity_subject": "Call",
                        "next_activity_type": "call",
                        "next_activity_duration": "00:30:00",
                        "next_activity_note": "Note content",
                        "formatted_value": "€5,000",
                        "weighted_value": 5000,
                        "formatted_weighted_value": "€5,000",
                        "weighted_value_currency": "EUR",
                        "rotten_time": null,
                        "owner_name": "Creator",
                        "cc_email": "company+deal1@pipedrivemail.com",
                        "org_hidden": false,
                        "person_hidden": false
                      }
                    }
                  ],
                  "additional_data": {
                    "since_timestamp": "2020-10-10 00:00:00",
                    "last_timestamp_on_page": "2020-10-15 18:18:41",
                    "pagination\"": {
                      "start": "0,",
                      "limit": "100,",
                      "more_items_in_collection": false
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/roles": {
      "get": {
        "summary": "Get all roles",
        "description": "Returns all the roles within the company.",
        "operationId": "getRoles",
        "tags": [ "Roles" ],
        "parameters": [
          {
            "in": "query",
            "name": "start",
            "description": "Pagination start",
            "schema": { "type": "integer", "default": 0 }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Items shown per page",
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "Get all roles",
            "content": {
              "application/json": {
                "schema": {
                  "title": "getRoles",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "title": "fullRole",
                            "allOf": [
                              {
                                "description": "The details of the sub-role",
                                "title": "subRole",
                                "allOf": [
                                  {
                                    "title": "baseRoleRequest",
                                    "description": "The details of the role",
                                    "type": "object",
                                    "properties": {
                                      "parent_role_id": {
                                        "type": "integer",
                                        "description": "The ID of the parent role"
                                      },
                                      "name": {
                                        "type": "string",
                                        "description": "The name of the role"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "integer",
                                        "description": "The ID of the role"
                                      },
                                      "active_flag": {
                                        "type": "boolean",
                                        "description": "Whether the role is active or not"
                                      },
                                      "assignment_count": {
                                        "type": "string",
                                        "description": "The number of users assigned to this role"
                                      },
                                      "sub_role_count": {
                                        "type": "string",
                                        "description": "The number of sub-roles"
                                      }
                                    }
                                  }
                                ]
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "level": {
                                    "type": "integer",
                                    "description": "The level of role in the role hierarchy"
                                  }
                                }
                              }
                            ]
                          },
                          "description": "The array of roles"
                        },
                        "additional_data": {
                          "description": "The additional data in the role list",
                          "type": "object",
                          "properties": {
                            "pagination": {
                              "description": "The pagination details in the role list",
                              "type": "object",
                              "properties": {
                                "start": {
                                  "type": "integer",
                                  "description": "Pagination start"
                                },
                                "limit": {
                                  "type": "integer",
                                  "description": "Items shown per page"
                                },
                                "more_items_in_collection": {
                                  "type": "boolean",
                                  "description": "Whether there are more list items in the collection than displayed"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "success": true,
                  "data": [
                    {
                      "id": 1,
                      "parent_role_id": 1,
                      "name": "(Unassigned users)",
                      "active_flag": true,
                      "assignment_count": "0",
                      "sub_role_count": "0",
                      "level": 1
                    },
                    {
                      "id": 2,
                      "parent_role_id": 1,
                      "name": "Admins",
                      "active_flag": true,
                      "assignment_count": "1",
                      "sub_role_count": "1",
                      "level": 1
                    },
                    {
                      "id": 3,
                      "parent_role_id": 2,
                      "name": "Reviewers",
                      "active_flag": true,
                      "assignment_count": "1",
                      "sub_role_count": "0",
                      "level": 2
                    }
                  ],
                  "additional_data": {
                    "pagination": {
                      "start": 0,
                      "limit": 100,
                      "more_items_in_collection": false
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add a role",
        "description": "Adds a new role.",
        "operationId": "addRole",
        "tags": [ "Roles" ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "addRoleRequest",
                "description": "The details of the role",
                "type": "object",
                "required": [ "name" ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the role"
                  },
                  "parent_role_id": {
                    "type": "integer",
                    "description": "The ID of the parent role"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Add a role",
            "content": {
              "application/json": {
                "schema": {
                  "title": "addRole",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "allOf": [ { "type": "integer" } ],
                              "description": "The ID of the created role"
                            }
                          },
                          "description": "The response data"
                        }
                      }
                    }
                  ]
                },
                "example": { "success": true, "data": { "id": 2 } }
              }
            }
          }
        }
      }
    },
    "/roles/{id}": {
      "delete": {
        "summary": "Delete a role",
        "description": "Marks a role as deleted.",
        "operationId": "deleteRole",
        "tags": [ "Roles" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the role",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "Delete a role",
            "content": {
              "application/json": {
                "schema": {
                  "title": "deleteRole",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "allOf": [ { "type": "integer" } ],
                              "description": "The ID of the deleted role"
                            }
                          },
                          "description": "The response data"
                        }
                      }
                    }
                  ]
                },
                "example": { "success": true, "data": { "id": 2 } }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get one role",
        "description": "Returns the details of a specific role.",
        "operationId": "getRole",
        "tags": [ "Roles" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the role",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "Get one role",
            "content": {
              "application/json": {
                "schema": {
                  "title": "getRole",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "description": "The details of the sub-role",
                          "title": "subRole",
                          "allOf": [
                            {
                              "title": "baseRoleRequest",
                              "description": "The details of the role",
                              "type": "object",
                              "properties": {
                                "parent_role_id": {
                                  "type": "integer",
                                  "description": "The ID of the parent role"
                                },
                                "name": {
                                  "type": "string",
                                  "description": "The name of the role"
                                }
                              }
                            },
                            {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "description": "The ID of the role"
                                },
                                "active_flag": {
                                  "type": "boolean",
                                  "description": "Whether the role is active or not"
                                },
                                "assignment_count": {
                                  "type": "string",
                                  "description": "The number of users assigned to this role"
                                },
                                "sub_role_count": {
                                  "type": "string",
                                  "description": "The number of sub-roles"
                                }
                              }
                            }
                          ]
                        },
                        "additional_data": {
                          "type": "object",
                          "description": "The additional data in the role",
                          "properties": {
                            "settings": {
                              "description": "The settings for the role",
                              "type": "object",
                              "properties": {
                                "deal_default_visibility": {
                                  "type": "number",
                                  "description": "The default visibility level of the deals for the role"
                                },
                                "lead_default_visibility": {
                                  "type": "number",
                                  "description": "The default visibility level of the leads for the role"
                                },
                                "org_default_visibility": {
                                  "type": "number",
                                  "description": "The default visibility level of the organizations for the role"
                                },
                                "person_default_visibility": {
                                  "type": "number",
                                  "description": "The default visibility level of the people for the role"
                                },
                                "product_default_visibility": {
                                  "type": "number",
                                  "description": "The default visibility level of the products for the role"
                                },
                                "deal_access_level": {
                                  "type": "number",
                                  "description": "The access level of the deals for the role (only for default role)"
                                },
                                "org_access_level": {
                                  "type": "number",
                                  "description": "The access level of the organizations for the role (only for default role)"
                                },
                                "person_access_level": {
                                  "type": "number",
                                  "description": "The access level of the people for the role (only for default role)"
                                },
                                "product_access_level": {
                                  "type": "number",
                                  "description": "The access level of the products for the role (only for default role)"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "success": true,
                  "data": {
                    "id": 2,
                    "parent_role_id": 1,
                    "name": "Admins",
                    "active_flag": true,
                    "assignment_count": "1",
                    "sub_role_count": "1"
                  },
                  "additional_data": {
                    "settings": {
                      "deal_default_visibility": 1,
                      "lead_default_visibility": 1,
                      "org_default_visibility": 1,
                      "person_default_visibility": 1,
                      "product_default_visibility": 1
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update role details",
        "description": "Updates the parent role and/or the name of a specific role.",
        "operationId": "updateRole",
        "tags": [ "Roles" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the role",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "baseRoleRequest",
                "description": "The details of the role",
                "type": "object",
                "properties": {
                  "parent_role_id": {
                    "type": "integer",
                    "description": "The ID of the parent role"
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of the role"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update role details",
            "content": {
              "application/json": {
                "schema": {
                  "title": "updateRole",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "allOf": [ { "type": "integer" } ],
                              "description": "The ID of the updated role"
                            }
                          },
                          "description": "The response data"
                        }
                      }
                    }
                  ]
                },
                "example": { "success": true, "data": { "id": 2 } }
              }
            }
          }
        }
      }
    },
    "/roles/{id}/assignments": {
      "delete": {
        "summary": "Delete a role assignment",
        "description": "Removes the assigned user from a role and adds to the default role.",
        "operationId": "deleteRoleAssignment",
        "tags": [ "Roles" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the role",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "deleteRoleAssignmentRequest",
                "type": "object",
                "required": [ "user_id" ],
                "properties": {
                  "user_id": {
                    "type": "integer",
                    "description": "The ID of the user"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Delete assignment from a role",
            "content": {
              "application/json": {
                "schema": {
                  "title": "deleteRoleAssignment",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "description": "The response data",
                          "properties": {
                            "id": {
                              "allOf": [ { "type": "integer" } ],
                              "description": "The ID of the role the user was removed from"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": { "success": true, "data": { "id": 2 } }
              }
            }
          }
        }
      },
      "get": {
        "summary": "List role assignments",
        "description": "Returns all users assigned to a role.",
        "operationId": "getRoleAssignments",
        "tags": [ "Roles" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the role",
            "required": true,
            "schema": { "type": "integer" }
          },
          {
            "in": "query",
            "name": "start",
            "description": "Pagination start",
            "schema": { "type": "integer", "default": 0 }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Items shown per page",
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "List assignments for a role",
            "content": {
              "application/json": {
                "schema": {
                  "title": "getUserRoleAssignments",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "title": "roleAssignment",
                            "allOf": [
                              {
                                "title": "baseRoleRequest",
                                "description": "The details of the role",
                                "type": "object",
                                "properties": {
                                  "parent_role_id": {
                                    "type": "integer",
                                    "description": "The ID of the parent role"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "The name of the role"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "user_id": {
                                    "type": "integer",
                                    "description": "The user ID"
                                  },
                                  "role_id": {
                                    "type": "integer",
                                    "description": "The role ID"
                                  },
                                  "active_flag": {
                                    "type": "boolean",
                                    "description": "Whether the role is active or not"
                                  },
                                  "type": {
                                    "type": "string",
                                    "description": "The assignment type"
                                  }
                                }
                              }
                            ],
                            "description": "The assignment data of the role"
                          },
                          "description": "The role assignments"
                        },
                        "additional_data": {
                          "description": "The additional data in the role list",
                          "type": "object",
                          "properties": {
                            "pagination": {
                              "description": "The pagination details in the role list",
                              "type": "object",
                              "properties": {
                                "start": {
                                  "type": "integer",
                                  "description": "Pagination start"
                                },
                                "limit": {
                                  "type": "integer",
                                  "description": "Items shown per page"
                                },
                                "more_items_in_collection": {
                                  "type": "boolean",
                                  "description": "Whether there are more list items in the collection than displayed"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "success": true,
                  "data": [
                    {
                      "user_id": 1234567,
                      "role_id": 2,
                      "parent_role_id": 1,
                      "name": "Admins",
                      "active_flag": true,
                      "type": "1"
                    }
                  ],
                  "additional_data": {
                    "pagination": {
                      "start": 0,
                      "limit": 100,
                      "more_items_in_collection": false
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add role assignment",
        "description": "Assigns a user to a role.",
        "operationId": "addRoleAssignment",
        "tags": [ "Roles" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the role",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "addRoleAssignmentRequest",
                "type": "object",
                "required": [ "user_id" ],
                "properties": {
                  "user_id": {
                    "type": "integer",
                    "description": "The ID of the user"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Add assignment for a role",
            "content": {
              "application/json": {
                "schema": {
                  "title": "addRoleAssignment",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "user_id": {
                              "type": "integer",
                              "description": "The ID of the user that was added to the role"
                            },
                            "role_id": {
                              "type": "integer",
                              "description": "The ID of the role the user was added to"
                            }
                          },
                          "description": "The response data"
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "success": true,
                  "data": { "user_id": 1234567, "role_id": 2 }
                }
              }
            }
          }
        }
      }
    },
    "/roles/{id}/settings": {
      "get": {
        "summary": "List role settings",
        "description": "Returns the visibility settings of a specific role.",
        "operationId": "getRoleSettings",
        "tags": [ "Roles" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the role",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "List role settings",
            "content": {
              "application/json": {
                "schema": {
                  "title": "getRoleSettings",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "description": "The settings for the role",
                          "type": "object",
                          "properties": {
                            "deal_default_visibility": {
                              "type": "number",
                              "description": "The default visibility level of the deals for the role"
                            },
                            "lead_default_visibility": {
                              "type": "number",
                              "description": "The default visibility level of the leads for the role"
                            },
                            "org_default_visibility": {
                              "type": "number",
                              "description": "The default visibility level of the organizations for the role"
                            },
                            "person_default_visibility": {
                              "type": "number",
                              "description": "The default visibility level of the people for the role"
                            },
                            "product_default_visibility": {
                              "type": "number",
                              "description": "The default visibility level of the products for the role"
                            },
                            "deal_access_level": {
                              "type": "number",
                              "description": "The access level of the deals for the role (only for default role)"
                            },
                            "org_access_level": {
                              "type": "number",
                              "description": "The access level of the organizations for the role (only for default role)"
                            },
                            "person_access_level": {
                              "type": "number",
                              "description": "The access level of the people for the role (only for default role)"
                            },
                            "product_access_level": {
                              "type": "number",
                              "description": "The access level of the products for the role (only for default role)"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "success": true,
                  "data": {
                    "deal_default_visibility": 1,
                    "lead_default_visibility": 1,
                    "org_default_visibility": 1,
                    "person_default_visibility": 1,
                    "product_default_visibility": 1
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add or update role setting",
        "description": "Adds or updates the visibility setting for a role.",
        "operationId": "addOrUpdateRoleSetting",
        "tags": [ "Roles" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the role",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "addOrUpdateRoleSettingRequest",
                "type": "object",
                "required": [ "setting_key", "value" ],
                "properties": {
                  "setting_key": {
                    "type": "string",
                    "enum": [
                      "deal_default_visibility",
                      "lead_default_visibility",
                      "org_default_visibility",
                      "person_default_visibility",
                      "product_default_visibility"
                    ]
                  },
                  "value": {
                    "type": "integer",
                    "enum": [ 1, 3, 5, 7 ],
                    "description": "Possible values for the `default_visibility` setting depending on the subscription plan:<br> <table class='role-setting'> <caption><b>Essential / Advanced plan</b></caption> <tr><th><b>Value</b></th><th><b>Description</b></th></tr> <tr><td>`1`</td><td>Owner & Followers</td></tr> <tr><td>`3`</td><td>Entire company</td></tr> </table> <br> <table class='role-setting'> <caption><b>Professional / Enterprise plan</b></caption> <tr><th><b>Value</b></th><th><b>Description</b></th></tr> <tr><td>`1`</td><td>Owner only</td></tr> <tr><td>`3`</td><td>Owner&#39;s visibility group</td></tr> <tr><td>`5`</td><td>Owner&#39;s visibility group and sub-groups</td></tr> <tr><td>`7`</td><td>Entire company</td></tr> </table> <br> Read more about visibility groups <a href='https://support.pipedrive.com/en/article/visibility-groups'>here</a>."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "List role settings",
            "content": {
              "application/json": {
                "schema": {
                  "title": "addOrUpdateRoleSetting",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "description": "The ID of the role"
                            },
                            "deal_default_visibility": {
                              "type": "number",
                              "enum": [ 1, 3, 5, 7 ],
                              "description": "The setting"
                            }
                          },
                          "description": "The response data"
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "success": true,
                  "data": { "id": 2, "deal_default_visibility": 1 }
                }
              }
            }
          }
        }
      }
    },
    "/stages": {
      "delete": {
        "summary": "Delete multiple stages in bulk",
        "description": "Marks multiple stages as deleted.",
        "operationId": "deleteStages",
        "tags": [ "Stages" ],
        "parameters": [
          {
            "in": "query",
            "name": "ids",
            "required": true,
            "schema": { "type": "string" },
            "description": "The comma-separated stage IDs to delete"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete multiple stages",
            "content": {
              "application/json": {
                "schema": {
                  "title": "deleteStages",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "If the request was successful or not"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "array",
                          "items": { "type": "integer" },
                          "description": "The list of deleted stage IDs"
                        }
                      }
                    }
                  }
                },
                "example": { "success": true, "data": { "id": [ 1, 2 ] } }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get all stages",
        "description": "Returns data about all stages.",
        "operationId": "getStages",
        "tags": [ "Stages" ],
        "parameters": [
          {
            "in": "query",
            "name": "pipeline_id",
            "schema": { "type": "integer" },
            "description": "The ID of the pipeline to fetch stages for. If omitted, stages for all pipelines will be fetched."
          }
        ],
        "responses": {
          "200": {
            "description": "Get all stages",
            "content": {
              "application/json": {
                "schema": {
                  "title": "getStages",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "If the request was successful or not"
                    },
                    "data": {
                      "type": "array",
                      "description": "The array of stages",
                      "items": {
                        "allOf": [
                          {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer",
                                "description": "The ID of the stage"
                              },
                              "order_nr": {
                                "type": "integer",
                                "description": "Defines the order of the stage"
                              },
                              "name": {
                                "type": "string",
                                "description": "The name of the stage"
                              },
                              "active_flag": {
                                "type": "boolean",
                                "description": "Whether the stage is active or deleted"
                              },
                              "deal_probability": {
                                "type": "integer",
                                "description": "The success probability percentage of the deal. Used/shown when the deal weighted values are used."
                              },
                              "pipeline_id": {
                                "type": "integer",
                                "description": "The ID of the pipeline to add the stage to"
                              },
                              "rotten_flag": {
                                "type": "boolean",
                                "enum": [ true, false ],
                                "description": "Whether deals in this stage can become rotten"
                              },
                              "rotten_days": {
                                "type": "integer",
                                "description": "The number of days the deals not updated in this stage would become rotten. Applies only if the `rotten_flag` is set."
                              },
                              "add_time": {
                                "type": "string",
                                "description": "The stage creation time. Format: YYYY-MM-DD HH:MM:SS."
                              },
                              "update_time": {
                                "type": "string",
                                "description": "The stage update time. Format: YYYY-MM-DD HH:MM:SS."
                              }
                            }
                          },
                          {
                            "type": "object",
                            "properties": {
                              "pipeline_name": {
                                "type": "string",
                                "description": "The name of the pipeline"
                              },
                              "pipeline_deal_probability": {
                                "type": "boolean",
                                "description": "The pipeline deal probability. When `true`, overrides the stage probability."
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                },
                "example": {
                  "success": true,
                  "data": [
                    {
                      "id": 1,
                      "order_nr": 1,
                      "name": "Stage Name",
                      "active_flag": true,
                      "deal_probability": 100,
                      "pipeline_id": 1,
                      "rotten_flag": false,
                      "rotten_days": 1,
                      "add_time": "2017-08-03 12:51:18",
                      "update_time": "2020-03-23 13:15:25",
                      "pipeline_name": "Pipeline",
                      "pipeline_deal_probability": false
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add a new stage",
        "description": "Adds a new stage, returns the ID upon success.",
        "operationId": "addStage",
        "tags": [ "Stages" ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "addStageRequest",
                "required": [ "name", "pipeline_id" ],
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the stage"
                  },
                  "pipeline_id": {
                    "type": "integer",
                    "description": "The ID of the pipeline to add stage to"
                  },
                  "deal_probability": {
                    "type": "integer",
                    "description": "The success probability percentage of the deal. Used/shown when deal weighted values are used."
                  },
                  "rotten_flag": {
                    "type": "boolean",
                    "enum": [ true, false ],
                    "description": "Whether deals in this stage can become rotten"
                  },
                  "rotten_days": {
                    "type": "integer",
                    "description": "The number of days the deals not updated in this stage would become rotten. Applies only if the `rotten_flag` is set."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Get all stages",
            "content": {
              "application/json": {
                "schema": {
                  "title": "stage",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "If the request was successful or not"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "description": "The ID of the stage"
                        },
                        "order_nr": {
                          "type": "integer",
                          "description": "Defines the order of the stage"
                        },
                        "name": {
                          "type": "string",
                          "description": "The name of the stage"
                        },
                        "active_flag": {
                          "type": "boolean",
                          "description": "Whether the stage is active or deleted"
                        },
                        "deal_probability": {
                          "type": "integer",
                          "description": "The success probability percentage of the deal. Used/shown when the deal weighted values are used."
                        },
                        "pipeline_id": {
                          "type": "integer",
                          "description": "The ID of the pipeline to add the stage to"
                        },
                        "rotten_flag": {
                          "type": "boolean",
                          "enum": [ true, false ],
                          "description": "Whether deals in this stage can become rotten"
                        },
                        "rotten_days": {
                          "type": "integer",
                          "description": "The number of days the deals not updated in this stage would become rotten. Applies only if the `rotten_flag` is set."
                        },
                        "add_time": {
                          "type": "string",
                          "description": "The stage creation time. Format: YYYY-MM-DD HH:MM:SS."
                        },
                        "update_time": {
                          "type": "string",
                          "description": "The stage update time. Format: YYYY-MM-DD HH:MM:SS."
                        }
                      },
                      "description": "Updated stage object"
                    }
                  }
                },
                "example": {
                  "success": true,
                  "data": {
                    "id": 1,
                    "order_nr": 1,
                    "name": "Stage Name",
                    "active_flag": true,
                    "deal_probability": 100,
                    "pipeline_id": 1,
                    "rotten_flag": false,
                    "rotten_days": 1,
                    "add_time": "2017-08-03 12:51:18",
                    "update_time": "2020-03-23 13:15:25"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/stages/{id}": {
      "delete": {
        "summary": "Delete a stage",
        "description": "Marks a stage as deleted.",
        "operationId": "deleteStage",
        "tags": [ "Stages" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the stage",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "Delete stage",
            "content": {
              "application/json": {
                "schema": {
                  "title": "deleteStage",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "If the request was successful or not"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "description": "Deleted stage ID"
                        }
                      }
                    }
                  }
                },
                "example": { "success": true, "data": { "id": 1 } }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get one stage",
        "description": "Returns data about a specific stage.",
        "operationId": "getStage",
        "tags": [ "Stages" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the stage",
            "required": true,
            "schema": { "type": "integer" }
          },
          {
            "in": "query",
            "name": "everyone",
            "schema": {
              "title": "numberBoolean",
              "type": "number",
              "enum": [ 0, 1 ]
            },
            "description": "If `everyone=1` is provided, deals summary will return deals owned by every user"
          }
        ],
        "responses": {
          "200": {
            "description": "Get stage",
            "content": {
              "application/json": {
                "schema": {
                  "title": "getStage",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "If the request was successful or not"
                    },
                    "data": {
                      "type": "object",
                      "description": "The stage object",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "description": "The ID of the stage"
                            },
                            "order_nr": {
                              "type": "integer",
                              "description": "Defines the order of the stage"
                            },
                            "name": {
                              "type": "string",
                              "description": "The name of the stage"
                            },
                            "active_flag": {
                              "type": "boolean",
                              "description": "Whether the stage is active or deleted"
                            },
                            "deal_probability": {
                              "type": "integer",
                              "description": "The success probability percentage of the deal. Used/shown when the deal weighted values are used."
                            },
                            "pipeline_id": {
                              "type": "integer",
                              "description": "The ID of the pipeline to add the stage to"
                            },
                            "rotten_flag": {
                              "type": "boolean",
                              "enum": [ true, false ],
                              "description": "Whether deals in this stage can become rotten"
                            },
                            "rotten_days": {
                              "type": "integer",
                              "description": "The number of days the deals not updated in this stage would become rotten. Applies only if the `rotten_flag` is set."
                            },
                            "add_time": {
                              "type": "string",
                              "description": "The stage creation time. Format: YYYY-MM-DD HH:MM:SS."
                            },
                            "update_time": {
                              "type": "string",
                              "description": "The stage update time. Format: YYYY-MM-DD HH:MM:SS."
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "deals_summary": {
                              "type": "object",
                              "description": "Deals summary",
                              "properties": {
                                "per_stages": {
                                  "type": "object",
                                  "description": "The stage objects containing deals currency information",
                                  "properties": {
                                    "STAGE_ID": {
                                      "type": "object",
                                      "description": "The currency summaries per stage. This parameter is dynamic and changes according to `stage_id` value.",
                                      "properties": {
                                        "CURRENCY_ID": {
                                          "type": "object",
                                          "description": "The currency summary. This parameter is dynamic and changes according to `currency_id` value.",
                                          "properties": {
                                            "count": {
                                              "type": "integer",
                                              "description": "Deals count per currency"
                                            },
                                            "value": {
                                              "type": "integer",
                                              "description": "Deals value per currency"
                                            },
                                            "value_formatted": {
                                              "type": "string",
                                              "description": "Deals value formatted per currency"
                                            },
                                            "weighted_value": {
                                              "type": "integer",
                                              "description": "Deals weighted value per currency"
                                            },
                                            "weighted_value_formatted": {
                                              "type": "string",
                                              "description": "Deals weighted value formatted per currency"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "per_currency": {
                                  "type": "object",
                                  "description": "The currency count summary",
                                  "properties": {
                                    "CURRENCY_ID": {
                                      "type": "integer",
                                      "description": "Deals count per currency. This parameter is dynamic and changes according to `currency_id` value."
                                    }
                                  }
                                },
                                "total_count": {
                                  "type": "integer",
                                  "description": "Deals count"
                                },
                                "per_currency_full": {
                                  "type": "object",
                                  "description": "Full currency summaries",
                                  "properties": {
                                    "CURRENCY_ID": {
                                      "type": "object",
                                      "description": "The currency summary. This parameter is dynamic and changes according to `currency_id` value.",
                                      "properties": {
                                        "count": {
                                          "type": "integer",
                                          "description": "Deals count per currency"
                                        },
                                        "value": {
                                          "type": "integer",
                                          "description": "Deals value per currency"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  }
                },
                "example": {
                  "success": true,
                  "data": {
                    "id": 1,
                    "order_nr": 1,
                    "name": "Stage Name",
                    "active_flag": true,
                    "deal_probability": 100,
                    "pipeline_id": 1,
                    "rotten_flag": false,
                    "rotten_days": 1,
                    "add_time": "2017-08-03 12:51:18",
                    "update_time": "2020-03-23 13:15:25",
                    "deals_summary": {
                      "per_stages": {
                        "1": {
                          "EUR": {
                            "count": 1,
                            "value": 10,
                            "value_formatted": "10 €",
                            "weighted_value": 10,
                            "weighted_value_formatted": "10€"
                          }
                        }
                      },
                      "per_currency": { "EUR": 1 },
                      "total_count": 1,
                      "per_currency_full": {
                        "EUR": { "count": 1, "value": 10 }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update stage details",
        "description": "Updates the properties of a stage.",
        "operationId": "updateStage",
        "tags": [ "Stages" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the stage",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "updateStageRequest",
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The name of the stage"
                      },
                      "pipeline_id": {
                        "type": "integer",
                        "description": "The ID of the pipeline to add stage to"
                      },
                      "deal_probability": {
                        "type": "integer",
                        "description": "The success probability percentage of the deal. Used/shown when deal weighted values are used."
                      },
                      "rotten_flag": {
                        "type": "boolean",
                        "enum": [ true, false ],
                        "description": "Whether deals in this stage can become rotten"
                      },
                      "rotten_days": {
                        "type": "integer",
                        "description": "The number of days the deals not updated in this stage would become rotten. Applies only if the `rotten_flag` is set."
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "order_nr": {
                        "type": "integer",
                        "description": "An order number for this stage. Order numbers should be used to order the stages in the pipeline."
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Get all stages",
            "content": {
              "application/json": {
                "schema": {
                  "title": "stage",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "If the request was successful or not"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "description": "The ID of the stage"
                        },
                        "order_nr": {
                          "type": "integer",
                          "description": "Defines the order of the stage"
                        },
                        "name": {
                          "type": "string",
                          "description": "The name of the stage"
                        },
                        "active_flag": {
                          "type": "boolean",
                          "description": "Whether the stage is active or deleted"
                        },
                        "deal_probability": {
                          "type": "integer",
                          "description": "The success probability percentage of the deal. Used/shown when the deal weighted values are used."
                        },
                        "pipeline_id": {
                          "type": "integer",
                          "description": "The ID of the pipeline to add the stage to"
                        },
                        "rotten_flag": {
                          "type": "boolean",
                          "enum": [ true, false ],
                          "description": "Whether deals in this stage can become rotten"
                        },
                        "rotten_days": {
                          "type": "integer",
                          "description": "The number of days the deals not updated in this stage would become rotten. Applies only if the `rotten_flag` is set."
                        },
                        "add_time": {
                          "type": "string",
                          "description": "The stage creation time. Format: YYYY-MM-DD HH:MM:SS."
                        },
                        "update_time": {
                          "type": "string",
                          "description": "The stage update time. Format: YYYY-MM-DD HH:MM:SS."
                        }
                      },
                      "description": "Updated stage object"
                    }
                  }
                },
                "example": {
                  "success": true,
                  "data": {
                    "id": 1,
                    "order_nr": 1,
                    "name": "Stage Name",
                    "active_flag": true,
                    "deal_probability": 100,
                    "pipeline_id": 1,
                    "rotten_flag": false,
                    "rotten_days": 1,
                    "add_time": "2017-08-03 12:51:18",
                    "update_time": "2020-03-23 13:15:25"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/stages/{id}/deals": {
      "get": {
        "summary": "Get deals in a stage",
        "description": "Lists deals in a specific stage.",
        "operationId": "getStageDeals",
        "tags": [ "Stages" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the stage",
            "required": true,
            "schema": { "type": "integer" }
          },
          {
            "in": "query",
            "name": "filter_id",
            "schema": { "type": "integer" },
            "description": "If supplied, only deals matching the given filter will be returned"
          },
          {
            "in": "query",
            "name": "user_id",
            "schema": { "type": "integer" },
            "description": "If supplied, `filter_id` will not be considered and only deals owned by the given user will be returned. If omitted, deals owned by the authorized user will be returned."
          },
          {
            "in": "query",
            "name": "everyone",
            "schema": {
              "title": "numberBoolean",
              "type": "number",
              "enum": [ 0, 1 ]
            },
            "description": "If supplied, `filter_id` and `user_id` will not be considered – instead, deals owned by everyone will be returned"
          },
          {
            "in": "query",
            "name": "start",
            "description": "Pagination start",
            "schema": { "type": "integer", "default": 0 }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Items shown per page",
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "Get deals in a stage",
            "content": {
              "application/json": {
                "schema": {
                  "title": "getStageDeals",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "If the request was successful or not"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "title": "dealStrict",
                        "allOf": [
                          {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer",
                                "description": "The ID of the deal"
                              },
                              "creator_user_id": {
                                "type": "integer",
                                "description": "The ID of the deal creator"
                              },
                              "user_id": {
                                "type": "integer",
                                "description": "The ID of the user"
                              },
                              "person_id": {
                                "type": "integer",
                                "description": "The ID of the person associated with the deal"
                              },
                              "org_id": {
                                "type": "integer",
                                "description": "The ID of the organization associated with the deal"
                              }
                            }
                          },
                          {
                            "title": "baseDeal",
                            "type": "object",
                            "properties": {
                              "stage_id": {
                                "type": "integer",
                                "description": "The ID of the deal stage"
                              },
                              "title": {
                                "type": "string",
                                "description": "The title of the deal"
                              },
                              "value": {
                                "type": "number",
                                "description": "The value of the deal"
                              },
                              "currency": {
                                "type": "string",
                                "description": "The currency associated with the deal"
                              },
                              "add_time": {
                                "type": "string",
                                "description": "The creation date and time of the deal"
                              },
                              "update_time": {
                                "type": "string",
                                "description": "The last updated date and time of the deal"
                              },
                              "stage_change_time": {
                                "type": "string",
                                "description": "The last updated date and time of the deal stage"
                              },
                              "active": {
                                "type": "boolean",
                                "description": "Whether the deal is active or not"
                              },
                              "deleted": {
                                "type": "boolean",
                                "description": "Whether the deal is deleted or not"
                              },
                              "status": {
                                "type": "string",
                                "description": "The status of the deal"
                              },
                              "probability": {
                                "type": "number",
                                "nullable": true,
                                "description": "The success probability percentage of the deal"
                              },
                              "next_activity_date": {
                                "type": "string",
                                "description": "The date of the next activity associated with the deal"
                              },
                              "next_activity_time": {
                                "type": "string",
                                "description": "The time of the next activity associated with the deal"
                              },
                              "next_activity_id": {
                                "type": "integer",
                                "nullable": true,
                                "description": "The ID of the next activity associated with the deal"
                              },
                              "last_activity_id": {
                                "type": "integer",
                                "nullable": true,
                                "description": "The ID of the last activity associated with the deal"
                              },
                              "last_activity_date": {
                                "type": "string",
                                "nullable": true,
                                "description": "The date of the last activity associated with the deal"
                              },
                              "lost_reason": {
                                "type": "string",
                                "nullable": true,
                                "description": "The reason for losing the deal"
                              },
                              "visible_to": {
                                "type": "string",
                                "description": "The visibility of the deal"
                              },
                              "close_time": {
                                "type": "string",
                                "nullable": true,
                                "description": "The date and time of closing the deal"
                              },
                              "pipeline_id": {
                                "type": "integer",
                                "description": "The ID of pipeline associated with the deal"
                              },
                              "won_time": {
                                "type": "string",
                                "description": "The date and time of changing the deal status as won"
                              },
                              "first_won_time": {
                                "type": "string",
                                "description": "The date and time of the first time changing the deal status as won"
                              },
                              "lost_time": {
                                "type": "string",
                                "description": "The date and time of changing the deal status as lost"
                              },
                              "products_count": {
                                "type": "integer",
                                "description": "The number of products associated with the deal"
                              },
                              "files_count": {
                                "type": "integer",
                                "description": "The number of files associated with the deal"
                              },
                              "notes_count": {
                                "type": "integer",
                                "description": "The number of notes associated with the deal"
                              },
                              "followers_count": {
                                "type": "integer",
                                "description": "The number of followers associated with the deal"
                              },
                              "email_messages_count": {
                                "type": "integer",
                                "description": "The number of emails associated with the deal"
                              },
                              "activities_count": {
                                "type": "integer",
                                "description": "The number of activities associated with the deal"
                              },
                              "done_activities_count": {
                                "type": "integer",
                                "description": "The number of completed activities associated with the deal"
                              },
                              "undone_activities_count": {
                                "type": "integer",
                                "description": "The number of incomplete activities associated with the deal"
                              },
                              "participants_count": {
                                "type": "integer",
                                "description": "The number of participants associated with the deal"
                              },
                              "expected_close_date": {
                                "type": "string",
                                "format": "date",
                                "description": "The expected close date of the deal"
                              },
                              "last_incoming_mail_time": {
                                "type": "string",
                                "description": "The date and time of the last incoming email associated with the deal"
                              },
                              "last_outgoing_mail_time": {
                                "type": "string",
                                "description": "The date and time of the last outgoing email associated with the deal"
                              },
                              "label": {
                                "type": "integer",
                                "description": "The label assigned to the deal"
                              },
                              "stage_order_nr": {
                                "type": "integer",
                                "description": "The order number of the deal stage associated with the deal"
                              },
                              "person_name": {
                                "type": "string",
                                "description": "The name of the person associated with the deal"
                              },
                              "org_name": {
                                "type": "string",
                                "description": "The name of the organization associated with the deal"
                              },
                              "next_activity_subject": {
                                "type": "string",
                                "description": "The subject of the next activity associated with the deal"
                              },
                              "next_activity_type": {
                                "type": "string",
                                "description": "The type of the next activity associated with the deal"
                              },
                              "next_activity_duration": {
                                "type": "string",
                                "description": "The duration of the next activity associated with the deal"
                              },
                              "next_activity_note": {
                                "type": "string",
                                "description": "The note of the next activity associated with the deal"
                              },
                              "formatted_value": {
                                "type": "string",
                                "description": "The deal value formatted with selected currency. E.g. US$500"
                              },
                              "weighted_value": {
                                "type": "number",
                                "description": "Probability times deal value. Probability can either be deal probability or if not set, then stage probability."
                              },
                              "formatted_weighted_value": {
                                "type": "string",
                                "description": "The weighted_value formatted with selected currency. E.g. US$500"
                              },
                              "weighted_value_currency": {
                                "type": "string",
                                "description": "The currency associated with the deal"
                              },
                              "rotten_time": {
                                "type": "string",
                                "nullable": true,
                                "description": "The date and time of changing the deal status as rotten"
                              },
                              "owner_name": {
                                "type": "string",
                                "description": "The name of the deal owner"
                              },
                              "cc_email": {
                                "type": "string",
                                "description": "The BCC email of the deal"
                              },
                              "org_hidden": {
                                "type": "boolean",
                                "description": "If the organization that is associated with the deal is hidden or not"
                              },
                              "person_hidden": {
                                "type": "boolean",
                                "description": "If the person that is associated with the deal is hidden or not"
                              }
                            }
                          }
                        ]
                      },
                      "description": "The array of deals"
                    },
                    "additional_data": {
                      "description": "The additional data of the list",
                      "type": "object",
                      "properties": {
                        "start": {
                          "type": "integer",
                          "description": "Pagination start"
                        },
                        "limit": {
                          "type": "integer",
                          "description": "Items shown per page"
                        },
                        "more_items_in_collection": {
                          "type": "boolean",
                          "description": "If there are more list items in the collection than displayed or not"
                        }
                      }
                    }
                  }
                },
                "example": {
                  "success": true,
                  "data": [
                    {
                      "id": 1,
                      "creator_user_id": 123,
                      "user_id": 456,
                      "person_id": 1,
                      "org_id": 2,
                      "stage_id": 2,
                      "title": "Deal One",
                      "value": 5000,
                      "currency": "EUR",
                      "add_time": "2019-05-29 04:21:51",
                      "update_time": "2019-05-29 04:21:51",
                      "stage_change_time": "2019-11-28 15:41:22",
                      "active": true,
                      "deleted": false,
                      "status": "open",
                      "probability": null,
                      "next_activity_date": "2019-11-29",
                      "next_activity_time": "11:30:00",
                      "next_activity_id": 128,
                      "last_activity_id": null,
                      "last_activity_date": null,
                      "lost_reason": null,
                      "visible_to": "1",
                      "close_time": null,
                      "pipeline_id": 1,
                      "won_time": "2019-11-27 11:40:36",
                      "first_won_time": "2019-11-27 11:40:36",
                      "lost_time": "2019-11-27 11:40:36",
                      "products_count": 0,
                      "files_count": 0,
                      "notes_count": 2,
                      "followers_count": 0,
                      "email_messages_count": 4,
                      "activities_count": 1,
                      "done_activities_count": 0,
                      "undone_activities_count": 1,
                      "participants_count": 1,
                      "expected_close_date": "2019-06-29",
                      "last_incoming_mail_time": "2019-05-29 18:21:42",
                      "last_outgoing_mail_time": "2019-05-30 03:45:35",
                      "label": 11,
                      "stage_order_nr": 2,
                      "person_name": "Person",
                      "org_name": "Organization",
                      "next_activity_subject": "Call",
                      "next_activity_type": "call",
                      "next_activity_duration": "00:30:00",
                      "next_activity_note": "Note content",
                      "formatted_value": "€5,000",
                      "weighted_value": 5000,
                      "formatted_weighted_value": "€5,000",
                      "weighted_value_currency": "EUR",
                      "rotten_time": null,
                      "owner_name": "Creator",
                      "cc_email": "company+deal1@pipedrivemail.com",
                      "org_hidden": false,
                      "person_hidden": false
                    }
                  ],
                  "additional_data": {
                    "pagination": {
                      "start": 0,
                      "limit": 100,
                      "more_items_in_collection": false
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{id}": {
      "get": {
        "summary": "Get details of a subscription",
        "description": "Returns details of an installment or a recurring subscription.",
        "operationId": "getSubscription",
        "tags": [ "Subscriptions" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the subscription",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "subscriptionsId",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "description": "The ID of the subscription"
                            },
                            "user_id": {
                              "type": "integer",
                              "description": "The ID of the user who created the subscription"
                            },
                            "deal_id": {
                              "type": "integer",
                              "description": "The ID of the deal this subscription is associated with"
                            },
                            "description": {
                              "type": "string",
                              "description": "The description of the recurring subscription"
                            },
                            "is_active": {
                              "type": "boolean",
                              "description": "The subscription status"
                            },
                            "cycles_count": {
                              "type": "integer",
                              "description": "Shows how many payments a recurring subscription has"
                            },
                            "cycle_amount": {
                              "type": "integer",
                              "description": "The amount of each payment"
                            },
                            "infinite": {
                              "type": "boolean",
                              "description": "Indicates that the recurring subscription will last until it is manually canceled or deleted"
                            },
                            "currency": {
                              "type": "string",
                              "description": "The currency of the subscription"
                            },
                            "cadence_type": {
                              "type": "string",
                              "description": "The interval between payments"
                            },
                            "start_date": {
                              "type": "string",
                              "format": "date",
                              "description": "The start date of the recurring subscription"
                            },
                            "end_date": {
                              "type": "string",
                              "format": "date",
                              "description": "The end date of the subscription"
                            },
                            "lifetime_value": {
                              "type": "number",
                              "format": "double",
                              "description": "The total value of all payments"
                            },
                            "final_status": {
                              "type": "string",
                              "nullable": true,
                              "description": "The final status of the subscription"
                            },
                            "add_time": {
                              "type": "string",
                              "format": "datetime",
                              "description": "The creation time of the subscription"
                            },
                            "update_time": {
                              "type": "string",
                              "format": "datetime",
                              "description": "The update time of the subscription"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "success": true,
                  "data": {
                    "id": 21,
                    "user_id": 10382754,
                    "deal_id": 1121,
                    "is_active": true,
                    "cycle_amount": 100,
                    "cycles_count": 15,
                    "infinite": true,
                    "currency": "USD",
                    "start_date": "2020-10-20",
                    "end_date": "2022-01-20",
                    "description": "pizza delivery",
                    "add_time": "2020-07-07 08:32:57",
                    "update_time": "2020-07-07 08:32:57",
                    "lifetime_value": 1504.5,
                    "cadence_type": "monthly",
                    "final_status": null
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a subscription",
        "description": "Marks an installment or a recurring subscription as deleted.",
        "operationId": "deleteSubscription",
        "tags": [ "Subscriptions" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the subscription",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "subscriptionsId",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "description": "The ID of the subscription"
                            },
                            "user_id": {
                              "type": "integer",
                              "description": "The ID of the user who created the subscription"
                            },
                            "deal_id": {
                              "type": "integer",
                              "description": "The ID of the deal this subscription is associated with"
                            },
                            "description": {
                              "type": "string",
                              "description": "The description of the recurring subscription"
                            },
                            "is_active": {
                              "type": "boolean",
                              "description": "The subscription status"
                            },
                            "cycles_count": {
                              "type": "integer",
                              "description": "Shows how many payments a recurring subscription has"
                            },
                            "cycle_amount": {
                              "type": "integer",
                              "description": "The amount of each payment"
                            },
                            "infinite": {
                              "type": "boolean",
                              "description": "Indicates that the recurring subscription will last until it is manually canceled or deleted"
                            },
                            "currency": {
                              "type": "string",
                              "description": "The currency of the subscription"
                            },
                            "cadence_type": {
                              "type": "string",
                              "description": "The interval between payments"
                            },
                            "start_date": {
                              "type": "string",
                              "format": "date",
                              "description": "The start date of the recurring subscription"
                            },
                            "end_date": {
                              "type": "string",
                              "format": "date",
                              "description": "The end date of the subscription"
                            },
                            "lifetime_value": {
                              "type": "number",
                              "format": "double",
                              "description": "The total value of all payments"
                            },
                            "final_status": {
                              "type": "string",
                              "nullable": true,
                              "description": "The final status of the subscription"
                            },
                            "add_time": {
                              "type": "string",
                              "format": "datetime",
                              "description": "The creation time of the subscription"
                            },
                            "update_time": {
                              "type": "string",
                              "format": "datetime",
                              "description": "The update time of the subscription"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "success": true,
                  "data": {
                    "id": 21,
                    "user_id": 10382754,
                    "deal_id": 1121,
                    "is_active": true,
                    "cycle_amount": 100,
                    "cycles_count": 15,
                    "infinite": true,
                    "currency": "USD",
                    "start_date": "2020-10-20",
                    "end_date": "2022-01-20",
                    "description": "pizza delivery",
                    "add_time": "2020-07-07 08:32:57",
                    "update_time": "2020-07-07 08:32:57",
                    "lifetime_value": 1504.5,
                    "cadence_type": "monthly",
                    "final_status": null
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/find/{dealId}": {
      "get": {
        "summary": "Find subscription by deal",
        "description": "Returns details of an installment or a recurring subscription by the deal ID.",
        "operationId": "findSubscriptionByDeal",
        "tags": [ "Subscriptions" ],
        "parameters": [
          {
            "in": "path",
            "name": "dealId",
            "description": "The ID of the deal",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "subscriptionsId",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "description": "The ID of the subscription"
                            },
                            "user_id": {
                              "type": "integer",
                              "description": "The ID of the user who created the subscription"
                            },
                            "deal_id": {
                              "type": "integer",
                              "description": "The ID of the deal this subscription is associated with"
                            },
                            "description": {
                              "type": "string",
                              "description": "The description of the recurring subscription"
                            },
                            "is_active": {
                              "type": "boolean",
                              "description": "The subscription status"
                            },
                            "cycles_count": {
                              "type": "integer",
                              "description": "Shows how many payments a recurring subscription has"
                            },
                            "cycle_amount": {
                              "type": "integer",
                              "description": "The amount of each payment"
                            },
                            "infinite": {
                              "type": "boolean",
                              "description": "Indicates that the recurring subscription will last until it is manually canceled or deleted"
                            },
                            "currency": {
                              "type": "string",
                              "description": "The currency of the subscription"
                            },
                            "cadence_type": {
                              "type": "string",
                              "description": "The interval between payments"
                            },
                            "start_date": {
                              "type": "string",
                              "format": "date",
                              "description": "The start date of the recurring subscription"
                            },
                            "end_date": {
                              "type": "string",
                              "format": "date",
                              "description": "The end date of the subscription"
                            },
                            "lifetime_value": {
                              "type": "number",
                              "format": "double",
                              "description": "The total value of all payments"
                            },
                            "final_status": {
                              "type": "string",
                              "nullable": true,
                              "description": "The final status of the subscription"
                            },
                            "add_time": {
                              "type": "string",
                              "format": "datetime",
                              "description": "The creation time of the subscription"
                            },
                            "update_time": {
                              "type": "string",
                              "format": "datetime",
                              "description": "The update time of the subscription"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "success": true,
                  "data": {
                    "id": 21,
                    "user_id": 10382754,
                    "deal_id": 1121,
                    "is_active": true,
                    "cycle_amount": 100,
                    "cycles_count": 15,
                    "infinite": true,
                    "currency": "USD",
                    "start_date": "2020-10-20",
                    "end_date": "2022-01-20",
                    "description": "pizza delivery",
                    "add_time": "2020-07-07 08:32:57",
                    "update_time": "2020-07-07 08:32:57",
                    "lifetime_value": 1504.5,
                    "cadence_type": "monthly",
                    "final_status": null
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{id}/payments": {
      "get": {
        "summary": "Get all payments of a subscription",
        "description": "Returns all payments of an installment or recurring subscription.",
        "operationId": "getSubscriptionPayments",
        "tags": [ "Subscriptions" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the subscription",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "payment",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer",
                                "description": "The ID of the payment"
                              },
                              "subscription_id": {
                                "type": "integer",
                                "description": "The ID of the subscription this payment is associated with"
                              },
                              "deal_id": {
                                "type": "integer",
                                "description": "The ID of the deal this payment is associated with"
                              },
                              "is_active": {
                                "type": "boolean",
                                "description": "The payment status"
                              },
                              "amount": {
                                "type": "number",
                                "format": "double",
                                "description": "The payment amount"
                              },
                              "currency": {
                                "type": "string",
                                "description": "The currency of the payment"
                              },
                              "change_amount": {
                                "type": "number",
                                "format": "double",
                                "description": "The difference between the amount of the current payment and the previous payment. The value can be either positive or negative."
                              },
                              "due_at": {
                                "type": "string",
                                "format": "date",
                                "description": "The date when payment occurs"
                              },
                              "revenue_movement_type": {
                                "type": "string",
                                "enum": [
                                  "new",
                                  "recurring",
                                  "expansion",
                                  "contraction",
                                  "none",
                                  "churn"
                                ],
                                "description": "Represents the movement of revenue in comparison with the previous payment. Possible values are: `New` - first payment of the subscription. `Recurring` - no movement. `Expansion` - current payment amount > previous payment amount. `Contraction` - current payment amount < previous payment amount. `Churn` - last payment of the subscription."
                              },
                              "payment_type": {
                                "type": "string",
                                "enum": [
                                  "recurring",
                                  "additional",
                                  "installment"
                                ],
                                "description": "The type of the payment. Possible values are: `Recurring` - payments occur over fixed intervals of time, `Additional` - extra payment not the recurring payment of the recurring subscription, `Installment` - payment of the installment subscription."
                              },
                              "description": {
                                "type": "string",
                                "description": "The description of the payment"
                              },
                              "add_time": {
                                "type": "string",
                                "format": "datetime",
                                "description": "The creation time of the payment"
                              },
                              "update_time": {
                                "type": "string",
                                "format": "datetime",
                                "description": "The update time of the payment"
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "success": true,
                  "data": [
                    {
                      "id": 59,
                      "subscription_id": 22,
                      "deal_id": 35,
                      "is_active": true,
                      "amount": 1000,
                      "currency": "usd",
                      "change_amount": 1000,
                      "due_at": "2020-10-05",
                      "revenue_movement_type": "new",
                      "payment_type": "recurring",
                      "description": "",
                      "add_time": "2020-07-30 13:54:59",
                      "update_time": "2020-07-30 13:54:59"
                    },
                    {
                      "id": 62,
                      "subscription_id": 22,
                      "deal_id": 35,
                      "is_active": true,
                      "amount": 100,
                      "currency": "usd",
                      "change_amount": 0,
                      "due_at": "2020-10-05",
                      "revenue_movement_type": "none",
                      "payment_type": "additional",
                      "description": "setup fee",
                      "add_time": "2020-07-30 13:54:59",
                      "update_time": "2020-07-30 13:54:59"
                    },
                    {
                      "id": 60,
                      "subscription_id": 22,
                      "deal_id": 35,
                      "is_active": true,
                      "amount": 1000,
                      "currency": "usd",
                      "change_amount": 0,
                      "due_at": "2020-11-05",
                      "revenue_movement_type": "recurring",
                      "payment_type": "recurring",
                      "description": "",
                      "add_time": "2020-07-30 13:54:59",
                      "update_time": "2020-07-30 13:54:59"
                    },
                    {
                      "id": 61,
                      "subscription_id": 22,
                      "deal_id": 35,
                      "is_active": true,
                      "amount": 0,
                      "currency": "usd",
                      "change_amount": -1000,
                      "due_at": "2020-12-05",
                      "revenue_movement_type": "churn",
                      "payment_type": "recurring",
                      "description": "",
                      "add_time": "2020-07-30 13:54:59",
                      "update_time": "2020-07-30 13:54:59"
                    },
                    {
                      "id": 63,
                      "subscription_id": 22,
                      "deal_id": 35,
                      "is_active": true,
                      "amount": 150,
                      "currency": "usd",
                      "change_amount": 0,
                      "due_at": "2020-12-05",
                      "revenue_movement_type": "none",
                      "payment_type": "additional",
                      "description": "cancelation fee",
                      "add_time": "2020-07-30 13:54:59",
                      "update_time": "2020-07-30 13:54:59"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/recurring": {
      "post": {
        "summary": "Add a recurring subscription",
        "description": "Adds a new recurring subscription.",
        "operationId": "addRecurringSubscription",
        "tags": [ "Subscriptions" ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "addRecurringSubscriptionRequest",
                "type": "object",
                "required": [
                  "deal_id",
                  "currency",
                  "cadence_type",
                  "start_date",
                  "cycle_amount"
                ],
                "properties": {
                  "deal_id": {
                    "type": "integer",
                    "description": "The ID of the deal this recurring subscription is associated with"
                  },
                  "currency": {
                    "type": "string",
                    "description": "The currency of the recurring subscription. Accepts a 3-character currency code."
                  },
                  "description": {
                    "type": "string",
                    "description": "The description of the recurring subscription"
                  },
                  "cadence_type": {
                    "type": "string",
                    "enum": [ "weekly", "monthly", "quarterly", "yearly" ],
                    "description": "The interval between payments"
                  },
                  "cycles_count": {
                    "type": "integer",
                    "description": "Shows how many payments the subscription has. Note that one field must be set: `cycles_count` or `infinite`. If `cycles_count` is set, then `cycle_amount` and `start_date` are also required."
                  },
                  "cycle_amount": {
                    "type": "integer",
                    "description": "The amount of each payment"
                  },
                  "start_date": {
                    "type": "string",
                    "format": "date",
                    "description": "The start date of the recurring subscription. Format: YYYY-MM-DD"
                  },
                  "infinite": {
                    "type": "boolean",
                    "description": "This indicates that the recurring subscription will last until it's manually canceled or deleted. Note that only one field must be set: `cycles_count` or `infinite`."
                  },
                  "payments": {
                    "type": "array",
                    "items": { "type": "object" },
                    "description": "Array of additional payments. It requires a minimum structure as follows: [{ amount:SUM, description:DESCRIPTION, due_at:PAYMENT_DATE }]. Replace SUM with a payment amount, DESCRIPTION with an explanation string, PAYMENT_DATE with a date (format YYYY-MM-DD)."
                  },
                  "update_deal_value": {
                    "type": "boolean",
                    "description": "Indicates that the deal value must be set to recurring subscription's MRR value"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "subscriptionsId",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "description": "The ID of the subscription"
                            },
                            "user_id": {
                              "type": "integer",
                              "description": "The ID of the user who created the subscription"
                            },
                            "deal_id": {
                              "type": "integer",
                              "description": "The ID of the deal this subscription is associated with"
                            },
                            "description": {
                              "type": "string",
                              "description": "The description of the recurring subscription"
                            },
                            "is_active": {
                              "type": "boolean",
                              "description": "The subscription status"
                            },
                            "cycles_count": {
                              "type": "integer",
                              "description": "Shows how many payments a recurring subscription has"
                            },
                            "cycle_amount": {
                              "type": "integer",
                              "description": "The amount of each payment"
                            },
                            "infinite": {
                              "type": "boolean",
                              "description": "Indicates that the recurring subscription will last until it is manually canceled or deleted"
                            },
                            "currency": {
                              "type": "string",
                              "description": "The currency of the subscription"
                            },
                            "cadence_type": {
                              "type": "string",
                              "description": "The interval between payments"
                            },
                            "start_date": {
                              "type": "string",
                              "format": "date",
                              "description": "The start date of the recurring subscription"
                            },
                            "end_date": {
                              "type": "string",
                              "format": "date",
                              "description": "The end date of the subscription"
                            },
                            "lifetime_value": {
                              "type": "number",
                              "format": "double",
                              "description": "The total value of all payments"
                            },
                            "final_status": {
                              "type": "string",
                              "nullable": true,
                              "description": "The final status of the subscription"
                            },
                            "add_time": {
                              "type": "string",
                              "format": "datetime",
                              "description": "The creation time of the subscription"
                            },
                            "update_time": {
                              "type": "string",
                              "format": "datetime",
                              "description": "The update time of the subscription"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "success": true,
                  "data": {
                    "id": 21,
                    "user_id": 10382754,
                    "deal_id": 1121,
                    "is_active": true,
                    "cycle_amount": 100,
                    "cycles_count": 15,
                    "infinite": true,
                    "currency": "USD",
                    "start_date": "2020-10-20",
                    "end_date": "2022-01-20",
                    "description": "pizza delivery",
                    "add_time": "2020-07-07 08:32:57",
                    "update_time": "2020-07-07 08:32:57",
                    "lifetime_value": 1504.5,
                    "cadence_type": "monthly",
                    "final_status": null
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/installment": {
      "post": {
        "summary": "Add an installment subscription",
        "description": "Adds a new installment subscription.",
        "operationId": "addSubscriptionInstallment",
        "tags": [ "Subscriptions" ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "addSubscriptionInstallmentRequest",
                "type": "object",
                "required": [ "deal_id", "currency", "payments" ],
                "properties": {
                  "deal_id": {
                    "type": "integer",
                    "description": "The ID of the deal this installment subscription is associated with"
                  },
                  "currency": {
                    "type": "string",
                    "description": "The currency of the installment subscription. Accepts a 3-character currency code."
                  },
                  "payments": {
                    "type": "array",
                    "items": { "type": "object" },
                    "description": "Array of payments. It requires a minimum structure as follows: [{ amount:SUM, description:DESCRIPTION, due_at:PAYMENT_DATE }]. Replace SUM with a payment amount, DESCRIPTION with an explanation string, PAYMENT_DATE with a date (format YYYY-MM-DD)."
                  },
                  "update_deal_value": {
                    "type": "boolean",
                    "description": "Indicates that the deal value must be set to the installment subscription's total value"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "subscriptionsId",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "description": "The ID of the subscription"
                            },
                            "user_id": {
                              "type": "integer",
                              "description": "The ID of the user who created the subscription"
                            },
                            "deal_id": {
                              "type": "integer",
                              "description": "The ID of the deal this subscription is associated with"
                            },
                            "description": {
                              "type": "string",
                              "description": "The description of the recurring subscription"
                            },
                            "is_active": {
                              "type": "boolean",
                              "description": "The subscription status"
                            },
                            "cycles_count": {
                              "type": "integer",
                              "description": "Shows how many payments a recurring subscription has"
                            },
                            "cycle_amount": {
                              "type": "integer",
                              "description": "The amount of each payment"
                            },
                            "infinite": {
                              "type": "boolean",
                              "description": "Indicates that the recurring subscription will last until it is manually canceled or deleted"
                            },
                            "currency": {
                              "type": "string",
                              "description": "The currency of the subscription"
                            },
                            "cadence_type": {
                              "type": "string",
                              "description": "The interval between payments"
                            },
                            "start_date": {
                              "type": "string",
                              "format": "date",
                              "description": "The start date of the recurring subscription"
                            },
                            "end_date": {
                              "type": "string",
                              "format": "date",
                              "description": "The end date of the subscription"
                            },
                            "lifetime_value": {
                              "type": "number",
                              "format": "double",
                              "description": "The total value of all payments"
                            },
                            "final_status": {
                              "type": "string",
                              "nullable": true,
                              "description": "The final status of the subscription"
                            },
                            "add_time": {
                              "type": "string",
                              "format": "datetime",
                              "description": "The creation time of the subscription"
                            },
                            "update_time": {
                              "type": "string",
                              "format": "datetime",
                              "description": "The update time of the subscription"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "success": true,
                  "data": {
                    "id": 21,
                    "user_id": 10382754,
                    "deal_id": 1121,
                    "is_active": true,
                    "cycle_amount": 0,
                    "cycles_count": 0,
                    "infinite": false,
                    "currency": "USD",
                    "start_date": "2020-10-20",
                    "end_date": "2022-01-20",
                    "description": "pizza delivery",
                    "add_time": "2020-07-07 08:32:57",
                    "update_time": "2020-07-07 08:32:57",
                    "lifetime_value": 250,
                    "cadence_type": "custom",
                    "final_status": null
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/recurring/{id}": {
      "put": {
        "summary": "Update a recurring subscription",
        "description": "Updates a recurring subscription.",
        "operationId": "updateRecurringSubscription",
        "tags": [ "Subscriptions" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the subscription",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "updateRecurringSubscriptionRequest",
                "type": "object",
                "required": [ "id", "effective_date" ],
                "properties": {
                  "description": {
                    "type": "string",
                    "description": "The description of the recurring subscription"
                  },
                  "cycle_amount": {
                    "type": "integer",
                    "description": "The amount of each payment"
                  },
                  "payments": {
                    "type": "array",
                    "items": { "type": "object" },
                    "description": "Array of additional payments. It requires a minimum structure as follows: [{ amount:SUM, description:DESCRIPTION, due_at:PAYMENT_DATE }]. Replace SUM with a payment amount, DESCRIPTION with an explanation string, PAYMENT_DATE with a date (format YYYY-MM-DD)."
                  },
                  "update_deal_value": {
                    "type": "boolean",
                    "description": "Indicates that the deal value must be set to recurring subscription's MRR value"
                  },
                  "effective_date": {
                    "type": "string",
                    "format": "date",
                    "description": "All payments after that date will be affected. Format: YYYY-MM-DD"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "subscriptionsId",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "description": "The ID of the subscription"
                            },
                            "user_id": {
                              "type": "integer",
                              "description": "The ID of the user who created the subscription"
                            },
                            "deal_id": {
                              "type": "integer",
                              "description": "The ID of the deal this subscription is associated with"
                            },
                            "description": {
                              "type": "string",
                              "description": "The description of the recurring subscription"
                            },
                            "is_active": {
                              "type": "boolean",
                              "description": "The subscription status"
                            },
                            "cycles_count": {
                              "type": "integer",
                              "description": "Shows how many payments a recurring subscription has"
                            },
                            "cycle_amount": {
                              "type": "integer",
                              "description": "The amount of each payment"
                            },
                            "infinite": {
                              "type": "boolean",
                              "description": "Indicates that the recurring subscription will last until it is manually canceled or deleted"
                            },
                            "currency": {
                              "type": "string",
                              "description": "The currency of the subscription"
                            },
                            "cadence_type": {
                              "type": "string",
                              "description": "The interval between payments"
                            },
                            "start_date": {
                              "type": "string",
                              "format": "date",
                              "description": "The start date of the recurring subscription"
                            },
                            "end_date": {
                              "type": "string",
                              "format": "date",
                              "description": "The end date of the subscription"
                            },
                            "lifetime_value": {
                              "type": "number",
                              "format": "double",
                              "description": "The total value of all payments"
                            },
                            "final_status": {
                              "type": "string",
                              "nullable": true,
                              "description": "The final status of the subscription"
                            },
                            "add_time": {
                              "type": "string",
                              "format": "datetime",
                              "description": "The creation time of the subscription"
                            },
                            "update_time": {
                              "type": "string",
                              "format": "datetime",
                              "description": "The update time of the subscription"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "success": true,
                  "data": {
                    "id": 21,
                    "user_id": 10382754,
                    "deal_id": 1121,
                    "is_active": true,
                    "cycle_amount": 100,
                    "cycles_count": 15,
                    "infinite": true,
                    "currency": "USD",
                    "start_date": "2020-10-20",
                    "end_date": "2022-01-20",
                    "description": "pizza delivery",
                    "add_time": "2020-07-07 08:32:57",
                    "update_time": "2020-07-07 08:32:57",
                    "lifetime_value": 1504.5,
                    "cadence_type": "monthly",
                    "final_status": null
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/installment/{id}": {
      "put": {
        "summary": "Update an installment subscription",
        "description": "Updates an installment subscription.",
        "operationId": "updateSubscriptionInstallment",
        "tags": [ "Subscriptions" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the subscription",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "updateSubscriptionInstallmentRequest",
                "type": "object",
                "required": [ "id", "payments" ],
                "properties": {
                  "payments": {
                    "type": "array",
                    "items": { "type": "object" },
                    "description": "Array of payments. It requires a minimum structure as follows: [{ amount:SUM, description:DESCRIPTION, due_at:PAYMENT_DATE }]. Replace SUM with a payment amount, DESCRIPTION with a explanation string, PAYMENT_DATE with a date (format YYYY-MM-DD)."
                  },
                  "update_deal_value": {
                    "type": "boolean",
                    "description": "Indicates that the deal value must be set to installment subscription's total value"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "subscriptionsId",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "description": "The ID of the subscription"
                            },
                            "user_id": {
                              "type": "integer",
                              "description": "The ID of the user who created the subscription"
                            },
                            "deal_id": {
                              "type": "integer",
                              "description": "The ID of the deal this subscription is associated with"
                            },
                            "description": {
                              "type": "string",
                              "description": "The description of the recurring subscription"
                            },
                            "is_active": {
                              "type": "boolean",
                              "description": "The subscription status"
                            },
                            "cycles_count": {
                              "type": "integer",
                              "description": "Shows how many payments a recurring subscription has"
                            },
                            "cycle_amount": {
                              "type": "integer",
                              "description": "The amount of each payment"
                            },
                            "infinite": {
                              "type": "boolean",
                              "description": "Indicates that the recurring subscription will last until it is manually canceled or deleted"
                            },
                            "currency": {
                              "type": "string",
                              "description": "The currency of the subscription"
                            },
                            "cadence_type": {
                              "type": "string",
                              "description": "The interval between payments"
                            },
                            "start_date": {
                              "type": "string",
                              "format": "date",
                              "description": "The start date of the recurring subscription"
                            },
                            "end_date": {
                              "type": "string",
                              "format": "date",
                              "description": "The end date of the subscription"
                            },
                            "lifetime_value": {
                              "type": "number",
                              "format": "double",
                              "description": "The total value of all payments"
                            },
                            "final_status": {
                              "type": "string",
                              "nullable": true,
                              "description": "The final status of the subscription"
                            },
                            "add_time": {
                              "type": "string",
                              "format": "datetime",
                              "description": "The creation time of the subscription"
                            },
                            "update_time": {
                              "type": "string",
                              "format": "datetime",
                              "description": "The update time of the subscription"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "success": true,
                  "data": {
                    "id": 21,
                    "user_id": 10382754,
                    "deal_id": 1121,
                    "is_active": true,
                    "cycle_amount": 0,
                    "cycles_count": 0,
                    "infinite": false,
                    "currency": "USD",
                    "start_date": "2020-10-20",
                    "end_date": "2022-01-20",
                    "description": "pizza delivery",
                    "add_time": "2020-07-07 08:32:57",
                    "update_time": "2020-07-07 08:32:57",
                    "lifetime_value": 250,
                    "cadence_type": "custom",
                    "final_status": null
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/recurring/{id}/cancel": {
      "put": {
        "summary": "Cancel a recurring subscription",
        "description": "Cancels a recurring subscription.",
        "operationId": "cancelRecurringSubscription",
        "tags": [ "Subscriptions" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the subscription",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "cancelRecurringSubscriptionRequest",
                "type": "object",
                "required": [ "id" ],
                "properties": {
                  "end_date": {
                    "type": "string",
                    "format": "date",
                    "description": "The subscription termination date. All payments after specified date will be deleted. Default value is the current date."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "subscriptionsId",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "description": "The ID of the subscription"
                            },
                            "user_id": {
                              "type": "integer",
                              "description": "The ID of the user who created the subscription"
                            },
                            "deal_id": {
                              "type": "integer",
                              "description": "The ID of the deal this subscription is associated with"
                            },
                            "description": {
                              "type": "string",
                              "description": "The description of the recurring subscription"
                            },
                            "is_active": {
                              "type": "boolean",
                              "description": "The subscription status"
                            },
                            "cycles_count": {
                              "type": "integer",
                              "description": "Shows how many payments a recurring subscription has"
                            },
                            "cycle_amount": {
                              "type": "integer",
                              "description": "The amount of each payment"
                            },
                            "infinite": {
                              "type": "boolean",
                              "description": "Indicates that the recurring subscription will last until it is manually canceled or deleted"
                            },
                            "currency": {
                              "type": "string",
                              "description": "The currency of the subscription"
                            },
                            "cadence_type": {
                              "type": "string",
                              "description": "The interval between payments"
                            },
                            "start_date": {
                              "type": "string",
                              "format": "date",
                              "description": "The start date of the recurring subscription"
                            },
                            "end_date": {
                              "type": "string",
                              "format": "date",
                              "description": "The end date of the subscription"
                            },
                            "lifetime_value": {
                              "type": "number",
                              "format": "double",
                              "description": "The total value of all payments"
                            },
                            "final_status": {
                              "type": "string",
                              "nullable": true,
                              "description": "The final status of the subscription"
                            },
                            "add_time": {
                              "type": "string",
                              "format": "datetime",
                              "description": "The creation time of the subscription"
                            },
                            "update_time": {
                              "type": "string",
                              "format": "datetime",
                              "description": "The update time of the subscription"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "success": true,
                  "data": {
                    "id": 21,
                    "user_id": 10382754,
                    "deal_id": 1121,
                    "is_active": true,
                    "cycle_amount": 100,
                    "cycles_count": 15,
                    "infinite": true,
                    "currency": "USD",
                    "start_date": "2020-10-20",
                    "end_date": "2022-01-20",
                    "description": "pizza delivery",
                    "add_time": "2020-07-07 08:32:57",
                    "update_time": "2020-07-07 08:32:57",
                    "lifetime_value": 1504.5,
                    "cadence_type": "monthly",
                    "final_status": null
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "summary": "Get all users",
        "description": "Returns data about all users within the company.",
        "operationId": "getUsers",
        "tags": [ "Users" ],
        "responses": {
          "200": {
            "description": "The list of user objects",
            "content": {
              "application/json": {
                "schema": {
                  "title": "users",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer",
                                "description": "The user ID"
                              },
                              "name": {
                                "type": "string",
                                "description": "The user name"
                              },
                              "default_currency": {
                                "type": "string",
                                "description": "The user default currency"
                              },
                              "locale": {
                                "type": "string",
                                "description": "The user locale"
                              },
                              "lang": {
                                "type": "integer",
                                "description": "The user language ID"
                              },
                              "email": {
                                "type": "string",
                                "description": "The user email"
                              },
                              "phone": {
                                "type": "string",
                                "nullable": true,
                                "description": "The user phone"
                              },
                              "activated": {
                                "type": "boolean",
                                "description": "Boolean that indicates whether the user is activated"
                              },
                              "last_login": {
                                "type": "string",
                                "description": "The last login date and time of the user. Format: YYYY-MM-DD HH:MM:SS"
                              },
                              "created": {
                                "type": "string",
                                "description": "The creation date and time of the user. Format: YYYY-MM-DD HH:MM:SS"
                              },
                              "modified": {
                                "type": "string",
                                "nullable": true,
                                "description": "The last modification date and time of the user. Format: YYYY-MM-DD HH:MM:SS"
                              },
                              "has_created_company": {
                                "type": "boolean",
                                "description": "Boolean that indicates whether the user has created a company"
                              },
                              "access": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "app": {
                                      "type": "string",
                                      "enum": [
                                        "sales",
                                        "projects",
                                        "campaigns",
                                        "global",
                                        "account_settings"
                                      ]
                                    },
                                    "admin": { "type": "boolean" },
                                    "permission_set_id": { "type": "string" }
                                  }
                                }
                              },
                              "active_flag": {
                                "type": "boolean",
                                "description": "Boolean that indicates whether the user is activated"
                              },
                              "timezone_name": {
                                "type": "string",
                                "description": "The user timezone name"
                              },
                              "timezone_offset": {
                                "type": "string",
                                "description": "The user timezone offset"
                              },
                              "role_id": {
                                "type": "integer",
                                "description": "The ID of the user role"
                              },
                              "icon_url": {
                                "type": "string",
                                "nullable": true,
                                "description": "The user icon URL"
                              },
                              "is_you": {
                                "type": "boolean",
                                "description": "Boolean that indicates if the requested user is the same which is logged in (in this case, always true)"
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "success": true,
                  "data": [
                    {
                      "id": 1,
                      "name": "John Doe",
                      "default_currency": "EUR",
                      "locale": "et_EE",
                      "lang": 1,
                      "email": "john@pipedrive.com",
                      "phone": "0000-0001",
                      "activated": true,
                      "last_login": "2019-11-21 08:45:56",
                      "created": "2018-11-13 09:16:26",
                      "modified": "2019-11-21 08:45:56",
                      "has_created_company": true,
                      "access": [
                        {
                          "app": "sales",
                          "admin": true,
                          "permission_set_id": "62cc4d7f-4038-4352-abf3-a8c1c822b631"
                        },
                        {
                          "app": "global",
                          "admin": true,
                          "permission_set_id": "233b7976-39bd-43a9-b305-ef3a2b0998e5"
                        },
                        {
                          "app": "account_settings",
                          "admin": true,
                          "permission_set_id": "982c5ce5-b8ba-4b47-b102-9da024f4b990"
                        }
                      ],
                      "active_flag": true,
                      "timezone_name": "Europe/Berlin",
                      "timezone_offset": "+03:00",
                      "role_id": 1,
                      "icon_url": "https://upload.wikimedia.org/wikipedia/en/thumb/e/e0/WPVG_icon_2016.svg/1024px-WPVG_icon_2016.svg.png",
                      "is_you": true
                    },
                    {
                      "id": 2,
                      "name": "Jane Doe",
                      "default_currency": "EUR",
                      "locale": "et_EE",
                      "lang": 1,
                      "email": "jane@pipedrive.com",
                      "phone": "0000-0002",
                      "activated": true,
                      "last_login": "2019-09-11 11:43:54",
                      "created": "2019-01-22 10:43:47",
                      "modified": "2019-11-21 09:49:50",
                      "has_created_company": false,
                      "access": [
                        {
                          "app": "sales",
                          "admin": false,
                          "permission_set_id": "f07d229d-088a-4144-a40f-1fe64295d180"
                        },
                        {
                          "app": "global",
                          "admin": true,
                          "permission_set_id": "233b7976-39bd-43a9-b305-ef3a2b0998e5"
                        }
                      ],
                      "active_flag": true,
                      "timezone_name": "Europe/Berlin",
                      "timezone_offset": "+03:00",
                      "role_id": 1,
                      "icon_url": null,
                      "is_you": false
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add a new user",
        "description": "Adds a new user to the company, returns the ID upon success.",
        "operationId": "addUser",
        "tags": [ "Users" ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "addUserRequest",
                "type": "object",
                "required": [ "email" ],
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "The email of the user"
                  },
                  "access": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "app": {
                          "type": "string",
                          "enum": [
                            "sales",
                            "projects",
                            "campaigns",
                            "global",
                            "account_settings"
                          ]
                        },
                        "admin": { "type": "boolean" },
                        "permission_set_id": { "type": "string" }
                      },
                      "required": [ "app" ]
                    },
                    "description": "The access given to the user. Each item in the array represents access to a specific app. Optionally may include either admin flag or permission set ID to specify which access to give within the app. If both are omitted, the default access for the corresponding app will be used. It requires structure as follows: `[{ app: 'sales', permission_set_id: '62cc4d7f-4038-4352-abf3-a8c1c822b631' }, { app: 'global', admin: true }, { app: 'account_settings' }]`\n",
                    "default": [ { "app": "sales" } ]
                  },
                  "active_flag": {
                    "type": "boolean",
                    "default": true,
                    "description": "Whether the user is active or not. `false` = Not activated, `true` = Activated"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The data of the user",
            "content": {
              "application/json": {
                "schema": {
                  "title": "user",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "description": "The user ID"
                            },
                            "name": {
                              "type": "string",
                              "description": "The user name"
                            },
                            "default_currency": {
                              "type": "string",
                              "description": "The user default currency"
                            },
                            "locale": {
                              "type": "string",
                              "description": "The user locale"
                            },
                            "lang": {
                              "type": "integer",
                              "description": "The user language ID"
                            },
                            "email": {
                              "type": "string",
                              "description": "The user email"
                            },
                            "phone": {
                              "type": "string",
                              "nullable": true,
                              "description": "The user phone"
                            },
                            "activated": {
                              "type": "boolean",
                              "description": "Boolean that indicates whether the user is activated"
                            },
                            "last_login": {
                              "type": "string",
                              "description": "The last login date and time of the user. Format: YYYY-MM-DD HH:MM:SS"
                            },
                            "created": {
                              "type": "string",
                              "description": "The creation date and time of the user. Format: YYYY-MM-DD HH:MM:SS"
                            },
                            "modified": {
                              "type": "string",
                              "nullable": true,
                              "description": "The last modification date and time of the user. Format: YYYY-MM-DD HH:MM:SS"
                            },
                            "has_created_company": {
                              "type": "boolean",
                              "description": "Boolean that indicates whether the user has created a company"
                            },
                            "access": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "app": {
                                    "type": "string",
                                    "enum": [
                                      "sales",
                                      "projects",
                                      "campaigns",
                                      "global",
                                      "account_settings"
                                    ]
                                  },
                                  "admin": { "type": "boolean" },
                                  "permission_set_id": { "type": "string" }
                                }
                              }
                            },
                            "active_flag": {
                              "type": "boolean",
                              "description": "Boolean that indicates whether the user is activated"
                            },
                            "timezone_name": {
                              "type": "string",
                              "description": "The user timezone name"
                            },
                            "timezone_offset": {
                              "type": "string",
                              "description": "The user timezone offset"
                            },
                            "role_id": {
                              "type": "integer",
                              "description": "The ID of the user role"
                            },
                            "icon_url": {
                              "type": "string",
                              "nullable": true,
                              "description": "The user icon URL"
                            },
                            "is_you": {
                              "type": "boolean",
                              "description": "Boolean that indicates if the requested user is the same which is logged in (in this case, always true)"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "success": true,
                  "data": {
                    "id": 2,
                    "name": "Jane Doe",
                    "default_currency": "EUR",
                    "locale": "et_EE",
                    "lang": 1,
                    "email": "jane@pipedrive.com",
                    "phone": "0000-0002",
                    "activated": true,
                    "last_login": "2019-09-11 11:43:54",
                    "created": "2019-01-22 10:43:47",
                    "modified": "2019-11-21 09:49:50",
                    "has_created_company": false,
                    "access": [
                      {
                        "app": "sales",
                        "admin": false,
                        "permission_set_id": "f07d229d-088a-4144-a40f-1fe64295d180"
                      },
                      {
                        "app": "global",
                        "admin": true,
                        "permission_set_id": "233b7976-39bd-43a9-b305-ef3a2b0998e5"
                      }
                    ],
                    "active_flag": true,
                    "timezone_name": "Europe/Berlin",
                    "timezone_offset": "+03:00",
                    "role_id": 1,
                    "icon_url": null,
                    "is_you": false
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "failResponse",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "If the response is successful or not"
                    },
                    "error": {
                      "type": "string",
                      "description": "The error message"
                    }
                  }
                },
                "example": {
                  "success": false,
                  "error": "You do not have permissions to do this."
                }
              }
            }
          }
        }
      }
    },
    "/users/find": {
      "get": {
        "summary": "Find users by name",
        "description": "Finds users by their name.",
        "operationId": "findUsersByName",
        "tags": [ "Users" ],
        "parameters": [
          {
            "in": "query",
            "name": "term",
            "required": true,
            "schema": { "type": "string" },
            "description": "The search term to look for"
          },
          {
            "in": "query",
            "name": "search_by_email",
            "schema": {
              "title": "numberBooleanDefault0",
              "type": "number",
              "default": 0,
              "enum": [ 0, 1 ]
            },
            "description": "When enabled, the term will only be matched against email addresses of users. Default: `false`"
          }
        ],
        "responses": {
          "200": {
            "description": "The list of user objects",
            "content": {
              "application/json": {
                "schema": {
                  "title": "users",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer",
                                "description": "The user ID"
                              },
                              "name": {
                                "type": "string",
                                "description": "The user name"
                              },
                              "default_currency": {
                                "type": "string",
                                "description": "The user default currency"
                              },
                              "locale": {
                                "type": "string",
                                "description": "The user locale"
                              },
                              "lang": {
                                "type": "integer",
                                "description": "The user language ID"
                              },
                              "email": {
                                "type": "string",
                                "description": "The user email"
                              },
                              "phone": {
                                "type": "string",
                                "nullable": true,
                                "description": "The user phone"
                              },
                              "activated": {
                                "type": "boolean",
                                "description": "Boolean that indicates whether the user is activated"
                              },
                              "last_login": {
                                "type": "string",
                                "description": "The last login date and time of the user. Format: YYYY-MM-DD HH:MM:SS"
                              },
                              "created": {
                                "type": "string",
                                "description": "The creation date and time of the user. Format: YYYY-MM-DD HH:MM:SS"
                              },
                              "modified": {
                                "type": "string",
                                "nullable": true,
                                "description": "The last modification date and time of the user. Format: YYYY-MM-DD HH:MM:SS"
                              },
                              "has_created_company": {
                                "type": "boolean",
                                "description": "Boolean that indicates whether the user has created a company"
                              },
                              "access": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "app": {
                                      "type": "string",
                                      "enum": [
                                        "sales",
                                        "projects",
                                        "campaigns",
                                        "global",
                                        "account_settings"
                                      ]
                                    },
                                    "admin": { "type": "boolean" },
                                    "permission_set_id": { "type": "string" }
                                  }
                                }
                              },
                              "active_flag": {
                                "type": "boolean",
                                "description": "Boolean that indicates whether the user is activated"
                              },
                              "timezone_name": {
                                "type": "string",
                                "description": "The user timezone name"
                              },
                              "timezone_offset": {
                                "type": "string",
                                "description": "The user timezone offset"
                              },
                              "role_id": {
                                "type": "integer",
                                "description": "The ID of the user role"
                              },
                              "icon_url": {
                                "type": "string",
                                "nullable": true,
                                "description": "The user icon URL"
                              },
                              "is_you": {
                                "type": "boolean",
                                "description": "Boolean that indicates if the requested user is the same which is logged in (in this case, always true)"
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "success": true,
                  "data": [
                    {
                      "id": 1,
                      "name": "John Doe",
                      "default_currency": "EUR",
                      "locale": "et_EE",
                      "lang": 1,
                      "email": "john@pipedrive.com",
                      "phone": "0000-0001",
                      "activated": true,
                      "last_login": "2019-11-21 08:45:56",
                      "created": "2018-11-13 09:16:26",
                      "modified": "2019-11-21 08:45:56",
                      "has_created_company": true,
                      "access": [
                        {
                          "app": "sales",
                          "admin": true,
                          "permission_set_id": "62cc4d7f-4038-4352-abf3-a8c1c822b631"
                        },
                        {
                          "app": "global",
                          "admin": true,
                          "permission_set_id": "233b7976-39bd-43a9-b305-ef3a2b0998e5"
                        },
                        {
                          "app": "account_settings",
                          "admin": true,
                          "permission_set_id": "982c5ce5-b8ba-4b47-b102-9da024f4b990"
                        }
                      ],
                      "active_flag": true,
                      "timezone_name": "Europe/Berlin",
                      "timezone_offset": "+03:00",
                      "role_id": 1,
                      "icon_url": "https://upload.wikimedia.org/wikipedia/en/thumb/e/e0/WPVG_icon_2016.svg/1024px-WPVG_icon_2016.svg.png",
                      "is_you": true
                    },
                    {
                      "id": 2,
                      "name": "Jane Doe",
                      "default_currency": "EUR",
                      "locale": "et_EE",
                      "lang": 1,
                      "email": "jane@pipedrive.com",
                      "phone": "0000-0002",
                      "activated": true,
                      "last_login": "2019-09-11 11:43:54",
                      "created": "2019-01-22 10:43:47",
                      "modified": "2019-11-21 09:49:50",
                      "has_created_company": false,
                      "access": [
                        {
                          "app": "sales",
                          "admin": false,
                          "permission_set_id": "f07d229d-088a-4144-a40f-1fe64295d180"
                        },
                        {
                          "app": "global",
                          "admin": true,
                          "permission_set_id": "233b7976-39bd-43a9-b305-ef3a2b0998e5"
                        }
                      ],
                      "active_flag": true,
                      "timezone_name": "Europe/Berlin",
                      "timezone_offset": "+03:00",
                      "role_id": 1,
                      "icon_url": null,
                      "is_you": false
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/users/me": {
      "get": {
        "summary": "Get current user data",
        "description": "Returns data about an authorized user within the company with bound company data: company ID, company name, and domain. Note that the `locale` property means 'Date/number format' in the Pipedrive account settings, not the chosen language.",
        "operationId": "getCurrentUser",
        "tags": [ "Users" ],
        "responses": {
          "200": {
            "description": "The data of the logged in user",
            "content": {
              "application/json": {
                "schema": {
                  "title": "getCurrentUser",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "description": "The user ID"
                                },
                                "name": {
                                  "type": "string",
                                  "description": "The user name"
                                },
                                "default_currency": {
                                  "type": "string",
                                  "description": "The user default currency"
                                },
                                "locale": {
                                  "type": "string",
                                  "description": "The user locale"
                                },
                                "lang": {
                                  "type": "integer",
                                  "description": "The user language ID"
                                },
                                "email": {
                                  "type": "string",
                                  "description": "The user email"
                                },
                                "phone": {
                                  "type": "string",
                                  "nullable": true,
                                  "description": "The user phone"
                                },
                                "activated": {
                                  "type": "boolean",
                                  "description": "Boolean that indicates whether the user is activated"
                                },
                                "last_login": {
                                  "type": "string",
                                  "description": "The last login date and time of the user. Format: YYYY-MM-DD HH:MM:SS"
                                },
                                "created": {
                                  "type": "string",
                                  "description": "The creation date and time of the user. Format: YYYY-MM-DD HH:MM:SS"
                                },
                                "modified": {
                                  "type": "string",
                                  "nullable": true,
                                  "description": "The last modification date and time of the user. Format: YYYY-MM-DD HH:MM:SS"
                                },
                                "has_created_company": {
                                  "type": "boolean",
                                  "description": "Boolean that indicates whether the user has created a company"
                                },
                                "access": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "app": {
                                        "type": "string",
                                        "enum": [
                                          "sales",
                                          "projects",
                                          "campaigns",
                                          "global",
                                          "account_settings"
                                        ]
                                      },
                                      "admin": { "type": "boolean" },
                                      "permission_set_id": { "type": "string" }
                                    }
                                  }
                                },
                                "active_flag": {
                                  "type": "boolean",
                                  "description": "Boolean that indicates whether the user is activated"
                                },
                                "timezone_name": {
                                  "type": "string",
                                  "description": "The user timezone name"
                                },
                                "timezone_offset": {
                                  "type": "string",
                                  "description": "The user timezone offset"
                                },
                                "role_id": {
                                  "type": "integer",
                                  "description": "The ID of the user role"
                                },
                                "icon_url": {
                                  "type": "string",
                                  "nullable": true,
                                  "description": "The user icon URL"
                                },
                                "is_you": {
                                  "type": "boolean",
                                  "description": "Boolean that indicates if the requested user is the same which is logged in (in this case, always true)"
                                }
                              }
                            },
                            {
                              "type": "object",
                              "properties": {
                                "company_id": {
                                  "type": "integer",
                                  "description": "The user company ID"
                                },
                                "company_name": {
                                  "type": "string",
                                  "description": "The user company name"
                                },
                                "company_domain": {
                                  "type": "string",
                                  "description": "The user company domain"
                                },
                                "company_country": {
                                  "type": "string",
                                  "description": "The user company country"
                                },
                                "company_industry": {
                                  "type": "string",
                                  "description": "The user company industry"
                                },
                                "language": {
                                  "type": "object",
                                  "description": "The user language details",
                                  "properties": {
                                    "language_code": {
                                      "type": "string",
                                      "description": "The language code. E.g. en"
                                    },
                                    "country_code": {
                                      "type": "string",
                                      "description": "The country code. E.g. US"
                                    }
                                  }
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "success": true,
                  "data": {
                    "id": 1,
                    "name": "Me",
                    "default_currency": "EUR",
                    "locale": "et_EE",
                    "lang": 1,
                    "email": "me@pipedrive.com",
                    "phone": "0000-0000",
                    "activated": true,
                    "last_login": "2019-11-21 08:45:56",
                    "created": "2018-11-13 09:16:26",
                    "modified": "2019-11-21 08:45:56",
                    "has_created_company": true,
                    "access": [
                      {
                        "app": "sales",
                        "admin": true,
                        "permission_set_id": "62cc4d7f-4038-4352-abf3-a8c1c822b631"
                      },
                      {
                        "app": "global",
                        "admin": true,
                        "permission_set_id": "233b7976-39bd-43a9-b305-ef3a2b0998e5"
                      },
                      {
                        "app": "account_settings",
                        "admin": true,
                        "permission_set_id": "982c5ce5-b8ba-4b47-b102-9da024f4b990"
                      }
                    ],
                    "active_flag": true,
                    "timezone_name": "Europe/Berlin",
                    "timezone_offset": "+03:00",
                    "role_id": 1,
                    "icon_url": "https://upload.wikimedia.org/wikipedia/en/thumb/e/e0/WPVG_icon_2016.svg/1024px-WPVG_icon_2016.svg.png",
                    "is_you": true,
                    "company_id": 54235233,
                    "company_name": "Pipedrive",
                    "company_domain": "pipedrive-12g53f",
                    "company_country": "EE",
                    "company_industry": "IT Services",
                    "language": { "language_code": "en", "country_code": "US" }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "unathorizedResponse",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "If the response is successful or not"
                    },
                    "error": {
                      "type": "string",
                      "description": "The error message"
                    },
                    "errorCode": {
                      "type": "integer",
                      "description": "The response error code"
                    }
                  }
                },
                "example": {
                  "success": false,
                  "error": "unauthorized access",
                  "errorCode": 401
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "summary": "Get one user",
        "description": "Returns data about a specific user within the company.",
        "operationId": "getUser",
        "tags": [ "Users" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the user",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "The data of the user",
            "content": {
              "application/json": {
                "schema": {
                  "title": "user",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "description": "The user ID"
                            },
                            "name": {
                              "type": "string",
                              "description": "The user name"
                            },
                            "default_currency": {
                              "type": "string",
                              "description": "The user default currency"
                            },
                            "locale": {
                              "type": "string",
                              "description": "The user locale"
                            },
                            "lang": {
                              "type": "integer",
                              "description": "The user language ID"
                            },
                            "email": {
                              "type": "string",
                              "description": "The user email"
                            },
                            "phone": {
                              "type": "string",
                              "nullable": true,
                              "description": "The user phone"
                            },
                            "activated": {
                              "type": "boolean",
                              "description": "Boolean that indicates whether the user is activated"
                            },
                            "last_login": {
                              "type": "string",
                              "description": "The last login date and time of the user. Format: YYYY-MM-DD HH:MM:SS"
                            },
                            "created": {
                              "type": "string",
                              "description": "The creation date and time of the user. Format: YYYY-MM-DD HH:MM:SS"
                            },
                            "modified": {
                              "type": "string",
                              "nullable": true,
                              "description": "The last modification date and time of the user. Format: YYYY-MM-DD HH:MM:SS"
                            },
                            "has_created_company": {
                              "type": "boolean",
                              "description": "Boolean that indicates whether the user has created a company"
                            },
                            "access": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "app": {
                                    "type": "string",
                                    "enum": [
                                      "sales",
                                      "projects",
                                      "campaigns",
                                      "global",
                                      "account_settings"
                                    ]
                                  },
                                  "admin": { "type": "boolean" },
                                  "permission_set_id": { "type": "string" }
                                }
                              }
                            },
                            "active_flag": {
                              "type": "boolean",
                              "description": "Boolean that indicates whether the user is activated"
                            },
                            "timezone_name": {
                              "type": "string",
                              "description": "The user timezone name"
                            },
                            "timezone_offset": {
                              "type": "string",
                              "description": "The user timezone offset"
                            },
                            "role_id": {
                              "type": "integer",
                              "description": "The ID of the user role"
                            },
                            "icon_url": {
                              "type": "string",
                              "nullable": true,
                              "description": "The user icon URL"
                            },
                            "is_you": {
                              "type": "boolean",
                              "description": "Boolean that indicates if the requested user is the same which is logged in (in this case, always true)"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "success": true,
                  "data": {
                    "id": 2,
                    "name": "Jane Doe",
                    "default_currency": "EUR",
                    "locale": "et_EE",
                    "lang": 1,
                    "email": "jane@pipedrive.com",
                    "phone": "0000-0002",
                    "activated": true,
                    "last_login": "2019-09-11 11:43:54",
                    "created": "2019-01-22 10:43:47",
                    "modified": "2019-11-21 09:49:50",
                    "has_created_company": false,
                    "access": [
                      {
                        "app": "sales",
                        "admin": false,
                        "permission_set_id": "f07d229d-088a-4144-a40f-1fe64295d180"
                      },
                      {
                        "app": "global",
                        "admin": true,
                        "permission_set_id": "233b7976-39bd-43a9-b305-ef3a2b0998e5"
                      }
                    ],
                    "active_flag": true,
                    "timezone_name": "Europe/Berlin",
                    "timezone_offset": "+03:00",
                    "role_id": 1,
                    "icon_url": null,
                    "is_you": false
                  }
                }
              }
            }
          },
          "404": {
            "description": "User with specified ID does not exist or is inaccessible",
            "content": {
              "application/json": {
                "schema": {
                  "title": "failResponse",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "If the response is successful or not"
                    },
                    "error": {
                      "type": "string",
                      "description": "The error message"
                    }
                  }
                },
                "example": {
                  "success": false,
                  "error": "User not found or not accessible."
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update user details",
        "description": "Updates the properties of a user. Currently, only `active_flag` can be updated.",
        "operationId": "updateUser",
        "tags": [ "Users" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the user",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "updateUserRequest",
                "type": "object",
                "required": [ "active_flag" ],
                "properties": {
                  "active_flag": {
                    "type": "boolean",
                    "description": "Whether the user is active or not. `false` = Not activated, `true` = Activated"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The data of the user",
            "content": {
              "application/json": {
                "schema": {
                  "title": "user",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "description": "The user ID"
                            },
                            "name": {
                              "type": "string",
                              "description": "The user name"
                            },
                            "default_currency": {
                              "type": "string",
                              "description": "The user default currency"
                            },
                            "locale": {
                              "type": "string",
                              "description": "The user locale"
                            },
                            "lang": {
                              "type": "integer",
                              "description": "The user language ID"
                            },
                            "email": {
                              "type": "string",
                              "description": "The user email"
                            },
                            "phone": {
                              "type": "string",
                              "nullable": true,
                              "description": "The user phone"
                            },
                            "activated": {
                              "type": "boolean",
                              "description": "Boolean that indicates whether the user is activated"
                            },
                            "last_login": {
                              "type": "string",
                              "description": "The last login date and time of the user. Format: YYYY-MM-DD HH:MM:SS"
                            },
                            "created": {
                              "type": "string",
                              "description": "The creation date and time of the user. Format: YYYY-MM-DD HH:MM:SS"
                            },
                            "modified": {
                              "type": "string",
                              "nullable": true,
                              "description": "The last modification date and time of the user. Format: YYYY-MM-DD HH:MM:SS"
                            },
                            "has_created_company": {
                              "type": "boolean",
                              "description": "Boolean that indicates whether the user has created a company"
                            },
                            "access": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "app": {
                                    "type": "string",
                                    "enum": [
                                      "sales",
                                      "projects",
                                      "campaigns",
                                      "global",
                                      "account_settings"
                                    ]
                                  },
                                  "admin": { "type": "boolean" },
                                  "permission_set_id": { "type": "string" }
                                }
                              }
                            },
                            "active_flag": {
                              "type": "boolean",
                              "description": "Boolean that indicates whether the user is activated"
                            },
                            "timezone_name": {
                              "type": "string",
                              "description": "The user timezone name"
                            },
                            "timezone_offset": {
                              "type": "string",
                              "description": "The user timezone offset"
                            },
                            "role_id": {
                              "type": "integer",
                              "description": "The ID of the user role"
                            },
                            "icon_url": {
                              "type": "string",
                              "nullable": true,
                              "description": "The user icon URL"
                            },
                            "is_you": {
                              "type": "boolean",
                              "description": "Boolean that indicates if the requested user is the same which is logged in (in this case, always true)"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "success": true,
                  "data": {
                    "id": 2,
                    "name": "Jane Doe",
                    "default_currency": "EUR",
                    "locale": "et_EE",
                    "lang": 1,
                    "email": "jane@pipedrive.com",
                    "phone": "0000-0002",
                    "activated": true,
                    "last_login": "2019-09-11 11:43:54",
                    "created": "2019-01-22 10:43:47",
                    "modified": "2019-11-21 09:49:50",
                    "has_created_company": false,
                    "access": [
                      {
                        "app": "sales",
                        "admin": false,
                        "permission_set_id": "f07d229d-088a-4144-a40f-1fe64295d180"
                      },
                      {
                        "app": "global",
                        "admin": true,
                        "permission_set_id": "233b7976-39bd-43a9-b305-ef3a2b0998e5"
                      }
                    ],
                    "active_flag": true,
                    "timezone_name": "Europe/Berlin",
                    "timezone_offset": "+03:00",
                    "role_id": 1,
                    "icon_url": null,
                    "is_you": false
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "failResponse",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "If the response is successful or not"
                    },
                    "error": {
                      "type": "string",
                      "description": "The error message"
                    }
                  }
                },
                "example": {
                  "success": false,
                  "error": "You do not have permissions to do this."
                }
              }
            }
          },
          "404": {
            "description": "User with specified ID does not exist or is inaccessible",
            "content": {
              "application/json": {
                "schema": {
                  "title": "failResponse",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "If the response is successful or not"
                    },
                    "error": {
                      "type": "string",
                      "description": "The error message"
                    }
                  }
                },
                "example": {
                  "success": false,
                  "error": "User not found or not accessible."
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}/followers": {
      "get": {
        "summary": "List followers of a user",
        "description": "Lists the followers of a specific user.",
        "operationId": "getUserFollowers",
        "tags": [ "Users" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the user",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "The list of user IDs",
            "content": {
              "application/json": {
                "schema": {
                  "title": "userIds",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": { "type": "integer" },
                          "description": "The list of user IDs"
                        }
                      }
                    }
                  ]
                },
                "example": { "success": true, "data": [ 2, 5, 8 ] }
              }
            }
          },
          "403": {
            "description": "Forbidden response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "failResponse",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "If the response is successful or not"
                    },
                    "error": {
                      "type": "string",
                      "description": "The error message"
                    }
                  }
                },
                "example": {
                  "success": false,
                  "error": "You do not have permissions to do this."
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}/permissions": {
      "get": {
        "summary": "List user permissions",
        "description": "Lists aggregated permissions over all assigned permission sets for a user.",
        "operationId": "getUserPermissions",
        "tags": [ "Users" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the user",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "The list of user permissions",
            "content": {
              "application/json": {
                "schema": {
                  "title": "getUserPermissions",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "can_add_custom_fields": {
                              "type": "boolean",
                              "description": "If the user can add custom fields"
                            },
                            "can_add_products": {
                              "type": "boolean",
                              "description": "If the user can add products"
                            },
                            "can_add_prospects_as_leads": {
                              "type": "boolean",
                              "description": "If the user can add prospects as leads"
                            },
                            "can_bulk_edit_items": {
                              "type": "boolean",
                              "description": "If the user can bulk edit items"
                            },
                            "can_change_visibility_of_items": {
                              "type": "boolean",
                              "description": "If the user can change visibility of items"
                            },
                            "can_convert_deals_to_leads": {
                              "type": "boolean",
                              "description": "If the user can convert deals to leads"
                            },
                            "can_create_own_workflow": {
                              "type": "boolean",
                              "description": "If the user can create workflows"
                            },
                            "can_delete_activities": {
                              "type": "boolean",
                              "description": "If the user can delete activities"
                            },
                            "can_delete_custom_fields": {
                              "type": "boolean",
                              "description": "If the user can delete custom fields"
                            },
                            "can_delete_deals": {
                              "type": "boolean",
                              "description": "If the user can delete deals"
                            },
                            "can_edit_custom_fields": {
                              "type": "boolean",
                              "description": "If the user can edit custom fields"
                            },
                            "can_edit_deals_closed_date": {
                              "type": "boolean",
                              "description": "If the user can edit deals' closed date"
                            },
                            "can_edit_products": {
                              "type": "boolean",
                              "description": "If the user can edit products"
                            },
                            "can_edit_shared_filters": {
                              "type": "boolean",
                              "description": "If the user can edit shared filters"
                            },
                            "can_export_data_from_lists": {
                              "type": "boolean",
                              "description": "If the user can export data from item lists"
                            },
                            "can_follow_other_users": {
                              "type": "boolean",
                              "description": "If the user can follow other users"
                            },
                            "can_merge_deals": {
                              "type": "boolean",
                              "description": "If the user can merge deals"
                            },
                            "can_merge_organizations": {
                              "type": "boolean",
                              "description": "If the user can merge organizations"
                            },
                            "can_merge_people": {
                              "type": "boolean",
                              "description": "If the user can merge people"
                            },
                            "can_modify_labels": {
                              "type": "boolean",
                              "description": "If the user can modify labels"
                            },
                            "can_see_company_wide_statistics": {
                              "type": "boolean",
                              "description": "If the user can see company-wide statistics"
                            },
                            "can_see_deals_list_summary": {
                              "type": "boolean",
                              "description": "If the user can see the summary on the deals page"
                            },
                            "can_see_hidden_items_names": {
                              "type": "boolean",
                              "description": "If the user can see the names of hidden items"
                            },
                            "can_see_other_users": {
                              "type": "boolean",
                              "description": "If the user can see other users"
                            },
                            "can_see_other_users_statistics": {
                              "type": "boolean",
                              "description": "If the user can see other users' statistics"
                            },
                            "can_see_security_dashboard": {
                              "type": "boolean",
                              "description": "If the user can see security dashboard"
                            },
                            "can_share_filters": {
                              "type": "boolean",
                              "description": "If the user can share filters"
                            },
                            "can_share_insights": {
                              "type": "boolean",
                              "description": "If the user can share insights"
                            },
                            "can_use_api": {
                              "type": "boolean",
                              "description": "If the user can use API"
                            },
                            "can_use_email_tracking": {
                              "type": "boolean",
                              "description": "If the user can use email tracking"
                            },
                            "can_use_import": {
                              "type": "boolean",
                              "description": "If the user can use import"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "success": true,
                  "data": {
                    "can_add_custom_fields": true,
                    "can_bulk_edit_items": true,
                    "can_change_visibility_of_items": true,
                    "can_create_own_workflow": true
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}/roleAssignments": {
      "get": {
        "summary": "List role assignments",
        "description": "Lists role assignments for a user.",
        "operationId": "getUserRoleAssignments",
        "tags": [ "Users" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the user",
            "required": true,
            "schema": { "type": "integer" }
          },
          {
            "in": "query",
            "name": "start",
            "description": "Pagination start",
            "schema": { "type": "integer", "default": 0 }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Items shown per page",
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "List assignments for a role",
            "content": {
              "application/json": {
                "schema": {
                  "title": "getUserRoleAssignments",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "title": "roleAssignment",
                            "allOf": [
                              {
                                "title": "baseRoleRequest",
                                "description": "The details of the role",
                                "type": "object",
                                "properties": {
                                  "parent_role_id": {
                                    "type": "integer",
                                    "description": "The ID of the parent role"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "The name of the role"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "user_id": {
                                    "type": "integer",
                                    "description": "The user ID"
                                  },
                                  "role_id": {
                                    "type": "integer",
                                    "description": "The role ID"
                                  },
                                  "active_flag": {
                                    "type": "boolean",
                                    "description": "Whether the role is active or not"
                                  },
                                  "type": {
                                    "type": "string",
                                    "description": "The assignment type"
                                  }
                                }
                              }
                            ],
                            "description": "The assignment data of the role"
                          },
                          "description": "The role assignments"
                        },
                        "additional_data": {
                          "description": "The additional data in the role list",
                          "type": "object",
                          "properties": {
                            "pagination": {
                              "description": "The pagination details in the role list",
                              "type": "object",
                              "properties": {
                                "start": {
                                  "type": "integer",
                                  "description": "Pagination start"
                                },
                                "limit": {
                                  "type": "integer",
                                  "description": "Items shown per page"
                                },
                                "more_items_in_collection": {
                                  "type": "boolean",
                                  "description": "Whether there are more list items in the collection than displayed"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "success": true,
                  "data": [
                    {
                      "user_id": 1234567,
                      "role_id": 2,
                      "parent_role_id": 1,
                      "name": "Admins",
                      "active_flag": true,
                      "type": "1"
                    }
                  ],
                  "additional_data": {
                    "pagination": {
                      "start": 0,
                      "limit": 100,
                      "more_items_in_collection": false
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}/roleSettings": {
      "get": {
        "summary": "List user role settings",
        "description": "Lists the settings of user's assigned role.",
        "operationId": "getUserRoleSettings",
        "tags": [ "Users" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the user",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "List role settings",
            "content": {
              "application/json": {
                "schema": {
                  "title": "getRoleSettings",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "description": "The settings for the role",
                          "type": "object",
                          "properties": {
                            "deal_default_visibility": {
                              "type": "number",
                              "description": "The default visibility level of the deals for the role"
                            },
                            "lead_default_visibility": {
                              "type": "number",
                              "description": "The default visibility level of the leads for the role"
                            },
                            "org_default_visibility": {
                              "type": "number",
                              "description": "The default visibility level of the organizations for the role"
                            },
                            "person_default_visibility": {
                              "type": "number",
                              "description": "The default visibility level of the people for the role"
                            },
                            "product_default_visibility": {
                              "type": "number",
                              "description": "The default visibility level of the products for the role"
                            },
                            "deal_access_level": {
                              "type": "number",
                              "description": "The access level of the deals for the role (only for default role)"
                            },
                            "org_access_level": {
                              "type": "number",
                              "description": "The access level of the organizations for the role (only for default role)"
                            },
                            "person_access_level": {
                              "type": "number",
                              "description": "The access level of the people for the role (only for default role)"
                            },
                            "product_access_level": {
                              "type": "number",
                              "description": "The access level of the products for the role (only for default role)"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "success": true,
                  "data": {
                    "deal_default_visibility": 1,
                    "lead_default_visibility": 1,
                    "org_default_visibility": 1,
                    "person_default_visibility": 1,
                    "product_default_visibility": 1
                  }
                }
              }
            }
          }
        }
      }
    },
    "/userConnections": {
      "get": {
        "summary": "Get all user connections",
        "description": "Returns data about all connections for the authorized user.",
        "operationId": "getUserConnections",
        "tags": [ "UserConnections" ],
        "responses": {
          "200": {
            "description": "The data of user connections",
            "content": {
              "application/json": {
                "schema": {
                  "title": "userConnections",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "description": "The object of UserConnections",
                          "properties": {
                            "google": {
                              "type": "string",
                              "description": "The third party ID or false in case the ID is not found"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "success": true,
                  "data": { "google": "awesomeid-123-4567890" }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "unathorizedResponse",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "If the response is successful or not"
                    },
                    "error": {
                      "type": "string",
                      "description": "The error message"
                    },
                    "errorCode": {
                      "type": "integer",
                      "description": "The response error code"
                    }
                  }
                },
                "example": {
                  "success": false,
                  "error": "unauthorized access",
                  "errorCode": 401
                }
              }
            }
          }
        }
      }
    },
    "/userSettings": {
      "get": {
        "summary": "List settings of an authorized user",
        "description": "Lists the settings of an authorized user. Example response contains a shortened list of settings.",
        "operationId": "getUserSettings",
        "tags": [ "UserSettings" ],
        "responses": {
          "200": {
            "description": "The list of user settings",
            "content": {
              "application/json": {
                "schema": {
                  "title": "getUserSettings",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "marketplace_allow_custom_install_url": {
                              "type": "boolean",
                              "description": "If the vendors are allowed to install custom Marketplace apps with functionality and content in the Pipedrive UI or not"
                            },
                            "marketplace_app_extensions_vendor": {
                              "type": "boolean",
                              "description": "If the vendors are allowed to extend their Marketplace apps with functionality and content in the Pipedrive UI or not"
                            },
                            "marketplace_team": {
                              "type": "boolean",
                              "description": "If the vendors are allowed to be part of the Marketplace team or not"
                            },
                            "list_limit": {
                              "type": "number",
                              "description": "The number of results shown in list by default"
                            },
                            "beta_app": {
                              "type": "boolean",
                              "description": "Whether beta app is enabled"
                            },
                            "prevent_salesphone_callto_override": {
                              "type": "boolean",
                              "description": "Prevent salesphone call to override"
                            },
                            "file_upload_destination": {
                              "type": "string",
                              "description": "The destination of file upload"
                            },
                            "callto_link_syntax": {
                              "type": "string",
                              "description": "The call to link syntax"
                            },
                            "autofill_deal_expected_close_date": {
                              "type": "boolean",
                              "description": "Whether the expected close date of the deal is filled automatically or not"
                            },
                            "person_duplicate_condition": {
                              "type": "string",
                              "description": "Allow the vendors to duplicate a person"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "success": true,
                  "data": {
                    "marketplace_allow_custom_install_url": false,
                    "marketplace_app_extensions_vendor": false,
                    "marketplace_team": false,
                    "list_limit": 100,
                    "beta_app": true,
                    "prevent_salesphone_callto_override": false,
                    "file_upload_destination": "s3",
                    "callto_link_syntax": "callto:[number]",
                    "autofill_deal_expected_close_date": false,
                    "person_duplicate_condition": "name && (org_id || email || phone)"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "unathorizedResponse",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "If the response is successful or not"
                    },
                    "error": {
                      "type": "string",
                      "description": "The error message"
                    },
                    "errorCode": {
                      "type": "integer",
                      "description": "The response error code"
                    }
                  }
                },
                "example": {
                  "success": false,
                  "error": "unauthorized access",
                  "errorCode": 401
                }
              }
            }
          }
        }
      }
    },
    "/webhooks": {
      "get": {
        "summary": "Get all Webhooks",
        "description": "Returns data about all the Webhooks of a company.",
        "operationId": "getWebhooks",
        "tags": [ "Webhooks" ],
        "responses": {
          "200": {
            "description": "The list of webhooks objects from the logged in company and user",
            "content": {
              "application/json": {
                "schema": {
                  "title": "getWebhooks",
                  "allOf": [
                    {
                      "title": "base",
                      "allOf": [
                        {
                          "title": "baseResponse",
                          "type": "object",
                          "properties": {
                            "success": {
                              "type": "boolean",
                              "description": "If the response is successful or not"
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "status": {
                              "type": "string",
                              "description": "The status of the response"
                            }
                          }
                        }
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer",
                                "description": "The ID of the Webhook"
                              },
                              "company_id": {
                                "type": "integer",
                                "description": "The ID of the company related to the Webhook"
                              },
                              "owner_id": {
                                "type": "integer",
                                "description": "The ID of the user who owns the Webhook"
                              },
                              "user_id": {
                                "type": "integer",
                                "description": "The ID of the user related to the Webhook"
                              },
                              "event_action": {
                                "type": "string",
                                "description": "The Webhook action"
                              },
                              "event_object": {
                                "type": "string",
                                "description": "The Webhook object"
                              },
                              "subscription_url": {
                                "type": "string",
                                "description": "The subscription URL of the Webhook"
                              },
                              "is_active": {
                                "allOf": [
                                  {
                                    "title": "numberBooleanDefault1",
                                    "type": "number",
                                    "default": 1,
                                    "enum": [ 0, 1 ]
                                  }
                                ],
                                "description": "The Webhook's status"
                              },
                              "add_time": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The date when the Webhook was added"
                              },
                              "remove_time": {
                                "type": "string",
                                "format": "date-time",
                                "nullable": true,
                                "description": "The date when the Webhook was removed (if removed)"
                              },
                              "type": {
                                "type": "string",
                                "enum": [ "general", "app" ],
                                "description": "The type of the Webhook"
                              },
                              "http_auth_user": {
                                "type": "string",
                                "nullable": true,
                                "description": "The username of the `subscription_url` of the Webhook"
                              },
                              "http_auth_password": {
                                "type": "string",
                                "nullable": true,
                                "description": "The password of the `subscription_url` of the Webhook"
                              },
                              "additional_data": {
                                "type": "object",
                                "description": "Any additional data related to the Webhook"
                              },
                              "remove_reason": {
                                "type": "string",
                                "nullable": true,
                                "description": "The removal reason of the Webhook (if removed)"
                              },
                              "last_delivery_time": {
                                "type": "string",
                                "format": "date-time",
                                "nullable": true,
                                "description": "The last delivery time of the Webhook"
                              },
                              "last_http_status": {
                                "type": "integer",
                                "nullable": true,
                                "description": "The last delivery HTTP status of the Webhook"
                              },
                              "admin_id": {
                                "type": "integer",
                                "description": "The ID of the admin of the Webhook"
                              }
                            }
                          },
                          "description": "The array of Webhooks"
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "status": "ok",
                  "success": true,
                  "data": [
                    {
                      "id": 1,
                      "company_id": 1,
                      "owner_id": 1,
                      "user_id": 1,
                      "event_action": "added",
                      "event_object": "activityType",
                      "subscription_url": "http://example.org",
                      "version": "1.0",
                      "is_active": 1,
                      "add_time": "2019-10-25T08:25:27.000Z",
                      "remove_time": null,
                      "type": "general",
                      "http_auth_user": null,
                      "http_auth_password": null,
                      "additional_data": { },
                      "remove_reason": null,
                      "last_delivery_time": null,
                      "last_http_status": null,
                      "admin_id": 1
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "unathorizedResponse",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "If the response is successful or not"
                    },
                    "error": {
                      "type": "string",
                      "description": "The error message"
                    },
                    "errorCode": {
                      "type": "integer",
                      "description": "The response error code"
                    }
                  }
                },
                "example": {
                  "success": false,
                  "error": "unauthorized access",
                  "errorCode": 401
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new Webhook",
        "description": "Creates a new Webhook and returns its details. Note that specifying an event which triggers the Webhook combines 2 parameters - `event_action` and `event_object`. E.g., use `*.*` for getting notifications about all events, `added.deal` for any newly added deals, `deleted.persons` for any deleted persons, etc. See <a href=\"https://pipedrive.readme.io/docs/guide-for-webhooks?ref=api_reference\" target=\"_blank\" rel=\"noopener noreferrer\">the guide for Webhooks</a> for more details.",
        "operationId": "addWebhook",
        "tags": [ "Webhooks" ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "addWebhookRequest",
                "type": "object",
                "required": [
                  "subscription_url",
                  "event_action",
                  "event_object"
                ],
                "properties": {
                  "subscription_url": {
                    "type": "string",
                    "description": "A full, valid, publicly accessible URL which determines where to send the notifications. Please note that you cannot use Pipedrive API endpoints as the `subscription_url` and the chosen URL must not redirect to another link."
                  },
                  "event_action": {
                    "type": "string",
                    "enum": [ "added", "updated", "merged", "deleted", "*" ],
                    "description": "The type of action to receive notifications about. Wildcard will match all supported actions."
                  },
                  "event_object": {
                    "type": "string",
                    "enum": [
                      "activity",
                      "activityType",
                      "deal",
                      "note",
                      "organization",
                      "person",
                      "pipeline",
                      "product",
                      "stage",
                      "user",
                      "*"
                    ],
                    "description": "The type of object to receive notifications about. Wildcard will match all supported objects."
                  },
                  "user_id": {
                    "type": "integer",
                    "description": "The ID of the user that this webhook will be authorized with. You have the option to use a different user's `user_id`. If it is not set, the current user's `user_id` will be used. As each webhook event is checked against a user’s permissions, the webhook will only be sent if the user has access to the specified object(s). If you want to receive notifications for all events, please use a top-level admin user’s `user_id`."
                  },
                  "http_auth_user": {
                    "type": "string",
                    "description": "The HTTP basic auth username of the subscription URL endpoint (if required)"
                  },
                  "http_auth_password": {
                    "type": "string",
                    "description": "The HTTP basic auth password of the subscription URL endpoint (if required)"
                  },
                  "version": {
                    "type": "string",
                    "enum": [ "1.0", "2.0" ],
                    "default": "1.0",
                    "description": "The webhook's version"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The created webhook object",
            "content": {
              "application/json": {
                "schema": {
                  "title": "webhook",
                  "allOf": [
                    {
                      "title": "base",
                      "allOf": [
                        {
                          "title": "baseResponse",
                          "type": "object",
                          "properties": {
                            "success": {
                              "type": "boolean",
                              "description": "If the response is successful or not"
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "status": {
                              "type": "string",
                              "description": "The status of the response"
                            }
                          }
                        }
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "description": "The ID of the Webhook"
                            },
                            "company_id": {
                              "type": "integer",
                              "description": "The ID of the company related to the Webhook"
                            },
                            "owner_id": {
                              "type": "integer",
                              "description": "The ID of the user who owns the Webhook"
                            },
                            "user_id": {
                              "type": "integer",
                              "description": "The ID of the user related to the Webhook"
                            },
                            "event_action": {
                              "type": "string",
                              "description": "The Webhook action"
                            },
                            "event_object": {
                              "type": "string",
                              "description": "The Webhook object"
                            },
                            "subscription_url": {
                              "type": "string",
                              "description": "The subscription URL of the Webhook"
                            },
                            "is_active": {
                              "allOf": [
                                {
                                  "title": "numberBooleanDefault1",
                                  "type": "number",
                                  "default": 1,
                                  "enum": [ 0, 1 ]
                                }
                              ],
                              "description": "The Webhook's status"
                            },
                            "add_time": {
                              "type": "string",
                              "format": "date-time",
                              "description": "The date when the Webhook was added"
                            },
                            "remove_time": {
                              "type": "string",
                              "format": "date-time",
                              "nullable": true,
                              "description": "The date when the Webhook was removed (if removed)"
                            },
                            "type": {
                              "type": "string",
                              "enum": [ "general", "app" ],
                              "description": "The type of the Webhook"
                            },
                            "http_auth_user": {
                              "type": "string",
                              "nullable": true,
                              "description": "The username of the `subscription_url` of the Webhook"
                            },
                            "http_auth_password": {
                              "type": "string",
                              "nullable": true,
                              "description": "The password of the `subscription_url` of the Webhook"
                            },
                            "additional_data": {
                              "type": "object",
                              "description": "Any additional data related to the Webhook"
                            },
                            "remove_reason": {
                              "type": "string",
                              "nullable": true,
                              "description": "The removal reason of the Webhook (if removed)"
                            },
                            "last_delivery_time": {
                              "type": "string",
                              "format": "date-time",
                              "nullable": true,
                              "description": "The last delivery time of the Webhook"
                            },
                            "last_http_status": {
                              "type": "integer",
                              "nullable": true,
                              "description": "The last delivery HTTP status of the Webhook"
                            },
                            "admin_id": {
                              "type": "integer",
                              "description": "The ID of the admin of the Webhook"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "status": "ok",
                  "success": true,
                  "data": {
                    "id": 1,
                    "company_id": 1,
                    "owner_id": 1,
                    "user_id": 1,
                    "event_action": "added",
                    "event_object": "activityType",
                    "subscription_url": "http://example.org",
                    "version": "1.0",
                    "is_active": 1,
                    "add_time": "2019-10-25T08:25:27.000Z",
                    "remove_time": null,
                    "type": "general",
                    "http_auth_user": null,
                    "http_auth_password": null,
                    "additional_data": { },
                    "remove_reason": null,
                    "last_delivery_time": null,
                    "last_http_status": null,
                    "admin_id": 1
                  }
                }
              }
            }
          },
          "400": {
            "description": "The bad response on webhook creation",
            "content": {
              "application/json": {
                "schema": {
                  "title": "webhooksBadRequestResponse",
                  "allOf": [
                    {
                      "title": "base",
                      "allOf": [
                        {
                          "title": "baseResponse",
                          "type": "object",
                          "properties": {
                            "success": {
                              "type": "boolean",
                              "description": "If the response is successful or not"
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "status": {
                              "type": "string",
                              "description": "The status of the response"
                            }
                          }
                        }
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "errors": {
                          "type": "object",
                          "description": "List of errors"
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "status": "error",
                  "success": false,
                  "errors": {
                    "subscription_url": [ "invalid or non-reachable URL" ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "unathorizedResponse",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "If the response is successful or not"
                    },
                    "error": {
                      "type": "string",
                      "description": "The error message"
                    },
                    "errorCode": {
                      "type": "integer",
                      "description": "The response error code"
                    }
                  }
                },
                "example": {
                  "success": false,
                  "error": "unauthorized access",
                  "errorCode": 401
                }
              }
            }
          }
        }
      }
    },
    "/webhooks/{id}": {
      "delete": {
        "summary": "Delete existing Webhook",
        "description": "Deletes the specified Webhook.",
        "operationId": "deleteWebhook",
        "tags": [ "Webhooks" ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "type": "integer" },
            "description": "The ID of the Webhook to delete"
          }
        ],
        "responses": {
          "200": {
            "description": "The webhook deletion success response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "base",
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "description": "The status of the response"
                        }
                      }
                    }
                  ]
                },
                "example": { "status": "ok", "success": true }
              }
            }
          },
          "401": {
            "description": "Unauthorized response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "unathorizedResponse",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "If the response is successful or not"
                    },
                    "error": {
                      "type": "string",
                      "description": "The error message"
                    },
                    "errorCode": {
                      "type": "integer",
                      "description": "The response error code"
                    }
                  }
                },
                "example": {
                  "success": false,
                  "error": "unauthorized access",
                  "errorCode": 401
                }
              }
            }
          },
          "403": {
            "description": "The webhook deletion forbidden response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "title": "baseResponse",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the response is successful or not"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "description": "The error message"
                        }
                      }
                    }
                  ]
                },
                "example": { "success": false, "message": "Forbidden" }
              }
            }
          },
          "404": {
            "description": "The webhook deletion not found response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "webhooksBadRequestResponse",
                  "allOf": [
                    {
                      "title": "base",
                      "allOf": [
                        {
                          "title": "baseResponse",
                          "type": "object",
                          "properties": {
                            "success": {
                              "type": "boolean",
                              "description": "If the response is successful or not"
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "status": {
                              "type": "string",
                              "description": "The status of the response"
                            }
                          }
                        }
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "errors": {
                          "type": "object",
                          "description": "List of errors"
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "status": "error",
                  "success": false,
                  "errors": { "id": [ "not found" ] }
                }
              }
            }
          }
        }
      }
    }
  }
}
