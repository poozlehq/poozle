datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
  // previewFeatures = []
}

generator dbml {
  provider = "prisma-dbml-generator"
}

// TODO (harshith): Need to fix enum array in swagger
// generator nestjsDto {
//   provider                        = "prisma-generator-nestjs-dto"
//   output                          = "../src/@@generated"
//   outputToNestJsResourceStructure = "true"
//   exportRelationModifierClasses   = "true"
//   reExport                        = "true"
//   entityPrefix                    = ""
//   entitySuffix                    = ""
//   fileNamingStyle                 = "camel"
// }

model User {
  userId    String      @id @unique
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  firstname String?
  lastname  String?
  email     String
  Workspace Workspace[]
}

model Workspace {
  workspaceId             String                  @id @default(uuid())
  slug                    String                  @unique
  user                    User                    @relation(references: [userId], fields: [userId])
  userId                  String
  initialSetupComplete    Boolean                 @default(false)
  anonymousDataCollection Boolean                 @default(false)
  IntegrationDefinition   IntegrationDefinition[]
  IntegrationAccount      IntegrationAccount[]
  IntegrationOAuthApp     IntegrationOAuthApp[]
  deleted                 DateTime?
  Link                    Link[]
}

model IntegrationDefinition {
  integrationDefinitionId String                @id @default(uuid())
  name                    String
  key                     String
  icon                    String?
  version                 String                @default("0.0.1")
  releaseStage            ReleaseStage          @default(ALPHA)
  sourceUrl               String
  integrationType         IntegrationType
  workspace               Workspace?            @relation(references: [workspaceId], fields: [workspaceId])
  workspaceId             String?
  IntegrationAccount      IntegrationAccount[]
  IntegrationOAuthApp     IntegrationOAuthApp[]
  deleted                 DateTime?
  createdAt               DateTime              @default(now())
  updatedAt               DateTime              @updatedAt

  @@unique([integrationDefinitionId, key])
}

model IntegrationOAuthApp {
  integrationOAuthAppId   String                @id @default(uuid())
  integrationOAuthAppName String
  integrationDefinition   IntegrationDefinition @relation(references: [integrationDefinitionId], fields: [integrationDefinitionId])
  integrationDefinitionId String

  clientId     String
  clientSecret String
  scopes       String

  workspace   Workspace @relation(references: [workspaceId], fields: [workspaceId])
  workspaceId String
  deleted     DateTime?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@unique([integrationOAuthAppName, workspaceId])
  @@unique([integrationDefinitionId, workspaceId])
}

model IntegrationAccount {
  integrationAccountId     String                @id @default(uuid())
  integrationDefinition    IntegrationDefinition @relation(references: [integrationDefinitionId], fields: [integrationDefinitionId])
  integrationDefinitionId  String
  integrationConfiguration Json?
  authType                 String
  workspace                Workspace             @relation(references: [workspaceId], fields: [workspaceId])
  workspaceId              String
  integrationAccountName   String
  deleted                  DateTime?
  createdAt                DateTime              @default(now())
  updatedAt                DateTime              @updatedAt

  accountIdentifier String?

  fromLinks Link?   @relation(fields: [linkId], references: [linkId])
  linkId    String?
}

model Link {
  linkId   String @id @default(uuid())
  linkName String

  canExpire Boolean @default(false)

  expiresIn Int

  category                IntegrationType[]
  integrationDefinitionId String?

  preferOAuth Boolean   @default(false)
  workspace   Workspace @relation(references: [workspaceId], fields: [workspaceId])
  workspaceId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  IntegrationAccount IntegrationAccount[]
}

enum ReleaseStage {
  ALPHA
  BETA
  GENERALLY_AVAILABLE
  CUSTOM
}

enum IntegrationType {
  HRIS
  MESSAGING
  CALENDAR
  TICKETING
  MAIL
  DOCUMENTATION
  ACCOUNTING
  ATS
}
